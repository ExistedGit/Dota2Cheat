// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_gcmessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_base_5fgcmessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_base_5fgcmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "gcsdk_gcmessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_base_5fgcmessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_base_5fgcmessages_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_base_5fgcmessages_2eproto;
class CGCStorePurchaseInit_LineItem;
struct CGCStorePurchaseInit_LineItemDefaultTypeInternal;
extern CGCStorePurchaseInit_LineItemDefaultTypeInternal _CGCStorePurchaseInit_LineItem_default_instance_;
class CMsgAddItemToSocket;
struct CMsgAddItemToSocketDefaultTypeInternal;
extern CMsgAddItemToSocketDefaultTypeInternal _CMsgAddItemToSocket_default_instance_;
class CMsgAddItemToSocketData;
struct CMsgAddItemToSocketDataDefaultTypeInternal;
extern CMsgAddItemToSocketDataDefaultTypeInternal _CMsgAddItemToSocketData_default_instance_;
class CMsgAddItemToSocketResponse;
struct CMsgAddItemToSocketResponseDefaultTypeInternal;
extern CMsgAddItemToSocketResponseDefaultTypeInternal _CMsgAddItemToSocketResponse_default_instance_;
class CMsgAddSocket;
struct CMsgAddSocketDefaultTypeInternal;
extern CMsgAddSocketDefaultTypeInternal _CMsgAddSocket_default_instance_;
class CMsgAddSocketResponse;
struct CMsgAddSocketResponseDefaultTypeInternal;
extern CMsgAddSocketResponseDefaultTypeInternal _CMsgAddSocketResponse_default_instance_;
class CMsgApplyEggEssence;
struct CMsgApplyEggEssenceDefaultTypeInternal;
extern CMsgApplyEggEssenceDefaultTypeInternal _CMsgApplyEggEssence_default_instance_;
class CMsgApplyPennantUpgrade;
struct CMsgApplyPennantUpgradeDefaultTypeInternal;
extern CMsgApplyPennantUpgradeDefaultTypeInternal _CMsgApplyPennantUpgrade_default_instance_;
class CMsgApplyRemoteConVars;
struct CMsgApplyRemoteConVarsDefaultTypeInternal;
extern CMsgApplyRemoteConVarsDefaultTypeInternal _CMsgApplyRemoteConVars_default_instance_;
class CMsgApplyRemoteConVars_ConVar;
struct CMsgApplyRemoteConVars_ConVarDefaultTypeInternal;
extern CMsgApplyRemoteConVars_ConVarDefaultTypeInternal _CMsgApplyRemoteConVars_ConVar_default_instance_;
class CMsgApplyStrangePart;
struct CMsgApplyStrangePartDefaultTypeInternal;
extern CMsgApplyStrangePartDefaultTypeInternal _CMsgApplyStrangePart_default_instance_;
class CMsgClientPingData;
struct CMsgClientPingDataDefaultTypeInternal;
extern CMsgClientPingDataDefaultTypeInternal _CMsgClientPingData_default_instance_;
class CMsgClientToGCAggregateMetrics;
struct CMsgClientToGCAggregateMetricsDefaultTypeInternal;
extern CMsgClientToGCAggregateMetricsDefaultTypeInternal _CMsgClientToGCAggregateMetrics_default_instance_;
class CMsgClientToGCAggregateMetrics_SingleMetric;
struct CMsgClientToGCAggregateMetrics_SingleMetricDefaultTypeInternal;
extern CMsgClientToGCAggregateMetrics_SingleMetricDefaultTypeInternal _CMsgClientToGCAggregateMetrics_SingleMetric_default_instance_;
class CMsgClientToGCIntegrityStatus;
struct CMsgClientToGCIntegrityStatusDefaultTypeInternal;
extern CMsgClientToGCIntegrityStatusDefaultTypeInternal _CMsgClientToGCIntegrityStatus_default_instance_;
class CMsgClientToGCIntegrityStatus_keyvalue;
struct CMsgClientToGCIntegrityStatus_keyvalueDefaultTypeInternal;
extern CMsgClientToGCIntegrityStatus_keyvalueDefaultTypeInternal _CMsgClientToGCIntegrityStatus_keyvalue_default_instance_;
class CMsgCustomGameInstallStatus;
struct CMsgCustomGameInstallStatusDefaultTypeInternal;
extern CMsgCustomGameInstallStatusDefaultTypeInternal _CMsgCustomGameInstallStatus_default_instance_;
class CMsgExtractGems;
struct CMsgExtractGemsDefaultTypeInternal;
extern CMsgExtractGemsDefaultTypeInternal _CMsgExtractGems_default_instance_;
class CMsgExtractGemsResponse;
struct CMsgExtractGemsResponseDefaultTypeInternal;
extern CMsgExtractGemsResponseDefaultTypeInternal _CMsgExtractGemsResponse_default_instance_;
class CMsgGCAdditionalWelcomeMsgList;
struct CMsgGCAdditionalWelcomeMsgListDefaultTypeInternal;
extern CMsgGCAdditionalWelcomeMsgListDefaultTypeInternal _CMsgGCAdditionalWelcomeMsgList_default_instance_;
class CMsgGCClientVersionUpdated;
struct CMsgGCClientVersionUpdatedDefaultTypeInternal;
extern CMsgGCClientVersionUpdatedDefaultTypeInternal _CMsgGCClientVersionUpdated_default_instance_;
class CMsgGCServerVersionUpdated;
struct CMsgGCServerVersionUpdatedDefaultTypeInternal;
extern CMsgGCServerVersionUpdatedDefaultTypeInternal _CMsgGCServerVersionUpdated_default_instance_;
class CMsgGCStorePurchaseCancel;
struct CMsgGCStorePurchaseCancelDefaultTypeInternal;
extern CMsgGCStorePurchaseCancelDefaultTypeInternal _CMsgGCStorePurchaseCancel_default_instance_;
class CMsgGCStorePurchaseCancelResponse;
struct CMsgGCStorePurchaseCancelResponseDefaultTypeInternal;
extern CMsgGCStorePurchaseCancelResponseDefaultTypeInternal _CMsgGCStorePurchaseCancelResponse_default_instance_;
class CMsgGCStorePurchaseFinalize;
struct CMsgGCStorePurchaseFinalizeDefaultTypeInternal;
extern CMsgGCStorePurchaseFinalizeDefaultTypeInternal _CMsgGCStorePurchaseFinalize_default_instance_;
class CMsgGCStorePurchaseFinalizeResponse;
struct CMsgGCStorePurchaseFinalizeResponseDefaultTypeInternal;
extern CMsgGCStorePurchaseFinalizeResponseDefaultTypeInternal _CMsgGCStorePurchaseFinalizeResponse_default_instance_;
class CMsgGCStorePurchaseInit;
struct CMsgGCStorePurchaseInitDefaultTypeInternal;
extern CMsgGCStorePurchaseInitDefaultTypeInternal _CMsgGCStorePurchaseInit_default_instance_;
class CMsgGCStorePurchaseInitResponse;
struct CMsgGCStorePurchaseInitResponseDefaultTypeInternal;
extern CMsgGCStorePurchaseInitResponseDefaultTypeInternal _CMsgGCStorePurchaseInitResponse_default_instance_;
class CMsgGCToClientAggregateMetricsBackoff;
struct CMsgGCToClientAggregateMetricsBackoffDefaultTypeInternal;
extern CMsgGCToClientAggregateMetricsBackoffDefaultTypeInternal _CMsgGCToClientAggregateMetricsBackoff_default_instance_;
class CMsgGCToClientApplyRemoteConVars;
struct CMsgGCToClientApplyRemoteConVarsDefaultTypeInternal;
extern CMsgGCToClientApplyRemoteConVarsDefaultTypeInternal _CMsgGCToClientApplyRemoteConVars_default_instance_;
class CMsgGCToClientPollFileRequest;
struct CMsgGCToClientPollFileRequestDefaultTypeInternal;
extern CMsgGCToClientPollFileRequestDefaultTypeInternal _CMsgGCToClientPollFileRequest_default_instance_;
class CMsgGCToClientPollFileResponse;
struct CMsgGCToClientPollFileResponseDefaultTypeInternal;
extern CMsgGCToClientPollFileResponseDefaultTypeInternal _CMsgGCToClientPollFileResponse_default_instance_;
class CMsgGCToGCBannedWordListUpdated;
struct CMsgGCToGCBannedWordListUpdatedDefaultTypeInternal;
extern CMsgGCToGCBannedWordListUpdatedDefaultTypeInternal _CMsgGCToGCBannedWordListUpdated_default_instance_;
class CMsgGCToGCDirtySDOCache;
struct CMsgGCToGCDirtySDOCacheDefaultTypeInternal;
extern CMsgGCToGCDirtySDOCacheDefaultTypeInternal _CMsgGCToGCDirtySDOCache_default_instance_;
class CMsgGCToGCPerformManualOp;
struct CMsgGCToGCPerformManualOpDefaultTypeInternal;
extern CMsgGCToGCPerformManualOpDefaultTypeInternal _CMsgGCToGCPerformManualOp_default_instance_;
class CMsgGCToGCPerformManualOpCompleted;
struct CMsgGCToGCPerformManualOpCompletedDefaultTypeInternal;
extern CMsgGCToGCPerformManualOpCompletedDefaultTypeInternal _CMsgGCToGCPerformManualOpCompleted_default_instance_;
class CMsgGCToGCReloadServerRegionSettings;
struct CMsgGCToGCReloadServerRegionSettingsDefaultTypeInternal;
extern CMsgGCToGCReloadServerRegionSettingsDefaultTypeInternal _CMsgGCToGCReloadServerRegionSettings_default_instance_;
class CMsgGCToGCUpdateSQLKeyValue;
struct CMsgGCToGCUpdateSQLKeyValueDefaultTypeInternal;
extern CMsgGCToGCUpdateSQLKeyValueDefaultTypeInternal _CMsgGCToGCUpdateSQLKeyValue_default_instance_;
class CMsgGCToGCWebAPIAccountChanged;
struct CMsgGCToGCWebAPIAccountChangedDefaultTypeInternal;
extern CMsgGCToGCWebAPIAccountChangedDefaultTypeInternal _CMsgGCToGCWebAPIAccountChanged_default_instance_;
class CMsgGCToServerApplyRemoteConVars;
struct CMsgGCToServerApplyRemoteConVarsDefaultTypeInternal;
extern CMsgGCToServerApplyRemoteConVarsDefaultTypeInternal _CMsgGCToServerApplyRemoteConVars_default_instance_;
class CMsgInvitationCreated;
struct CMsgInvitationCreatedDefaultTypeInternal;
extern CMsgInvitationCreatedDefaultTypeInternal _CMsgInvitationCreated_default_instance_;
class CMsgInviteToLobby;
struct CMsgInviteToLobbyDefaultTypeInternal;
extern CMsgInviteToLobbyDefaultTypeInternal _CMsgInviteToLobby_default_instance_;
class CMsgInviteToParty;
struct CMsgInviteToPartyDefaultTypeInternal;
extern CMsgInviteToPartyDefaultTypeInternal _CMsgInviteToParty_default_instance_;
class CMsgItemAcknowledged;
struct CMsgItemAcknowledgedDefaultTypeInternal;
extern CMsgItemAcknowledgedDefaultTypeInternal _CMsgItemAcknowledged_default_instance_;
class CMsgKickFromParty;
struct CMsgKickFromPartyDefaultTypeInternal;
extern CMsgKickFromPartyDefaultTypeInternal _CMsgKickFromParty_default_instance_;
class CMsgLANServerAvailable;
struct CMsgLANServerAvailableDefaultTypeInternal;
extern CMsgLANServerAvailableDefaultTypeInternal _CMsgLANServerAvailable_default_instance_;
class CMsgLeaveParty;
struct CMsgLeavePartyDefaultTypeInternal;
extern CMsgLeavePartyDefaultTypeInternal _CMsgLeaveParty_default_instance_;
class CMsgLobbyInviteResponse;
struct CMsgLobbyInviteResponseDefaultTypeInternal;
extern CMsgLobbyInviteResponseDefaultTypeInternal _CMsgLobbyInviteResponse_default_instance_;
class CMsgPartyInviteResponse;
struct CMsgPartyInviteResponseDefaultTypeInternal;
extern CMsgPartyInviteResponseDefaultTypeInternal _CMsgPartyInviteResponse_default_instance_;
class CMsgResetStrangeGemCount;
struct CMsgResetStrangeGemCountDefaultTypeInternal;
extern CMsgResetStrangeGemCountDefaultTypeInternal _CMsgResetStrangeGemCount_default_instance_;
class CMsgResetStrangeGemCountResponse;
struct CMsgResetStrangeGemCountResponseDefaultTypeInternal;
extern CMsgResetStrangeGemCountResponseDefaultTypeInternal _CMsgResetStrangeGemCountResponse_default_instance_;
class CMsgSDONoMemcached;
struct CMsgSDONoMemcachedDefaultTypeInternal;
extern CMsgSDONoMemcachedDefaultTypeInternal _CMsgSDONoMemcached_default_instance_;
class CMsgServerAvailable;
struct CMsgServerAvailableDefaultTypeInternal;
extern CMsgServerAvailableDefaultTypeInternal _CMsgServerAvailable_default_instance_;
class CMsgSetItemPositions;
struct CMsgSetItemPositionsDefaultTypeInternal;
extern CMsgSetItemPositionsDefaultTypeInternal _CMsgSetItemPositions_default_instance_;
class CMsgSetItemPositions_ItemPosition;
struct CMsgSetItemPositions_ItemPositionDefaultTypeInternal;
extern CMsgSetItemPositions_ItemPositionDefaultTypeInternal _CMsgSetItemPositions_ItemPosition_default_instance_;
class CMsgSortItems;
struct CMsgSortItemsDefaultTypeInternal;
extern CMsgSortItemsDefaultTypeInternal _CMsgSortItems_default_instance_;
class CSOEconGameAccountClient;
struct CSOEconGameAccountClientDefaultTypeInternal;
extern CSOEconGameAccountClientDefaultTypeInternal _CSOEconGameAccountClient_default_instance_;
class CSOEconItem;
struct CSOEconItemDefaultTypeInternal;
extern CSOEconItemDefaultTypeInternal _CSOEconItem_default_instance_;
class CSOEconItemAttribute;
struct CSOEconItemAttributeDefaultTypeInternal;
extern CSOEconItemAttributeDefaultTypeInternal _CSOEconItemAttribute_default_instance_;
class CSOEconItemEquipped;
struct CSOEconItemEquippedDefaultTypeInternal;
extern CSOEconItemEquippedDefaultTypeInternal _CSOEconItemEquipped_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CGCStorePurchaseInit_LineItem* Arena::CreateMaybeMessage<::CGCStorePurchaseInit_LineItem>(Arena*);
template<> ::CMsgAddItemToSocket* Arena::CreateMaybeMessage<::CMsgAddItemToSocket>(Arena*);
template<> ::CMsgAddItemToSocketData* Arena::CreateMaybeMessage<::CMsgAddItemToSocketData>(Arena*);
template<> ::CMsgAddItemToSocketResponse* Arena::CreateMaybeMessage<::CMsgAddItemToSocketResponse>(Arena*);
template<> ::CMsgAddSocket* Arena::CreateMaybeMessage<::CMsgAddSocket>(Arena*);
template<> ::CMsgAddSocketResponse* Arena::CreateMaybeMessage<::CMsgAddSocketResponse>(Arena*);
template<> ::CMsgApplyEggEssence* Arena::CreateMaybeMessage<::CMsgApplyEggEssence>(Arena*);
template<> ::CMsgApplyPennantUpgrade* Arena::CreateMaybeMessage<::CMsgApplyPennantUpgrade>(Arena*);
template<> ::CMsgApplyRemoteConVars* Arena::CreateMaybeMessage<::CMsgApplyRemoteConVars>(Arena*);
template<> ::CMsgApplyRemoteConVars_ConVar* Arena::CreateMaybeMessage<::CMsgApplyRemoteConVars_ConVar>(Arena*);
template<> ::CMsgApplyStrangePart* Arena::CreateMaybeMessage<::CMsgApplyStrangePart>(Arena*);
template<> ::CMsgClientPingData* Arena::CreateMaybeMessage<::CMsgClientPingData>(Arena*);
template<> ::CMsgClientToGCAggregateMetrics* Arena::CreateMaybeMessage<::CMsgClientToGCAggregateMetrics>(Arena*);
template<> ::CMsgClientToGCAggregateMetrics_SingleMetric* Arena::CreateMaybeMessage<::CMsgClientToGCAggregateMetrics_SingleMetric>(Arena*);
template<> ::CMsgClientToGCIntegrityStatus* Arena::CreateMaybeMessage<::CMsgClientToGCIntegrityStatus>(Arena*);
template<> ::CMsgClientToGCIntegrityStatus_keyvalue* Arena::CreateMaybeMessage<::CMsgClientToGCIntegrityStatus_keyvalue>(Arena*);
template<> ::CMsgCustomGameInstallStatus* Arena::CreateMaybeMessage<::CMsgCustomGameInstallStatus>(Arena*);
template<> ::CMsgExtractGems* Arena::CreateMaybeMessage<::CMsgExtractGems>(Arena*);
template<> ::CMsgExtractGemsResponse* Arena::CreateMaybeMessage<::CMsgExtractGemsResponse>(Arena*);
template<> ::CMsgGCAdditionalWelcomeMsgList* Arena::CreateMaybeMessage<::CMsgGCAdditionalWelcomeMsgList>(Arena*);
template<> ::CMsgGCClientVersionUpdated* Arena::CreateMaybeMessage<::CMsgGCClientVersionUpdated>(Arena*);
template<> ::CMsgGCServerVersionUpdated* Arena::CreateMaybeMessage<::CMsgGCServerVersionUpdated>(Arena*);
template<> ::CMsgGCStorePurchaseCancel* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseCancel>(Arena*);
template<> ::CMsgGCStorePurchaseCancelResponse* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseCancelResponse>(Arena*);
template<> ::CMsgGCStorePurchaseFinalize* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseFinalize>(Arena*);
template<> ::CMsgGCStorePurchaseFinalizeResponse* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseFinalizeResponse>(Arena*);
template<> ::CMsgGCStorePurchaseInit* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseInit>(Arena*);
template<> ::CMsgGCStorePurchaseInitResponse* Arena::CreateMaybeMessage<::CMsgGCStorePurchaseInitResponse>(Arena*);
template<> ::CMsgGCToClientAggregateMetricsBackoff* Arena::CreateMaybeMessage<::CMsgGCToClientAggregateMetricsBackoff>(Arena*);
template<> ::CMsgGCToClientApplyRemoteConVars* Arena::CreateMaybeMessage<::CMsgGCToClientApplyRemoteConVars>(Arena*);
template<> ::CMsgGCToClientPollFileRequest* Arena::CreateMaybeMessage<::CMsgGCToClientPollFileRequest>(Arena*);
template<> ::CMsgGCToClientPollFileResponse* Arena::CreateMaybeMessage<::CMsgGCToClientPollFileResponse>(Arena*);
template<> ::CMsgGCToGCBannedWordListUpdated* Arena::CreateMaybeMessage<::CMsgGCToGCBannedWordListUpdated>(Arena*);
template<> ::CMsgGCToGCDirtySDOCache* Arena::CreateMaybeMessage<::CMsgGCToGCDirtySDOCache>(Arena*);
template<> ::CMsgGCToGCPerformManualOp* Arena::CreateMaybeMessage<::CMsgGCToGCPerformManualOp>(Arena*);
template<> ::CMsgGCToGCPerformManualOpCompleted* Arena::CreateMaybeMessage<::CMsgGCToGCPerformManualOpCompleted>(Arena*);
template<> ::CMsgGCToGCReloadServerRegionSettings* Arena::CreateMaybeMessage<::CMsgGCToGCReloadServerRegionSettings>(Arena*);
template<> ::CMsgGCToGCUpdateSQLKeyValue* Arena::CreateMaybeMessage<::CMsgGCToGCUpdateSQLKeyValue>(Arena*);
template<> ::CMsgGCToGCWebAPIAccountChanged* Arena::CreateMaybeMessage<::CMsgGCToGCWebAPIAccountChanged>(Arena*);
template<> ::CMsgGCToServerApplyRemoteConVars* Arena::CreateMaybeMessage<::CMsgGCToServerApplyRemoteConVars>(Arena*);
template<> ::CMsgInvitationCreated* Arena::CreateMaybeMessage<::CMsgInvitationCreated>(Arena*);
template<> ::CMsgInviteToLobby* Arena::CreateMaybeMessage<::CMsgInviteToLobby>(Arena*);
template<> ::CMsgInviteToParty* Arena::CreateMaybeMessage<::CMsgInviteToParty>(Arena*);
template<> ::CMsgItemAcknowledged* Arena::CreateMaybeMessage<::CMsgItemAcknowledged>(Arena*);
template<> ::CMsgKickFromParty* Arena::CreateMaybeMessage<::CMsgKickFromParty>(Arena*);
template<> ::CMsgLANServerAvailable* Arena::CreateMaybeMessage<::CMsgLANServerAvailable>(Arena*);
template<> ::CMsgLeaveParty* Arena::CreateMaybeMessage<::CMsgLeaveParty>(Arena*);
template<> ::CMsgLobbyInviteResponse* Arena::CreateMaybeMessage<::CMsgLobbyInviteResponse>(Arena*);
template<> ::CMsgPartyInviteResponse* Arena::CreateMaybeMessage<::CMsgPartyInviteResponse>(Arena*);
template<> ::CMsgResetStrangeGemCount* Arena::CreateMaybeMessage<::CMsgResetStrangeGemCount>(Arena*);
template<> ::CMsgResetStrangeGemCountResponse* Arena::CreateMaybeMessage<::CMsgResetStrangeGemCountResponse>(Arena*);
template<> ::CMsgSDONoMemcached* Arena::CreateMaybeMessage<::CMsgSDONoMemcached>(Arena*);
template<> ::CMsgServerAvailable* Arena::CreateMaybeMessage<::CMsgServerAvailable>(Arena*);
template<> ::CMsgSetItemPositions* Arena::CreateMaybeMessage<::CMsgSetItemPositions>(Arena*);
template<> ::CMsgSetItemPositions_ItemPosition* Arena::CreateMaybeMessage<::CMsgSetItemPositions_ItemPosition>(Arena*);
template<> ::CMsgSortItems* Arena::CreateMaybeMessage<::CMsgSortItems>(Arena*);
template<> ::CSOEconGameAccountClient* Arena::CreateMaybeMessage<::CSOEconGameAccountClient>(Arena*);
template<> ::CSOEconItem* Arena::CreateMaybeMessage<::CSOEconItem>(Arena*);
template<> ::CSOEconItemAttribute* Arena::CreateMaybeMessage<::CSOEconItemAttribute>(Arena*);
template<> ::CSOEconItemEquipped* Arena::CreateMaybeMessage<::CSOEconItemEquipped>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CMsgExtractGemsResponse_EExtractGems : int {
  CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Succeeded = 0,
  CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_ToolIsInvalid = 1,
  CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_ItemIsInvalid = 2,
  CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_ToolCannotRemoveGem = 3,
  CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_FailedToRemoveGem = 4
};
bool CMsgExtractGemsResponse_EExtractGems_IsValid(int value);
constexpr CMsgExtractGemsResponse_EExtractGems CMsgExtractGemsResponse_EExtractGems_EExtractGems_MIN = CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Succeeded;
constexpr CMsgExtractGemsResponse_EExtractGems CMsgExtractGemsResponse_EExtractGems_EExtractGems_MAX = CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_FailedToRemoveGem;
constexpr int CMsgExtractGemsResponse_EExtractGems_EExtractGems_ARRAYSIZE = CMsgExtractGemsResponse_EExtractGems_EExtractGems_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgExtractGemsResponse_EExtractGems_descriptor();
template<typename T>
inline const std::string& CMsgExtractGemsResponse_EExtractGems_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgExtractGemsResponse_EExtractGems>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgExtractGemsResponse_EExtractGems_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgExtractGemsResponse_EExtractGems_descriptor(), enum_t_value);
}
inline bool CMsgExtractGemsResponse_EExtractGems_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgExtractGemsResponse_EExtractGems* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgExtractGemsResponse_EExtractGems>(
    CMsgExtractGemsResponse_EExtractGems_descriptor(), name, value);
}
enum CMsgAddSocketResponse_EAddSocket : int {
  CMsgAddSocketResponse_EAddSocket_k_AddSocket_Succeeded = 0,
  CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_ToolIsInvalid = 1,
  CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_ItemCannotBeSocketed = 2,
  CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_FailedToAddSocket = 3
};
bool CMsgAddSocketResponse_EAddSocket_IsValid(int value);
constexpr CMsgAddSocketResponse_EAddSocket CMsgAddSocketResponse_EAddSocket_EAddSocket_MIN = CMsgAddSocketResponse_EAddSocket_k_AddSocket_Succeeded;
constexpr CMsgAddSocketResponse_EAddSocket CMsgAddSocketResponse_EAddSocket_EAddSocket_MAX = CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_FailedToAddSocket;
constexpr int CMsgAddSocketResponse_EAddSocket_EAddSocket_ARRAYSIZE = CMsgAddSocketResponse_EAddSocket_EAddSocket_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgAddSocketResponse_EAddSocket_descriptor();
template<typename T>
inline const std::string& CMsgAddSocketResponse_EAddSocket_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgAddSocketResponse_EAddSocket>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgAddSocketResponse_EAddSocket_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgAddSocketResponse_EAddSocket_descriptor(), enum_t_value);
}
inline bool CMsgAddSocketResponse_EAddSocket_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgAddSocketResponse_EAddSocket* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgAddSocketResponse_EAddSocket>(
    CMsgAddSocketResponse_EAddSocket_descriptor(), name, value);
}
enum CMsgAddItemToSocketResponse_EAddGem : int {
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Succeeded = 0,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_GemIsInvalid = 1,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_ItemIsInvalid = 2,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_FailedToAddGem = 3,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_InvalidGemTypeForSocket = 4,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_InvalidGemTypeForHero = 5,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_InvalidGemTypeForSlot = 6,
  CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_SocketContainsUnremovableGem = 7
};
bool CMsgAddItemToSocketResponse_EAddGem_IsValid(int value);
constexpr CMsgAddItemToSocketResponse_EAddGem CMsgAddItemToSocketResponse_EAddGem_EAddGem_MIN = CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Succeeded;
constexpr CMsgAddItemToSocketResponse_EAddGem CMsgAddItemToSocketResponse_EAddGem_EAddGem_MAX = CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_SocketContainsUnremovableGem;
constexpr int CMsgAddItemToSocketResponse_EAddGem_EAddGem_ARRAYSIZE = CMsgAddItemToSocketResponse_EAddGem_EAddGem_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgAddItemToSocketResponse_EAddGem_descriptor();
template<typename T>
inline const std::string& CMsgAddItemToSocketResponse_EAddGem_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgAddItemToSocketResponse_EAddGem>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgAddItemToSocketResponse_EAddGem_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgAddItemToSocketResponse_EAddGem_descriptor(), enum_t_value);
}
inline bool CMsgAddItemToSocketResponse_EAddGem_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgAddItemToSocketResponse_EAddGem* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgAddItemToSocketResponse_EAddGem>(
    CMsgAddItemToSocketResponse_EAddGem_descriptor(), name, value);
}
enum CMsgResetStrangeGemCountResponse_EResetGem : int {
  CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Succeeded = 0,
  CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_FailedToResetGem = 1,
  CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_ItemIsInvalid = 2,
  CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_InvalidSocketId = 3,
  CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_SocketCannotBeReset = 4
};
bool CMsgResetStrangeGemCountResponse_EResetGem_IsValid(int value);
constexpr CMsgResetStrangeGemCountResponse_EResetGem CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_MIN = CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Succeeded;
constexpr CMsgResetStrangeGemCountResponse_EResetGem CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_MAX = CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_SocketCannotBeReset;
constexpr int CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_ARRAYSIZE = CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgResetStrangeGemCountResponse_EResetGem_descriptor();
template<typename T>
inline const std::string& CMsgResetStrangeGemCountResponse_EResetGem_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgResetStrangeGemCountResponse_EResetGem>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgResetStrangeGemCountResponse_EResetGem_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgResetStrangeGemCountResponse_EResetGem_descriptor(), enum_t_value);
}
inline bool CMsgResetStrangeGemCountResponse_EResetGem_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgResetStrangeGemCountResponse_EResetGem* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgResetStrangeGemCountResponse_EResetGem>(
    CMsgResetStrangeGemCountResponse_EResetGem_descriptor(), name, value);
}
enum EGCBaseMsg : int {
  k_EMsgGCInviteToParty = 4501,
  k_EMsgGCInvitationCreated = 4502,
  k_EMsgGCPartyInviteResponse = 4503,
  k_EMsgGCKickFromParty = 4504,
  k_EMsgGCLeaveParty = 4505,
  k_EMsgGCServerAvailable = 4506,
  k_EMsgGCClientConnectToServer = 4507,
  k_EMsgGCGameServerInfo = 4508,
  k_EMsgGCLANServerAvailable = 4511,
  k_EMsgGCInviteToLobby = 4512,
  k_EMsgGCLobbyInviteResponse = 4513,
  k_EMsgGCToClientPollFileRequest = 4514,
  k_EMsgGCToClientPollFileResponse = 4515,
  k_EMsgGCToGCPerformManualOp = 4516,
  k_EMsgGCToGCPerformManualOpCompleted = 4517,
  k_EMsgGCToGCReloadServerRegionSettings = 4518,
  k_EMsgGCAdditionalWelcomeMsgList = 4519,
  k_EMsgGCToClientApplyRemoteConVars = 4520,
  k_EMsgGCToServerApplyRemoteConVars = 4521,
  k_EMsgClientToGCIntegrityStatus = 4522,
  k_EMsgClientToGCAggregateMetrics = 4523,
  k_EMsgGCToClientAggregateMetricsBackoff = 4524
};
bool EGCBaseMsg_IsValid(int value);
constexpr EGCBaseMsg EGCBaseMsg_MIN = k_EMsgGCInviteToParty;
constexpr EGCBaseMsg EGCBaseMsg_MAX = k_EMsgGCToClientAggregateMetricsBackoff;
constexpr int EGCBaseMsg_ARRAYSIZE = EGCBaseMsg_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCBaseMsg_descriptor();
template<typename T>
inline const std::string& EGCBaseMsg_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCBaseMsg>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCBaseMsg_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCBaseMsg_descriptor(), enum_t_value);
}
inline bool EGCBaseMsg_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCBaseMsg* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCBaseMsg>(
    EGCBaseMsg_descriptor(), name, value);
}
enum ECustomGameInstallStatus : int {
  k_ECustomGameInstallStatus_Unknown = 0,
  k_ECustomGameInstallStatus_Ready = 1,
  k_ECustomGameInstallStatus_Busy = 2,
  k_ECustomGameInstallStatus_FailedGeneric = 101,
  k_ECustomGameInstallStatus_FailedInternalError = 102,
  k_ECustomGameInstallStatus_RequestedTimestampTooOld = 103,
  k_ECustomGameInstallStatus_RequestedTimestampTooNew = 104,
  k_ECustomGameInstallStatus_CRCMismatch = 105,
  k_ECustomGameInstallStatus_FailedSteam = 106,
  k_ECustomGameInstallStatus_FailedCanceled = 107
};
bool ECustomGameInstallStatus_IsValid(int value);
constexpr ECustomGameInstallStatus ECustomGameInstallStatus_MIN = k_ECustomGameInstallStatus_Unknown;
constexpr ECustomGameInstallStatus ECustomGameInstallStatus_MAX = k_ECustomGameInstallStatus_FailedCanceled;
constexpr int ECustomGameInstallStatus_ARRAYSIZE = ECustomGameInstallStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECustomGameInstallStatus_descriptor();
template<typename T>
inline const std::string& ECustomGameInstallStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECustomGameInstallStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECustomGameInstallStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECustomGameInstallStatus_descriptor(), enum_t_value);
}
inline bool ECustomGameInstallStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECustomGameInstallStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECustomGameInstallStatus>(
    ECustomGameInstallStatus_descriptor(), name, value);
}
// ===================================================================

class CGCStorePurchaseInit_LineItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCStorePurchaseInit_LineItem) */ {
 public:
  inline CGCStorePurchaseInit_LineItem() : CGCStorePurchaseInit_LineItem(nullptr) {}
  ~CGCStorePurchaseInit_LineItem() override;
  explicit PROTOBUF_CONSTEXPR CGCStorePurchaseInit_LineItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCStorePurchaseInit_LineItem(const CGCStorePurchaseInit_LineItem& from);
  CGCStorePurchaseInit_LineItem(CGCStorePurchaseInit_LineItem&& from) noexcept
    : CGCStorePurchaseInit_LineItem() {
    *this = ::std::move(from);
  }

  inline CGCStorePurchaseInit_LineItem& operator=(const CGCStorePurchaseInit_LineItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCStorePurchaseInit_LineItem& operator=(CGCStorePurchaseInit_LineItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGCStorePurchaseInit_LineItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCStorePurchaseInit_LineItem* internal_default_instance() {
    return reinterpret_cast<const CGCStorePurchaseInit_LineItem*>(
               &_CGCStorePurchaseInit_LineItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CGCStorePurchaseInit_LineItem& a, CGCStorePurchaseInit_LineItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCStorePurchaseInit_LineItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCStorePurchaseInit_LineItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGCStorePurchaseInit_LineItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CGCStorePurchaseInit_LineItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CGCStorePurchaseInit_LineItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CGCStorePurchaseInit_LineItem& from) {
    CGCStorePurchaseInit_LineItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCStorePurchaseInit_LineItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCStorePurchaseInit_LineItem";
  }
  protected:
  explicit CGCStorePurchaseInit_LineItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIdFieldNumber = 1,
    kQuantityFieldNumber = 2,
    kCostInLocalCurrencyFieldNumber = 3,
    kPurchaseTypeFieldNumber = 4,
    kSourceReferenceIdFieldNumber = 5,
  };
  // optional uint32 item_def_id = 1;
  bool has_item_def_id() const;
  private:
  bool _internal_has_item_def_id() const;
  public:
  void clear_item_def_id();
  uint32_t item_def_id() const;
  void set_item_def_id(uint32_t value);
  private:
  uint32_t _internal_item_def_id() const;
  void _internal_set_item_def_id(uint32_t value);
  public:

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  uint32_t quantity() const;
  void set_quantity(uint32_t value);
  private:
  uint32_t _internal_quantity() const;
  void _internal_set_quantity(uint32_t value);
  public:

  // optional uint32 cost_in_local_currency = 3;
  bool has_cost_in_local_currency() const;
  private:
  bool _internal_has_cost_in_local_currency() const;
  public:
  void clear_cost_in_local_currency();
  uint32_t cost_in_local_currency() const;
  void set_cost_in_local_currency(uint32_t value);
  private:
  uint32_t _internal_cost_in_local_currency() const;
  void _internal_set_cost_in_local_currency(uint32_t value);
  public:

  // optional uint32 purchase_type = 4;
  bool has_purchase_type() const;
  private:
  bool _internal_has_purchase_type() const;
  public:
  void clear_purchase_type();
  uint32_t purchase_type() const;
  void set_purchase_type(uint32_t value);
  private:
  uint32_t _internal_purchase_type() const;
  void _internal_set_purchase_type(uint32_t value);
  public:

  // optional uint64 source_reference_id = 5;
  bool has_source_reference_id() const;
  private:
  bool _internal_has_source_reference_id() const;
  public:
  void clear_source_reference_id();
  uint64_t source_reference_id() const;
  void set_source_reference_id(uint64_t value);
  private:
  uint64_t _internal_source_reference_id() const;
  void _internal_set_source_reference_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CGCStorePurchaseInit_LineItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t item_def_id_;
    uint32_t quantity_;
    uint32_t cost_in_local_currency_;
    uint32_t purchase_type_;
    uint64_t source_reference_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCStorePurchaseInit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseInit) */ {
 public:
  inline CMsgGCStorePurchaseInit() : CMsgGCStorePurchaseInit(nullptr) {}
  ~CMsgGCStorePurchaseInit() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCStorePurchaseInit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseInit(const CMsgGCStorePurchaseInit& from);
  CMsgGCStorePurchaseInit(CMsgGCStorePurchaseInit&& from) noexcept
    : CMsgGCStorePurchaseInit() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseInit& operator=(const CMsgGCStorePurchaseInit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseInit& operator=(CMsgGCStorePurchaseInit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseInit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseInit* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseInit*>(
               &_CMsgGCStorePurchaseInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgGCStorePurchaseInit& a, CMsgGCStorePurchaseInit& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseInit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseInit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCStorePurchaseInit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseInit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCStorePurchaseInit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCStorePurchaseInit& from) {
    CMsgGCStorePurchaseInit::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseInit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseInit";
  }
  protected:
  explicit CMsgGCStorePurchaseInit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineItemsFieldNumber = 4,
    kCountryFieldNumber = 1,
    kLanguageFieldNumber = 2,
    kCurrencyFieldNumber = 3,
  };
  // repeated .CGCStorePurchaseInit_LineItem line_items = 4;
  int line_items_size() const;
  private:
  int _internal_line_items_size() const;
  public:
  void clear_line_items();
  ::CGCStorePurchaseInit_LineItem* mutable_line_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >*
      mutable_line_items();
  private:
  const ::CGCStorePurchaseInit_LineItem& _internal_line_items(int index) const;
  ::CGCStorePurchaseInit_LineItem* _internal_add_line_items();
  public:
  const ::CGCStorePurchaseInit_LineItem& line_items(int index) const;
  ::CGCStorePurchaseInit_LineItem* add_line_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >&
      line_items() const;

  // optional string country = 1;
  bool has_country() const;
  private:
  bool _internal_has_country() const;
  public:
  void clear_country();
  const std::string& country() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* country);
  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(const std::string& value);
  std::string* _internal_mutable_country();
  public:

  // optional int32 language = 2;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  int32_t language() const;
  void set_language(int32_t value);
  private:
  int32_t _internal_language() const;
  void _internal_set_language(int32_t value);
  public:

  // optional int32 currency = 3;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  int32_t currency() const;
  void set_currency(int32_t value);
  private:
  int32_t _internal_currency() const;
  void _internal_set_currency(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseInit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem > line_items_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_;
    int32_t language_;
    int32_t currency_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCStorePurchaseInitResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseInitResponse) */ {
 public:
  inline CMsgGCStorePurchaseInitResponse() : CMsgGCStorePurchaseInitResponse(nullptr) {}
  ~CMsgGCStorePurchaseInitResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCStorePurchaseInitResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseInitResponse(const CMsgGCStorePurchaseInitResponse& from);
  CMsgGCStorePurchaseInitResponse(CMsgGCStorePurchaseInitResponse&& from) noexcept
    : CMsgGCStorePurchaseInitResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseInitResponse& operator=(const CMsgGCStorePurchaseInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseInitResponse& operator=(CMsgGCStorePurchaseInitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseInitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseInitResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseInitResponse*>(
               &_CMsgGCStorePurchaseInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgGCStorePurchaseInitResponse& a, CMsgGCStorePurchaseInitResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseInitResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseInitResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCStorePurchaseInitResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseInitResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCStorePurchaseInitResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCStorePurchaseInitResponse& from) {
    CMsgGCStorePurchaseInitResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseInitResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseInitResponse";
  }
  protected:
  explicit CMsgGCStorePurchaseInitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxnIdFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional uint64 txn_id = 2;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  uint64_t txn_id() const;
  void set_txn_id(uint64_t value);
  private:
  uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(uint64_t value);
  public:

  // optional int32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseInitResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t txn_id_;
    int32_t result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientPingData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientPingData) */ {
 public:
  inline CMsgClientPingData() : CMsgClientPingData(nullptr) {}
  ~CMsgClientPingData() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientPingData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientPingData(const CMsgClientPingData& from);
  CMsgClientPingData(CMsgClientPingData&& from) noexcept
    : CMsgClientPingData() {
    *this = ::std::move(from);
  }

  inline CMsgClientPingData& operator=(const CMsgClientPingData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientPingData& operator=(CMsgClientPingData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientPingData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientPingData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPingData*>(
               &_CMsgClientPingData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgClientPingData& a, CMsgClientPingData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientPingData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientPingData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientPingData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientPingData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientPingData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientPingData& from) {
    CMsgClientPingData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientPingData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientPingData";
  }
  protected:
  explicit CMsgClientPingData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRelayCodesFieldNumber = 4,
    kRelayPingsFieldNumber = 5,
    kRegionCodesFieldNumber = 8,
    kRegionPingsFieldNumber = 9,
    kRegionPingFailedBitmaskFieldNumber = 10,
  };
  // repeated fixed32 relay_codes = 4 [packed = true];
  int relay_codes_size() const;
  private:
  int _internal_relay_codes_size() const;
  public:
  void clear_relay_codes();
  private:
  uint32_t _internal_relay_codes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_relay_codes() const;
  void _internal_add_relay_codes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_relay_codes();
  public:
  uint32_t relay_codes(int index) const;
  void set_relay_codes(int index, uint32_t value);
  void add_relay_codes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      relay_codes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_relay_codes();

  // repeated uint32 relay_pings = 5 [packed = true];
  int relay_pings_size() const;
  private:
  int _internal_relay_pings_size() const;
  public:
  void clear_relay_pings();
  private:
  uint32_t _internal_relay_pings(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_relay_pings() const;
  void _internal_add_relay_pings(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_relay_pings();
  public:
  uint32_t relay_pings(int index) const;
  void set_relay_pings(int index, uint32_t value);
  void add_relay_pings(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      relay_pings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_relay_pings();

  // repeated uint32 region_codes = 8 [packed = true];
  int region_codes_size() const;
  private:
  int _internal_region_codes_size() const;
  public:
  void clear_region_codes();
  private:
  uint32_t _internal_region_codes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_region_codes() const;
  void _internal_add_region_codes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_region_codes();
  public:
  uint32_t region_codes(int index) const;
  void set_region_codes(int index, uint32_t value);
  void add_region_codes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      region_codes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_region_codes();

  // repeated uint32 region_pings = 9 [packed = true];
  int region_pings_size() const;
  private:
  int _internal_region_pings_size() const;
  public:
  void clear_region_pings();
  private:
  uint32_t _internal_region_pings(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_region_pings() const;
  void _internal_add_region_pings(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_region_pings();
  public:
  uint32_t region_pings(int index) const;
  void set_region_pings(int index, uint32_t value);
  void add_region_pings(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      region_pings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_region_pings();

  // optional uint32 region_ping_failed_bitmask = 10;
  bool has_region_ping_failed_bitmask() const;
  private:
  bool _internal_has_region_ping_failed_bitmask() const;
  public:
  void clear_region_ping_failed_bitmask();
  uint32_t region_ping_failed_bitmask() const;
  void set_region_ping_failed_bitmask(uint32_t value);
  private:
  uint32_t _internal_region_ping_failed_bitmask() const;
  void _internal_set_region_ping_failed_bitmask(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientPingData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > relay_codes_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > relay_pings_;
    mutable std::atomic<int> _relay_pings_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > region_codes_;
    mutable std::atomic<int> _region_codes_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > region_pings_;
    mutable std::atomic<int> _region_pings_cached_byte_size_;
    uint32_t region_ping_failed_bitmask_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgInviteToParty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgInviteToParty) */ {
 public:
  inline CMsgInviteToParty() : CMsgInviteToParty(nullptr) {}
  ~CMsgInviteToParty() override;
  explicit PROTOBUF_CONSTEXPR CMsgInviteToParty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgInviteToParty(const CMsgInviteToParty& from);
  CMsgInviteToParty(CMsgInviteToParty&& from) noexcept
    : CMsgInviteToParty() {
    *this = ::std::move(from);
  }

  inline CMsgInviteToParty& operator=(const CMsgInviteToParty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgInviteToParty& operator=(CMsgInviteToParty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgInviteToParty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgInviteToParty* internal_default_instance() {
    return reinterpret_cast<const CMsgInviteToParty*>(
               &_CMsgInviteToParty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgInviteToParty& a, CMsgInviteToParty& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgInviteToParty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgInviteToParty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgInviteToParty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgInviteToParty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgInviteToParty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgInviteToParty& from) {
    CMsgInviteToParty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgInviteToParty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgInviteToParty";
  }
  protected:
  explicit CMsgInviteToParty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingDataFieldNumber = 5,
    kSteamIdFieldNumber = 1,
    kClientVersionFieldNumber = 2,
    kTeamIdFieldNumber = 3,
    kAsCoachFieldNumber = 4,
  };
  // optional .CMsgClientPingData ping_data = 5;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  const ::CMsgClientPingData& ping_data() const;
  PROTOBUF_NODISCARD ::CMsgClientPingData* release_ping_data();
  ::CMsgClientPingData* mutable_ping_data();
  void set_allocated_ping_data(::CMsgClientPingData* ping_data);
  private:
  const ::CMsgClientPingData& _internal_ping_data() const;
  ::CMsgClientPingData* _internal_mutable_ping_data();
  public:
  void unsafe_arena_set_allocated_ping_data(
      ::CMsgClientPingData* ping_data);
  ::CMsgClientPingData* unsafe_arena_release_ping_data();

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  uint64_t steam_id() const;
  void set_steam_id(uint64_t value);
  private:
  uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(uint64_t value);
  public:

  // optional uint32 client_version = 2;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional uint32 team_id = 3;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  uint32_t team_id() const;
  void set_team_id(uint32_t value);
  private:
  uint32_t _internal_team_id() const;
  void _internal_set_team_id(uint32_t value);
  public:

  // optional bool as_coach = 4;
  bool has_as_coach() const;
  private:
  bool _internal_has_as_coach() const;
  public:
  void clear_as_coach();
  bool as_coach() const;
  void set_as_coach(bool value);
  private:
  bool _internal_as_coach() const;
  void _internal_set_as_coach(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgInviteToParty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgClientPingData* ping_data_;
    uint64_t steam_id_;
    uint32_t client_version_;
    uint32_t team_id_;
    bool as_coach_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgInviteToLobby final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgInviteToLobby) */ {
 public:
  inline CMsgInviteToLobby() : CMsgInviteToLobby(nullptr) {}
  ~CMsgInviteToLobby() override;
  explicit PROTOBUF_CONSTEXPR CMsgInviteToLobby(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgInviteToLobby(const CMsgInviteToLobby& from);
  CMsgInviteToLobby(CMsgInviteToLobby&& from) noexcept
    : CMsgInviteToLobby() {
    *this = ::std::move(from);
  }

  inline CMsgInviteToLobby& operator=(const CMsgInviteToLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgInviteToLobby& operator=(CMsgInviteToLobby&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgInviteToLobby& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgInviteToLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgInviteToLobby*>(
               &_CMsgInviteToLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgInviteToLobby& a, CMsgInviteToLobby& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgInviteToLobby* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgInviteToLobby* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgInviteToLobby* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgInviteToLobby>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgInviteToLobby& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgInviteToLobby& from) {
    CMsgInviteToLobby::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgInviteToLobby* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgInviteToLobby";
  }
  protected:
  explicit CMsgInviteToLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamIdFieldNumber = 1,
    kClientVersionFieldNumber = 2,
  };
  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  uint64_t steam_id() const;
  void set_steam_id(uint64_t value);
  private:
  uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(uint64_t value);
  public:

  // optional uint32 client_version = 2;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgInviteToLobby)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t steam_id_;
    uint32_t client_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgInvitationCreated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgInvitationCreated) */ {
 public:
  inline CMsgInvitationCreated() : CMsgInvitationCreated(nullptr) {}
  ~CMsgInvitationCreated() override;
  explicit PROTOBUF_CONSTEXPR CMsgInvitationCreated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgInvitationCreated(const CMsgInvitationCreated& from);
  CMsgInvitationCreated(CMsgInvitationCreated&& from) noexcept
    : CMsgInvitationCreated() {
    *this = ::std::move(from);
  }

  inline CMsgInvitationCreated& operator=(const CMsgInvitationCreated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgInvitationCreated& operator=(CMsgInvitationCreated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgInvitationCreated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgInvitationCreated* internal_default_instance() {
    return reinterpret_cast<const CMsgInvitationCreated*>(
               &_CMsgInvitationCreated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgInvitationCreated& a, CMsgInvitationCreated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgInvitationCreated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgInvitationCreated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgInvitationCreated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgInvitationCreated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgInvitationCreated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgInvitationCreated& from) {
    CMsgInvitationCreated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgInvitationCreated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgInvitationCreated";
  }
  protected:
  explicit CMsgInvitationCreated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupIdFieldNumber = 1,
    kSteamIdFieldNumber = 2,
    kUserOfflineFieldNumber = 3,
  };
  // optional uint64 group_id = 1;
  bool has_group_id() const;
  private:
  bool _internal_has_group_id() const;
  public:
  void clear_group_id();
  uint64_t group_id() const;
  void set_group_id(uint64_t value);
  private:
  uint64_t _internal_group_id() const;
  void _internal_set_group_id(uint64_t value);
  public:

  // optional fixed64 steam_id = 2;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  uint64_t steam_id() const;
  void set_steam_id(uint64_t value);
  private:
  uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(uint64_t value);
  public:

  // optional bool user_offline = 3;
  bool has_user_offline() const;
  private:
  bool _internal_has_user_offline() const;
  public:
  void clear_user_offline();
  bool user_offline() const;
  void set_user_offline(bool value);
  private:
  bool _internal_user_offline() const;
  void _internal_set_user_offline(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgInvitationCreated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t group_id_;
    uint64_t steam_id_;
    bool user_offline_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgPartyInviteResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPartyInviteResponse) */ {
 public:
  inline CMsgPartyInviteResponse() : CMsgPartyInviteResponse(nullptr) {}
  ~CMsgPartyInviteResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgPartyInviteResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPartyInviteResponse(const CMsgPartyInviteResponse& from);
  CMsgPartyInviteResponse(CMsgPartyInviteResponse&& from) noexcept
    : CMsgPartyInviteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPartyInviteResponse& operator=(const CMsgPartyInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPartyInviteResponse& operator=(CMsgPartyInviteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgPartyInviteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPartyInviteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPartyInviteResponse*>(
               &_CMsgPartyInviteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgPartyInviteResponse& a, CMsgPartyInviteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPartyInviteResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPartyInviteResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgPartyInviteResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgPartyInviteResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgPartyInviteResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgPartyInviteResponse& from) {
    CMsgPartyInviteResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPartyInviteResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPartyInviteResponse";
  }
  protected:
  explicit CMsgPartyInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingDataFieldNumber = 8,
    kPartyIdFieldNumber = 1,
    kAcceptFieldNumber = 2,
    kClientVersionFieldNumber = 3,
  };
  // optional .CMsgClientPingData ping_data = 8;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  const ::CMsgClientPingData& ping_data() const;
  PROTOBUF_NODISCARD ::CMsgClientPingData* release_ping_data();
  ::CMsgClientPingData* mutable_ping_data();
  void set_allocated_ping_data(::CMsgClientPingData* ping_data);
  private:
  const ::CMsgClientPingData& _internal_ping_data() const;
  ::CMsgClientPingData* _internal_mutable_ping_data();
  public:
  void unsafe_arena_set_allocated_ping_data(
      ::CMsgClientPingData* ping_data);
  ::CMsgClientPingData* unsafe_arena_release_ping_data();

  // optional uint64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional bool accept = 2;
  bool has_accept() const;
  private:
  bool _internal_has_accept() const;
  public:
  void clear_accept();
  bool accept() const;
  void set_accept(bool value);
  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);
  public:

  // optional uint32 client_version = 3;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPartyInviteResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgClientPingData* ping_data_;
    uint64_t party_id_;
    bool accept_;
    uint32_t client_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgLobbyInviteResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgLobbyInviteResponse) */ {
 public:
  inline CMsgLobbyInviteResponse() : CMsgLobbyInviteResponse(nullptr) {}
  ~CMsgLobbyInviteResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgLobbyInviteResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLobbyInviteResponse(const CMsgLobbyInviteResponse& from);
  CMsgLobbyInviteResponse(CMsgLobbyInviteResponse&& from) noexcept
    : CMsgLobbyInviteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgLobbyInviteResponse& operator=(const CMsgLobbyInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLobbyInviteResponse& operator=(CMsgLobbyInviteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLobbyInviteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLobbyInviteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgLobbyInviteResponse*>(
               &_CMsgLobbyInviteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgLobbyInviteResponse& a, CMsgLobbyInviteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLobbyInviteResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLobbyInviteResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgLobbyInviteResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgLobbyInviteResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgLobbyInviteResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgLobbyInviteResponse& from) {
    CMsgLobbyInviteResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLobbyInviteResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLobbyInviteResponse";
  }
  protected:
  explicit CMsgLobbyInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLobbyIdFieldNumber = 1,
    kAcceptFieldNumber = 2,
    kClientVersionFieldNumber = 3,
    kCustomGameCrcFieldNumber = 6,
    kCustomGameTimestampFieldNumber = 7,
  };
  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // optional bool accept = 2;
  bool has_accept() const;
  private:
  bool _internal_has_accept() const;
  public:
  void clear_accept();
  bool accept() const;
  void set_accept(bool value);
  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);
  public:

  // optional uint32 client_version = 3;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional fixed64 custom_game_crc = 6;
  bool has_custom_game_crc() const;
  private:
  bool _internal_has_custom_game_crc() const;
  public:
  void clear_custom_game_crc();
  uint64_t custom_game_crc() const;
  void set_custom_game_crc(uint64_t value);
  private:
  uint64_t _internal_custom_game_crc() const;
  void _internal_set_custom_game_crc(uint64_t value);
  public:

  // optional fixed32 custom_game_timestamp = 7;
  bool has_custom_game_timestamp() const;
  private:
  bool _internal_has_custom_game_timestamp() const;
  public:
  void clear_custom_game_timestamp();
  uint32_t custom_game_timestamp() const;
  void set_custom_game_timestamp(uint32_t value);
  private:
  uint32_t _internal_custom_game_timestamp() const;
  void _internal_set_custom_game_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgLobbyInviteResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t lobby_id_;
    bool accept_;
    uint32_t client_version_;
    uint64_t custom_game_crc_;
    uint32_t custom_game_timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgKickFromParty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgKickFromParty) */ {
 public:
  inline CMsgKickFromParty() : CMsgKickFromParty(nullptr) {}
  ~CMsgKickFromParty() override;
  explicit PROTOBUF_CONSTEXPR CMsgKickFromParty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgKickFromParty(const CMsgKickFromParty& from);
  CMsgKickFromParty(CMsgKickFromParty&& from) noexcept
    : CMsgKickFromParty() {
    *this = ::std::move(from);
  }

  inline CMsgKickFromParty& operator=(const CMsgKickFromParty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgKickFromParty& operator=(CMsgKickFromParty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgKickFromParty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgKickFromParty* internal_default_instance() {
    return reinterpret_cast<const CMsgKickFromParty*>(
               &_CMsgKickFromParty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgKickFromParty& a, CMsgKickFromParty& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgKickFromParty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgKickFromParty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgKickFromParty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgKickFromParty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgKickFromParty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgKickFromParty& from) {
    CMsgKickFromParty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgKickFromParty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgKickFromParty";
  }
  protected:
  explicit CMsgKickFromParty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamIdFieldNumber = 1,
  };
  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  uint64_t steam_id() const;
  void set_steam_id(uint64_t value);
  private:
  uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgKickFromParty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t steam_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgLeaveParty final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgLeaveParty) */ {
 public:
  inline CMsgLeaveParty() : CMsgLeaveParty(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgLeaveParty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLeaveParty(const CMsgLeaveParty& from);
  CMsgLeaveParty(CMsgLeaveParty&& from) noexcept
    : CMsgLeaveParty() {
    *this = ::std::move(from);
  }

  inline CMsgLeaveParty& operator=(const CMsgLeaveParty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLeaveParty& operator=(CMsgLeaveParty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLeaveParty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLeaveParty* internal_default_instance() {
    return reinterpret_cast<const CMsgLeaveParty*>(
               &_CMsgLeaveParty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgLeaveParty& a, CMsgLeaveParty& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLeaveParty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLeaveParty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgLeaveParty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgLeaveParty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgLeaveParty& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgLeaveParty& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLeaveParty";
  }
  protected:
  explicit CMsgLeaveParty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgLeaveParty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgCustomGameInstallStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCustomGameInstallStatus) */ {
 public:
  inline CMsgCustomGameInstallStatus() : CMsgCustomGameInstallStatus(nullptr) {}
  ~CMsgCustomGameInstallStatus() override;
  explicit PROTOBUF_CONSTEXPR CMsgCustomGameInstallStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCustomGameInstallStatus(const CMsgCustomGameInstallStatus& from);
  CMsgCustomGameInstallStatus(CMsgCustomGameInstallStatus&& from) noexcept
    : CMsgCustomGameInstallStatus() {
    *this = ::std::move(from);
  }

  inline CMsgCustomGameInstallStatus& operator=(const CMsgCustomGameInstallStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCustomGameInstallStatus& operator=(CMsgCustomGameInstallStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCustomGameInstallStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCustomGameInstallStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgCustomGameInstallStatus*>(
               &_CMsgCustomGameInstallStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgCustomGameInstallStatus& a, CMsgCustomGameInstallStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCustomGameInstallStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCustomGameInstallStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCustomGameInstallStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCustomGameInstallStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCustomGameInstallStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCustomGameInstallStatus& from) {
    CMsgCustomGameInstallStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCustomGameInstallStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCustomGameInstallStatus";
  }
  protected:
  explicit CMsgCustomGameInstallStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kStatusFieldNumber = 1,
    kLatestTimestampFromSteamFieldNumber = 3,
  };
  // optional string message = 2;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional .ECustomGameInstallStatus status = 1 [default = k_ECustomGameInstallStatus_Unknown];
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::ECustomGameInstallStatus status() const;
  void set_status(::ECustomGameInstallStatus value);
  private:
  ::ECustomGameInstallStatus _internal_status() const;
  void _internal_set_status(::ECustomGameInstallStatus value);
  public:

  // optional fixed32 latest_timestamp_from_steam = 3;
  bool has_latest_timestamp_from_steam() const;
  private:
  bool _internal_has_latest_timestamp_from_steam() const;
  public:
  void clear_latest_timestamp_from_steam();
  uint32_t latest_timestamp_from_steam() const;
  void set_latest_timestamp_from_steam(uint32_t value);
  private:
  uint32_t _internal_latest_timestamp_from_steam() const;
  void _internal_set_latest_timestamp_from_steam(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCustomGameInstallStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int status_;
    uint32_t latest_timestamp_from_steam_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerAvailable final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgServerAvailable) */ {
 public:
  inline CMsgServerAvailable() : CMsgServerAvailable(nullptr) {}
  ~CMsgServerAvailable() override;
  explicit PROTOBUF_CONSTEXPR CMsgServerAvailable(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgServerAvailable(const CMsgServerAvailable& from);
  CMsgServerAvailable(CMsgServerAvailable&& from) noexcept
    : CMsgServerAvailable() {
    *this = ::std::move(from);
  }

  inline CMsgServerAvailable& operator=(const CMsgServerAvailable& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerAvailable& operator=(CMsgServerAvailable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerAvailable& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerAvailable* internal_default_instance() {
    return reinterpret_cast<const CMsgServerAvailable*>(
               &_CMsgServerAvailable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgServerAvailable& a, CMsgServerAvailable& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgServerAvailable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerAvailable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgServerAvailable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgServerAvailable>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgServerAvailable& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgServerAvailable& from) {
    CMsgServerAvailable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerAvailable* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgServerAvailable";
  }
  protected:
  explicit CMsgServerAvailable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomGameInstallStatusFieldNumber = 1,
  };
  // optional .CMsgCustomGameInstallStatus custom_game_install_status = 1;
  bool has_custom_game_install_status() const;
  private:
  bool _internal_has_custom_game_install_status() const;
  public:
  void clear_custom_game_install_status();
  const ::CMsgCustomGameInstallStatus& custom_game_install_status() const;
  PROTOBUF_NODISCARD ::CMsgCustomGameInstallStatus* release_custom_game_install_status();
  ::CMsgCustomGameInstallStatus* mutable_custom_game_install_status();
  void set_allocated_custom_game_install_status(::CMsgCustomGameInstallStatus* custom_game_install_status);
  private:
  const ::CMsgCustomGameInstallStatus& _internal_custom_game_install_status() const;
  ::CMsgCustomGameInstallStatus* _internal_mutable_custom_game_install_status();
  public:
  void unsafe_arena_set_allocated_custom_game_install_status(
      ::CMsgCustomGameInstallStatus* custom_game_install_status);
  ::CMsgCustomGameInstallStatus* unsafe_arena_release_custom_game_install_status();

  // @@protoc_insertion_point(class_scope:CMsgServerAvailable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgCustomGameInstallStatus* custom_game_install_status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgLANServerAvailable final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgLANServerAvailable) */ {
 public:
  inline CMsgLANServerAvailable() : CMsgLANServerAvailable(nullptr) {}
  ~CMsgLANServerAvailable() override;
  explicit PROTOBUF_CONSTEXPR CMsgLANServerAvailable(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLANServerAvailable(const CMsgLANServerAvailable& from);
  CMsgLANServerAvailable(CMsgLANServerAvailable&& from) noexcept
    : CMsgLANServerAvailable() {
    *this = ::std::move(from);
  }

  inline CMsgLANServerAvailable& operator=(const CMsgLANServerAvailable& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLANServerAvailable& operator=(CMsgLANServerAvailable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLANServerAvailable& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLANServerAvailable* internal_default_instance() {
    return reinterpret_cast<const CMsgLANServerAvailable*>(
               &_CMsgLANServerAvailable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgLANServerAvailable& a, CMsgLANServerAvailable& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLANServerAvailable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLANServerAvailable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgLANServerAvailable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgLANServerAvailable>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgLANServerAvailable& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgLANServerAvailable& from) {
    CMsgLANServerAvailable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLANServerAvailable* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLANServerAvailable";
  }
  protected:
  explicit CMsgLANServerAvailable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLobbyIdFieldNumber = 1,
  };
  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgLANServerAvailable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t lobby_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CSOEconGameAccountClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconGameAccountClient) */ {
 public:
  inline CSOEconGameAccountClient() : CSOEconGameAccountClient(nullptr) {}
  ~CSOEconGameAccountClient() override;
  explicit PROTOBUF_CONSTEXPR CSOEconGameAccountClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconGameAccountClient(const CSOEconGameAccountClient& from);
  CSOEconGameAccountClient(CSOEconGameAccountClient&& from) noexcept
    : CSOEconGameAccountClient() {
    *this = ::std::move(from);
  }

  inline CSOEconGameAccountClient& operator=(const CSOEconGameAccountClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconGameAccountClient& operator=(CSOEconGameAccountClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconGameAccountClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconGameAccountClient* internal_default_instance() {
    return reinterpret_cast<const CSOEconGameAccountClient*>(
               &_CSOEconGameAccountClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CSOEconGameAccountClient& a, CSOEconGameAccountClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconGameAccountClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconGameAccountClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOEconGameAccountClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOEconGameAccountClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOEconGameAccountClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOEconGameAccountClient& from) {
    CSOEconGameAccountClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconGameAccountClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconGameAccountClient";
  }
  protected:
  explicit CSOEconGameAccountClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionalBackpackSlotsFieldNumber = 1,
    kTrialAccountFieldNumber = 2,
    kNeedToChooseMostHelpfulFriendFieldNumber = 4,
    kInCoachesListFieldNumber = 5,
    kMadeFirstPurchaseFieldNumber = 9,
    kTradeBanExpirationFieldNumber = 6,
    kDuelBanExpirationFieldNumber = 7,
    kEligibleForOnlinePlayFieldNumber = 3,
  };
  // optional uint32 additional_backpack_slots = 1 [default = 0];
  bool has_additional_backpack_slots() const;
  private:
  bool _internal_has_additional_backpack_slots() const;
  public:
  void clear_additional_backpack_slots();
  uint32_t additional_backpack_slots() const;
  void set_additional_backpack_slots(uint32_t value);
  private:
  uint32_t _internal_additional_backpack_slots() const;
  void _internal_set_additional_backpack_slots(uint32_t value);
  public:

  // optional bool trial_account = 2 [default = false];
  bool has_trial_account() const;
  private:
  bool _internal_has_trial_account() const;
  public:
  void clear_trial_account();
  bool trial_account() const;
  void set_trial_account(bool value);
  private:
  bool _internal_trial_account() const;
  void _internal_set_trial_account(bool value);
  public:

  // optional bool need_to_choose_most_helpful_friend = 4;
  bool has_need_to_choose_most_helpful_friend() const;
  private:
  bool _internal_has_need_to_choose_most_helpful_friend() const;
  public:
  void clear_need_to_choose_most_helpful_friend();
  bool need_to_choose_most_helpful_friend() const;
  void set_need_to_choose_most_helpful_friend(bool value);
  private:
  bool _internal_need_to_choose_most_helpful_friend() const;
  void _internal_set_need_to_choose_most_helpful_friend(bool value);
  public:

  // optional bool in_coaches_list = 5;
  bool has_in_coaches_list() const;
  private:
  bool _internal_has_in_coaches_list() const;
  public:
  void clear_in_coaches_list();
  bool in_coaches_list() const;
  void set_in_coaches_list(bool value);
  private:
  bool _internal_in_coaches_list() const;
  void _internal_set_in_coaches_list(bool value);
  public:

  // optional bool made_first_purchase = 9 [default = false];
  bool has_made_first_purchase() const;
  private:
  bool _internal_has_made_first_purchase() const;
  public:
  void clear_made_first_purchase();
  bool made_first_purchase() const;
  void set_made_first_purchase(bool value);
  private:
  bool _internal_made_first_purchase() const;
  void _internal_set_made_first_purchase(bool value);
  public:

  // optional fixed32 trade_ban_expiration = 6;
  bool has_trade_ban_expiration() const;
  private:
  bool _internal_has_trade_ban_expiration() const;
  public:
  void clear_trade_ban_expiration();
  uint32_t trade_ban_expiration() const;
  void set_trade_ban_expiration(uint32_t value);
  private:
  uint32_t _internal_trade_ban_expiration() const;
  void _internal_set_trade_ban_expiration(uint32_t value);
  public:

  // optional fixed32 duel_ban_expiration = 7;
  bool has_duel_ban_expiration() const;
  private:
  bool _internal_has_duel_ban_expiration() const;
  public:
  void clear_duel_ban_expiration();
  uint32_t duel_ban_expiration() const;
  void set_duel_ban_expiration(uint32_t value);
  private:
  uint32_t _internal_duel_ban_expiration() const;
  void _internal_set_duel_ban_expiration(uint32_t value);
  public:

  // optional bool eligible_for_online_play = 3 [default = true];
  bool has_eligible_for_online_play() const;
  private:
  bool _internal_has_eligible_for_online_play() const;
  public:
  void clear_eligible_for_online_play();
  bool eligible_for_online_play() const;
  void set_eligible_for_online_play(bool value);
  private:
  bool _internal_eligible_for_online_play() const;
  void _internal_set_eligible_for_online_play(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconGameAccountClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t additional_backpack_slots_;
    bool trial_account_;
    bool need_to_choose_most_helpful_friend_;
    bool in_coaches_list_;
    bool made_first_purchase_;
    uint32_t trade_ban_expiration_;
    uint32_t duel_ban_expiration_;
    bool eligible_for_online_play_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgApplyStrangePart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyStrangePart) */ {
 public:
  inline CMsgApplyStrangePart() : CMsgApplyStrangePart(nullptr) {}
  ~CMsgApplyStrangePart() override;
  explicit PROTOBUF_CONSTEXPR CMsgApplyStrangePart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyStrangePart(const CMsgApplyStrangePart& from);
  CMsgApplyStrangePart(CMsgApplyStrangePart&& from) noexcept
    : CMsgApplyStrangePart() {
    *this = ::std::move(from);
  }

  inline CMsgApplyStrangePart& operator=(const CMsgApplyStrangePart& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyStrangePart& operator=(CMsgApplyStrangePart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyStrangePart& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyStrangePart* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyStrangePart*>(
               &_CMsgApplyStrangePart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgApplyStrangePart& a, CMsgApplyStrangePart& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyStrangePart* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyStrangePart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgApplyStrangePart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgApplyStrangePart>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgApplyStrangePart& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgApplyStrangePart& from) {
    CMsgApplyStrangePart::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyStrangePart* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyStrangePart";
  }
  protected:
  explicit CMsgApplyStrangePart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrangePartItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
  };
  // optional uint64 strange_part_item_id = 1;
  bool has_strange_part_item_id() const;
  private:
  bool _internal_has_strange_part_item_id() const;
  public:
  void clear_strange_part_item_id();
  uint64_t strange_part_item_id() const;
  void set_strange_part_item_id(uint64_t value);
  private:
  uint64_t _internal_strange_part_item_id() const;
  void _internal_set_strange_part_item_id(uint64_t value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyStrangePart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t strange_part_item_id_;
    uint64_t item_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgApplyPennantUpgrade final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyPennantUpgrade) */ {
 public:
  inline CMsgApplyPennantUpgrade() : CMsgApplyPennantUpgrade(nullptr) {}
  ~CMsgApplyPennantUpgrade() override;
  explicit PROTOBUF_CONSTEXPR CMsgApplyPennantUpgrade(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyPennantUpgrade(const CMsgApplyPennantUpgrade& from);
  CMsgApplyPennantUpgrade(CMsgApplyPennantUpgrade&& from) noexcept
    : CMsgApplyPennantUpgrade() {
    *this = ::std::move(from);
  }

  inline CMsgApplyPennantUpgrade& operator=(const CMsgApplyPennantUpgrade& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyPennantUpgrade& operator=(CMsgApplyPennantUpgrade&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyPennantUpgrade& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyPennantUpgrade* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyPennantUpgrade*>(
               &_CMsgApplyPennantUpgrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgApplyPennantUpgrade& a, CMsgApplyPennantUpgrade& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyPennantUpgrade* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyPennantUpgrade* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgApplyPennantUpgrade* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgApplyPennantUpgrade>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgApplyPennantUpgrade& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgApplyPennantUpgrade& from) {
    CMsgApplyPennantUpgrade::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyPennantUpgrade* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyPennantUpgrade";
  }
  protected:
  explicit CMsgApplyPennantUpgrade(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpgradeItemIdFieldNumber = 1,
    kPennantItemIdFieldNumber = 2,
  };
  // optional uint64 upgrade_item_id = 1;
  bool has_upgrade_item_id() const;
  private:
  bool _internal_has_upgrade_item_id() const;
  public:
  void clear_upgrade_item_id();
  uint64_t upgrade_item_id() const;
  void set_upgrade_item_id(uint64_t value);
  private:
  uint64_t _internal_upgrade_item_id() const;
  void _internal_set_upgrade_item_id(uint64_t value);
  public:

  // optional uint64 pennant_item_id = 2;
  bool has_pennant_item_id() const;
  private:
  bool _internal_has_pennant_item_id() const;
  public:
  void clear_pennant_item_id();
  uint64_t pennant_item_id() const;
  void set_pennant_item_id(uint64_t value);
  private:
  uint64_t _internal_pennant_item_id() const;
  void _internal_set_pennant_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyPennantUpgrade)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t upgrade_item_id_;
    uint64_t pennant_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgApplyEggEssence final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyEggEssence) */ {
 public:
  inline CMsgApplyEggEssence() : CMsgApplyEggEssence(nullptr) {}
  ~CMsgApplyEggEssence() override;
  explicit PROTOBUF_CONSTEXPR CMsgApplyEggEssence(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyEggEssence(const CMsgApplyEggEssence& from);
  CMsgApplyEggEssence(CMsgApplyEggEssence&& from) noexcept
    : CMsgApplyEggEssence() {
    *this = ::std::move(from);
  }

  inline CMsgApplyEggEssence& operator=(const CMsgApplyEggEssence& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyEggEssence& operator=(CMsgApplyEggEssence&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyEggEssence& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyEggEssence* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyEggEssence*>(
               &_CMsgApplyEggEssence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgApplyEggEssence& a, CMsgApplyEggEssence& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyEggEssence* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyEggEssence* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgApplyEggEssence* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgApplyEggEssence>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgApplyEggEssence& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgApplyEggEssence& from) {
    CMsgApplyEggEssence::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyEggEssence* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyEggEssence";
  }
  protected:
  explicit CMsgApplyEggEssence(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEssenceItemIdFieldNumber = 1,
    kEggItemIdFieldNumber = 2,
  };
  // optional uint64 essence_item_id = 1;
  bool has_essence_item_id() const;
  private:
  bool _internal_has_essence_item_id() const;
  public:
  void clear_essence_item_id();
  uint64_t essence_item_id() const;
  void set_essence_item_id(uint64_t value);
  private:
  uint64_t _internal_essence_item_id() const;
  void _internal_set_essence_item_id(uint64_t value);
  public:

  // optional uint64 egg_item_id = 2;
  bool has_egg_item_id() const;
  private:
  bool _internal_has_egg_item_id() const;
  public:
  void clear_egg_item_id();
  uint64_t egg_item_id() const;
  void set_egg_item_id(uint64_t value);
  private:
  uint64_t _internal_egg_item_id() const;
  void _internal_set_egg_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyEggEssence)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t essence_item_id_;
    uint64_t egg_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CSOEconItemAttribute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItemAttribute) */ {
 public:
  inline CSOEconItemAttribute() : CSOEconItemAttribute(nullptr) {}
  ~CSOEconItemAttribute() override;
  explicit PROTOBUF_CONSTEXPR CSOEconItemAttribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItemAttribute(const CSOEconItemAttribute& from);
  CSOEconItemAttribute(CSOEconItemAttribute&& from) noexcept
    : CSOEconItemAttribute() {
    *this = ::std::move(from);
  }

  inline CSOEconItemAttribute& operator=(const CSOEconItemAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItemAttribute& operator=(CSOEconItemAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItemAttribute& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItemAttribute* internal_default_instance() {
    return reinterpret_cast<const CSOEconItemAttribute*>(
               &_CSOEconItemAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CSOEconItemAttribute& a, CSOEconItemAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItemAttribute* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItemAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOEconItemAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOEconItemAttribute>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOEconItemAttribute& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOEconItemAttribute& from) {
    CSOEconItemAttribute::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItemAttribute* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItemAttribute";
  }
  protected:
  explicit CSOEconItemAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueBytesFieldNumber = 3,
    kValueFieldNumber = 2,
    kDefIndexFieldNumber = 1,
  };
  // optional bytes value_bytes = 3;
  bool has_value_bytes() const;
  private:
  bool _internal_has_value_bytes() const;
  public:
  void clear_value_bytes();
  const std::string& value_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_bytes();
  PROTOBUF_NODISCARD std::string* release_value_bytes();
  void set_allocated_value_bytes(std::string* value_bytes);
  private:
  const std::string& _internal_value_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_bytes(const std::string& value);
  std::string* _internal_mutable_value_bytes();
  public:

  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  uint32_t value() const;
  void set_value(uint32_t value);
  private:
  uint32_t _internal_value() const;
  void _internal_set_value(uint32_t value);
  public:

  // optional uint32 def_index = 1 [default = 65535];
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  uint32_t def_index() const;
  void set_def_index(uint32_t value);
  private:
  uint32_t _internal_def_index() const;
  void _internal_set_def_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItemAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_bytes_;
    uint32_t value_;
    uint32_t def_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CSOEconItemEquipped final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItemEquipped) */ {
 public:
  inline CSOEconItemEquipped() : CSOEconItemEquipped(nullptr) {}
  ~CSOEconItemEquipped() override;
  explicit PROTOBUF_CONSTEXPR CSOEconItemEquipped(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItemEquipped(const CSOEconItemEquipped& from);
  CSOEconItemEquipped(CSOEconItemEquipped&& from) noexcept
    : CSOEconItemEquipped() {
    *this = ::std::move(from);
  }

  inline CSOEconItemEquipped& operator=(const CSOEconItemEquipped& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItemEquipped& operator=(CSOEconItemEquipped&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItemEquipped& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItemEquipped* internal_default_instance() {
    return reinterpret_cast<const CSOEconItemEquipped*>(
               &_CSOEconItemEquipped_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CSOEconItemEquipped& a, CSOEconItemEquipped& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItemEquipped* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItemEquipped* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOEconItemEquipped* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOEconItemEquipped>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOEconItemEquipped& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOEconItemEquipped& from) {
    CSOEconItemEquipped::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItemEquipped* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItemEquipped";
  }
  protected:
  explicit CSOEconItemEquipped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewClassFieldNumber = 1,
    kNewSlotFieldNumber = 2,
  };
  // optional uint32 new_class = 1;
  bool has_new_class() const;
  private:
  bool _internal_has_new_class() const;
  public:
  void clear_new_class();
  uint32_t new_class() const;
  void set_new_class(uint32_t value);
  private:
  uint32_t _internal_new_class() const;
  void _internal_set_new_class(uint32_t value);
  public:

  // optional uint32 new_slot = 2;
  bool has_new_slot() const;
  private:
  bool _internal_has_new_slot() const;
  public:
  void clear_new_slot();
  uint32_t new_slot() const;
  void set_new_slot(uint32_t value);
  private:
  uint32_t _internal_new_slot() const;
  void _internal_set_new_slot(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItemEquipped)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t new_class_;
    uint32_t new_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CSOEconItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOEconItem) */ {
 public:
  inline CSOEconItem() : CSOEconItem(nullptr) {}
  ~CSOEconItem() override;
  explicit PROTOBUF_CONSTEXPR CSOEconItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOEconItem(const CSOEconItem& from);
  CSOEconItem(CSOEconItem&& from) noexcept
    : CSOEconItem() {
    *this = ::std::move(from);
  }

  inline CSOEconItem& operator=(const CSOEconItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOEconItem& operator=(CSOEconItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOEconItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOEconItem* internal_default_instance() {
    return reinterpret_cast<const CSOEconItem*>(
               &_CSOEconItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CSOEconItem& a, CSOEconItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOEconItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOEconItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOEconItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOEconItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOEconItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOEconItem& from) {
    CSOEconItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOEconItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOEconItem";
  }
  protected:
  explicit CSOEconItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 12,
    kEquippedStateFieldNumber = 18,
    kInteriorItemFieldNumber = 13,
    kIdFieldNumber = 1,
    kAccountIdFieldNumber = 2,
    kInventoryFieldNumber = 3,
    kDefIndexFieldNumber = 4,
    kFlagsFieldNumber = 8,
    kOriginFieldNumber = 9,
    kStyleFieldNumber = 15,
    kOriginalIdFieldNumber = 16,
    kQualityFieldNumber = 7,
    kQuantityFieldNumber = 5,
    kLevelFieldNumber = 6,
  };
  // repeated .CSOEconItemAttribute attribute = 12;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::CSOEconItemAttribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >*
      mutable_attribute();
  private:
  const ::CSOEconItemAttribute& _internal_attribute(int index) const;
  ::CSOEconItemAttribute* _internal_add_attribute();
  public:
  const ::CSOEconItemAttribute& attribute(int index) const;
  ::CSOEconItemAttribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >&
      attribute() const;

  // repeated .CSOEconItemEquipped equipped_state = 18;
  int equipped_state_size() const;
  private:
  int _internal_equipped_state_size() const;
  public:
  void clear_equipped_state();
  ::CSOEconItemEquipped* mutable_equipped_state(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >*
      mutable_equipped_state();
  private:
  const ::CSOEconItemEquipped& _internal_equipped_state(int index) const;
  ::CSOEconItemEquipped* _internal_add_equipped_state();
  public:
  const ::CSOEconItemEquipped& equipped_state(int index) const;
  ::CSOEconItemEquipped* add_equipped_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >&
      equipped_state() const;

  // optional .CSOEconItem interior_item = 13;
  bool has_interior_item() const;
  private:
  bool _internal_has_interior_item() const;
  public:
  void clear_interior_item();
  const ::CSOEconItem& interior_item() const;
  PROTOBUF_NODISCARD ::CSOEconItem* release_interior_item();
  ::CSOEconItem* mutable_interior_item();
  void set_allocated_interior_item(::CSOEconItem* interior_item);
  private:
  const ::CSOEconItem& _internal_interior_item() const;
  ::CSOEconItem* _internal_mutable_interior_item();
  public:
  void unsafe_arena_set_allocated_interior_item(
      ::CSOEconItem* interior_item);
  ::CSOEconItem* unsafe_arena_release_interior_item();

  // optional uint64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 inventory = 3;
  bool has_inventory() const;
  private:
  bool _internal_has_inventory() const;
  public:
  void clear_inventory();
  uint32_t inventory() const;
  void set_inventory(uint32_t value);
  private:
  uint32_t _internal_inventory() const;
  void _internal_set_inventory(uint32_t value);
  public:

  // optional uint32 def_index = 4;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  uint32_t def_index() const;
  void set_def_index(uint32_t value);
  private:
  uint32_t _internal_def_index() const;
  void _internal_set_def_index(uint32_t value);
  public:

  // optional uint32 flags = 8 [default = 0];
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // optional uint32 origin = 9 [default = 0];
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  uint32_t origin() const;
  void set_origin(uint32_t value);
  private:
  uint32_t _internal_origin() const;
  void _internal_set_origin(uint32_t value);
  public:

  // optional uint32 style = 15 [default = 0];
  bool has_style() const;
  private:
  bool _internal_has_style() const;
  public:
  void clear_style();
  uint32_t style() const;
  void set_style(uint32_t value);
  private:
  uint32_t _internal_style() const;
  void _internal_set_style(uint32_t value);
  public:

  // optional uint64 original_id = 16;
  bool has_original_id() const;
  private:
  bool _internal_has_original_id() const;
  public:
  void clear_original_id();
  uint64_t original_id() const;
  void set_original_id(uint64_t value);
  private:
  uint64_t _internal_original_id() const;
  void _internal_set_original_id(uint64_t value);
  public:

  // optional uint32 quality = 7 [default = 4];
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  uint32_t quality() const;
  void set_quality(uint32_t value);
  private:
  uint32_t _internal_quality() const;
  void _internal_set_quality(uint32_t value);
  public:

  // optional uint32 quantity = 5 [default = 1];
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  uint32_t quantity() const;
  void set_quantity(uint32_t value);
  private:
  uint32_t _internal_quantity() const;
  void _internal_set_quantity(uint32_t value);
  public:

  // optional uint32 level = 6 [default = 1];
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOEconItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute > attribute_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped > equipped_state_;
    ::CSOEconItem* interior_item_;
    uint64_t id_;
    uint32_t account_id_;
    uint32_t inventory_;
    uint32_t def_index_;
    uint32_t flags_;
    uint32_t origin_;
    uint32_t style_;
    uint64_t original_id_;
    uint32_t quality_;
    uint32_t quantity_;
    uint32_t level_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSortItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSortItems) */ {
 public:
  inline CMsgSortItems() : CMsgSortItems(nullptr) {}
  ~CMsgSortItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgSortItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSortItems(const CMsgSortItems& from);
  CMsgSortItems(CMsgSortItems&& from) noexcept
    : CMsgSortItems() {
    *this = ::std::move(from);
  }

  inline CMsgSortItems& operator=(const CMsgSortItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSortItems& operator=(CMsgSortItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSortItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSortItems* internal_default_instance() {
    return reinterpret_cast<const CMsgSortItems*>(
               &_CMsgSortItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgSortItems& a, CMsgSortItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSortItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSortItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSortItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSortItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSortItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSortItems& from) {
    CMsgSortItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSortItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSortItems";
  }
  protected:
  explicit CMsgSortItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSortTypeFieldNumber = 1,
  };
  // optional uint32 sort_type = 1;
  bool has_sort_type() const;
  private:
  bool _internal_has_sort_type() const;
  public:
  void clear_sort_type();
  uint32_t sort_type() const;
  void set_sort_type(uint32_t value);
  private:
  uint32_t _internal_sort_type() const;
  void _internal_set_sort_type(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSortItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t sort_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgItemAcknowledged final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgItemAcknowledged) */ {
 public:
  inline CMsgItemAcknowledged() : CMsgItemAcknowledged(nullptr) {}
  ~CMsgItemAcknowledged() override;
  explicit PROTOBUF_CONSTEXPR CMsgItemAcknowledged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgItemAcknowledged(const CMsgItemAcknowledged& from);
  CMsgItemAcknowledged(CMsgItemAcknowledged&& from) noexcept
    : CMsgItemAcknowledged() {
    *this = ::std::move(from);
  }

  inline CMsgItemAcknowledged& operator=(const CMsgItemAcknowledged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgItemAcknowledged& operator=(CMsgItemAcknowledged&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgItemAcknowledged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgItemAcknowledged* internal_default_instance() {
    return reinterpret_cast<const CMsgItemAcknowledged*>(
               &_CMsgItemAcknowledged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgItemAcknowledged& a, CMsgItemAcknowledged& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgItemAcknowledged* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgItemAcknowledged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgItemAcknowledged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgItemAcknowledged>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgItemAcknowledged& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgItemAcknowledged& from) {
    CMsgItemAcknowledged::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgItemAcknowledged* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgItemAcknowledged";
  }
  protected:
  explicit CMsgItemAcknowledged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kInventoryFieldNumber = 2,
    kDefIndexFieldNumber = 3,
    kQualityFieldNumber = 4,
    kRarityFieldNumber = 5,
    kOriginFieldNumber = 6,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 inventory = 2;
  bool has_inventory() const;
  private:
  bool _internal_has_inventory() const;
  public:
  void clear_inventory();
  uint32_t inventory() const;
  void set_inventory(uint32_t value);
  private:
  uint32_t _internal_inventory() const;
  void _internal_set_inventory(uint32_t value);
  public:

  // optional uint32 def_index = 3;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  uint32_t def_index() const;
  void set_def_index(uint32_t value);
  private:
  uint32_t _internal_def_index() const;
  void _internal_set_def_index(uint32_t value);
  public:

  // optional uint32 quality = 4;
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  uint32_t quality() const;
  void set_quality(uint32_t value);
  private:
  uint32_t _internal_quality() const;
  void _internal_set_quality(uint32_t value);
  public:

  // optional uint32 rarity = 5;
  bool has_rarity() const;
  private:
  bool _internal_has_rarity() const;
  public:
  void clear_rarity();
  uint32_t rarity() const;
  void set_rarity(uint32_t value);
  private:
  uint32_t _internal_rarity() const;
  void _internal_set_rarity(uint32_t value);
  public:

  // optional uint32 origin = 6;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  uint32_t origin() const;
  void set_origin(uint32_t value);
  private:
  uint32_t _internal_origin() const;
  void _internal_set_origin(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgItemAcknowledged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t inventory_;
    uint32_t def_index_;
    uint32_t quality_;
    uint32_t rarity_;
    uint32_t origin_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSetItemPositions_ItemPosition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetItemPositions.ItemPosition) */ {
 public:
  inline CMsgSetItemPositions_ItemPosition() : CMsgSetItemPositions_ItemPosition(nullptr) {}
  ~CMsgSetItemPositions_ItemPosition() override;
  explicit PROTOBUF_CONSTEXPR CMsgSetItemPositions_ItemPosition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetItemPositions_ItemPosition(const CMsgSetItemPositions_ItemPosition& from);
  CMsgSetItemPositions_ItemPosition(CMsgSetItemPositions_ItemPosition&& from) noexcept
    : CMsgSetItemPositions_ItemPosition() {
    *this = ::std::move(from);
  }

  inline CMsgSetItemPositions_ItemPosition& operator=(const CMsgSetItemPositions_ItemPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetItemPositions_ItemPosition& operator=(CMsgSetItemPositions_ItemPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetItemPositions_ItemPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetItemPositions_ItemPosition* internal_default_instance() {
    return reinterpret_cast<const CMsgSetItemPositions_ItemPosition*>(
               &_CMsgSetItemPositions_ItemPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgSetItemPositions_ItemPosition& a, CMsgSetItemPositions_ItemPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetItemPositions_ItemPosition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetItemPositions_ItemPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSetItemPositions_ItemPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSetItemPositions_ItemPosition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSetItemPositions_ItemPosition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSetItemPositions_ItemPosition& from) {
    CMsgSetItemPositions_ItemPosition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetItemPositions_ItemPosition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetItemPositions.ItemPosition";
  }
  protected:
  explicit CMsgSetItemPositions_ItemPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kPositionFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 position = 2;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  uint32_t position() const;
  void set_position(uint32_t value);
  private:
  uint32_t _internal_position() const;
  void _internal_set_position(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSetItemPositions.ItemPosition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t position_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSetItemPositions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSetItemPositions) */ {
 public:
  inline CMsgSetItemPositions() : CMsgSetItemPositions(nullptr) {}
  ~CMsgSetItemPositions() override;
  explicit PROTOBUF_CONSTEXPR CMsgSetItemPositions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSetItemPositions(const CMsgSetItemPositions& from);
  CMsgSetItemPositions(CMsgSetItemPositions&& from) noexcept
    : CMsgSetItemPositions() {
    *this = ::std::move(from);
  }

  inline CMsgSetItemPositions& operator=(const CMsgSetItemPositions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSetItemPositions& operator=(CMsgSetItemPositions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSetItemPositions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSetItemPositions* internal_default_instance() {
    return reinterpret_cast<const CMsgSetItemPositions*>(
               &_CMsgSetItemPositions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgSetItemPositions& a, CMsgSetItemPositions& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSetItemPositions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSetItemPositions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSetItemPositions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSetItemPositions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSetItemPositions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSetItemPositions& from) {
    CMsgSetItemPositions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetItemPositions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSetItemPositions";
  }
  protected:
  explicit CMsgSetItemPositions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSetItemPositions_ItemPosition ItemPosition;

  // accessors -------------------------------------------------------

  enum : int {
    kItemPositionsFieldNumber = 1,
  };
  // repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
  int item_positions_size() const;
  private:
  int _internal_item_positions_size() const;
  public:
  void clear_item_positions();
  ::CMsgSetItemPositions_ItemPosition* mutable_item_positions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >*
      mutable_item_positions();
  private:
  const ::CMsgSetItemPositions_ItemPosition& _internal_item_positions(int index) const;
  ::CMsgSetItemPositions_ItemPosition* _internal_add_item_positions();
  public:
  const ::CMsgSetItemPositions_ItemPosition& item_positions(int index) const;
  ::CMsgSetItemPositions_ItemPosition* add_item_positions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >&
      item_positions() const;

  // @@protoc_insertion_point(class_scope:CMsgSetItemPositions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition > item_positions_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCStorePurchaseCancel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseCancel) */ {
 public:
  inline CMsgGCStorePurchaseCancel() : CMsgGCStorePurchaseCancel(nullptr) {}
  ~CMsgGCStorePurchaseCancel() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCStorePurchaseCancel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseCancel(const CMsgGCStorePurchaseCancel& from);
  CMsgGCStorePurchaseCancel(CMsgGCStorePurchaseCancel&& from) noexcept
    : CMsgGCStorePurchaseCancel() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseCancel& operator=(const CMsgGCStorePurchaseCancel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseCancel& operator=(CMsgGCStorePurchaseCancel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseCancel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseCancel* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseCancel*>(
               &_CMsgGCStorePurchaseCancel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgGCStorePurchaseCancel& a, CMsgGCStorePurchaseCancel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseCancel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseCancel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCStorePurchaseCancel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseCancel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCStorePurchaseCancel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCStorePurchaseCancel& from) {
    CMsgGCStorePurchaseCancel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseCancel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseCancel";
  }
  protected:
  explicit CMsgGCStorePurchaseCancel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxnIdFieldNumber = 1,
  };
  // optional uint64 txn_id = 1;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  uint64_t txn_id() const;
  void set_txn_id(uint64_t value);
  private:
  uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseCancel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t txn_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCStorePurchaseCancelResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseCancelResponse) */ {
 public:
  inline CMsgGCStorePurchaseCancelResponse() : CMsgGCStorePurchaseCancelResponse(nullptr) {}
  ~CMsgGCStorePurchaseCancelResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCStorePurchaseCancelResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseCancelResponse(const CMsgGCStorePurchaseCancelResponse& from);
  CMsgGCStorePurchaseCancelResponse(CMsgGCStorePurchaseCancelResponse&& from) noexcept
    : CMsgGCStorePurchaseCancelResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseCancelResponse& operator=(const CMsgGCStorePurchaseCancelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseCancelResponse& operator=(CMsgGCStorePurchaseCancelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseCancelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseCancelResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseCancelResponse*>(
               &_CMsgGCStorePurchaseCancelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgGCStorePurchaseCancelResponse& a, CMsgGCStorePurchaseCancelResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseCancelResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseCancelResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCStorePurchaseCancelResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseCancelResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCStorePurchaseCancelResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCStorePurchaseCancelResponse& from) {
    CMsgGCStorePurchaseCancelResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseCancelResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseCancelResponse";
  }
  protected:
  explicit CMsgGCStorePurchaseCancelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  uint32_t result() const;
  void set_result(uint32_t value);
  private:
  uint32_t _internal_result() const;
  void _internal_set_result(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseCancelResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCStorePurchaseFinalize final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseFinalize) */ {
 public:
  inline CMsgGCStorePurchaseFinalize() : CMsgGCStorePurchaseFinalize(nullptr) {}
  ~CMsgGCStorePurchaseFinalize() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCStorePurchaseFinalize(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseFinalize(const CMsgGCStorePurchaseFinalize& from);
  CMsgGCStorePurchaseFinalize(CMsgGCStorePurchaseFinalize&& from) noexcept
    : CMsgGCStorePurchaseFinalize() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseFinalize& operator=(const CMsgGCStorePurchaseFinalize& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseFinalize& operator=(CMsgGCStorePurchaseFinalize&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseFinalize& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseFinalize* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseFinalize*>(
               &_CMsgGCStorePurchaseFinalize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgGCStorePurchaseFinalize& a, CMsgGCStorePurchaseFinalize& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseFinalize* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseFinalize* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCStorePurchaseFinalize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseFinalize>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCStorePurchaseFinalize& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCStorePurchaseFinalize& from) {
    CMsgGCStorePurchaseFinalize::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseFinalize* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseFinalize";
  }
  protected:
  explicit CMsgGCStorePurchaseFinalize(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxnIdFieldNumber = 1,
  };
  // optional uint64 txn_id = 1;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  uint64_t txn_id() const;
  void set_txn_id(uint64_t value);
  private:
  uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseFinalize)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t txn_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCStorePurchaseFinalizeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCStorePurchaseFinalizeResponse) */ {
 public:
  inline CMsgGCStorePurchaseFinalizeResponse() : CMsgGCStorePurchaseFinalizeResponse(nullptr) {}
  ~CMsgGCStorePurchaseFinalizeResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCStorePurchaseFinalizeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCStorePurchaseFinalizeResponse(const CMsgGCStorePurchaseFinalizeResponse& from);
  CMsgGCStorePurchaseFinalizeResponse(CMsgGCStorePurchaseFinalizeResponse&& from) noexcept
    : CMsgGCStorePurchaseFinalizeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCStorePurchaseFinalizeResponse& operator=(const CMsgGCStorePurchaseFinalizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCStorePurchaseFinalizeResponse& operator=(CMsgGCStorePurchaseFinalizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCStorePurchaseFinalizeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCStorePurchaseFinalizeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCStorePurchaseFinalizeResponse*>(
               &_CMsgGCStorePurchaseFinalizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgGCStorePurchaseFinalizeResponse& a, CMsgGCStorePurchaseFinalizeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCStorePurchaseFinalizeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCStorePurchaseFinalizeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCStorePurchaseFinalizeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCStorePurchaseFinalizeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCStorePurchaseFinalizeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCStorePurchaseFinalizeResponse& from) {
    CMsgGCStorePurchaseFinalizeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCStorePurchaseFinalizeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCStorePurchaseFinalizeResponse";
  }
  protected:
  explicit CMsgGCStorePurchaseFinalizeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated uint64 item_ids = 2;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  uint32_t result() const;
  void set_result(uint32_t value);
  private:
  uint32_t _internal_result() const;
  void _internal_set_result(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCStorePurchaseFinalizeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    uint32_t result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCBannedWordListUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCBannedWordListUpdated) */ {
 public:
  inline CMsgGCToGCBannedWordListUpdated() : CMsgGCToGCBannedWordListUpdated(nullptr) {}
  ~CMsgGCToGCBannedWordListUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCBannedWordListUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCBannedWordListUpdated(const CMsgGCToGCBannedWordListUpdated& from);
  CMsgGCToGCBannedWordListUpdated(CMsgGCToGCBannedWordListUpdated&& from) noexcept
    : CMsgGCToGCBannedWordListUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCBannedWordListUpdated& operator=(const CMsgGCToGCBannedWordListUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCBannedWordListUpdated& operator=(CMsgGCToGCBannedWordListUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCBannedWordListUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCBannedWordListUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCBannedWordListUpdated*>(
               &_CMsgGCToGCBannedWordListUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgGCToGCBannedWordListUpdated& a, CMsgGCToGCBannedWordListUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCBannedWordListUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCBannedWordListUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCBannedWordListUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCBannedWordListUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCBannedWordListUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCBannedWordListUpdated& from) {
    CMsgGCToGCBannedWordListUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCBannedWordListUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCBannedWordListUpdated";
  }
  protected:
  explicit CMsgGCToGCBannedWordListUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupIdFieldNumber = 1,
  };
  // optional uint32 group_id = 1;
  bool has_group_id() const;
  private:
  bool _internal_has_group_id() const;
  public:
  void clear_group_id();
  uint32_t group_id() const;
  void set_group_id(uint32_t value);
  private:
  uint32_t _internal_group_id() const;
  void _internal_set_group_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCBannedWordListUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t group_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCDirtySDOCache final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCDirtySDOCache) */ {
 public:
  inline CMsgGCToGCDirtySDOCache() : CMsgGCToGCDirtySDOCache(nullptr) {}
  ~CMsgGCToGCDirtySDOCache() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCDirtySDOCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCDirtySDOCache(const CMsgGCToGCDirtySDOCache& from);
  CMsgGCToGCDirtySDOCache(CMsgGCToGCDirtySDOCache&& from) noexcept
    : CMsgGCToGCDirtySDOCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCDirtySDOCache& operator=(const CMsgGCToGCDirtySDOCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCDirtySDOCache& operator=(CMsgGCToGCDirtySDOCache&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCDirtySDOCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCDirtySDOCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCDirtySDOCache*>(
               &_CMsgGCToGCDirtySDOCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgGCToGCDirtySDOCache& a, CMsgGCToGCDirtySDOCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCDirtySDOCache* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCDirtySDOCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCDirtySDOCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCDirtySDOCache>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCDirtySDOCache& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCDirtySDOCache& from) {
    CMsgGCToGCDirtySDOCache::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCDirtySDOCache* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCDirtySDOCache";
  }
  protected:
  explicit CMsgGCToGCDirtySDOCache(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyUint64FieldNumber = 2,
    kSdoTypeFieldNumber = 1,
  };
  // optional uint64 key_uint64 = 2;
  bool has_key_uint64() const;
  private:
  bool _internal_has_key_uint64() const;
  public:
  void clear_key_uint64();
  uint64_t key_uint64() const;
  void set_key_uint64(uint64_t value);
  private:
  uint64_t _internal_key_uint64() const;
  void _internal_set_key_uint64(uint64_t value);
  public:

  // optional uint32 sdo_type = 1;
  bool has_sdo_type() const;
  private:
  bool _internal_has_sdo_type() const;
  public:
  void clear_sdo_type();
  uint32_t sdo_type() const;
  void set_sdo_type(uint32_t value);
  private:
  uint32_t _internal_sdo_type() const;
  void _internal_set_sdo_type(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCDirtySDOCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t key_uint64_;
    uint32_t sdo_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSDONoMemcached final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgSDONoMemcached) */ {
 public:
  inline CMsgSDONoMemcached() : CMsgSDONoMemcached(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgSDONoMemcached(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSDONoMemcached(const CMsgSDONoMemcached& from);
  CMsgSDONoMemcached(CMsgSDONoMemcached&& from) noexcept
    : CMsgSDONoMemcached() {
    *this = ::std::move(from);
  }

  inline CMsgSDONoMemcached& operator=(const CMsgSDONoMemcached& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSDONoMemcached& operator=(CMsgSDONoMemcached&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSDONoMemcached& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSDONoMemcached* internal_default_instance() {
    return reinterpret_cast<const CMsgSDONoMemcached*>(
               &_CMsgSDONoMemcached_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgSDONoMemcached& a, CMsgSDONoMemcached& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSDONoMemcached* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSDONoMemcached* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSDONoMemcached* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSDONoMemcached>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgSDONoMemcached& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgSDONoMemcached& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSDONoMemcached";
  }
  protected:
  explicit CMsgSDONoMemcached(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgSDONoMemcached)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCUpdateSQLKeyValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCUpdateSQLKeyValue) */ {
 public:
  inline CMsgGCToGCUpdateSQLKeyValue() : CMsgGCToGCUpdateSQLKeyValue(nullptr) {}
  ~CMsgGCToGCUpdateSQLKeyValue() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCUpdateSQLKeyValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCUpdateSQLKeyValue(const CMsgGCToGCUpdateSQLKeyValue& from);
  CMsgGCToGCUpdateSQLKeyValue(CMsgGCToGCUpdateSQLKeyValue&& from) noexcept
    : CMsgGCToGCUpdateSQLKeyValue() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCUpdateSQLKeyValue& operator=(const CMsgGCToGCUpdateSQLKeyValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCUpdateSQLKeyValue& operator=(CMsgGCToGCUpdateSQLKeyValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCUpdateSQLKeyValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCUpdateSQLKeyValue* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCUpdateSQLKeyValue*>(
               &_CMsgGCToGCUpdateSQLKeyValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgGCToGCUpdateSQLKeyValue& a, CMsgGCToGCUpdateSQLKeyValue& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCUpdateSQLKeyValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCUpdateSQLKeyValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCUpdateSQLKeyValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCUpdateSQLKeyValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCUpdateSQLKeyValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCUpdateSQLKeyValue& from) {
    CMsgGCToGCUpdateSQLKeyValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCUpdateSQLKeyValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCUpdateSQLKeyValue";
  }
  protected:
  explicit CMsgGCToGCUpdateSQLKeyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyNameFieldNumber = 1,
  };
  // optional string key_name = 1;
  bool has_key_name() const;
  private:
  bool _internal_has_key_name() const;
  public:
  void clear_key_name();
  const std::string& key_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* key_name);
  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(const std::string& value);
  std::string* _internal_mutable_key_name();
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCUpdateSQLKeyValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_name_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCServerVersionUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCServerVersionUpdated) */ {
 public:
  inline CMsgGCServerVersionUpdated() : CMsgGCServerVersionUpdated(nullptr) {}
  ~CMsgGCServerVersionUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCServerVersionUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCServerVersionUpdated(const CMsgGCServerVersionUpdated& from);
  CMsgGCServerVersionUpdated(CMsgGCServerVersionUpdated&& from) noexcept
    : CMsgGCServerVersionUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCServerVersionUpdated& operator=(const CMsgGCServerVersionUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCServerVersionUpdated& operator=(CMsgGCServerVersionUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCServerVersionUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCServerVersionUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCServerVersionUpdated*>(
               &_CMsgGCServerVersionUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgGCServerVersionUpdated& a, CMsgGCServerVersionUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCServerVersionUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCServerVersionUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCServerVersionUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCServerVersionUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCServerVersionUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCServerVersionUpdated& from) {
    CMsgGCServerVersionUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCServerVersionUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCServerVersionUpdated";
  }
  protected:
  explicit CMsgGCServerVersionUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerVersionFieldNumber = 1,
  };
  // optional uint32 server_version = 1;
  bool has_server_version() const;
  private:
  bool _internal_has_server_version() const;
  public:
  void clear_server_version();
  uint32_t server_version() const;
  void set_server_version(uint32_t value);
  private:
  uint32_t _internal_server_version() const;
  void _internal_set_server_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCServerVersionUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t server_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCClientVersionUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientVersionUpdated) */ {
 public:
  inline CMsgGCClientVersionUpdated() : CMsgGCClientVersionUpdated(nullptr) {}
  ~CMsgGCClientVersionUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCClientVersionUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClientVersionUpdated(const CMsgGCClientVersionUpdated& from);
  CMsgGCClientVersionUpdated(CMsgGCClientVersionUpdated&& from) noexcept
    : CMsgGCClientVersionUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientVersionUpdated& operator=(const CMsgGCClientVersionUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClientVersionUpdated& operator=(CMsgGCClientVersionUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCClientVersionUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClientVersionUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientVersionUpdated*>(
               &_CMsgGCClientVersionUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgGCClientVersionUpdated& a, CMsgGCClientVersionUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClientVersionUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClientVersionUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCClientVersionUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCClientVersionUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCClientVersionUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCClientVersionUpdated& from) {
    CMsgGCClientVersionUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClientVersionUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClientVersionUpdated";
  }
  protected:
  explicit CMsgGCClientVersionUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientVersionFieldNumber = 1,
  };
  // optional uint32 client_version = 1;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCClientVersionUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t client_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCWebAPIAccountChanged final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgGCToGCWebAPIAccountChanged) */ {
 public:
  inline CMsgGCToGCWebAPIAccountChanged() : CMsgGCToGCWebAPIAccountChanged(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCWebAPIAccountChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCWebAPIAccountChanged(const CMsgGCToGCWebAPIAccountChanged& from);
  CMsgGCToGCWebAPIAccountChanged(CMsgGCToGCWebAPIAccountChanged&& from) noexcept
    : CMsgGCToGCWebAPIAccountChanged() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCWebAPIAccountChanged& operator=(const CMsgGCToGCWebAPIAccountChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCWebAPIAccountChanged& operator=(CMsgGCToGCWebAPIAccountChanged&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCWebAPIAccountChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCWebAPIAccountChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCWebAPIAccountChanged*>(
               &_CMsgGCToGCWebAPIAccountChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgGCToGCWebAPIAccountChanged& a, CMsgGCToGCWebAPIAccountChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCWebAPIAccountChanged* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCWebAPIAccountChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCWebAPIAccountChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCWebAPIAccountChanged>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgGCToGCWebAPIAccountChanged& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgGCToGCWebAPIAccountChanged& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCWebAPIAccountChanged";
  }
  protected:
  explicit CMsgGCToGCWebAPIAccountChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCWebAPIAccountChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgExtractGems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgExtractGems) */ {
 public:
  inline CMsgExtractGems() : CMsgExtractGems(nullptr) {}
  ~CMsgExtractGems() override;
  explicit PROTOBUF_CONSTEXPR CMsgExtractGems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgExtractGems(const CMsgExtractGems& from);
  CMsgExtractGems(CMsgExtractGems&& from) noexcept
    : CMsgExtractGems() {
    *this = ::std::move(from);
  }

  inline CMsgExtractGems& operator=(const CMsgExtractGems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgExtractGems& operator=(CMsgExtractGems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgExtractGems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgExtractGems* internal_default_instance() {
    return reinterpret_cast<const CMsgExtractGems*>(
               &_CMsgExtractGems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgExtractGems& a, CMsgExtractGems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgExtractGems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgExtractGems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgExtractGems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgExtractGems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgExtractGems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgExtractGems& from) {
    CMsgExtractGems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgExtractGems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgExtractGems";
  }
  protected:
  explicit CMsgExtractGems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
    kItemSocketIdFieldNumber = 3,
  };
  // optional uint64 tool_item_id = 1;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  uint64_t tool_item_id() const;
  void set_tool_item_id(uint64_t value);
  private:
  uint64_t _internal_tool_item_id() const;
  void _internal_set_tool_item_id(uint64_t value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // optional uint32 item_socket_id = 3 [default = 65535];
  bool has_item_socket_id() const;
  private:
  bool _internal_has_item_socket_id() const;
  public:
  void clear_item_socket_id();
  uint32_t item_socket_id() const;
  void set_item_socket_id(uint32_t value);
  private:
  uint32_t _internal_item_socket_id() const;
  void _internal_set_item_socket_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgExtractGems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t tool_item_id_;
    uint64_t item_item_id_;
    uint32_t item_socket_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgExtractGemsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgExtractGemsResponse) */ {
 public:
  inline CMsgExtractGemsResponse() : CMsgExtractGemsResponse(nullptr) {}
  ~CMsgExtractGemsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgExtractGemsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgExtractGemsResponse(const CMsgExtractGemsResponse& from);
  CMsgExtractGemsResponse(CMsgExtractGemsResponse&& from) noexcept
    : CMsgExtractGemsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgExtractGemsResponse& operator=(const CMsgExtractGemsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgExtractGemsResponse& operator=(CMsgExtractGemsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgExtractGemsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgExtractGemsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgExtractGemsResponse*>(
               &_CMsgExtractGemsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgExtractGemsResponse& a, CMsgExtractGemsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgExtractGemsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgExtractGemsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgExtractGemsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgExtractGemsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgExtractGemsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgExtractGemsResponse& from) {
    CMsgExtractGemsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgExtractGemsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgExtractGemsResponse";
  }
  protected:
  explicit CMsgExtractGemsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgExtractGemsResponse_EExtractGems EExtractGems;
  static constexpr EExtractGems k_ExtractGems_Succeeded =
    CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Succeeded;
  static constexpr EExtractGems k_ExtractGems_Failed_ToolIsInvalid =
    CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_ToolIsInvalid;
  static constexpr EExtractGems k_ExtractGems_Failed_ItemIsInvalid =
    CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_ItemIsInvalid;
  static constexpr EExtractGems k_ExtractGems_Failed_ToolCannotRemoveGem =
    CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_ToolCannotRemoveGem;
  static constexpr EExtractGems k_ExtractGems_Failed_FailedToRemoveGem =
    CMsgExtractGemsResponse_EExtractGems_k_ExtractGems_Failed_FailedToRemoveGem;
  static inline bool EExtractGems_IsValid(int value) {
    return CMsgExtractGemsResponse_EExtractGems_IsValid(value);
  }
  static constexpr EExtractGems EExtractGems_MIN =
    CMsgExtractGemsResponse_EExtractGems_EExtractGems_MIN;
  static constexpr EExtractGems EExtractGems_MAX =
    CMsgExtractGemsResponse_EExtractGems_EExtractGems_MAX;
  static constexpr int EExtractGems_ARRAYSIZE =
    CMsgExtractGemsResponse_EExtractGems_EExtractGems_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EExtractGems_descriptor() {
    return CMsgExtractGemsResponse_EExtractGems_descriptor();
  }
  template<typename T>
  static inline const std::string& EExtractGems_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EExtractGems>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EExtractGems_Name.");
    return CMsgExtractGemsResponse_EExtractGems_Name(enum_t_value);
  }
  static inline bool EExtractGems_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EExtractGems* value) {
    return CMsgExtractGemsResponse_EExtractGems_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kResponseFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional .CMsgExtractGemsResponse.EExtractGems response = 2 [default = k_ExtractGems_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgExtractGemsResponse_EExtractGems response() const;
  void set_response(::CMsgExtractGemsResponse_EExtractGems value);
  private:
  ::CMsgExtractGemsResponse_EExtractGems _internal_response() const;
  void _internal_set_response(::CMsgExtractGemsResponse_EExtractGems value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgExtractGemsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAddSocket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAddSocket) */ {
 public:
  inline CMsgAddSocket() : CMsgAddSocket(nullptr) {}
  ~CMsgAddSocket() override;
  explicit PROTOBUF_CONSTEXPR CMsgAddSocket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAddSocket(const CMsgAddSocket& from);
  CMsgAddSocket(CMsgAddSocket&& from) noexcept
    : CMsgAddSocket() {
    *this = ::std::move(from);
  }

  inline CMsgAddSocket& operator=(const CMsgAddSocket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAddSocket& operator=(CMsgAddSocket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAddSocket& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAddSocket* internal_default_instance() {
    return reinterpret_cast<const CMsgAddSocket*>(
               &_CMsgAddSocket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgAddSocket& a, CMsgAddSocket& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAddSocket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAddSocket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAddSocket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAddSocket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAddSocket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAddSocket& from) {
    CMsgAddSocket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAddSocket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAddSocket";
  }
  protected:
  explicit CMsgAddSocket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
    kUnusualFieldNumber = 3,
  };
  // optional uint64 tool_item_id = 1;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  uint64_t tool_item_id() const;
  void set_tool_item_id(uint64_t value);
  private:
  uint64_t _internal_tool_item_id() const;
  void _internal_set_tool_item_id(uint64_t value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // optional bool unusual = 3;
  bool has_unusual() const;
  private:
  bool _internal_has_unusual() const;
  public:
  void clear_unusual();
  bool unusual() const;
  void set_unusual(bool value);
  private:
  bool _internal_unusual() const;
  void _internal_set_unusual(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAddSocket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t tool_item_id_;
    uint64_t item_item_id_;
    bool unusual_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAddSocketResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAddSocketResponse) */ {
 public:
  inline CMsgAddSocketResponse() : CMsgAddSocketResponse(nullptr) {}
  ~CMsgAddSocketResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgAddSocketResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAddSocketResponse(const CMsgAddSocketResponse& from);
  CMsgAddSocketResponse(CMsgAddSocketResponse&& from) noexcept
    : CMsgAddSocketResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAddSocketResponse& operator=(const CMsgAddSocketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAddSocketResponse& operator=(CMsgAddSocketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAddSocketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAddSocketResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAddSocketResponse*>(
               &_CMsgAddSocketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgAddSocketResponse& a, CMsgAddSocketResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAddSocketResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAddSocketResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAddSocketResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAddSocketResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAddSocketResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAddSocketResponse& from) {
    CMsgAddSocketResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAddSocketResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAddSocketResponse";
  }
  protected:
  explicit CMsgAddSocketResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgAddSocketResponse_EAddSocket EAddSocket;
  static constexpr EAddSocket k_AddSocket_Succeeded =
    CMsgAddSocketResponse_EAddSocket_k_AddSocket_Succeeded;
  static constexpr EAddSocket k_AddSocket_Failed_ToolIsInvalid =
    CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_ToolIsInvalid;
  static constexpr EAddSocket k_AddSocket_Failed_ItemCannotBeSocketed =
    CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_ItemCannotBeSocketed;
  static constexpr EAddSocket k_AddSocket_Failed_FailedToAddSocket =
    CMsgAddSocketResponse_EAddSocket_k_AddSocket_Failed_FailedToAddSocket;
  static inline bool EAddSocket_IsValid(int value) {
    return CMsgAddSocketResponse_EAddSocket_IsValid(value);
  }
  static constexpr EAddSocket EAddSocket_MIN =
    CMsgAddSocketResponse_EAddSocket_EAddSocket_MIN;
  static constexpr EAddSocket EAddSocket_MAX =
    CMsgAddSocketResponse_EAddSocket_EAddSocket_MAX;
  static constexpr int EAddSocket_ARRAYSIZE =
    CMsgAddSocketResponse_EAddSocket_EAddSocket_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EAddSocket_descriptor() {
    return CMsgAddSocketResponse_EAddSocket_descriptor();
  }
  template<typename T>
  static inline const std::string& EAddSocket_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EAddSocket>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EAddSocket_Name.");
    return CMsgAddSocketResponse_EAddSocket_Name(enum_t_value);
  }
  static inline bool EAddSocket_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EAddSocket* value) {
    return CMsgAddSocketResponse_EAddSocket_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUpdatedSocketIndexFieldNumber = 2,
    kItemIdFieldNumber = 1,
    kResponseFieldNumber = 3,
  };
  // repeated uint32 updated_socket_index = 2;
  int updated_socket_index_size() const;
  private:
  int _internal_updated_socket_index_size() const;
  public:
  void clear_updated_socket_index();
  private:
  uint32_t _internal_updated_socket_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_updated_socket_index() const;
  void _internal_add_updated_socket_index(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_updated_socket_index();
  public:
  uint32_t updated_socket_index(int index) const;
  void set_updated_socket_index(int index, uint32_t value);
  void add_updated_socket_index(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      updated_socket_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_updated_socket_index();

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional .CMsgAddSocketResponse.EAddSocket response = 3 [default = k_AddSocket_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgAddSocketResponse_EAddSocket response() const;
  void set_response(::CMsgAddSocketResponse_EAddSocket value);
  private:
  ::CMsgAddSocketResponse_EAddSocket _internal_response() const;
  void _internal_set_response(::CMsgAddSocketResponse_EAddSocket value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAddSocketResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > updated_socket_index_;
    uint64_t item_id_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAddItemToSocketData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAddItemToSocketData) */ {
 public:
  inline CMsgAddItemToSocketData() : CMsgAddItemToSocketData(nullptr) {}
  ~CMsgAddItemToSocketData() override;
  explicit PROTOBUF_CONSTEXPR CMsgAddItemToSocketData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAddItemToSocketData(const CMsgAddItemToSocketData& from);
  CMsgAddItemToSocketData(CMsgAddItemToSocketData&& from) noexcept
    : CMsgAddItemToSocketData() {
    *this = ::std::move(from);
  }

  inline CMsgAddItemToSocketData& operator=(const CMsgAddItemToSocketData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAddItemToSocketData& operator=(CMsgAddItemToSocketData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAddItemToSocketData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAddItemToSocketData* internal_default_instance() {
    return reinterpret_cast<const CMsgAddItemToSocketData*>(
               &_CMsgAddItemToSocketData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgAddItemToSocketData& a, CMsgAddItemToSocketData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAddItemToSocketData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAddItemToSocketData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAddItemToSocketData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAddItemToSocketData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAddItemToSocketData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAddItemToSocketData& from) {
    CMsgAddItemToSocketData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAddItemToSocketData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAddItemToSocketData";
  }
  protected:
  explicit CMsgAddItemToSocketData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGemItemIdFieldNumber = 1,
    kSocketIndexFieldNumber = 2,
  };
  // optional uint64 gem_item_id = 1;
  bool has_gem_item_id() const;
  private:
  bool _internal_has_gem_item_id() const;
  public:
  void clear_gem_item_id();
  uint64_t gem_item_id() const;
  void set_gem_item_id(uint64_t value);
  private:
  uint64_t _internal_gem_item_id() const;
  void _internal_set_gem_item_id(uint64_t value);
  public:

  // optional uint32 socket_index = 2 [default = 65535];
  bool has_socket_index() const;
  private:
  bool _internal_has_socket_index() const;
  public:
  void clear_socket_index();
  uint32_t socket_index() const;
  void set_socket_index(uint32_t value);
  private:
  uint32_t _internal_socket_index() const;
  void _internal_set_socket_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAddItemToSocketData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t gem_item_id_;
    uint32_t socket_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAddItemToSocket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAddItemToSocket) */ {
 public:
  inline CMsgAddItemToSocket() : CMsgAddItemToSocket(nullptr) {}
  ~CMsgAddItemToSocket() override;
  explicit PROTOBUF_CONSTEXPR CMsgAddItemToSocket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAddItemToSocket(const CMsgAddItemToSocket& from);
  CMsgAddItemToSocket(CMsgAddItemToSocket&& from) noexcept
    : CMsgAddItemToSocket() {
    *this = ::std::move(from);
  }

  inline CMsgAddItemToSocket& operator=(const CMsgAddItemToSocket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAddItemToSocket& operator=(CMsgAddItemToSocket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAddItemToSocket& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAddItemToSocket* internal_default_instance() {
    return reinterpret_cast<const CMsgAddItemToSocket*>(
               &_CMsgAddItemToSocket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgAddItemToSocket& a, CMsgAddItemToSocket& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAddItemToSocket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAddItemToSocket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAddItemToSocket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAddItemToSocket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAddItemToSocket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAddItemToSocket& from) {
    CMsgAddItemToSocket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAddItemToSocket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAddItemToSocket";
  }
  protected:
  explicit CMsgAddItemToSocket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGemsToSocketFieldNumber = 2,
    kItemItemIdFieldNumber = 1,
  };
  // repeated .CMsgAddItemToSocketData gems_to_socket = 2;
  int gems_to_socket_size() const;
  private:
  int _internal_gems_to_socket_size() const;
  public:
  void clear_gems_to_socket();
  ::CMsgAddItemToSocketData* mutable_gems_to_socket(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAddItemToSocketData >*
      mutable_gems_to_socket();
  private:
  const ::CMsgAddItemToSocketData& _internal_gems_to_socket(int index) const;
  ::CMsgAddItemToSocketData* _internal_add_gems_to_socket();
  public:
  const ::CMsgAddItemToSocketData& gems_to_socket(int index) const;
  ::CMsgAddItemToSocketData* add_gems_to_socket();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAddItemToSocketData >&
      gems_to_socket() const;

  // optional uint64 item_item_id = 1;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAddItemToSocket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAddItemToSocketData > gems_to_socket_;
    uint64_t item_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAddItemToSocketResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAddItemToSocketResponse) */ {
 public:
  inline CMsgAddItemToSocketResponse() : CMsgAddItemToSocketResponse(nullptr) {}
  ~CMsgAddItemToSocketResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgAddItemToSocketResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAddItemToSocketResponse(const CMsgAddItemToSocketResponse& from);
  CMsgAddItemToSocketResponse(CMsgAddItemToSocketResponse&& from) noexcept
    : CMsgAddItemToSocketResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAddItemToSocketResponse& operator=(const CMsgAddItemToSocketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAddItemToSocketResponse& operator=(CMsgAddItemToSocketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAddItemToSocketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAddItemToSocketResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAddItemToSocketResponse*>(
               &_CMsgAddItemToSocketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgAddItemToSocketResponse& a, CMsgAddItemToSocketResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAddItemToSocketResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAddItemToSocketResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAddItemToSocketResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAddItemToSocketResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAddItemToSocketResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAddItemToSocketResponse& from) {
    CMsgAddItemToSocketResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAddItemToSocketResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAddItemToSocketResponse";
  }
  protected:
  explicit CMsgAddItemToSocketResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgAddItemToSocketResponse_EAddGem EAddGem;
  static constexpr EAddGem k_AddGem_Succeeded =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Succeeded;
  static constexpr EAddGem k_AddGem_Failed_GemIsInvalid =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_GemIsInvalid;
  static constexpr EAddGem k_AddGem_Failed_ItemIsInvalid =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_ItemIsInvalid;
  static constexpr EAddGem k_AddGem_Failed_FailedToAddGem =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_FailedToAddGem;
  static constexpr EAddGem k_AddGem_Failed_InvalidGemTypeForSocket =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_InvalidGemTypeForSocket;
  static constexpr EAddGem k_AddGem_Failed_InvalidGemTypeForHero =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_InvalidGemTypeForHero;
  static constexpr EAddGem k_AddGem_Failed_InvalidGemTypeForSlot =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_InvalidGemTypeForSlot;
  static constexpr EAddGem k_AddGem_Failed_SocketContainsUnremovableGem =
    CMsgAddItemToSocketResponse_EAddGem_k_AddGem_Failed_SocketContainsUnremovableGem;
  static inline bool EAddGem_IsValid(int value) {
    return CMsgAddItemToSocketResponse_EAddGem_IsValid(value);
  }
  static constexpr EAddGem EAddGem_MIN =
    CMsgAddItemToSocketResponse_EAddGem_EAddGem_MIN;
  static constexpr EAddGem EAddGem_MAX =
    CMsgAddItemToSocketResponse_EAddGem_EAddGem_MAX;
  static constexpr int EAddGem_ARRAYSIZE =
    CMsgAddItemToSocketResponse_EAddGem_EAddGem_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EAddGem_descriptor() {
    return CMsgAddItemToSocketResponse_EAddGem_descriptor();
  }
  template<typename T>
  static inline const std::string& EAddGem_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EAddGem>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EAddGem_Name.");
    return CMsgAddItemToSocketResponse_EAddGem_Name(enum_t_value);
  }
  static inline bool EAddGem_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EAddGem* value) {
    return CMsgAddItemToSocketResponse_EAddGem_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUpdatedSocketIndexFieldNumber = 2,
    kItemItemIdFieldNumber = 1,
    kResponseFieldNumber = 3,
  };
  // repeated uint32 updated_socket_index = 2;
  int updated_socket_index_size() const;
  private:
  int _internal_updated_socket_index_size() const;
  public:
  void clear_updated_socket_index();
  private:
  uint32_t _internal_updated_socket_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_updated_socket_index() const;
  void _internal_add_updated_socket_index(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_updated_socket_index();
  public:
  uint32_t updated_socket_index(int index) const;
  void set_updated_socket_index(int index, uint32_t value);
  void add_updated_socket_index(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      updated_socket_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_updated_socket_index();

  // optional uint64 item_item_id = 1;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // optional .CMsgAddItemToSocketResponse.EAddGem response = 3 [default = k_AddGem_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgAddItemToSocketResponse_EAddGem response() const;
  void set_response(::CMsgAddItemToSocketResponse_EAddGem value);
  private:
  ::CMsgAddItemToSocketResponse_EAddGem _internal_response() const;
  void _internal_set_response(::CMsgAddItemToSocketResponse_EAddGem value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAddItemToSocketResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > updated_socket_index_;
    uint64_t item_item_id_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgResetStrangeGemCount final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgResetStrangeGemCount) */ {
 public:
  inline CMsgResetStrangeGemCount() : CMsgResetStrangeGemCount(nullptr) {}
  ~CMsgResetStrangeGemCount() override;
  explicit PROTOBUF_CONSTEXPR CMsgResetStrangeGemCount(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgResetStrangeGemCount(const CMsgResetStrangeGemCount& from);
  CMsgResetStrangeGemCount(CMsgResetStrangeGemCount&& from) noexcept
    : CMsgResetStrangeGemCount() {
    *this = ::std::move(from);
  }

  inline CMsgResetStrangeGemCount& operator=(const CMsgResetStrangeGemCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgResetStrangeGemCount& operator=(CMsgResetStrangeGemCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgResetStrangeGemCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgResetStrangeGemCount* internal_default_instance() {
    return reinterpret_cast<const CMsgResetStrangeGemCount*>(
               &_CMsgResetStrangeGemCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgResetStrangeGemCount& a, CMsgResetStrangeGemCount& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgResetStrangeGemCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgResetStrangeGemCount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgResetStrangeGemCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgResetStrangeGemCount>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgResetStrangeGemCount& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgResetStrangeGemCount& from) {
    CMsgResetStrangeGemCount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgResetStrangeGemCount* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgResetStrangeGemCount";
  }
  protected:
  explicit CMsgResetStrangeGemCount(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemItemIdFieldNumber = 1,
    kSocketIndexFieldNumber = 2,
  };
  // optional uint64 item_item_id = 1;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // optional uint32 socket_index = 2 [default = 65535];
  bool has_socket_index() const;
  private:
  bool _internal_has_socket_index() const;
  public:
  void clear_socket_index();
  uint32_t socket_index() const;
  void set_socket_index(uint32_t value);
  private:
  uint32_t _internal_socket_index() const;
  void _internal_set_socket_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgResetStrangeGemCount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_item_id_;
    uint32_t socket_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgResetStrangeGemCountResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgResetStrangeGemCountResponse) */ {
 public:
  inline CMsgResetStrangeGemCountResponse() : CMsgResetStrangeGemCountResponse(nullptr) {}
  ~CMsgResetStrangeGemCountResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgResetStrangeGemCountResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgResetStrangeGemCountResponse(const CMsgResetStrangeGemCountResponse& from);
  CMsgResetStrangeGemCountResponse(CMsgResetStrangeGemCountResponse&& from) noexcept
    : CMsgResetStrangeGemCountResponse() {
    *this = ::std::move(from);
  }

  inline CMsgResetStrangeGemCountResponse& operator=(const CMsgResetStrangeGemCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgResetStrangeGemCountResponse& operator=(CMsgResetStrangeGemCountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgResetStrangeGemCountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgResetStrangeGemCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgResetStrangeGemCountResponse*>(
               &_CMsgResetStrangeGemCountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgResetStrangeGemCountResponse& a, CMsgResetStrangeGemCountResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgResetStrangeGemCountResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgResetStrangeGemCountResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgResetStrangeGemCountResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgResetStrangeGemCountResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgResetStrangeGemCountResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgResetStrangeGemCountResponse& from) {
    CMsgResetStrangeGemCountResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgResetStrangeGemCountResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgResetStrangeGemCountResponse";
  }
  protected:
  explicit CMsgResetStrangeGemCountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgResetStrangeGemCountResponse_EResetGem EResetGem;
  static constexpr EResetGem k_ResetGem_Succeeded =
    CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Succeeded;
  static constexpr EResetGem k_ResetGem_Failed_FailedToResetGem =
    CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_FailedToResetGem;
  static constexpr EResetGem k_ResetGem_Failed_ItemIsInvalid =
    CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_ItemIsInvalid;
  static constexpr EResetGem k_ResetGem_Failed_InvalidSocketId =
    CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_InvalidSocketId;
  static constexpr EResetGem k_ResetGem_Failed_SocketCannotBeReset =
    CMsgResetStrangeGemCountResponse_EResetGem_k_ResetGem_Failed_SocketCannotBeReset;
  static inline bool EResetGem_IsValid(int value) {
    return CMsgResetStrangeGemCountResponse_EResetGem_IsValid(value);
  }
  static constexpr EResetGem EResetGem_MIN =
    CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_MIN;
  static constexpr EResetGem EResetGem_MAX =
    CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_MAX;
  static constexpr int EResetGem_ARRAYSIZE =
    CMsgResetStrangeGemCountResponse_EResetGem_EResetGem_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResetGem_descriptor() {
    return CMsgResetStrangeGemCountResponse_EResetGem_descriptor();
  }
  template<typename T>
  static inline const std::string& EResetGem_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResetGem>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResetGem_Name.");
    return CMsgResetStrangeGemCountResponse_EResetGem_Name(enum_t_value);
  }
  static inline bool EResetGem_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResetGem* value) {
    return CMsgResetStrangeGemCountResponse_EResetGem_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // optional .CMsgResetStrangeGemCountResponse.EResetGem response = 1 [default = k_ResetGem_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgResetStrangeGemCountResponse_EResetGem response() const;
  void set_response(::CMsgResetStrangeGemCountResponse_EResetGem value);
  private:
  ::CMsgResetStrangeGemCountResponse_EResetGem _internal_response() const;
  void _internal_set_response(::CMsgResetStrangeGemCountResponse_EResetGem value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgResetStrangeGemCountResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPollFileRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientPollFileRequest) */ {
 public:
  inline CMsgGCToClientPollFileRequest() : CMsgGCToClientPollFileRequest(nullptr) {}
  ~CMsgGCToClientPollFileRequest() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientPollFileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientPollFileRequest(const CMsgGCToClientPollFileRequest& from);
  CMsgGCToClientPollFileRequest(CMsgGCToClientPollFileRequest&& from) noexcept
    : CMsgGCToClientPollFileRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPollFileRequest& operator=(const CMsgGCToClientPollFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientPollFileRequest& operator=(CMsgGCToClientPollFileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientPollFileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientPollFileRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPollFileRequest*>(
               &_CMsgGCToClientPollFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgGCToClientPollFileRequest& a, CMsgGCToClientPollFileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientPollFileRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientPollFileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientPollFileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientPollFileRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientPollFileRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientPollFileRequest& from) {
    CMsgGCToClientPollFileRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPollFileRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientPollFileRequest";
  }
  protected:
  explicit CMsgGCToClientPollFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileNameFieldNumber = 1,
    kClientVersionFieldNumber = 2,
    kPollIdFieldNumber = 3,
  };
  // optional string file_name = 1;
  bool has_file_name() const;
  private:
  bool _internal_has_file_name() const;
  public:
  void clear_file_name();
  const std::string& file_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_name();
  PROTOBUF_NODISCARD std::string* release_file_name();
  void set_allocated_file_name(std::string* file_name);
  private:
  const std::string& _internal_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const std::string& value);
  std::string* _internal_mutable_file_name();
  public:

  // optional uint32 client_version = 2;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional uint32 poll_id = 3;
  bool has_poll_id() const;
  private:
  bool _internal_has_poll_id() const;
  public:
  void clear_poll_id();
  uint32_t poll_id() const;
  void set_poll_id(uint32_t value);
  private:
  uint32_t _internal_poll_id() const;
  void _internal_set_poll_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPollFileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_name_;
    uint32_t client_version_;
    uint32_t poll_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPollFileResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientPollFileResponse) */ {
 public:
  inline CMsgGCToClientPollFileResponse() : CMsgGCToClientPollFileResponse(nullptr) {}
  ~CMsgGCToClientPollFileResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientPollFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientPollFileResponse(const CMsgGCToClientPollFileResponse& from);
  CMsgGCToClientPollFileResponse(CMsgGCToClientPollFileResponse&& from) noexcept
    : CMsgGCToClientPollFileResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPollFileResponse& operator=(const CMsgGCToClientPollFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientPollFileResponse& operator=(CMsgGCToClientPollFileResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientPollFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientPollFileResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPollFileResponse*>(
               &_CMsgGCToClientPollFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgGCToClientPollFileResponse& a, CMsgGCToClientPollFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientPollFileResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientPollFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientPollFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientPollFileResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientPollFileResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientPollFileResponse& from) {
    CMsgGCToClientPollFileResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPollFileResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientPollFileResponse";
  }
  protected:
  explicit CMsgGCToClientPollFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPollIdFieldNumber = 1,
    kFileSizeFieldNumber = 2,
    kFileCrcFieldNumber = 3,
  };
  // optional uint32 poll_id = 1;
  bool has_poll_id() const;
  private:
  bool _internal_has_poll_id() const;
  public:
  void clear_poll_id();
  uint32_t poll_id() const;
  void set_poll_id(uint32_t value);
  private:
  uint32_t _internal_poll_id() const;
  void _internal_set_poll_id(uint32_t value);
  public:

  // optional uint32 file_size = 2;
  bool has_file_size() const;
  private:
  bool _internal_has_file_size() const;
  public:
  void clear_file_size();
  uint32_t file_size() const;
  void set_file_size(uint32_t value);
  private:
  uint32_t _internal_file_size() const;
  void _internal_set_file_size(uint32_t value);
  public:

  // optional uint32 file_crc = 3;
  bool has_file_crc() const;
  private:
  bool _internal_has_file_crc() const;
  public:
  void clear_file_crc();
  uint32_t file_crc() const;
  void set_file_crc(uint32_t value);
  private:
  uint32_t _internal_file_crc() const;
  void _internal_set_file_crc(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPollFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t poll_id_;
    uint32_t file_size_;
    uint32_t file_crc_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCPerformManualOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCPerformManualOp) */ {
 public:
  inline CMsgGCToGCPerformManualOp() : CMsgGCToGCPerformManualOp(nullptr) {}
  ~CMsgGCToGCPerformManualOp() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCPerformManualOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCPerformManualOp(const CMsgGCToGCPerformManualOp& from);
  CMsgGCToGCPerformManualOp(CMsgGCToGCPerformManualOp&& from) noexcept
    : CMsgGCToGCPerformManualOp() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCPerformManualOp& operator=(const CMsgGCToGCPerformManualOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCPerformManualOp& operator=(CMsgGCToGCPerformManualOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCPerformManualOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCPerformManualOp* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCPerformManualOp*>(
               &_CMsgGCToGCPerformManualOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CMsgGCToGCPerformManualOp& a, CMsgGCToGCPerformManualOp& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCPerformManualOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCPerformManualOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCPerformManualOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCPerformManualOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCPerformManualOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCPerformManualOp& from) {
    CMsgGCToGCPerformManualOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCPerformManualOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCPerformManualOp";
  }
  protected:
  explicit CMsgGCToGCPerformManualOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIdFieldNumber = 1,
    kGroupCodeFieldNumber = 2,
  };
  // optional uint64 op_id = 1;
  bool has_op_id() const;
  private:
  bool _internal_has_op_id() const;
  public:
  void clear_op_id();
  uint64_t op_id() const;
  void set_op_id(uint64_t value);
  private:
  uint64_t _internal_op_id() const;
  void _internal_set_op_id(uint64_t value);
  public:

  // optional uint32 group_code = 2;
  bool has_group_code() const;
  private:
  bool _internal_has_group_code() const;
  public:
  void clear_group_code();
  uint32_t group_code() const;
  void set_group_code(uint32_t value);
  private:
  uint32_t _internal_group_code() const;
  void _internal_set_group_code(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCPerformManualOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t op_id_;
    uint32_t group_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCPerformManualOpCompleted final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCPerformManualOpCompleted) */ {
 public:
  inline CMsgGCToGCPerformManualOpCompleted() : CMsgGCToGCPerformManualOpCompleted(nullptr) {}
  ~CMsgGCToGCPerformManualOpCompleted() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCPerformManualOpCompleted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCPerformManualOpCompleted(const CMsgGCToGCPerformManualOpCompleted& from);
  CMsgGCToGCPerformManualOpCompleted(CMsgGCToGCPerformManualOpCompleted&& from) noexcept
    : CMsgGCToGCPerformManualOpCompleted() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCPerformManualOpCompleted& operator=(const CMsgGCToGCPerformManualOpCompleted& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCPerformManualOpCompleted& operator=(CMsgGCToGCPerformManualOpCompleted&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCPerformManualOpCompleted& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCPerformManualOpCompleted* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCPerformManualOpCompleted*>(
               &_CMsgGCToGCPerformManualOpCompleted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgGCToGCPerformManualOpCompleted& a, CMsgGCToGCPerformManualOpCompleted& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCPerformManualOpCompleted* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCPerformManualOpCompleted* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCPerformManualOpCompleted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCPerformManualOpCompleted>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCPerformManualOpCompleted& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCPerformManualOpCompleted& from) {
    CMsgGCToGCPerformManualOpCompleted::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCPerformManualOpCompleted* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCPerformManualOpCompleted";
  }
  protected:
  explicit CMsgGCToGCPerformManualOpCompleted(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
    kSourceGcFieldNumber = 2,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // optional int32 source_gc = 2 [default = -1];
  bool has_source_gc() const;
  private:
  bool _internal_has_source_gc() const;
  public:
  void clear_source_gc();
  int32_t source_gc() const;
  void set_source_gc(int32_t value);
  private:
  int32_t _internal_source_gc() const;
  void _internal_set_source_gc(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCPerformManualOpCompleted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
    int32_t source_gc_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCReloadServerRegionSettings final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgGCToGCReloadServerRegionSettings) */ {
 public:
  inline CMsgGCToGCReloadServerRegionSettings() : CMsgGCToGCReloadServerRegionSettings(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCReloadServerRegionSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCReloadServerRegionSettings(const CMsgGCToGCReloadServerRegionSettings& from);
  CMsgGCToGCReloadServerRegionSettings(CMsgGCToGCReloadServerRegionSettings&& from) noexcept
    : CMsgGCToGCReloadServerRegionSettings() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCReloadServerRegionSettings& operator=(const CMsgGCToGCReloadServerRegionSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCReloadServerRegionSettings& operator=(CMsgGCToGCReloadServerRegionSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCReloadServerRegionSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCReloadServerRegionSettings* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCReloadServerRegionSettings*>(
               &_CMsgGCToGCReloadServerRegionSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgGCToGCReloadServerRegionSettings& a, CMsgGCToGCReloadServerRegionSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCReloadServerRegionSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCReloadServerRegionSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCReloadServerRegionSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCReloadServerRegionSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgGCToGCReloadServerRegionSettings& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgGCToGCReloadServerRegionSettings& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCReloadServerRegionSettings";
  }
  protected:
  explicit CMsgGCToGCReloadServerRegionSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCReloadServerRegionSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCAdditionalWelcomeMsgList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCAdditionalWelcomeMsgList) */ {
 public:
  inline CMsgGCAdditionalWelcomeMsgList() : CMsgGCAdditionalWelcomeMsgList(nullptr) {}
  ~CMsgGCAdditionalWelcomeMsgList() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCAdditionalWelcomeMsgList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCAdditionalWelcomeMsgList(const CMsgGCAdditionalWelcomeMsgList& from);
  CMsgGCAdditionalWelcomeMsgList(CMsgGCAdditionalWelcomeMsgList&& from) noexcept
    : CMsgGCAdditionalWelcomeMsgList() {
    *this = ::std::move(from);
  }

  inline CMsgGCAdditionalWelcomeMsgList& operator=(const CMsgGCAdditionalWelcomeMsgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCAdditionalWelcomeMsgList& operator=(CMsgGCAdditionalWelcomeMsgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCAdditionalWelcomeMsgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCAdditionalWelcomeMsgList* internal_default_instance() {
    return reinterpret_cast<const CMsgGCAdditionalWelcomeMsgList*>(
               &_CMsgGCAdditionalWelcomeMsgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgGCAdditionalWelcomeMsgList& a, CMsgGCAdditionalWelcomeMsgList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCAdditionalWelcomeMsgList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCAdditionalWelcomeMsgList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCAdditionalWelcomeMsgList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCAdditionalWelcomeMsgList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCAdditionalWelcomeMsgList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCAdditionalWelcomeMsgList& from) {
    CMsgGCAdditionalWelcomeMsgList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCAdditionalWelcomeMsgList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCAdditionalWelcomeMsgList";
  }
  protected:
  explicit CMsgGCAdditionalWelcomeMsgList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWelcomeMessagesFieldNumber = 1,
  };
  // repeated .CExtraMsgBlock welcome_messages = 1;
  int welcome_messages_size() const;
  private:
  int _internal_welcome_messages_size() const;
  public:
  void clear_welcome_messages();
  ::CExtraMsgBlock* mutable_welcome_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >*
      mutable_welcome_messages();
  private:
  const ::CExtraMsgBlock& _internal_welcome_messages(int index) const;
  ::CExtraMsgBlock* _internal_add_welcome_messages();
  public:
  const ::CExtraMsgBlock& welcome_messages(int index) const;
  ::CExtraMsgBlock* add_welcome_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >&
      welcome_messages() const;

  // @@protoc_insertion_point(class_scope:CMsgGCAdditionalWelcomeMsgList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock > welcome_messages_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgApplyRemoteConVars_ConVar final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyRemoteConVars.ConVar) */ {
 public:
  inline CMsgApplyRemoteConVars_ConVar() : CMsgApplyRemoteConVars_ConVar(nullptr) {}
  ~CMsgApplyRemoteConVars_ConVar() override;
  explicit PROTOBUF_CONSTEXPR CMsgApplyRemoteConVars_ConVar(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyRemoteConVars_ConVar(const CMsgApplyRemoteConVars_ConVar& from);
  CMsgApplyRemoteConVars_ConVar(CMsgApplyRemoteConVars_ConVar&& from) noexcept
    : CMsgApplyRemoteConVars_ConVar() {
    *this = ::std::move(from);
  }

  inline CMsgApplyRemoteConVars_ConVar& operator=(const CMsgApplyRemoteConVars_ConVar& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyRemoteConVars_ConVar& operator=(CMsgApplyRemoteConVars_ConVar&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyRemoteConVars_ConVar& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyRemoteConVars_ConVar* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyRemoteConVars_ConVar*>(
               &_CMsgApplyRemoteConVars_ConVar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgApplyRemoteConVars_ConVar& a, CMsgApplyRemoteConVars_ConVar& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyRemoteConVars_ConVar* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyRemoteConVars_ConVar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgApplyRemoteConVars_ConVar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgApplyRemoteConVars_ConVar>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgApplyRemoteConVars_ConVar& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgApplyRemoteConVars_ConVar& from) {
    CMsgApplyRemoteConVars_ConVar::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyRemoteConVars_ConVar* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyRemoteConVars.ConVar";
  }
  protected:
  explicit CMsgApplyRemoteConVars_ConVar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
    kVersionMinFieldNumber = 3,
    kVersionMaxFieldNumber = 4,
    kPlatformFieldNumber = 5,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // optional uint32 version_min = 3;
  bool has_version_min() const;
  private:
  bool _internal_has_version_min() const;
  public:
  void clear_version_min();
  uint32_t version_min() const;
  void set_version_min(uint32_t value);
  private:
  uint32_t _internal_version_min() const;
  void _internal_set_version_min(uint32_t value);
  public:

  // optional uint32 version_max = 4;
  bool has_version_max() const;
  private:
  bool _internal_has_version_max() const;
  public:
  void clear_version_max();
  uint32_t version_max() const;
  void set_version_max(uint32_t value);
  private:
  uint32_t _internal_version_max() const;
  void _internal_set_version_max(uint32_t value);
  public:

  // optional .EGCPlatform platform = 5 [default = k_eGCPlatform_None];
  bool has_platform() const;
  private:
  bool _internal_has_platform() const;
  public:
  void clear_platform();
  ::EGCPlatform platform() const;
  void set_platform(::EGCPlatform value);
  private:
  ::EGCPlatform _internal_platform() const;
  void _internal_set_platform(::EGCPlatform value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyRemoteConVars.ConVar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
    uint32_t version_min_;
    uint32_t version_max_;
    int platform_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgApplyRemoteConVars final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyRemoteConVars) */ {
 public:
  inline CMsgApplyRemoteConVars() : CMsgApplyRemoteConVars(nullptr) {}
  ~CMsgApplyRemoteConVars() override;
  explicit PROTOBUF_CONSTEXPR CMsgApplyRemoteConVars(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyRemoteConVars(const CMsgApplyRemoteConVars& from);
  CMsgApplyRemoteConVars(CMsgApplyRemoteConVars&& from) noexcept
    : CMsgApplyRemoteConVars() {
    *this = ::std::move(from);
  }

  inline CMsgApplyRemoteConVars& operator=(const CMsgApplyRemoteConVars& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyRemoteConVars& operator=(CMsgApplyRemoteConVars&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyRemoteConVars& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyRemoteConVars* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyRemoteConVars*>(
               &_CMsgApplyRemoteConVars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgApplyRemoteConVars& a, CMsgApplyRemoteConVars& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyRemoteConVars* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyRemoteConVars* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgApplyRemoteConVars* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgApplyRemoteConVars>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgApplyRemoteConVars& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgApplyRemoteConVars& from) {
    CMsgApplyRemoteConVars::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyRemoteConVars* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyRemoteConVars";
  }
  protected:
  explicit CMsgApplyRemoteConVars(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgApplyRemoteConVars_ConVar ConVar;

  // accessors -------------------------------------------------------

  enum : int {
    kConVarsFieldNumber = 1,
  };
  // repeated .CMsgApplyRemoteConVars.ConVar con_vars = 1;
  int con_vars_size() const;
  private:
  int _internal_con_vars_size() const;
  public:
  void clear_con_vars();
  ::CMsgApplyRemoteConVars_ConVar* mutable_con_vars(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgApplyRemoteConVars_ConVar >*
      mutable_con_vars();
  private:
  const ::CMsgApplyRemoteConVars_ConVar& _internal_con_vars(int index) const;
  ::CMsgApplyRemoteConVars_ConVar* _internal_add_con_vars();
  public:
  const ::CMsgApplyRemoteConVars_ConVar& con_vars(int index) const;
  ::CMsgApplyRemoteConVars_ConVar* add_con_vars();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgApplyRemoteConVars_ConVar >&
      con_vars() const;

  // @@protoc_insertion_point(class_scope:CMsgApplyRemoteConVars)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgApplyRemoteConVars_ConVar > con_vars_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientApplyRemoteConVars final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientApplyRemoteConVars) */ {
 public:
  inline CMsgGCToClientApplyRemoteConVars() : CMsgGCToClientApplyRemoteConVars(nullptr) {}
  ~CMsgGCToClientApplyRemoteConVars() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientApplyRemoteConVars(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientApplyRemoteConVars(const CMsgGCToClientApplyRemoteConVars& from);
  CMsgGCToClientApplyRemoteConVars(CMsgGCToClientApplyRemoteConVars&& from) noexcept
    : CMsgGCToClientApplyRemoteConVars() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientApplyRemoteConVars& operator=(const CMsgGCToClientApplyRemoteConVars& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientApplyRemoteConVars& operator=(CMsgGCToClientApplyRemoteConVars&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientApplyRemoteConVars& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientApplyRemoteConVars* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientApplyRemoteConVars*>(
               &_CMsgGCToClientApplyRemoteConVars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgGCToClientApplyRemoteConVars& a, CMsgGCToClientApplyRemoteConVars& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientApplyRemoteConVars* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientApplyRemoteConVars* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientApplyRemoteConVars* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientApplyRemoteConVars>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientApplyRemoteConVars& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientApplyRemoteConVars& from) {
    CMsgGCToClientApplyRemoteConVars::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientApplyRemoteConVars* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientApplyRemoteConVars";
  }
  protected:
  explicit CMsgGCToClientApplyRemoteConVars(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // optional .CMsgApplyRemoteConVars msg = 1;
  bool has_msg() const;
  private:
  bool _internal_has_msg() const;
  public:
  void clear_msg();
  const ::CMsgApplyRemoteConVars& msg() const;
  PROTOBUF_NODISCARD ::CMsgApplyRemoteConVars* release_msg();
  ::CMsgApplyRemoteConVars* mutable_msg();
  void set_allocated_msg(::CMsgApplyRemoteConVars* msg);
  private:
  const ::CMsgApplyRemoteConVars& _internal_msg() const;
  ::CMsgApplyRemoteConVars* _internal_mutable_msg();
  public:
  void unsafe_arena_set_allocated_msg(
      ::CMsgApplyRemoteConVars* msg);
  ::CMsgApplyRemoteConVars* unsafe_arena_release_msg();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientApplyRemoteConVars)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgApplyRemoteConVars* msg_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerApplyRemoteConVars final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToServerApplyRemoteConVars) */ {
 public:
  inline CMsgGCToServerApplyRemoteConVars() : CMsgGCToServerApplyRemoteConVars(nullptr) {}
  ~CMsgGCToServerApplyRemoteConVars() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToServerApplyRemoteConVars(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToServerApplyRemoteConVars(const CMsgGCToServerApplyRemoteConVars& from);
  CMsgGCToServerApplyRemoteConVars(CMsgGCToServerApplyRemoteConVars&& from) noexcept
    : CMsgGCToServerApplyRemoteConVars() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerApplyRemoteConVars& operator=(const CMsgGCToServerApplyRemoteConVars& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToServerApplyRemoteConVars& operator=(CMsgGCToServerApplyRemoteConVars&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToServerApplyRemoteConVars& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToServerApplyRemoteConVars* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerApplyRemoteConVars*>(
               &_CMsgGCToServerApplyRemoteConVars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgGCToServerApplyRemoteConVars& a, CMsgGCToServerApplyRemoteConVars& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToServerApplyRemoteConVars* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToServerApplyRemoteConVars* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToServerApplyRemoteConVars* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToServerApplyRemoteConVars>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToServerApplyRemoteConVars& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToServerApplyRemoteConVars& from) {
    CMsgGCToServerApplyRemoteConVars::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerApplyRemoteConVars* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToServerApplyRemoteConVars";
  }
  protected:
  explicit CMsgGCToServerApplyRemoteConVars(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // optional .CMsgApplyRemoteConVars msg = 1;
  bool has_msg() const;
  private:
  bool _internal_has_msg() const;
  public:
  void clear_msg();
  const ::CMsgApplyRemoteConVars& msg() const;
  PROTOBUF_NODISCARD ::CMsgApplyRemoteConVars* release_msg();
  ::CMsgApplyRemoteConVars* mutable_msg();
  void set_allocated_msg(::CMsgApplyRemoteConVars* msg);
  private:
  const ::CMsgApplyRemoteConVars& _internal_msg() const;
  ::CMsgApplyRemoteConVars* _internal_mutable_msg();
  public:
  void unsafe_arena_set_allocated_msg(
      ::CMsgApplyRemoteConVars* msg);
  ::CMsgApplyRemoteConVars* unsafe_arena_release_msg();

  // @@protoc_insertion_point(class_scope:CMsgGCToServerApplyRemoteConVars)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgApplyRemoteConVars* msg_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCIntegrityStatus_keyvalue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCIntegrityStatus.keyvalue) */ {
 public:
  inline CMsgClientToGCIntegrityStatus_keyvalue() : CMsgClientToGCIntegrityStatus_keyvalue(nullptr) {}
  ~CMsgClientToGCIntegrityStatus_keyvalue() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCIntegrityStatus_keyvalue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCIntegrityStatus_keyvalue(const CMsgClientToGCIntegrityStatus_keyvalue& from);
  CMsgClientToGCIntegrityStatus_keyvalue(CMsgClientToGCIntegrityStatus_keyvalue&& from) noexcept
    : CMsgClientToGCIntegrityStatus_keyvalue() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCIntegrityStatus_keyvalue& operator=(const CMsgClientToGCIntegrityStatus_keyvalue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCIntegrityStatus_keyvalue& operator=(CMsgClientToGCIntegrityStatus_keyvalue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCIntegrityStatus_keyvalue& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCIntegrityStatus_keyvalue* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCIntegrityStatus_keyvalue*>(
               &_CMsgClientToGCIntegrityStatus_keyvalue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgClientToGCIntegrityStatus_keyvalue& a, CMsgClientToGCIntegrityStatus_keyvalue& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCIntegrityStatus_keyvalue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCIntegrityStatus_keyvalue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCIntegrityStatus_keyvalue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCIntegrityStatus_keyvalue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCIntegrityStatus_keyvalue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCIntegrityStatus_keyvalue& from) {
    CMsgClientToGCIntegrityStatus_keyvalue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCIntegrityStatus_keyvalue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCIntegrityStatus.keyvalue";
  }
  protected:
  explicit CMsgClientToGCIntegrityStatus_keyvalue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringValueFieldNumber = 4,
    kIdFieldNumber = 1,
    kExtendedFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // optional string string_value = 4;
  bool has_string_value() const;
  private:
  bool _internal_has_string_value() const;
  public:
  void clear_string_value();
  const std::string& string_value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_string_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_string_value();
  PROTOBUF_NODISCARD std::string* release_string_value();
  void set_allocated_string_value(std::string* string_value);
  private:
  const std::string& _internal_string_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_value(const std::string& value);
  std::string* _internal_mutable_string_value();
  public:

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // optional uint32 extended = 2;
  bool has_extended() const;
  private:
  bool _internal_has_extended() const;
  public:
  void clear_extended();
  uint32_t extended() const;
  void set_extended(uint32_t value);
  private:
  uint32_t _internal_extended() const;
  void _internal_set_extended(uint32_t value);
  public:

  // optional uint64 value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  uint64_t value() const;
  void set_value(uint64_t value);
  private:
  uint64_t _internal_value() const;
  void _internal_set_value(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCIntegrityStatus.keyvalue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
    uint32_t id_;
    uint32_t extended_;
    uint64_t value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCIntegrityStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCIntegrityStatus) */ {
 public:
  inline CMsgClientToGCIntegrityStatus() : CMsgClientToGCIntegrityStatus(nullptr) {}
  ~CMsgClientToGCIntegrityStatus() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCIntegrityStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCIntegrityStatus(const CMsgClientToGCIntegrityStatus& from);
  CMsgClientToGCIntegrityStatus(CMsgClientToGCIntegrityStatus&& from) noexcept
    : CMsgClientToGCIntegrityStatus() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCIntegrityStatus& operator=(const CMsgClientToGCIntegrityStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCIntegrityStatus& operator=(CMsgClientToGCIntegrityStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCIntegrityStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCIntegrityStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCIntegrityStatus*>(
               &_CMsgClientToGCIntegrityStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgClientToGCIntegrityStatus& a, CMsgClientToGCIntegrityStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCIntegrityStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCIntegrityStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCIntegrityStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCIntegrityStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCIntegrityStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCIntegrityStatus& from) {
    CMsgClientToGCIntegrityStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCIntegrityStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCIntegrityStatus";
  }
  protected:
  explicit CMsgClientToGCIntegrityStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCIntegrityStatus_keyvalue keyvalue;

  // accessors -------------------------------------------------------

  enum : int {
    kDiagnosticsFieldNumber = 3,
    kReportFieldNumber = 1,
    kSecureAllowedFieldNumber = 2,
  };
  // repeated .CMsgClientToGCIntegrityStatus.keyvalue diagnostics = 3;
  int diagnostics_size() const;
  private:
  int _internal_diagnostics_size() const;
  public:
  void clear_diagnostics();
  ::CMsgClientToGCIntegrityStatus_keyvalue* mutable_diagnostics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCIntegrityStatus_keyvalue >*
      mutable_diagnostics();
  private:
  const ::CMsgClientToGCIntegrityStatus_keyvalue& _internal_diagnostics(int index) const;
  ::CMsgClientToGCIntegrityStatus_keyvalue* _internal_add_diagnostics();
  public:
  const ::CMsgClientToGCIntegrityStatus_keyvalue& diagnostics(int index) const;
  ::CMsgClientToGCIntegrityStatus_keyvalue* add_diagnostics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCIntegrityStatus_keyvalue >&
      diagnostics() const;

  // optional string report = 1;
  bool has_report() const;
  private:
  bool _internal_has_report() const;
  public:
  void clear_report();
  const std::string& report() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_report(ArgT0&& arg0, ArgT... args);
  std::string* mutable_report();
  PROTOBUF_NODISCARD std::string* release_report();
  void set_allocated_report(std::string* report);
  private:
  const std::string& _internal_report() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report(const std::string& value);
  std::string* _internal_mutable_report();
  public:

  // optional bool secure_allowed = 2;
  bool has_secure_allowed() const;
  private:
  bool _internal_has_secure_allowed() const;
  public:
  void clear_secure_allowed();
  bool secure_allowed() const;
  void set_secure_allowed(bool value);
  private:
  bool _internal_secure_allowed() const;
  void _internal_set_secure_allowed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCIntegrityStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCIntegrityStatus_keyvalue > diagnostics_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr report_;
    bool secure_allowed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAggregateMetrics_SingleMetric final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAggregateMetrics.SingleMetric) */ {
 public:
  inline CMsgClientToGCAggregateMetrics_SingleMetric() : CMsgClientToGCAggregateMetrics_SingleMetric(nullptr) {}
  ~CMsgClientToGCAggregateMetrics_SingleMetric() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAggregateMetrics_SingleMetric(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAggregateMetrics_SingleMetric(const CMsgClientToGCAggregateMetrics_SingleMetric& from);
  CMsgClientToGCAggregateMetrics_SingleMetric(CMsgClientToGCAggregateMetrics_SingleMetric&& from) noexcept
    : CMsgClientToGCAggregateMetrics_SingleMetric() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAggregateMetrics_SingleMetric& operator=(const CMsgClientToGCAggregateMetrics_SingleMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAggregateMetrics_SingleMetric& operator=(CMsgClientToGCAggregateMetrics_SingleMetric&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAggregateMetrics_SingleMetric& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAggregateMetrics_SingleMetric* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAggregateMetrics_SingleMetric*>(
               &_CMsgClientToGCAggregateMetrics_SingleMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgClientToGCAggregateMetrics_SingleMetric& a, CMsgClientToGCAggregateMetrics_SingleMetric& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAggregateMetrics_SingleMetric* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAggregateMetrics_SingleMetric* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAggregateMetrics_SingleMetric* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAggregateMetrics_SingleMetric>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAggregateMetrics_SingleMetric& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAggregateMetrics_SingleMetric& from) {
    CMsgClientToGCAggregateMetrics_SingleMetric::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAggregateMetrics_SingleMetric* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAggregateMetrics.SingleMetric";
  }
  protected:
  explicit CMsgClientToGCAggregateMetrics_SingleMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricNameFieldNumber = 1,
    kMetricCountFieldNumber = 2,
  };
  // optional string metric_name = 1;
  bool has_metric_name() const;
  private:
  bool _internal_has_metric_name() const;
  public:
  void clear_metric_name();
  const std::string& metric_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_metric_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_metric_name();
  PROTOBUF_NODISCARD std::string* release_metric_name();
  void set_allocated_metric_name(std::string* metric_name);
  private:
  const std::string& _internal_metric_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metric_name(const std::string& value);
  std::string* _internal_mutable_metric_name();
  public:

  // optional uint32 metric_count = 2;
  bool has_metric_count() const;
  private:
  bool _internal_has_metric_count() const;
  public:
  void clear_metric_count();
  uint32_t metric_count() const;
  void set_metric_count(uint32_t value);
  private:
  uint32_t _internal_metric_count() const;
  void _internal_set_metric_count(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAggregateMetrics.SingleMetric)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metric_name_;
    uint32_t metric_count_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAggregateMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAggregateMetrics) */ {
 public:
  inline CMsgClientToGCAggregateMetrics() : CMsgClientToGCAggregateMetrics(nullptr) {}
  ~CMsgClientToGCAggregateMetrics() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAggregateMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAggregateMetrics(const CMsgClientToGCAggregateMetrics& from);
  CMsgClientToGCAggregateMetrics(CMsgClientToGCAggregateMetrics&& from) noexcept
    : CMsgClientToGCAggregateMetrics() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAggregateMetrics& operator=(const CMsgClientToGCAggregateMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAggregateMetrics& operator=(CMsgClientToGCAggregateMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAggregateMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAggregateMetrics* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAggregateMetrics*>(
               &_CMsgClientToGCAggregateMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgClientToGCAggregateMetrics& a, CMsgClientToGCAggregateMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAggregateMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAggregateMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAggregateMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAggregateMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAggregateMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAggregateMetrics& from) {
    CMsgClientToGCAggregateMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAggregateMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAggregateMetrics";
  }
  protected:
  explicit CMsgClientToGCAggregateMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCAggregateMetrics_SingleMetric SingleMetric;

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 1,
  };
  // repeated .CMsgClientToGCAggregateMetrics.SingleMetric metrics = 1;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;
  public:
  void clear_metrics();
  ::CMsgClientToGCAggregateMetrics_SingleMetric* mutable_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCAggregateMetrics_SingleMetric >*
      mutable_metrics();
  private:
  const ::CMsgClientToGCAggregateMetrics_SingleMetric& _internal_metrics(int index) const;
  ::CMsgClientToGCAggregateMetrics_SingleMetric* _internal_add_metrics();
  public:
  const ::CMsgClientToGCAggregateMetrics_SingleMetric& metrics(int index) const;
  ::CMsgClientToGCAggregateMetrics_SingleMetric* add_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCAggregateMetrics_SingleMetric >&
      metrics() const;

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAggregateMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCAggregateMetrics_SingleMetric > metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientAggregateMetricsBackoff final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientAggregateMetricsBackoff) */ {
 public:
  inline CMsgGCToClientAggregateMetricsBackoff() : CMsgGCToClientAggregateMetricsBackoff(nullptr) {}
  ~CMsgGCToClientAggregateMetricsBackoff() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientAggregateMetricsBackoff(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientAggregateMetricsBackoff(const CMsgGCToClientAggregateMetricsBackoff& from);
  CMsgGCToClientAggregateMetricsBackoff(CMsgGCToClientAggregateMetricsBackoff&& from) noexcept
    : CMsgGCToClientAggregateMetricsBackoff() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientAggregateMetricsBackoff& operator=(const CMsgGCToClientAggregateMetricsBackoff& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientAggregateMetricsBackoff& operator=(CMsgGCToClientAggregateMetricsBackoff&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientAggregateMetricsBackoff& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientAggregateMetricsBackoff* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientAggregateMetricsBackoff*>(
               &_CMsgGCToClientAggregateMetricsBackoff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgGCToClientAggregateMetricsBackoff& a, CMsgGCToClientAggregateMetricsBackoff& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientAggregateMetricsBackoff* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientAggregateMetricsBackoff* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientAggregateMetricsBackoff* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientAggregateMetricsBackoff>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientAggregateMetricsBackoff& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientAggregateMetricsBackoff& from) {
    CMsgGCToClientAggregateMetricsBackoff::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientAggregateMetricsBackoff* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientAggregateMetricsBackoff";
  }
  protected:
  explicit CMsgGCToClientAggregateMetricsBackoff(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUploadRateModifierFieldNumber = 1,
  };
  // optional float upload_rate_modifier = 1;
  bool has_upload_rate_modifier() const;
  private:
  bool _internal_has_upload_rate_modifier() const;
  public:
  void clear_upload_rate_modifier();
  float upload_rate_modifier() const;
  void set_upload_rate_modifier(float value);
  private:
  float _internal_upload_rate_modifier() const;
  void _internal_set_upload_rate_modifier(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientAggregateMetricsBackoff)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float upload_rate_modifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fgcmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CGCStorePurchaseInit_LineItem

// optional uint32 item_def_id = 1;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_item_def_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_item_def_id() const {
  return _internal_has_item_def_id();
}
inline void CGCStorePurchaseInit_LineItem::clear_item_def_id() {
  _impl_.item_def_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CGCStorePurchaseInit_LineItem::_internal_item_def_id() const {
  return _impl_.item_def_id_;
}
inline uint32_t CGCStorePurchaseInit_LineItem::item_def_id() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.item_def_id)
  return _internal_item_def_id();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_item_def_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_id_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_item_def_id(uint32_t value) {
  _internal_set_item_def_id(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.item_def_id)
}

// optional uint32 quantity = 2;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_quantity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_quantity() const {
  return _internal_has_quantity();
}
inline void CGCStorePurchaseInit_LineItem::clear_quantity() {
  _impl_.quantity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CGCStorePurchaseInit_LineItem::_internal_quantity() const {
  return _impl_.quantity_;
}
inline uint32_t CGCStorePurchaseInit_LineItem::quantity() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.quantity)
  return _internal_quantity();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_quantity(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.quantity_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_quantity(uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.quantity)
}

// optional uint32 cost_in_local_currency = 3;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_cost_in_local_currency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_cost_in_local_currency() const {
  return _internal_has_cost_in_local_currency();
}
inline void CGCStorePurchaseInit_LineItem::clear_cost_in_local_currency() {
  _impl_.cost_in_local_currency_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CGCStorePurchaseInit_LineItem::_internal_cost_in_local_currency() const {
  return _impl_.cost_in_local_currency_;
}
inline uint32_t CGCStorePurchaseInit_LineItem::cost_in_local_currency() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.cost_in_local_currency)
  return _internal_cost_in_local_currency();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_cost_in_local_currency(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.cost_in_local_currency_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_cost_in_local_currency(uint32_t value) {
  _internal_set_cost_in_local_currency(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.cost_in_local_currency)
}

// optional uint32 purchase_type = 4;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_purchase_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_purchase_type() const {
  return _internal_has_purchase_type();
}
inline void CGCStorePurchaseInit_LineItem::clear_purchase_type() {
  _impl_.purchase_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CGCStorePurchaseInit_LineItem::_internal_purchase_type() const {
  return _impl_.purchase_type_;
}
inline uint32_t CGCStorePurchaseInit_LineItem::purchase_type() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.purchase_type)
  return _internal_purchase_type();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_purchase_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.purchase_type_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_purchase_type(uint32_t value) {
  _internal_set_purchase_type(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.purchase_type)
}

// optional uint64 source_reference_id = 5;
inline bool CGCStorePurchaseInit_LineItem::_internal_has_source_reference_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CGCStorePurchaseInit_LineItem::has_source_reference_id() const {
  return _internal_has_source_reference_id();
}
inline void CGCStorePurchaseInit_LineItem::clear_source_reference_id() {
  _impl_.source_reference_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CGCStorePurchaseInit_LineItem::_internal_source_reference_id() const {
  return _impl_.source_reference_id_;
}
inline uint64_t CGCStorePurchaseInit_LineItem::source_reference_id() const {
  // @@protoc_insertion_point(field_get:CGCStorePurchaseInit_LineItem.source_reference_id)
  return _internal_source_reference_id();
}
inline void CGCStorePurchaseInit_LineItem::_internal_set_source_reference_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.source_reference_id_ = value;
}
inline void CGCStorePurchaseInit_LineItem::set_source_reference_id(uint64_t value) {
  _internal_set_source_reference_id(value);
  // @@protoc_insertion_point(field_set:CGCStorePurchaseInit_LineItem.source_reference_id)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseInit

// optional string country = 1;
inline bool CMsgGCStorePurchaseInit::_internal_has_country() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInit::has_country() const {
  return _internal_has_country();
}
inline void CMsgGCStorePurchaseInit::clear_country() {
  _impl_.country_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCStorePurchaseInit::country() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.country)
  return _internal_country();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCStorePurchaseInit::set_country(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.country_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInit.country)
}
inline std::string* CMsgGCStorePurchaseInit::mutable_country() {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:CMsgGCStorePurchaseInit.country)
  return _s;
}
inline const std::string& CMsgGCStorePurchaseInit::_internal_country() const {
  return _impl_.country_.Get();
}
inline void CMsgGCStorePurchaseInit::_internal_set_country(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCStorePurchaseInit::_internal_mutable_country() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.country_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCStorePurchaseInit::release_country() {
  // @@protoc_insertion_point(field_release:CMsgGCStorePurchaseInit.country)
  if (!_internal_has_country()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.country_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCStorePurchaseInit::set_allocated_country(std::string* country) {
  if (country != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.country_.SetAllocated(country, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCStorePurchaseInit.country)
}

// optional int32 language = 2;
inline bool CMsgGCStorePurchaseInit::_internal_has_language() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInit::has_language() const {
  return _internal_has_language();
}
inline void CMsgGCStorePurchaseInit::clear_language() {
  _impl_.language_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgGCStorePurchaseInit::_internal_language() const {
  return _impl_.language_;
}
inline int32_t CMsgGCStorePurchaseInit::language() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.language)
  return _internal_language();
}
inline void CMsgGCStorePurchaseInit::_internal_set_language(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.language_ = value;
}
inline void CMsgGCStorePurchaseInit::set_language(int32_t value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInit.language)
}

// optional int32 currency = 3;
inline bool CMsgGCStorePurchaseInit::_internal_has_currency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInit::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgGCStorePurchaseInit::clear_currency() {
  _impl_.currency_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CMsgGCStorePurchaseInit::_internal_currency() const {
  return _impl_.currency_;
}
inline int32_t CMsgGCStorePurchaseInit::currency() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.currency)
  return _internal_currency();
}
inline void CMsgGCStorePurchaseInit::_internal_set_currency(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.currency_ = value;
}
inline void CMsgGCStorePurchaseInit::set_currency(int32_t value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInit.currency)
}

// repeated .CGCStorePurchaseInit_LineItem line_items = 4;
inline int CMsgGCStorePurchaseInit::_internal_line_items_size() const {
  return _impl_.line_items_.size();
}
inline int CMsgGCStorePurchaseInit::line_items_size() const {
  return _internal_line_items_size();
}
inline void CMsgGCStorePurchaseInit::clear_line_items() {
  _impl_.line_items_.Clear();
}
inline ::CGCStorePurchaseInit_LineItem* CMsgGCStorePurchaseInit::mutable_line_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCStorePurchaseInit.line_items)
  return _impl_.line_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >*
CMsgGCStorePurchaseInit::mutable_line_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCStorePurchaseInit.line_items)
  return &_impl_.line_items_;
}
inline const ::CGCStorePurchaseInit_LineItem& CMsgGCStorePurchaseInit::_internal_line_items(int index) const {
  return _impl_.line_items_.Get(index);
}
inline const ::CGCStorePurchaseInit_LineItem& CMsgGCStorePurchaseInit::line_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInit.line_items)
  return _internal_line_items(index);
}
inline ::CGCStorePurchaseInit_LineItem* CMsgGCStorePurchaseInit::_internal_add_line_items() {
  return _impl_.line_items_.Add();
}
inline ::CGCStorePurchaseInit_LineItem* CMsgGCStorePurchaseInit::add_line_items() {
  ::CGCStorePurchaseInit_LineItem* _add = _internal_add_line_items();
  // @@protoc_insertion_point(field_add:CMsgGCStorePurchaseInit.line_items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCStorePurchaseInit_LineItem >&
CMsgGCStorePurchaseInit::line_items() const {
  // @@protoc_insertion_point(field_list:CMsgGCStorePurchaseInit.line_items)
  return _impl_.line_items_;
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseInitResponse

// optional int32 result = 1;
inline bool CMsgGCStorePurchaseInitResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInitResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCStorePurchaseInitResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgGCStorePurchaseInitResponse::_internal_result() const {
  return _impl_.result_;
}
inline int32_t CMsgGCStorePurchaseInitResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInitResponse.result)
  return _internal_result();
}
inline void CMsgGCStorePurchaseInitResponse::_internal_set_result(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgGCStorePurchaseInitResponse::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInitResponse.result)
}

// optional uint64 txn_id = 2;
inline bool CMsgGCStorePurchaseInitResponse::_internal_has_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseInitResponse::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCStorePurchaseInitResponse::clear_txn_id() {
  _impl_.txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCStorePurchaseInitResponse::_internal_txn_id() const {
  return _impl_.txn_id_;
}
inline uint64_t CMsgGCStorePurchaseInitResponse::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseInitResponse.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCStorePurchaseInitResponse::_internal_set_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txn_id_ = value;
}
inline void CMsgGCStorePurchaseInitResponse::set_txn_id(uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseInitResponse.txn_id)
}

// -------------------------------------------------------------------

// CMsgClientPingData

// repeated fixed32 relay_codes = 4 [packed = true];
inline int CMsgClientPingData::_internal_relay_codes_size() const {
  return _impl_.relay_codes_.size();
}
inline int CMsgClientPingData::relay_codes_size() const {
  return _internal_relay_codes_size();
}
inline void CMsgClientPingData::clear_relay_codes() {
  _impl_.relay_codes_.Clear();
}
inline uint32_t CMsgClientPingData::_internal_relay_codes(int index) const {
  return _impl_.relay_codes_.Get(index);
}
inline uint32_t CMsgClientPingData::relay_codes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientPingData.relay_codes)
  return _internal_relay_codes(index);
}
inline void CMsgClientPingData::set_relay_codes(int index, uint32_t value) {
  _impl_.relay_codes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientPingData.relay_codes)
}
inline void CMsgClientPingData::_internal_add_relay_codes(uint32_t value) {
  _impl_.relay_codes_.Add(value);
}
inline void CMsgClientPingData::add_relay_codes(uint32_t value) {
  _internal_add_relay_codes(value);
  // @@protoc_insertion_point(field_add:CMsgClientPingData.relay_codes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::_internal_relay_codes() const {
  return _impl_.relay_codes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::relay_codes() const {
  // @@protoc_insertion_point(field_list:CMsgClientPingData.relay_codes)
  return _internal_relay_codes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::_internal_mutable_relay_codes() {
  return &_impl_.relay_codes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::mutable_relay_codes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientPingData.relay_codes)
  return _internal_mutable_relay_codes();
}

// repeated uint32 relay_pings = 5 [packed = true];
inline int CMsgClientPingData::_internal_relay_pings_size() const {
  return _impl_.relay_pings_.size();
}
inline int CMsgClientPingData::relay_pings_size() const {
  return _internal_relay_pings_size();
}
inline void CMsgClientPingData::clear_relay_pings() {
  _impl_.relay_pings_.Clear();
}
inline uint32_t CMsgClientPingData::_internal_relay_pings(int index) const {
  return _impl_.relay_pings_.Get(index);
}
inline uint32_t CMsgClientPingData::relay_pings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientPingData.relay_pings)
  return _internal_relay_pings(index);
}
inline void CMsgClientPingData::set_relay_pings(int index, uint32_t value) {
  _impl_.relay_pings_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientPingData.relay_pings)
}
inline void CMsgClientPingData::_internal_add_relay_pings(uint32_t value) {
  _impl_.relay_pings_.Add(value);
}
inline void CMsgClientPingData::add_relay_pings(uint32_t value) {
  _internal_add_relay_pings(value);
  // @@protoc_insertion_point(field_add:CMsgClientPingData.relay_pings)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::_internal_relay_pings() const {
  return _impl_.relay_pings_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::relay_pings() const {
  // @@protoc_insertion_point(field_list:CMsgClientPingData.relay_pings)
  return _internal_relay_pings();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::_internal_mutable_relay_pings() {
  return &_impl_.relay_pings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::mutable_relay_pings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientPingData.relay_pings)
  return _internal_mutable_relay_pings();
}

// repeated uint32 region_codes = 8 [packed = true];
inline int CMsgClientPingData::_internal_region_codes_size() const {
  return _impl_.region_codes_.size();
}
inline int CMsgClientPingData::region_codes_size() const {
  return _internal_region_codes_size();
}
inline void CMsgClientPingData::clear_region_codes() {
  _impl_.region_codes_.Clear();
}
inline uint32_t CMsgClientPingData::_internal_region_codes(int index) const {
  return _impl_.region_codes_.Get(index);
}
inline uint32_t CMsgClientPingData::region_codes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientPingData.region_codes)
  return _internal_region_codes(index);
}
inline void CMsgClientPingData::set_region_codes(int index, uint32_t value) {
  _impl_.region_codes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientPingData.region_codes)
}
inline void CMsgClientPingData::_internal_add_region_codes(uint32_t value) {
  _impl_.region_codes_.Add(value);
}
inline void CMsgClientPingData::add_region_codes(uint32_t value) {
  _internal_add_region_codes(value);
  // @@protoc_insertion_point(field_add:CMsgClientPingData.region_codes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::_internal_region_codes() const {
  return _impl_.region_codes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::region_codes() const {
  // @@protoc_insertion_point(field_list:CMsgClientPingData.region_codes)
  return _internal_region_codes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::_internal_mutable_region_codes() {
  return &_impl_.region_codes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::mutable_region_codes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientPingData.region_codes)
  return _internal_mutable_region_codes();
}

// repeated uint32 region_pings = 9 [packed = true];
inline int CMsgClientPingData::_internal_region_pings_size() const {
  return _impl_.region_pings_.size();
}
inline int CMsgClientPingData::region_pings_size() const {
  return _internal_region_pings_size();
}
inline void CMsgClientPingData::clear_region_pings() {
  _impl_.region_pings_.Clear();
}
inline uint32_t CMsgClientPingData::_internal_region_pings(int index) const {
  return _impl_.region_pings_.Get(index);
}
inline uint32_t CMsgClientPingData::region_pings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientPingData.region_pings)
  return _internal_region_pings(index);
}
inline void CMsgClientPingData::set_region_pings(int index, uint32_t value) {
  _impl_.region_pings_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientPingData.region_pings)
}
inline void CMsgClientPingData::_internal_add_region_pings(uint32_t value) {
  _impl_.region_pings_.Add(value);
}
inline void CMsgClientPingData::add_region_pings(uint32_t value) {
  _internal_add_region_pings(value);
  // @@protoc_insertion_point(field_add:CMsgClientPingData.region_pings)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::_internal_region_pings() const {
  return _impl_.region_pings_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientPingData::region_pings() const {
  // @@protoc_insertion_point(field_list:CMsgClientPingData.region_pings)
  return _internal_region_pings();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::_internal_mutable_region_pings() {
  return &_impl_.region_pings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientPingData::mutable_region_pings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientPingData.region_pings)
  return _internal_mutable_region_pings();
}

// optional uint32 region_ping_failed_bitmask = 10;
inline bool CMsgClientPingData::_internal_has_region_ping_failed_bitmask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientPingData::has_region_ping_failed_bitmask() const {
  return _internal_has_region_ping_failed_bitmask();
}
inline void CMsgClientPingData::clear_region_ping_failed_bitmask() {
  _impl_.region_ping_failed_bitmask_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientPingData::_internal_region_ping_failed_bitmask() const {
  return _impl_.region_ping_failed_bitmask_;
}
inline uint32_t CMsgClientPingData::region_ping_failed_bitmask() const {
  // @@protoc_insertion_point(field_get:CMsgClientPingData.region_ping_failed_bitmask)
  return _internal_region_ping_failed_bitmask();
}
inline void CMsgClientPingData::_internal_set_region_ping_failed_bitmask(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.region_ping_failed_bitmask_ = value;
}
inline void CMsgClientPingData::set_region_ping_failed_bitmask(uint32_t value) {
  _internal_set_region_ping_failed_bitmask(value);
  // @@protoc_insertion_point(field_set:CMsgClientPingData.region_ping_failed_bitmask)
}

// -------------------------------------------------------------------

// CMsgInviteToParty

// optional fixed64 steam_id = 1;
inline bool CMsgInviteToParty::_internal_has_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgInviteToParty::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgInviteToParty::clear_steam_id() {
  _impl_.steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgInviteToParty::_internal_steam_id() const {
  return _impl_.steam_id_;
}
inline uint64_t CMsgInviteToParty::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToParty.steam_id)
  return _internal_steam_id();
}
inline void CMsgInviteToParty::_internal_set_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.steam_id_ = value;
}
inline void CMsgInviteToParty::set_steam_id(uint64_t value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgInviteToParty.steam_id)
}

// optional uint32 client_version = 2;
inline bool CMsgInviteToParty::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgInviteToParty::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgInviteToParty::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgInviteToParty::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgInviteToParty::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToParty.client_version)
  return _internal_client_version();
}
inline void CMsgInviteToParty::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_version_ = value;
}
inline void CMsgInviteToParty::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgInviteToParty.client_version)
}

// optional uint32 team_id = 3;
inline bool CMsgInviteToParty::_internal_has_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgInviteToParty::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgInviteToParty::clear_team_id() {
  _impl_.team_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgInviteToParty::_internal_team_id() const {
  return _impl_.team_id_;
}
inline uint32_t CMsgInviteToParty::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToParty.team_id)
  return _internal_team_id();
}
inline void CMsgInviteToParty::_internal_set_team_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.team_id_ = value;
}
inline void CMsgInviteToParty::set_team_id(uint32_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgInviteToParty.team_id)
}

// optional bool as_coach = 4;
inline bool CMsgInviteToParty::_internal_has_as_coach() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgInviteToParty::has_as_coach() const {
  return _internal_has_as_coach();
}
inline void CMsgInviteToParty::clear_as_coach() {
  _impl_.as_coach_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgInviteToParty::_internal_as_coach() const {
  return _impl_.as_coach_;
}
inline bool CMsgInviteToParty::as_coach() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToParty.as_coach)
  return _internal_as_coach();
}
inline void CMsgInviteToParty::_internal_set_as_coach(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.as_coach_ = value;
}
inline void CMsgInviteToParty::set_as_coach(bool value) {
  _internal_set_as_coach(value);
  // @@protoc_insertion_point(field_set:CMsgInviteToParty.as_coach)
}

// optional .CMsgClientPingData ping_data = 5;
inline bool CMsgInviteToParty::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_data_ != nullptr);
  return value;
}
inline bool CMsgInviteToParty::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CMsgInviteToParty::clear_ping_data() {
  if (_impl_.ping_data_ != nullptr) _impl_.ping_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgClientPingData& CMsgInviteToParty::_internal_ping_data() const {
  const ::CMsgClientPingData* p = _impl_.ping_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientPingData&>(
      ::_CMsgClientPingData_default_instance_);
}
inline const ::CMsgClientPingData& CMsgInviteToParty::ping_data() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToParty.ping_data)
  return _internal_ping_data();
}
inline void CMsgInviteToParty::unsafe_arena_set_allocated_ping_data(
    ::CMsgClientPingData* ping_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_data_);
  }
  _impl_.ping_data_ = ping_data;
  if (ping_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgInviteToParty.ping_data)
}
inline ::CMsgClientPingData* CMsgInviteToParty::release_ping_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPingData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgClientPingData* CMsgInviteToParty::unsafe_arena_release_ping_data() {
  // @@protoc_insertion_point(field_release:CMsgInviteToParty.ping_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPingData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
  return temp;
}
inline ::CMsgClientPingData* CMsgInviteToParty::_internal_mutable_ping_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ping_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientPingData>(GetArenaForAllocation());
    _impl_.ping_data_ = p;
  }
  return _impl_.ping_data_;
}
inline ::CMsgClientPingData* CMsgInviteToParty::mutable_ping_data() {
  ::CMsgClientPingData* _msg = _internal_mutable_ping_data();
  // @@protoc_insertion_point(field_mutable:CMsgInviteToParty.ping_data)
  return _msg;
}
inline void CMsgInviteToParty::set_allocated_ping_data(::CMsgClientPingData* ping_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ping_data_;
  }
  if (ping_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ping_data);
    if (message_arena != submessage_arena) {
      ping_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ping_data_ = ping_data;
  // @@protoc_insertion_point(field_set_allocated:CMsgInviteToParty.ping_data)
}

// -------------------------------------------------------------------

// CMsgInviteToLobby

// optional fixed64 steam_id = 1;
inline bool CMsgInviteToLobby::_internal_has_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgInviteToLobby::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgInviteToLobby::clear_steam_id() {
  _impl_.steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgInviteToLobby::_internal_steam_id() const {
  return _impl_.steam_id_;
}
inline uint64_t CMsgInviteToLobby::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToLobby.steam_id)
  return _internal_steam_id();
}
inline void CMsgInviteToLobby::_internal_set_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.steam_id_ = value;
}
inline void CMsgInviteToLobby::set_steam_id(uint64_t value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgInviteToLobby.steam_id)
}

// optional uint32 client_version = 2;
inline bool CMsgInviteToLobby::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgInviteToLobby::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgInviteToLobby::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgInviteToLobby::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgInviteToLobby::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgInviteToLobby.client_version)
  return _internal_client_version();
}
inline void CMsgInviteToLobby::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_version_ = value;
}
inline void CMsgInviteToLobby::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgInviteToLobby.client_version)
}

// -------------------------------------------------------------------

// CMsgInvitationCreated

// optional uint64 group_id = 1;
inline bool CMsgInvitationCreated::_internal_has_group_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgInvitationCreated::has_group_id() const {
  return _internal_has_group_id();
}
inline void CMsgInvitationCreated::clear_group_id() {
  _impl_.group_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgInvitationCreated::_internal_group_id() const {
  return _impl_.group_id_;
}
inline uint64_t CMsgInvitationCreated::group_id() const {
  // @@protoc_insertion_point(field_get:CMsgInvitationCreated.group_id)
  return _internal_group_id();
}
inline void CMsgInvitationCreated::_internal_set_group_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.group_id_ = value;
}
inline void CMsgInvitationCreated::set_group_id(uint64_t value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:CMsgInvitationCreated.group_id)
}

// optional fixed64 steam_id = 2;
inline bool CMsgInvitationCreated::_internal_has_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgInvitationCreated::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgInvitationCreated::clear_steam_id() {
  _impl_.steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgInvitationCreated::_internal_steam_id() const {
  return _impl_.steam_id_;
}
inline uint64_t CMsgInvitationCreated::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgInvitationCreated.steam_id)
  return _internal_steam_id();
}
inline void CMsgInvitationCreated::_internal_set_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.steam_id_ = value;
}
inline void CMsgInvitationCreated::set_steam_id(uint64_t value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgInvitationCreated.steam_id)
}

// optional bool user_offline = 3;
inline bool CMsgInvitationCreated::_internal_has_user_offline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgInvitationCreated::has_user_offline() const {
  return _internal_has_user_offline();
}
inline void CMsgInvitationCreated::clear_user_offline() {
  _impl_.user_offline_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgInvitationCreated::_internal_user_offline() const {
  return _impl_.user_offline_;
}
inline bool CMsgInvitationCreated::user_offline() const {
  // @@protoc_insertion_point(field_get:CMsgInvitationCreated.user_offline)
  return _internal_user_offline();
}
inline void CMsgInvitationCreated::_internal_set_user_offline(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.user_offline_ = value;
}
inline void CMsgInvitationCreated::set_user_offline(bool value) {
  _internal_set_user_offline(value);
  // @@protoc_insertion_point(field_set:CMsgInvitationCreated.user_offline)
}

// -------------------------------------------------------------------

// CMsgPartyInviteResponse

// optional uint64 party_id = 1;
inline bool CMsgPartyInviteResponse::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgPartyInviteResponse::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgPartyInviteResponse::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgPartyInviteResponse::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgPartyInviteResponse::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInviteResponse.party_id)
  return _internal_party_id();
}
inline void CMsgPartyInviteResponse::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.party_id_ = value;
}
inline void CMsgPartyInviteResponse::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgPartyInviteResponse.party_id)
}

// optional bool accept = 2;
inline bool CMsgPartyInviteResponse::_internal_has_accept() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgPartyInviteResponse::has_accept() const {
  return _internal_has_accept();
}
inline void CMsgPartyInviteResponse::clear_accept() {
  _impl_.accept_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgPartyInviteResponse::_internal_accept() const {
  return _impl_.accept_;
}
inline bool CMsgPartyInviteResponse::accept() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInviteResponse.accept)
  return _internal_accept();
}
inline void CMsgPartyInviteResponse::_internal_set_accept(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.accept_ = value;
}
inline void CMsgPartyInviteResponse::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:CMsgPartyInviteResponse.accept)
}

// optional uint32 client_version = 3;
inline bool CMsgPartyInviteResponse::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgPartyInviteResponse::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgPartyInviteResponse::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgPartyInviteResponse::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgPartyInviteResponse::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInviteResponse.client_version)
  return _internal_client_version();
}
inline void CMsgPartyInviteResponse::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.client_version_ = value;
}
inline void CMsgPartyInviteResponse::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgPartyInviteResponse.client_version)
}

// optional .CMsgClientPingData ping_data = 8;
inline bool CMsgPartyInviteResponse::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_data_ != nullptr);
  return value;
}
inline bool CMsgPartyInviteResponse::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CMsgPartyInviteResponse::clear_ping_data() {
  if (_impl_.ping_data_ != nullptr) _impl_.ping_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgClientPingData& CMsgPartyInviteResponse::_internal_ping_data() const {
  const ::CMsgClientPingData* p = _impl_.ping_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientPingData&>(
      ::_CMsgClientPingData_default_instance_);
}
inline const ::CMsgClientPingData& CMsgPartyInviteResponse::ping_data() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInviteResponse.ping_data)
  return _internal_ping_data();
}
inline void CMsgPartyInviteResponse::unsafe_arena_set_allocated_ping_data(
    ::CMsgClientPingData* ping_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_data_);
  }
  _impl_.ping_data_ = ping_data;
  if (ping_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPartyInviteResponse.ping_data)
}
inline ::CMsgClientPingData* CMsgPartyInviteResponse::release_ping_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPingData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgClientPingData* CMsgPartyInviteResponse::unsafe_arena_release_ping_data() {
  // @@protoc_insertion_point(field_release:CMsgPartyInviteResponse.ping_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPingData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
  return temp;
}
inline ::CMsgClientPingData* CMsgPartyInviteResponse::_internal_mutable_ping_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ping_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientPingData>(GetArenaForAllocation());
    _impl_.ping_data_ = p;
  }
  return _impl_.ping_data_;
}
inline ::CMsgClientPingData* CMsgPartyInviteResponse::mutable_ping_data() {
  ::CMsgClientPingData* _msg = _internal_mutable_ping_data();
  // @@protoc_insertion_point(field_mutable:CMsgPartyInviteResponse.ping_data)
  return _msg;
}
inline void CMsgPartyInviteResponse::set_allocated_ping_data(::CMsgClientPingData* ping_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ping_data_;
  }
  if (ping_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ping_data);
    if (message_arena != submessage_arena) {
      ping_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ping_data_ = ping_data;
  // @@protoc_insertion_point(field_set_allocated:CMsgPartyInviteResponse.ping_data)
}

// -------------------------------------------------------------------

// CMsgLobbyInviteResponse

// optional fixed64 lobby_id = 1;
inline bool CMsgLobbyInviteResponse::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgLobbyInviteResponse::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgLobbyInviteResponse::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgLobbyInviteResponse::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgLobbyInviteResponse::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyInviteResponse.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgLobbyInviteResponse::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lobby_id_ = value;
}
inline void CMsgLobbyInviteResponse::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgLobbyInviteResponse.lobby_id)
}

// optional bool accept = 2;
inline bool CMsgLobbyInviteResponse::_internal_has_accept() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgLobbyInviteResponse::has_accept() const {
  return _internal_has_accept();
}
inline void CMsgLobbyInviteResponse::clear_accept() {
  _impl_.accept_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgLobbyInviteResponse::_internal_accept() const {
  return _impl_.accept_;
}
inline bool CMsgLobbyInviteResponse::accept() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyInviteResponse.accept)
  return _internal_accept();
}
inline void CMsgLobbyInviteResponse::_internal_set_accept(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.accept_ = value;
}
inline void CMsgLobbyInviteResponse::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:CMsgLobbyInviteResponse.accept)
}

// optional uint32 client_version = 3;
inline bool CMsgLobbyInviteResponse::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgLobbyInviteResponse::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgLobbyInviteResponse::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgLobbyInviteResponse::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgLobbyInviteResponse::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyInviteResponse.client_version)
  return _internal_client_version();
}
inline void CMsgLobbyInviteResponse::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_version_ = value;
}
inline void CMsgLobbyInviteResponse::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgLobbyInviteResponse.client_version)
}

// optional fixed64 custom_game_crc = 6;
inline bool CMsgLobbyInviteResponse::_internal_has_custom_game_crc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgLobbyInviteResponse::has_custom_game_crc() const {
  return _internal_has_custom_game_crc();
}
inline void CMsgLobbyInviteResponse::clear_custom_game_crc() {
  _impl_.custom_game_crc_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgLobbyInviteResponse::_internal_custom_game_crc() const {
  return _impl_.custom_game_crc_;
}
inline uint64_t CMsgLobbyInviteResponse::custom_game_crc() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyInviteResponse.custom_game_crc)
  return _internal_custom_game_crc();
}
inline void CMsgLobbyInviteResponse::_internal_set_custom_game_crc(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.custom_game_crc_ = value;
}
inline void CMsgLobbyInviteResponse::set_custom_game_crc(uint64_t value) {
  _internal_set_custom_game_crc(value);
  // @@protoc_insertion_point(field_set:CMsgLobbyInviteResponse.custom_game_crc)
}

// optional fixed32 custom_game_timestamp = 7;
inline bool CMsgLobbyInviteResponse::_internal_has_custom_game_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgLobbyInviteResponse::has_custom_game_timestamp() const {
  return _internal_has_custom_game_timestamp();
}
inline void CMsgLobbyInviteResponse::clear_custom_game_timestamp() {
  _impl_.custom_game_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgLobbyInviteResponse::_internal_custom_game_timestamp() const {
  return _impl_.custom_game_timestamp_;
}
inline uint32_t CMsgLobbyInviteResponse::custom_game_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgLobbyInviteResponse.custom_game_timestamp)
  return _internal_custom_game_timestamp();
}
inline void CMsgLobbyInviteResponse::_internal_set_custom_game_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.custom_game_timestamp_ = value;
}
inline void CMsgLobbyInviteResponse::set_custom_game_timestamp(uint32_t value) {
  _internal_set_custom_game_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgLobbyInviteResponse.custom_game_timestamp)
}

// -------------------------------------------------------------------

// CMsgKickFromParty

// optional fixed64 steam_id = 1;
inline bool CMsgKickFromParty::_internal_has_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgKickFromParty::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgKickFromParty::clear_steam_id() {
  _impl_.steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgKickFromParty::_internal_steam_id() const {
  return _impl_.steam_id_;
}
inline uint64_t CMsgKickFromParty::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgKickFromParty.steam_id)
  return _internal_steam_id();
}
inline void CMsgKickFromParty::_internal_set_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.steam_id_ = value;
}
inline void CMsgKickFromParty::set_steam_id(uint64_t value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgKickFromParty.steam_id)
}

// -------------------------------------------------------------------

// CMsgLeaveParty

// -------------------------------------------------------------------

// CMsgCustomGameInstallStatus

// optional .ECustomGameInstallStatus status = 1 [default = k_ECustomGameInstallStatus_Unknown];
inline bool CMsgCustomGameInstallStatus::_internal_has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCustomGameInstallStatus::has_status() const {
  return _internal_has_status();
}
inline void CMsgCustomGameInstallStatus::clear_status() {
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ECustomGameInstallStatus CMsgCustomGameInstallStatus::_internal_status() const {
  return static_cast< ::ECustomGameInstallStatus >(_impl_.status_);
}
inline ::ECustomGameInstallStatus CMsgCustomGameInstallStatus::status() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameInstallStatus.status)
  return _internal_status();
}
inline void CMsgCustomGameInstallStatus::_internal_set_status(::ECustomGameInstallStatus value) {
  assert(::ECustomGameInstallStatus_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.status_ = value;
}
inline void CMsgCustomGameInstallStatus::set_status(::ECustomGameInstallStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:CMsgCustomGameInstallStatus.status)
}

// optional string message = 2;
inline bool CMsgCustomGameInstallStatus::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCustomGameInstallStatus::has_message() const {
  return _internal_has_message();
}
inline void CMsgCustomGameInstallStatus::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgCustomGameInstallStatus::message() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameInstallStatus.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgCustomGameInstallStatus::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgCustomGameInstallStatus.message)
}
inline std::string* CMsgCustomGameInstallStatus::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CMsgCustomGameInstallStatus.message)
  return _s;
}
inline const std::string& CMsgCustomGameInstallStatus::_internal_message() const {
  return _impl_.message_.Get();
}
inline void CMsgCustomGameInstallStatus::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgCustomGameInstallStatus::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgCustomGameInstallStatus::release_message() {
  // @@protoc_insertion_point(field_release:CMsgCustomGameInstallStatus.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgCustomGameInstallStatus::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgCustomGameInstallStatus.message)
}

// optional fixed32 latest_timestamp_from_steam = 3;
inline bool CMsgCustomGameInstallStatus::_internal_has_latest_timestamp_from_steam() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgCustomGameInstallStatus::has_latest_timestamp_from_steam() const {
  return _internal_has_latest_timestamp_from_steam();
}
inline void CMsgCustomGameInstallStatus::clear_latest_timestamp_from_steam() {
  _impl_.latest_timestamp_from_steam_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgCustomGameInstallStatus::_internal_latest_timestamp_from_steam() const {
  return _impl_.latest_timestamp_from_steam_;
}
inline uint32_t CMsgCustomGameInstallStatus::latest_timestamp_from_steam() const {
  // @@protoc_insertion_point(field_get:CMsgCustomGameInstallStatus.latest_timestamp_from_steam)
  return _internal_latest_timestamp_from_steam();
}
inline void CMsgCustomGameInstallStatus::_internal_set_latest_timestamp_from_steam(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.latest_timestamp_from_steam_ = value;
}
inline void CMsgCustomGameInstallStatus::set_latest_timestamp_from_steam(uint32_t value) {
  _internal_set_latest_timestamp_from_steam(value);
  // @@protoc_insertion_point(field_set:CMsgCustomGameInstallStatus.latest_timestamp_from_steam)
}

// -------------------------------------------------------------------

// CMsgServerAvailable

// optional .CMsgCustomGameInstallStatus custom_game_install_status = 1;
inline bool CMsgServerAvailable::_internal_has_custom_game_install_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.custom_game_install_status_ != nullptr);
  return value;
}
inline bool CMsgServerAvailable::has_custom_game_install_status() const {
  return _internal_has_custom_game_install_status();
}
inline void CMsgServerAvailable::clear_custom_game_install_status() {
  if (_impl_.custom_game_install_status_ != nullptr) _impl_.custom_game_install_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgCustomGameInstallStatus& CMsgServerAvailable::_internal_custom_game_install_status() const {
  const ::CMsgCustomGameInstallStatus* p = _impl_.custom_game_install_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgCustomGameInstallStatus&>(
      ::_CMsgCustomGameInstallStatus_default_instance_);
}
inline const ::CMsgCustomGameInstallStatus& CMsgServerAvailable::custom_game_install_status() const {
  // @@protoc_insertion_point(field_get:CMsgServerAvailable.custom_game_install_status)
  return _internal_custom_game_install_status();
}
inline void CMsgServerAvailable::unsafe_arena_set_allocated_custom_game_install_status(
    ::CMsgCustomGameInstallStatus* custom_game_install_status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.custom_game_install_status_);
  }
  _impl_.custom_game_install_status_ = custom_game_install_status;
  if (custom_game_install_status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgServerAvailable.custom_game_install_status)
}
inline ::CMsgCustomGameInstallStatus* CMsgServerAvailable::release_custom_game_install_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgCustomGameInstallStatus* temp = _impl_.custom_game_install_status_;
  _impl_.custom_game_install_status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgCustomGameInstallStatus* CMsgServerAvailable::unsafe_arena_release_custom_game_install_status() {
  // @@protoc_insertion_point(field_release:CMsgServerAvailable.custom_game_install_status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgCustomGameInstallStatus* temp = _impl_.custom_game_install_status_;
  _impl_.custom_game_install_status_ = nullptr;
  return temp;
}
inline ::CMsgCustomGameInstallStatus* CMsgServerAvailable::_internal_mutable_custom_game_install_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.custom_game_install_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgCustomGameInstallStatus>(GetArenaForAllocation());
    _impl_.custom_game_install_status_ = p;
  }
  return _impl_.custom_game_install_status_;
}
inline ::CMsgCustomGameInstallStatus* CMsgServerAvailable::mutable_custom_game_install_status() {
  ::CMsgCustomGameInstallStatus* _msg = _internal_mutable_custom_game_install_status();
  // @@protoc_insertion_point(field_mutable:CMsgServerAvailable.custom_game_install_status)
  return _msg;
}
inline void CMsgServerAvailable::set_allocated_custom_game_install_status(::CMsgCustomGameInstallStatus* custom_game_install_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.custom_game_install_status_;
  }
  if (custom_game_install_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_game_install_status);
    if (message_arena != submessage_arena) {
      custom_game_install_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_game_install_status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.custom_game_install_status_ = custom_game_install_status;
  // @@protoc_insertion_point(field_set_allocated:CMsgServerAvailable.custom_game_install_status)
}

// -------------------------------------------------------------------

// CMsgLANServerAvailable

// optional fixed64 lobby_id = 1;
inline bool CMsgLANServerAvailable::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgLANServerAvailable::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgLANServerAvailable::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgLANServerAvailable::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgLANServerAvailable::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgLANServerAvailable.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgLANServerAvailable::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lobby_id_ = value;
}
inline void CMsgLANServerAvailable::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgLANServerAvailable.lobby_id)
}

// -------------------------------------------------------------------

// CSOEconGameAccountClient

// optional uint32 additional_backpack_slots = 1 [default = 0];
inline bool CSOEconGameAccountClient::_internal_has_additional_backpack_slots() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_additional_backpack_slots() const {
  return _internal_has_additional_backpack_slots();
}
inline void CSOEconGameAccountClient::clear_additional_backpack_slots() {
  _impl_.additional_backpack_slots_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CSOEconGameAccountClient::_internal_additional_backpack_slots() const {
  return _impl_.additional_backpack_slots_;
}
inline uint32_t CSOEconGameAccountClient::additional_backpack_slots() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.additional_backpack_slots)
  return _internal_additional_backpack_slots();
}
inline void CSOEconGameAccountClient::_internal_set_additional_backpack_slots(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.additional_backpack_slots_ = value;
}
inline void CSOEconGameAccountClient::set_additional_backpack_slots(uint32_t value) {
  _internal_set_additional_backpack_slots(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.additional_backpack_slots)
}

// optional bool trial_account = 2 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_trial_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_trial_account() const {
  return _internal_has_trial_account();
}
inline void CSOEconGameAccountClient::clear_trial_account() {
  _impl_.trial_account_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CSOEconGameAccountClient::_internal_trial_account() const {
  return _impl_.trial_account_;
}
inline bool CSOEconGameAccountClient::trial_account() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.trial_account)
  return _internal_trial_account();
}
inline void CSOEconGameAccountClient::_internal_set_trial_account(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.trial_account_ = value;
}
inline void CSOEconGameAccountClient::set_trial_account(bool value) {
  _internal_set_trial_account(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.trial_account)
}

// optional bool eligible_for_online_play = 3 [default = true];
inline bool CSOEconGameAccountClient::_internal_has_eligible_for_online_play() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_eligible_for_online_play() const {
  return _internal_has_eligible_for_online_play();
}
inline void CSOEconGameAccountClient::clear_eligible_for_online_play() {
  _impl_.eligible_for_online_play_ = true;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool CSOEconGameAccountClient::_internal_eligible_for_online_play() const {
  return _impl_.eligible_for_online_play_;
}
inline bool CSOEconGameAccountClient::eligible_for_online_play() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.eligible_for_online_play)
  return _internal_eligible_for_online_play();
}
inline void CSOEconGameAccountClient::_internal_set_eligible_for_online_play(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.eligible_for_online_play_ = value;
}
inline void CSOEconGameAccountClient::set_eligible_for_online_play(bool value) {
  _internal_set_eligible_for_online_play(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.eligible_for_online_play)
}

// optional bool need_to_choose_most_helpful_friend = 4;
inline bool CSOEconGameAccountClient::_internal_has_need_to_choose_most_helpful_friend() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_need_to_choose_most_helpful_friend() const {
  return _internal_has_need_to_choose_most_helpful_friend();
}
inline void CSOEconGameAccountClient::clear_need_to_choose_most_helpful_friend() {
  _impl_.need_to_choose_most_helpful_friend_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CSOEconGameAccountClient::_internal_need_to_choose_most_helpful_friend() const {
  return _impl_.need_to_choose_most_helpful_friend_;
}
inline bool CSOEconGameAccountClient::need_to_choose_most_helpful_friend() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.need_to_choose_most_helpful_friend)
  return _internal_need_to_choose_most_helpful_friend();
}
inline void CSOEconGameAccountClient::_internal_set_need_to_choose_most_helpful_friend(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.need_to_choose_most_helpful_friend_ = value;
}
inline void CSOEconGameAccountClient::set_need_to_choose_most_helpful_friend(bool value) {
  _internal_set_need_to_choose_most_helpful_friend(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.need_to_choose_most_helpful_friend)
}

// optional bool in_coaches_list = 5;
inline bool CSOEconGameAccountClient::_internal_has_in_coaches_list() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_in_coaches_list() const {
  return _internal_has_in_coaches_list();
}
inline void CSOEconGameAccountClient::clear_in_coaches_list() {
  _impl_.in_coaches_list_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CSOEconGameAccountClient::_internal_in_coaches_list() const {
  return _impl_.in_coaches_list_;
}
inline bool CSOEconGameAccountClient::in_coaches_list() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.in_coaches_list)
  return _internal_in_coaches_list();
}
inline void CSOEconGameAccountClient::_internal_set_in_coaches_list(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.in_coaches_list_ = value;
}
inline void CSOEconGameAccountClient::set_in_coaches_list(bool value) {
  _internal_set_in_coaches_list(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.in_coaches_list)
}

// optional fixed32 trade_ban_expiration = 6;
inline bool CSOEconGameAccountClient::_internal_has_trade_ban_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_trade_ban_expiration() const {
  return _internal_has_trade_ban_expiration();
}
inline void CSOEconGameAccountClient::clear_trade_ban_expiration() {
  _impl_.trade_ban_expiration_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CSOEconGameAccountClient::_internal_trade_ban_expiration() const {
  return _impl_.trade_ban_expiration_;
}
inline uint32_t CSOEconGameAccountClient::trade_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.trade_ban_expiration)
  return _internal_trade_ban_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_trade_ban_expiration(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.trade_ban_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_trade_ban_expiration(uint32_t value) {
  _internal_set_trade_ban_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.trade_ban_expiration)
}

// optional fixed32 duel_ban_expiration = 7;
inline bool CSOEconGameAccountClient::_internal_has_duel_ban_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_duel_ban_expiration() const {
  return _internal_has_duel_ban_expiration();
}
inline void CSOEconGameAccountClient::clear_duel_ban_expiration() {
  _impl_.duel_ban_expiration_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CSOEconGameAccountClient::_internal_duel_ban_expiration() const {
  return _impl_.duel_ban_expiration_;
}
inline uint32_t CSOEconGameAccountClient::duel_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.duel_ban_expiration)
  return _internal_duel_ban_expiration();
}
inline void CSOEconGameAccountClient::_internal_set_duel_ban_expiration(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.duel_ban_expiration_ = value;
}
inline void CSOEconGameAccountClient::set_duel_ban_expiration(uint32_t value) {
  _internal_set_duel_ban_expiration(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.duel_ban_expiration)
}

// optional bool made_first_purchase = 9 [default = false];
inline bool CSOEconGameAccountClient::_internal_has_made_first_purchase() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOEconGameAccountClient::has_made_first_purchase() const {
  return _internal_has_made_first_purchase();
}
inline void CSOEconGameAccountClient::clear_made_first_purchase() {
  _impl_.made_first_purchase_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CSOEconGameAccountClient::_internal_made_first_purchase() const {
  return _impl_.made_first_purchase_;
}
inline bool CSOEconGameAccountClient::made_first_purchase() const {
  // @@protoc_insertion_point(field_get:CSOEconGameAccountClient.made_first_purchase)
  return _internal_made_first_purchase();
}
inline void CSOEconGameAccountClient::_internal_set_made_first_purchase(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.made_first_purchase_ = value;
}
inline void CSOEconGameAccountClient::set_made_first_purchase(bool value) {
  _internal_set_made_first_purchase(value);
  // @@protoc_insertion_point(field_set:CSOEconGameAccountClient.made_first_purchase)
}

// -------------------------------------------------------------------

// CMsgApplyStrangePart

// optional uint64 strange_part_item_id = 1;
inline bool CMsgApplyStrangePart::_internal_has_strange_part_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyStrangePart::has_strange_part_item_id() const {
  return _internal_has_strange_part_item_id();
}
inline void CMsgApplyStrangePart::clear_strange_part_item_id() {
  _impl_.strange_part_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgApplyStrangePart::_internal_strange_part_item_id() const {
  return _impl_.strange_part_item_id_;
}
inline uint64_t CMsgApplyStrangePart::strange_part_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangePart.strange_part_item_id)
  return _internal_strange_part_item_id();
}
inline void CMsgApplyStrangePart::_internal_set_strange_part_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.strange_part_item_id_ = value;
}
inline void CMsgApplyStrangePart::set_strange_part_item_id(uint64_t value) {
  _internal_set_strange_part_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangePart.strange_part_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgApplyStrangePart::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyStrangePart::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgApplyStrangePart::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgApplyStrangePart::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgApplyStrangePart::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyStrangePart.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgApplyStrangePart::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_item_id_ = value;
}
inline void CMsgApplyStrangePart::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyStrangePart.item_item_id)
}

// -------------------------------------------------------------------

// CMsgApplyPennantUpgrade

// optional uint64 upgrade_item_id = 1;
inline bool CMsgApplyPennantUpgrade::_internal_has_upgrade_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyPennantUpgrade::has_upgrade_item_id() const {
  return _internal_has_upgrade_item_id();
}
inline void CMsgApplyPennantUpgrade::clear_upgrade_item_id() {
  _impl_.upgrade_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgApplyPennantUpgrade::_internal_upgrade_item_id() const {
  return _impl_.upgrade_item_id_;
}
inline uint64_t CMsgApplyPennantUpgrade::upgrade_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyPennantUpgrade.upgrade_item_id)
  return _internal_upgrade_item_id();
}
inline void CMsgApplyPennantUpgrade::_internal_set_upgrade_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.upgrade_item_id_ = value;
}
inline void CMsgApplyPennantUpgrade::set_upgrade_item_id(uint64_t value) {
  _internal_set_upgrade_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyPennantUpgrade.upgrade_item_id)
}

// optional uint64 pennant_item_id = 2;
inline bool CMsgApplyPennantUpgrade::_internal_has_pennant_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyPennantUpgrade::has_pennant_item_id() const {
  return _internal_has_pennant_item_id();
}
inline void CMsgApplyPennantUpgrade::clear_pennant_item_id() {
  _impl_.pennant_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgApplyPennantUpgrade::_internal_pennant_item_id() const {
  return _impl_.pennant_item_id_;
}
inline uint64_t CMsgApplyPennantUpgrade::pennant_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyPennantUpgrade.pennant_item_id)
  return _internal_pennant_item_id();
}
inline void CMsgApplyPennantUpgrade::_internal_set_pennant_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pennant_item_id_ = value;
}
inline void CMsgApplyPennantUpgrade::set_pennant_item_id(uint64_t value) {
  _internal_set_pennant_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyPennantUpgrade.pennant_item_id)
}

// -------------------------------------------------------------------

// CMsgApplyEggEssence

// optional uint64 essence_item_id = 1;
inline bool CMsgApplyEggEssence::_internal_has_essence_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyEggEssence::has_essence_item_id() const {
  return _internal_has_essence_item_id();
}
inline void CMsgApplyEggEssence::clear_essence_item_id() {
  _impl_.essence_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgApplyEggEssence::_internal_essence_item_id() const {
  return _impl_.essence_item_id_;
}
inline uint64_t CMsgApplyEggEssence::essence_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyEggEssence.essence_item_id)
  return _internal_essence_item_id();
}
inline void CMsgApplyEggEssence::_internal_set_essence_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.essence_item_id_ = value;
}
inline void CMsgApplyEggEssence::set_essence_item_id(uint64_t value) {
  _internal_set_essence_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyEggEssence.essence_item_id)
}

// optional uint64 egg_item_id = 2;
inline bool CMsgApplyEggEssence::_internal_has_egg_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyEggEssence::has_egg_item_id() const {
  return _internal_has_egg_item_id();
}
inline void CMsgApplyEggEssence::clear_egg_item_id() {
  _impl_.egg_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgApplyEggEssence::_internal_egg_item_id() const {
  return _impl_.egg_item_id_;
}
inline uint64_t CMsgApplyEggEssence::egg_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyEggEssence.egg_item_id)
  return _internal_egg_item_id();
}
inline void CMsgApplyEggEssence::_internal_set_egg_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.egg_item_id_ = value;
}
inline void CMsgApplyEggEssence::set_egg_item_id(uint64_t value) {
  _internal_set_egg_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyEggEssence.egg_item_id)
}

// -------------------------------------------------------------------

// CSOEconItemAttribute

// optional uint32 def_index = 1 [default = 65535];
inline bool CSOEconItemAttribute::_internal_has_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconItemAttribute::has_def_index() const {
  return _internal_has_def_index();
}
inline void CSOEconItemAttribute::clear_def_index() {
  _impl_.def_index_ = 65535u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CSOEconItemAttribute::_internal_def_index() const {
  return _impl_.def_index_;
}
inline uint32_t CSOEconItemAttribute::def_index() const {
  // @@protoc_insertion_point(field_get:CSOEconItemAttribute.def_index)
  return _internal_def_index();
}
inline void CSOEconItemAttribute::_internal_set_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.def_index_ = value;
}
inline void CSOEconItemAttribute::set_def_index(uint32_t value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CSOEconItemAttribute.def_index)
}

// optional uint32 value = 2;
inline bool CSOEconItemAttribute::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItemAttribute::has_value() const {
  return _internal_has_value();
}
inline void CSOEconItemAttribute::clear_value() {
  _impl_.value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOEconItemAttribute::_internal_value() const {
  return _impl_.value_;
}
inline uint32_t CSOEconItemAttribute::value() const {
  // @@protoc_insertion_point(field_get:CSOEconItemAttribute.value)
  return _internal_value();
}
inline void CSOEconItemAttribute::_internal_set_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_ = value;
}
inline void CSOEconItemAttribute::set_value(uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CSOEconItemAttribute.value)
}

// optional bytes value_bytes = 3;
inline bool CSOEconItemAttribute::_internal_has_value_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconItemAttribute::has_value_bytes() const {
  return _internal_has_value_bytes();
}
inline void CSOEconItemAttribute::clear_value_bytes() {
  _impl_.value_bytes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOEconItemAttribute::value_bytes() const {
  // @@protoc_insertion_point(field_get:CSOEconItemAttribute.value_bytes)
  return _internal_value_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOEconItemAttribute::set_value_bytes(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.value_bytes_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOEconItemAttribute.value_bytes)
}
inline std::string* CSOEconItemAttribute::mutable_value_bytes() {
  std::string* _s = _internal_mutable_value_bytes();
  // @@protoc_insertion_point(field_mutable:CSOEconItemAttribute.value_bytes)
  return _s;
}
inline const std::string& CSOEconItemAttribute::_internal_value_bytes() const {
  return _impl_.value_bytes_.Get();
}
inline void CSOEconItemAttribute::_internal_set_value_bytes(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_bytes_.Set(value, GetArenaForAllocation());
}
inline std::string* CSOEconItemAttribute::_internal_mutable_value_bytes() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.value_bytes_.Mutable(GetArenaForAllocation());
}
inline std::string* CSOEconItemAttribute::release_value_bytes() {
  // @@protoc_insertion_point(field_release:CSOEconItemAttribute.value_bytes)
  if (!_internal_has_value_bytes()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.value_bytes_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_bytes_.IsDefault()) {
    _impl_.value_bytes_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CSOEconItemAttribute::set_allocated_value_bytes(std::string* value_bytes) {
  if (value_bytes != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.value_bytes_.SetAllocated(value_bytes, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_bytes_.IsDefault()) {
    _impl_.value_bytes_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSOEconItemAttribute.value_bytes)
}

// -------------------------------------------------------------------

// CSOEconItemEquipped

// optional uint32 new_class = 1;
inline bool CSOEconItemEquipped::_internal_has_new_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOEconItemEquipped::has_new_class() const {
  return _internal_has_new_class();
}
inline void CSOEconItemEquipped::clear_new_class() {
  _impl_.new_class_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CSOEconItemEquipped::_internal_new_class() const {
  return _impl_.new_class_;
}
inline uint32_t CSOEconItemEquipped::new_class() const {
  // @@protoc_insertion_point(field_get:CSOEconItemEquipped.new_class)
  return _internal_new_class();
}
inline void CSOEconItemEquipped::_internal_set_new_class(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.new_class_ = value;
}
inline void CSOEconItemEquipped::set_new_class(uint32_t value) {
  _internal_set_new_class(value);
  // @@protoc_insertion_point(field_set:CSOEconItemEquipped.new_class)
}

// optional uint32 new_slot = 2;
inline bool CSOEconItemEquipped::_internal_has_new_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItemEquipped::has_new_slot() const {
  return _internal_has_new_slot();
}
inline void CSOEconItemEquipped::clear_new_slot() {
  _impl_.new_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOEconItemEquipped::_internal_new_slot() const {
  return _impl_.new_slot_;
}
inline uint32_t CSOEconItemEquipped::new_slot() const {
  // @@protoc_insertion_point(field_get:CSOEconItemEquipped.new_slot)
  return _internal_new_slot();
}
inline void CSOEconItemEquipped::_internal_set_new_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.new_slot_ = value;
}
inline void CSOEconItemEquipped::set_new_slot(uint32_t value) {
  _internal_set_new_slot(value);
  // @@protoc_insertion_point(field_set:CSOEconItemEquipped.new_slot)
}

// -------------------------------------------------------------------

// CSOEconItem

// optional uint64 id = 1;
inline bool CSOEconItem::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOEconItem::has_id() const {
  return _internal_has_id();
}
inline void CSOEconItem::clear_id() {
  _impl_.id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CSOEconItem::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t CSOEconItem::id() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.id)
  return _internal_id();
}
inline void CSOEconItem::_internal_set_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}
inline void CSOEconItem::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.id)
}

// optional uint32 account_id = 2;
inline bool CSOEconItem::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOEconItem::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOEconItem::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CSOEconItem::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOEconItem::account_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.account_id)
  return _internal_account_id();
}
inline void CSOEconItem::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.account_id_ = value;
}
inline void CSOEconItem::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.account_id)
}

// optional uint32 inventory = 3;
inline bool CSOEconItem::_internal_has_inventory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOEconItem::has_inventory() const {
  return _internal_has_inventory();
}
inline void CSOEconItem::clear_inventory() {
  _impl_.inventory_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CSOEconItem::_internal_inventory() const {
  return _impl_.inventory_;
}
inline uint32_t CSOEconItem::inventory() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.inventory)
  return _internal_inventory();
}
inline void CSOEconItem::_internal_set_inventory(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.inventory_ = value;
}
inline void CSOEconItem::set_inventory(uint32_t value) {
  _internal_set_inventory(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.inventory)
}

// optional uint32 def_index = 4;
inline bool CSOEconItem::_internal_has_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOEconItem::has_def_index() const {
  return _internal_has_def_index();
}
inline void CSOEconItem::clear_def_index() {
  _impl_.def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CSOEconItem::_internal_def_index() const {
  return _impl_.def_index_;
}
inline uint32_t CSOEconItem::def_index() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.def_index)
  return _internal_def_index();
}
inline void CSOEconItem::_internal_set_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.def_index_ = value;
}
inline void CSOEconItem::set_def_index(uint32_t value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.def_index)
}

// optional uint32 quantity = 5 [default = 1];
inline bool CSOEconItem::_internal_has_quantity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOEconItem::has_quantity() const {
  return _internal_has_quantity();
}
inline void CSOEconItem::clear_quantity() {
  _impl_.quantity_ = 1u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CSOEconItem::_internal_quantity() const {
  return _impl_.quantity_;
}
inline uint32_t CSOEconItem::quantity() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.quantity)
  return _internal_quantity();
}
inline void CSOEconItem::_internal_set_quantity(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.quantity_ = value;
}
inline void CSOEconItem::set_quantity(uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.quantity)
}

// optional uint32 level = 6 [default = 1];
inline bool CSOEconItem::_internal_has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CSOEconItem::has_level() const {
  return _internal_has_level();
}
inline void CSOEconItem::clear_level() {
  _impl_.level_ = 1u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CSOEconItem::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t CSOEconItem::level() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.level)
  return _internal_level();
}
inline void CSOEconItem::_internal_set_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.level_ = value;
}
inline void CSOEconItem::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.level)
}

// optional uint32 quality = 7 [default = 4];
inline bool CSOEconItem::_internal_has_quality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOEconItem::has_quality() const {
  return _internal_has_quality();
}
inline void CSOEconItem::clear_quality() {
  _impl_.quality_ = 4u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CSOEconItem::_internal_quality() const {
  return _impl_.quality_;
}
inline uint32_t CSOEconItem::quality() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.quality)
  return _internal_quality();
}
inline void CSOEconItem::_internal_set_quality(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.quality_ = value;
}
inline void CSOEconItem::set_quality(uint32_t value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.quality)
}

// optional uint32 flags = 8 [default = 0];
inline bool CSOEconItem::_internal_has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOEconItem::has_flags() const {
  return _internal_has_flags();
}
inline void CSOEconItem::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CSOEconItem::_internal_flags() const {
  return _impl_.flags_;
}
inline uint32_t CSOEconItem::flags() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.flags)
  return _internal_flags();
}
inline void CSOEconItem::_internal_set_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.flags_ = value;
}
inline void CSOEconItem::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.flags)
}

// optional uint32 origin = 9 [default = 0];
inline bool CSOEconItem::_internal_has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOEconItem::has_origin() const {
  return _internal_has_origin();
}
inline void CSOEconItem::clear_origin() {
  _impl_.origin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CSOEconItem::_internal_origin() const {
  return _impl_.origin_;
}
inline uint32_t CSOEconItem::origin() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.origin)
  return _internal_origin();
}
inline void CSOEconItem::_internal_set_origin(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.origin_ = value;
}
inline void CSOEconItem::set_origin(uint32_t value) {
  _internal_set_origin(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.origin)
}

// repeated .CSOEconItemAttribute attribute = 12;
inline int CSOEconItem::_internal_attribute_size() const {
  return _impl_.attribute_.size();
}
inline int CSOEconItem::attribute_size() const {
  return _internal_attribute_size();
}
inline void CSOEconItem::clear_attribute() {
  _impl_.attribute_.Clear();
}
inline ::CSOEconItemAttribute* CSOEconItem::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.attribute)
  return _impl_.attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >*
CSOEconItem::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:CSOEconItem.attribute)
  return &_impl_.attribute_;
}
inline const ::CSOEconItemAttribute& CSOEconItem::_internal_attribute(int index) const {
  return _impl_.attribute_.Get(index);
}
inline const ::CSOEconItemAttribute& CSOEconItem::attribute(int index) const {
  // @@protoc_insertion_point(field_get:CSOEconItem.attribute)
  return _internal_attribute(index);
}
inline ::CSOEconItemAttribute* CSOEconItem::_internal_add_attribute() {
  return _impl_.attribute_.Add();
}
inline ::CSOEconItemAttribute* CSOEconItem::add_attribute() {
  ::CSOEconItemAttribute* _add = _internal_add_attribute();
  // @@protoc_insertion_point(field_add:CSOEconItem.attribute)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemAttribute >&
CSOEconItem::attribute() const {
  // @@protoc_insertion_point(field_list:CSOEconItem.attribute)
  return _impl_.attribute_;
}

// optional .CSOEconItem interior_item = 13;
inline bool CSOEconItem::_internal_has_interior_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.interior_item_ != nullptr);
  return value;
}
inline bool CSOEconItem::has_interior_item() const {
  return _internal_has_interior_item();
}
inline void CSOEconItem::clear_interior_item() {
  if (_impl_.interior_item_ != nullptr) _impl_.interior_item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CSOEconItem& CSOEconItem::_internal_interior_item() const {
  const ::CSOEconItem* p = _impl_.interior_item_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSOEconItem&>(
      ::_CSOEconItem_default_instance_);
}
inline const ::CSOEconItem& CSOEconItem::interior_item() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.interior_item)
  return _internal_interior_item();
}
inline void CSOEconItem::unsafe_arena_set_allocated_interior_item(
    ::CSOEconItem* interior_item) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.interior_item_);
  }
  _impl_.interior_item_ = interior_item;
  if (interior_item) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSOEconItem.interior_item)
}
inline ::CSOEconItem* CSOEconItem::release_interior_item() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSOEconItem* temp = _impl_.interior_item_;
  _impl_.interior_item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CSOEconItem* CSOEconItem::unsafe_arena_release_interior_item() {
  // @@protoc_insertion_point(field_release:CSOEconItem.interior_item)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSOEconItem* temp = _impl_.interior_item_;
  _impl_.interior_item_ = nullptr;
  return temp;
}
inline ::CSOEconItem* CSOEconItem::_internal_mutable_interior_item() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.interior_item_ == nullptr) {
    auto* p = CreateMaybeMessage<::CSOEconItem>(GetArenaForAllocation());
    _impl_.interior_item_ = p;
  }
  return _impl_.interior_item_;
}
inline ::CSOEconItem* CSOEconItem::mutable_interior_item() {
  ::CSOEconItem* _msg = _internal_mutable_interior_item();
  // @@protoc_insertion_point(field_mutable:CSOEconItem.interior_item)
  return _msg;
}
inline void CSOEconItem::set_allocated_interior_item(::CSOEconItem* interior_item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.interior_item_;
  }
  if (interior_item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interior_item);
    if (message_arena != submessage_arena) {
      interior_item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interior_item, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.interior_item_ = interior_item;
  // @@protoc_insertion_point(field_set_allocated:CSOEconItem.interior_item)
}

// optional uint32 style = 15 [default = 0];
inline bool CSOEconItem::_internal_has_style() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOEconItem::has_style() const {
  return _internal_has_style();
}
inline void CSOEconItem::clear_style() {
  _impl_.style_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CSOEconItem::_internal_style() const {
  return _impl_.style_;
}
inline uint32_t CSOEconItem::style() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.style)
  return _internal_style();
}
inline void CSOEconItem::_internal_set_style(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.style_ = value;
}
inline void CSOEconItem::set_style(uint32_t value) {
  _internal_set_style(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.style)
}

// optional uint64 original_id = 16;
inline bool CSOEconItem::_internal_has_original_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOEconItem::has_original_id() const {
  return _internal_has_original_id();
}
inline void CSOEconItem::clear_original_id() {
  _impl_.original_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint64_t CSOEconItem::_internal_original_id() const {
  return _impl_.original_id_;
}
inline uint64_t CSOEconItem::original_id() const {
  // @@protoc_insertion_point(field_get:CSOEconItem.original_id)
  return _internal_original_id();
}
inline void CSOEconItem::_internal_set_original_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.original_id_ = value;
}
inline void CSOEconItem::set_original_id(uint64_t value) {
  _internal_set_original_id(value);
  // @@protoc_insertion_point(field_set:CSOEconItem.original_id)
}

// repeated .CSOEconItemEquipped equipped_state = 18;
inline int CSOEconItem::_internal_equipped_state_size() const {
  return _impl_.equipped_state_.size();
}
inline int CSOEconItem::equipped_state_size() const {
  return _internal_equipped_state_size();
}
inline void CSOEconItem::clear_equipped_state() {
  _impl_.equipped_state_.Clear();
}
inline ::CSOEconItemEquipped* CSOEconItem::mutable_equipped_state(int index) {
  // @@protoc_insertion_point(field_mutable:CSOEconItem.equipped_state)
  return _impl_.equipped_state_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >*
CSOEconItem::mutable_equipped_state() {
  // @@protoc_insertion_point(field_mutable_list:CSOEconItem.equipped_state)
  return &_impl_.equipped_state_;
}
inline const ::CSOEconItemEquipped& CSOEconItem::_internal_equipped_state(int index) const {
  return _impl_.equipped_state_.Get(index);
}
inline const ::CSOEconItemEquipped& CSOEconItem::equipped_state(int index) const {
  // @@protoc_insertion_point(field_get:CSOEconItem.equipped_state)
  return _internal_equipped_state(index);
}
inline ::CSOEconItemEquipped* CSOEconItem::_internal_add_equipped_state() {
  return _impl_.equipped_state_.Add();
}
inline ::CSOEconItemEquipped* CSOEconItem::add_equipped_state() {
  ::CSOEconItemEquipped* _add = _internal_add_equipped_state();
  // @@protoc_insertion_point(field_add:CSOEconItem.equipped_state)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOEconItemEquipped >&
CSOEconItem::equipped_state() const {
  // @@protoc_insertion_point(field_list:CSOEconItem.equipped_state)
  return _impl_.equipped_state_;
}

// -------------------------------------------------------------------

// CMsgSortItems

// optional uint32 sort_type = 1;
inline bool CMsgSortItems::_internal_has_sort_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSortItems::has_sort_type() const {
  return _internal_has_sort_type();
}
inline void CMsgSortItems::clear_sort_type() {
  _impl_.sort_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgSortItems::_internal_sort_type() const {
  return _impl_.sort_type_;
}
inline uint32_t CMsgSortItems::sort_type() const {
  // @@protoc_insertion_point(field_get:CMsgSortItems.sort_type)
  return _internal_sort_type();
}
inline void CMsgSortItems::_internal_set_sort_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sort_type_ = value;
}
inline void CMsgSortItems::set_sort_type(uint32_t value) {
  _internal_set_sort_type(value);
  // @@protoc_insertion_point(field_set:CMsgSortItems.sort_type)
}

// -------------------------------------------------------------------

// CMsgItemAcknowledged

// optional uint32 account_id = 1;
inline bool CMsgItemAcknowledged::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgItemAcknowledged::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgItemAcknowledged::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgItemAcknowledged::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.account_id)
  return _internal_account_id();
}
inline void CMsgItemAcknowledged::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgItemAcknowledged::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.account_id)
}

// optional uint32 inventory = 2;
inline bool CMsgItemAcknowledged::_internal_has_inventory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_inventory() const {
  return _internal_has_inventory();
}
inline void CMsgItemAcknowledged::clear_inventory() {
  _impl_.inventory_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgItemAcknowledged::_internal_inventory() const {
  return _impl_.inventory_;
}
inline uint32_t CMsgItemAcknowledged::inventory() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.inventory)
  return _internal_inventory();
}
inline void CMsgItemAcknowledged::_internal_set_inventory(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.inventory_ = value;
}
inline void CMsgItemAcknowledged::set_inventory(uint32_t value) {
  _internal_set_inventory(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.inventory)
}

// optional uint32 def_index = 3;
inline bool CMsgItemAcknowledged::_internal_has_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_def_index() const {
  return _internal_has_def_index();
}
inline void CMsgItemAcknowledged::clear_def_index() {
  _impl_.def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgItemAcknowledged::_internal_def_index() const {
  return _impl_.def_index_;
}
inline uint32_t CMsgItemAcknowledged::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.def_index)
  return _internal_def_index();
}
inline void CMsgItemAcknowledged::_internal_set_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.def_index_ = value;
}
inline void CMsgItemAcknowledged::set_def_index(uint32_t value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.def_index)
}

// optional uint32 quality = 4;
inline bool CMsgItemAcknowledged::_internal_has_quality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_quality() const {
  return _internal_has_quality();
}
inline void CMsgItemAcknowledged::clear_quality() {
  _impl_.quality_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgItemAcknowledged::_internal_quality() const {
  return _impl_.quality_;
}
inline uint32_t CMsgItemAcknowledged::quality() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.quality)
  return _internal_quality();
}
inline void CMsgItemAcknowledged::_internal_set_quality(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.quality_ = value;
}
inline void CMsgItemAcknowledged::set_quality(uint32_t value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.quality)
}

// optional uint32 rarity = 5;
inline bool CMsgItemAcknowledged::_internal_has_rarity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_rarity() const {
  return _internal_has_rarity();
}
inline void CMsgItemAcknowledged::clear_rarity() {
  _impl_.rarity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgItemAcknowledged::_internal_rarity() const {
  return _impl_.rarity_;
}
inline uint32_t CMsgItemAcknowledged::rarity() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.rarity)
  return _internal_rarity();
}
inline void CMsgItemAcknowledged::_internal_set_rarity(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.rarity_ = value;
}
inline void CMsgItemAcknowledged::set_rarity(uint32_t value) {
  _internal_set_rarity(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.rarity)
}

// optional uint32 origin = 6;
inline bool CMsgItemAcknowledged::_internal_has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgItemAcknowledged::has_origin() const {
  return _internal_has_origin();
}
inline void CMsgItemAcknowledged::clear_origin() {
  _impl_.origin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgItemAcknowledged::_internal_origin() const {
  return _impl_.origin_;
}
inline uint32_t CMsgItemAcknowledged::origin() const {
  // @@protoc_insertion_point(field_get:CMsgItemAcknowledged.origin)
  return _internal_origin();
}
inline void CMsgItemAcknowledged::_internal_set_origin(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.origin_ = value;
}
inline void CMsgItemAcknowledged::set_origin(uint32_t value) {
  _internal_set_origin(value);
  // @@protoc_insertion_point(field_set:CMsgItemAcknowledged.origin)
}

// -------------------------------------------------------------------

// CMsgSetItemPositions_ItemPosition

// optional uint64 item_id = 1;
inline bool CMsgSetItemPositions_ItemPosition::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSetItemPositions_ItemPosition::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgSetItemPositions_ItemPosition::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgSetItemPositions_ItemPosition::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgSetItemPositions_ItemPosition::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemPositions.ItemPosition.item_id)
  return _internal_item_id();
}
inline void CMsgSetItemPositions_ItemPosition::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgSetItemPositions_ItemPosition::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgSetItemPositions.ItemPosition.item_id)
}

// optional uint32 position = 2;
inline bool CMsgSetItemPositions_ItemPosition::_internal_has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSetItemPositions_ItemPosition::has_position() const {
  return _internal_has_position();
}
inline void CMsgSetItemPositions_ItemPosition::clear_position() {
  _impl_.position_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgSetItemPositions_ItemPosition::_internal_position() const {
  return _impl_.position_;
}
inline uint32_t CMsgSetItemPositions_ItemPosition::position() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemPositions.ItemPosition.position)
  return _internal_position();
}
inline void CMsgSetItemPositions_ItemPosition::_internal_set_position(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.position_ = value;
}
inline void CMsgSetItemPositions_ItemPosition::set_position(uint32_t value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:CMsgSetItemPositions.ItemPosition.position)
}

// -------------------------------------------------------------------

// CMsgSetItemPositions

// repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
inline int CMsgSetItemPositions::_internal_item_positions_size() const {
  return _impl_.item_positions_.size();
}
inline int CMsgSetItemPositions::item_positions_size() const {
  return _internal_item_positions_size();
}
inline void CMsgSetItemPositions::clear_item_positions() {
  _impl_.item_positions_.Clear();
}
inline ::CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions::mutable_item_positions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSetItemPositions.item_positions)
  return _impl_.item_positions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >*
CMsgSetItemPositions::mutable_item_positions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSetItemPositions.item_positions)
  return &_impl_.item_positions_;
}
inline const ::CMsgSetItemPositions_ItemPosition& CMsgSetItemPositions::_internal_item_positions(int index) const {
  return _impl_.item_positions_.Get(index);
}
inline const ::CMsgSetItemPositions_ItemPosition& CMsgSetItemPositions::item_positions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSetItemPositions.item_positions)
  return _internal_item_positions(index);
}
inline ::CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions::_internal_add_item_positions() {
  return _impl_.item_positions_.Add();
}
inline ::CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions::add_item_positions() {
  ::CMsgSetItemPositions_ItemPosition* _add = _internal_add_item_positions();
  // @@protoc_insertion_point(field_add:CMsgSetItemPositions.item_positions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSetItemPositions_ItemPosition >&
CMsgSetItemPositions::item_positions() const {
  // @@protoc_insertion_point(field_list:CMsgSetItemPositions.item_positions)
  return _impl_.item_positions_;
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseCancel

// optional uint64 txn_id = 1;
inline bool CMsgGCStorePurchaseCancel::_internal_has_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseCancel::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCStorePurchaseCancel::clear_txn_id() {
  _impl_.txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCStorePurchaseCancel::_internal_txn_id() const {
  return _impl_.txn_id_;
}
inline uint64_t CMsgGCStorePurchaseCancel::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseCancel.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCStorePurchaseCancel::_internal_set_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txn_id_ = value;
}
inline void CMsgGCStorePurchaseCancel::set_txn_id(uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseCancel.txn_id)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseCancelResponse

// optional uint32 result = 1;
inline bool CMsgGCStorePurchaseCancelResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseCancelResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCStorePurchaseCancelResponse::clear_result() {
  _impl_.result_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCStorePurchaseCancelResponse::_internal_result() const {
  return _impl_.result_;
}
inline uint32_t CMsgGCStorePurchaseCancelResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseCancelResponse.result)
  return _internal_result();
}
inline void CMsgGCStorePurchaseCancelResponse::_internal_set_result(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgGCStorePurchaseCancelResponse::set_result(uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseCancelResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseFinalize

// optional uint64 txn_id = 1;
inline bool CMsgGCStorePurchaseFinalize::_internal_has_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseFinalize::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCStorePurchaseFinalize::clear_txn_id() {
  _impl_.txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCStorePurchaseFinalize::_internal_txn_id() const {
  return _impl_.txn_id_;
}
inline uint64_t CMsgGCStorePurchaseFinalize::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseFinalize.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCStorePurchaseFinalize::_internal_set_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txn_id_ = value;
}
inline void CMsgGCStorePurchaseFinalize::set_txn_id(uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseFinalize.txn_id)
}

// -------------------------------------------------------------------

// CMsgGCStorePurchaseFinalizeResponse

// optional uint32 result = 1;
inline bool CMsgGCStorePurchaseFinalizeResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCStorePurchaseFinalizeResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgGCStorePurchaseFinalizeResponse::clear_result() {
  _impl_.result_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCStorePurchaseFinalizeResponse::_internal_result() const {
  return _impl_.result_;
}
inline uint32_t CMsgGCStorePurchaseFinalizeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseFinalizeResponse.result)
  return _internal_result();
}
inline void CMsgGCStorePurchaseFinalizeResponse::_internal_set_result(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgGCStorePurchaseFinalizeResponse::set_result(uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseFinalizeResponse.result)
}

// repeated uint64 item_ids = 2;
inline int CMsgGCStorePurchaseFinalizeResponse::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgGCStorePurchaseFinalizeResponse::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgGCStorePurchaseFinalizeResponse::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgGCStorePurchaseFinalizeResponse::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgGCStorePurchaseFinalizeResponse::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCStorePurchaseFinalizeResponse.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgGCStorePurchaseFinalizeResponse::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCStorePurchaseFinalizeResponse.item_ids)
}
inline void CMsgGCStorePurchaseFinalizeResponse::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgGCStorePurchaseFinalizeResponse::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCStorePurchaseFinalizeResponse.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCStorePurchaseFinalizeResponse::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCStorePurchaseFinalizeResponse::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCStorePurchaseFinalizeResponse.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCStorePurchaseFinalizeResponse::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCStorePurchaseFinalizeResponse::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCStorePurchaseFinalizeResponse.item_ids)
  return _internal_mutable_item_ids();
}

// -------------------------------------------------------------------

// CMsgGCToGCBannedWordListUpdated

// optional uint32 group_id = 1;
inline bool CMsgGCToGCBannedWordListUpdated::_internal_has_group_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCBannedWordListUpdated::has_group_id() const {
  return _internal_has_group_id();
}
inline void CMsgGCToGCBannedWordListUpdated::clear_group_id() {
  _impl_.group_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCBannedWordListUpdated::_internal_group_id() const {
  return _impl_.group_id_;
}
inline uint32_t CMsgGCToGCBannedWordListUpdated::group_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBannedWordListUpdated.group_id)
  return _internal_group_id();
}
inline void CMsgGCToGCBannedWordListUpdated::_internal_set_group_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.group_id_ = value;
}
inline void CMsgGCToGCBannedWordListUpdated::set_group_id(uint32_t value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBannedWordListUpdated.group_id)
}

// -------------------------------------------------------------------

// CMsgGCToGCDirtySDOCache

// optional uint32 sdo_type = 1;
inline bool CMsgGCToGCDirtySDOCache::_internal_has_sdo_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCDirtySDOCache::has_sdo_type() const {
  return _internal_has_sdo_type();
}
inline void CMsgGCToGCDirtySDOCache::clear_sdo_type() {
  _impl_.sdo_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCDirtySDOCache::_internal_sdo_type() const {
  return _impl_.sdo_type_;
}
inline uint32_t CMsgGCToGCDirtySDOCache::sdo_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCDirtySDOCache.sdo_type)
  return _internal_sdo_type();
}
inline void CMsgGCToGCDirtySDOCache::_internal_set_sdo_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sdo_type_ = value;
}
inline void CMsgGCToGCDirtySDOCache::set_sdo_type(uint32_t value) {
  _internal_set_sdo_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCDirtySDOCache.sdo_type)
}

// optional uint64 key_uint64 = 2;
inline bool CMsgGCToGCDirtySDOCache::_internal_has_key_uint64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCDirtySDOCache::has_key_uint64() const {
  return _internal_has_key_uint64();
}
inline void CMsgGCToGCDirtySDOCache::clear_key_uint64() {
  _impl_.key_uint64_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCToGCDirtySDOCache::_internal_key_uint64() const {
  return _impl_.key_uint64_;
}
inline uint64_t CMsgGCToGCDirtySDOCache::key_uint64() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCDirtySDOCache.key_uint64)
  return _internal_key_uint64();
}
inline void CMsgGCToGCDirtySDOCache::_internal_set_key_uint64(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_uint64_ = value;
}
inline void CMsgGCToGCDirtySDOCache::set_key_uint64(uint64_t value) {
  _internal_set_key_uint64(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCDirtySDOCache.key_uint64)
}

// -------------------------------------------------------------------

// CMsgSDONoMemcached

// -------------------------------------------------------------------

// CMsgGCToGCUpdateSQLKeyValue

// optional string key_name = 1;
inline bool CMsgGCToGCUpdateSQLKeyValue::_internal_has_key_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateSQLKeyValue::has_key_name() const {
  return _internal_has_key_name();
}
inline void CMsgGCToGCUpdateSQLKeyValue::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCUpdateSQLKeyValue::key_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateSQLKeyValue.key_name)
  return _internal_key_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCUpdateSQLKeyValue::set_key_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.key_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateSQLKeyValue.key_name)
}
inline std::string* CMsgGCToGCUpdateSQLKeyValue::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCUpdateSQLKeyValue.key_name)
  return _s;
}
inline const std::string& CMsgGCToGCUpdateSQLKeyValue::_internal_key_name() const {
  return _impl_.key_name_.Get();
}
inline void CMsgGCToGCUpdateSQLKeyValue::_internal_set_key_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCUpdateSQLKeyValue::_internal_mutable_key_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCUpdateSQLKeyValue::release_key_name() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCUpdateSQLKeyValue.key_name)
  if (!_internal_has_key_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.key_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.key_name_.IsDefault()) {
    _impl_.key_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCUpdateSQLKeyValue::set_allocated_key_name(std::string* key_name) {
  if (key_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_name_.SetAllocated(key_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.key_name_.IsDefault()) {
    _impl_.key_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCUpdateSQLKeyValue.key_name)
}

// -------------------------------------------------------------------

// CMsgGCServerVersionUpdated

// optional uint32 server_version = 1;
inline bool CMsgGCServerVersionUpdated::_internal_has_server_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCServerVersionUpdated::has_server_version() const {
  return _internal_has_server_version();
}
inline void CMsgGCServerVersionUpdated::clear_server_version() {
  _impl_.server_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCServerVersionUpdated::_internal_server_version() const {
  return _impl_.server_version_;
}
inline uint32_t CMsgGCServerVersionUpdated::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCServerVersionUpdated.server_version)
  return _internal_server_version();
}
inline void CMsgGCServerVersionUpdated::_internal_set_server_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.server_version_ = value;
}
inline void CMsgGCServerVersionUpdated::set_server_version(uint32_t value) {
  _internal_set_server_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCServerVersionUpdated.server_version)
}

// -------------------------------------------------------------------

// CMsgGCClientVersionUpdated

// optional uint32 client_version = 1;
inline bool CMsgGCClientVersionUpdated::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCClientVersionUpdated::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgGCClientVersionUpdated::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCClientVersionUpdated::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgGCClientVersionUpdated::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCClientVersionUpdated.client_version)
  return _internal_client_version();
}
inline void CMsgGCClientVersionUpdated::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_version_ = value;
}
inline void CMsgGCClientVersionUpdated::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCClientVersionUpdated.client_version)
}

// -------------------------------------------------------------------

// CMsgGCToGCWebAPIAccountChanged

// -------------------------------------------------------------------

// CMsgExtractGems

// optional uint64 tool_item_id = 1;
inline bool CMsgExtractGems::_internal_has_tool_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgExtractGems::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgExtractGems::clear_tool_item_id() {
  _impl_.tool_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgExtractGems::_internal_tool_item_id() const {
  return _impl_.tool_item_id_;
}
inline uint64_t CMsgExtractGems::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgExtractGems.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgExtractGems::_internal_set_tool_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tool_item_id_ = value;
}
inline void CMsgExtractGems::set_tool_item_id(uint64_t value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgExtractGems.tool_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgExtractGems::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgExtractGems::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgExtractGems::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgExtractGems::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgExtractGems::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgExtractGems.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgExtractGems::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_item_id_ = value;
}
inline void CMsgExtractGems::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgExtractGems.item_item_id)
}

// optional uint32 item_socket_id = 3 [default = 65535];
inline bool CMsgExtractGems::_internal_has_item_socket_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgExtractGems::has_item_socket_id() const {
  return _internal_has_item_socket_id();
}
inline void CMsgExtractGems::clear_item_socket_id() {
  _impl_.item_socket_id_ = 65535u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgExtractGems::_internal_item_socket_id() const {
  return _impl_.item_socket_id_;
}
inline uint32_t CMsgExtractGems::item_socket_id() const {
  // @@protoc_insertion_point(field_get:CMsgExtractGems.item_socket_id)
  return _internal_item_socket_id();
}
inline void CMsgExtractGems::_internal_set_item_socket_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.item_socket_id_ = value;
}
inline void CMsgExtractGems::set_item_socket_id(uint32_t value) {
  _internal_set_item_socket_id(value);
  // @@protoc_insertion_point(field_set:CMsgExtractGems.item_socket_id)
}

// -------------------------------------------------------------------

// CMsgExtractGemsResponse

// optional uint64 item_id = 1;
inline bool CMsgExtractGemsResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgExtractGemsResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgExtractGemsResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgExtractGemsResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgExtractGemsResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgExtractGemsResponse.item_id)
  return _internal_item_id();
}
inline void CMsgExtractGemsResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgExtractGemsResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgExtractGemsResponse.item_id)
}

// optional .CMsgExtractGemsResponse.EExtractGems response = 2 [default = k_ExtractGems_Succeeded];
inline bool CMsgExtractGemsResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgExtractGemsResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgExtractGemsResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgExtractGemsResponse_EExtractGems CMsgExtractGemsResponse::_internal_response() const {
  return static_cast< ::CMsgExtractGemsResponse_EExtractGems >(_impl_.response_);
}
inline ::CMsgExtractGemsResponse_EExtractGems CMsgExtractGemsResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgExtractGemsResponse.response)
  return _internal_response();
}
inline void CMsgExtractGemsResponse::_internal_set_response(::CMsgExtractGemsResponse_EExtractGems value) {
  assert(::CMsgExtractGemsResponse_EExtractGems_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgExtractGemsResponse::set_response(::CMsgExtractGemsResponse_EExtractGems value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgExtractGemsResponse.response)
}

// -------------------------------------------------------------------

// CMsgAddSocket

// optional uint64 tool_item_id = 1;
inline bool CMsgAddSocket::_internal_has_tool_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAddSocket::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgAddSocket::clear_tool_item_id() {
  _impl_.tool_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgAddSocket::_internal_tool_item_id() const {
  return _impl_.tool_item_id_;
}
inline uint64_t CMsgAddSocket::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAddSocket.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgAddSocket::_internal_set_tool_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tool_item_id_ = value;
}
inline void CMsgAddSocket::set_tool_item_id(uint64_t value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAddSocket.tool_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgAddSocket::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAddSocket::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgAddSocket::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgAddSocket::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgAddSocket::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAddSocket.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgAddSocket::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_item_id_ = value;
}
inline void CMsgAddSocket::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAddSocket.item_item_id)
}

// optional bool unusual = 3;
inline bool CMsgAddSocket::_internal_has_unusual() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAddSocket::has_unusual() const {
  return _internal_has_unusual();
}
inline void CMsgAddSocket::clear_unusual() {
  _impl_.unusual_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgAddSocket::_internal_unusual() const {
  return _impl_.unusual_;
}
inline bool CMsgAddSocket::unusual() const {
  // @@protoc_insertion_point(field_get:CMsgAddSocket.unusual)
  return _internal_unusual();
}
inline void CMsgAddSocket::_internal_set_unusual(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.unusual_ = value;
}
inline void CMsgAddSocket::set_unusual(bool value) {
  _internal_set_unusual(value);
  // @@protoc_insertion_point(field_set:CMsgAddSocket.unusual)
}

// -------------------------------------------------------------------

// CMsgAddSocketResponse

// optional uint64 item_id = 1;
inline bool CMsgAddSocketResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAddSocketResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgAddSocketResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgAddSocketResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgAddSocketResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAddSocketResponse.item_id)
  return _internal_item_id();
}
inline void CMsgAddSocketResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgAddSocketResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAddSocketResponse.item_id)
}

// repeated uint32 updated_socket_index = 2;
inline int CMsgAddSocketResponse::_internal_updated_socket_index_size() const {
  return _impl_.updated_socket_index_.size();
}
inline int CMsgAddSocketResponse::updated_socket_index_size() const {
  return _internal_updated_socket_index_size();
}
inline void CMsgAddSocketResponse::clear_updated_socket_index() {
  _impl_.updated_socket_index_.Clear();
}
inline uint32_t CMsgAddSocketResponse::_internal_updated_socket_index(int index) const {
  return _impl_.updated_socket_index_.Get(index);
}
inline uint32_t CMsgAddSocketResponse::updated_socket_index(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAddSocketResponse.updated_socket_index)
  return _internal_updated_socket_index(index);
}
inline void CMsgAddSocketResponse::set_updated_socket_index(int index, uint32_t value) {
  _impl_.updated_socket_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAddSocketResponse.updated_socket_index)
}
inline void CMsgAddSocketResponse::_internal_add_updated_socket_index(uint32_t value) {
  _impl_.updated_socket_index_.Add(value);
}
inline void CMsgAddSocketResponse::add_updated_socket_index(uint32_t value) {
  _internal_add_updated_socket_index(value);
  // @@protoc_insertion_point(field_add:CMsgAddSocketResponse.updated_socket_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAddSocketResponse::_internal_updated_socket_index() const {
  return _impl_.updated_socket_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAddSocketResponse::updated_socket_index() const {
  // @@protoc_insertion_point(field_list:CMsgAddSocketResponse.updated_socket_index)
  return _internal_updated_socket_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAddSocketResponse::_internal_mutable_updated_socket_index() {
  return &_impl_.updated_socket_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAddSocketResponse::mutable_updated_socket_index() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAddSocketResponse.updated_socket_index)
  return _internal_mutable_updated_socket_index();
}

// optional .CMsgAddSocketResponse.EAddSocket response = 3 [default = k_AddSocket_Succeeded];
inline bool CMsgAddSocketResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAddSocketResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgAddSocketResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgAddSocketResponse_EAddSocket CMsgAddSocketResponse::_internal_response() const {
  return static_cast< ::CMsgAddSocketResponse_EAddSocket >(_impl_.response_);
}
inline ::CMsgAddSocketResponse_EAddSocket CMsgAddSocketResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgAddSocketResponse.response)
  return _internal_response();
}
inline void CMsgAddSocketResponse::_internal_set_response(::CMsgAddSocketResponse_EAddSocket value) {
  assert(::CMsgAddSocketResponse_EAddSocket_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgAddSocketResponse::set_response(::CMsgAddSocketResponse_EAddSocket value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgAddSocketResponse.response)
}

// -------------------------------------------------------------------

// CMsgAddItemToSocketData

// optional uint64 gem_item_id = 1;
inline bool CMsgAddItemToSocketData::_internal_has_gem_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAddItemToSocketData::has_gem_item_id() const {
  return _internal_has_gem_item_id();
}
inline void CMsgAddItemToSocketData::clear_gem_item_id() {
  _impl_.gem_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgAddItemToSocketData::_internal_gem_item_id() const {
  return _impl_.gem_item_id_;
}
inline uint64_t CMsgAddItemToSocketData::gem_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocketData.gem_item_id)
  return _internal_gem_item_id();
}
inline void CMsgAddItemToSocketData::_internal_set_gem_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.gem_item_id_ = value;
}
inline void CMsgAddItemToSocketData::set_gem_item_id(uint64_t value) {
  _internal_set_gem_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAddItemToSocketData.gem_item_id)
}

// optional uint32 socket_index = 2 [default = 65535];
inline bool CMsgAddItemToSocketData::_internal_has_socket_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAddItemToSocketData::has_socket_index() const {
  return _internal_has_socket_index();
}
inline void CMsgAddItemToSocketData::clear_socket_index() {
  _impl_.socket_index_ = 65535u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgAddItemToSocketData::_internal_socket_index() const {
  return _impl_.socket_index_;
}
inline uint32_t CMsgAddItemToSocketData::socket_index() const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocketData.socket_index)
  return _internal_socket_index();
}
inline void CMsgAddItemToSocketData::_internal_set_socket_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.socket_index_ = value;
}
inline void CMsgAddItemToSocketData::set_socket_index(uint32_t value) {
  _internal_set_socket_index(value);
  // @@protoc_insertion_point(field_set:CMsgAddItemToSocketData.socket_index)
}

// -------------------------------------------------------------------

// CMsgAddItemToSocket

// optional uint64 item_item_id = 1;
inline bool CMsgAddItemToSocket::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAddItemToSocket::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgAddItemToSocket::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgAddItemToSocket::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgAddItemToSocket::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocket.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgAddItemToSocket::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_item_id_ = value;
}
inline void CMsgAddItemToSocket::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAddItemToSocket.item_item_id)
}

// repeated .CMsgAddItemToSocketData gems_to_socket = 2;
inline int CMsgAddItemToSocket::_internal_gems_to_socket_size() const {
  return _impl_.gems_to_socket_.size();
}
inline int CMsgAddItemToSocket::gems_to_socket_size() const {
  return _internal_gems_to_socket_size();
}
inline void CMsgAddItemToSocket::clear_gems_to_socket() {
  _impl_.gems_to_socket_.Clear();
}
inline ::CMsgAddItemToSocketData* CMsgAddItemToSocket::mutable_gems_to_socket(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAddItemToSocket.gems_to_socket)
  return _impl_.gems_to_socket_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAddItemToSocketData >*
CMsgAddItemToSocket::mutable_gems_to_socket() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAddItemToSocket.gems_to_socket)
  return &_impl_.gems_to_socket_;
}
inline const ::CMsgAddItemToSocketData& CMsgAddItemToSocket::_internal_gems_to_socket(int index) const {
  return _impl_.gems_to_socket_.Get(index);
}
inline const ::CMsgAddItemToSocketData& CMsgAddItemToSocket::gems_to_socket(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocket.gems_to_socket)
  return _internal_gems_to_socket(index);
}
inline ::CMsgAddItemToSocketData* CMsgAddItemToSocket::_internal_add_gems_to_socket() {
  return _impl_.gems_to_socket_.Add();
}
inline ::CMsgAddItemToSocketData* CMsgAddItemToSocket::add_gems_to_socket() {
  ::CMsgAddItemToSocketData* _add = _internal_add_gems_to_socket();
  // @@protoc_insertion_point(field_add:CMsgAddItemToSocket.gems_to_socket)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAddItemToSocketData >&
CMsgAddItemToSocket::gems_to_socket() const {
  // @@protoc_insertion_point(field_list:CMsgAddItemToSocket.gems_to_socket)
  return _impl_.gems_to_socket_;
}

// -------------------------------------------------------------------

// CMsgAddItemToSocketResponse

// optional uint64 item_item_id = 1;
inline bool CMsgAddItemToSocketResponse::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAddItemToSocketResponse::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgAddItemToSocketResponse::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgAddItemToSocketResponse::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgAddItemToSocketResponse::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocketResponse.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgAddItemToSocketResponse::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_item_id_ = value;
}
inline void CMsgAddItemToSocketResponse::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAddItemToSocketResponse.item_item_id)
}

// repeated uint32 updated_socket_index = 2;
inline int CMsgAddItemToSocketResponse::_internal_updated_socket_index_size() const {
  return _impl_.updated_socket_index_.size();
}
inline int CMsgAddItemToSocketResponse::updated_socket_index_size() const {
  return _internal_updated_socket_index_size();
}
inline void CMsgAddItemToSocketResponse::clear_updated_socket_index() {
  _impl_.updated_socket_index_.Clear();
}
inline uint32_t CMsgAddItemToSocketResponse::_internal_updated_socket_index(int index) const {
  return _impl_.updated_socket_index_.Get(index);
}
inline uint32_t CMsgAddItemToSocketResponse::updated_socket_index(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocketResponse.updated_socket_index)
  return _internal_updated_socket_index(index);
}
inline void CMsgAddItemToSocketResponse::set_updated_socket_index(int index, uint32_t value) {
  _impl_.updated_socket_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAddItemToSocketResponse.updated_socket_index)
}
inline void CMsgAddItemToSocketResponse::_internal_add_updated_socket_index(uint32_t value) {
  _impl_.updated_socket_index_.Add(value);
}
inline void CMsgAddItemToSocketResponse::add_updated_socket_index(uint32_t value) {
  _internal_add_updated_socket_index(value);
  // @@protoc_insertion_point(field_add:CMsgAddItemToSocketResponse.updated_socket_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAddItemToSocketResponse::_internal_updated_socket_index() const {
  return _impl_.updated_socket_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAddItemToSocketResponse::updated_socket_index() const {
  // @@protoc_insertion_point(field_list:CMsgAddItemToSocketResponse.updated_socket_index)
  return _internal_updated_socket_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAddItemToSocketResponse::_internal_mutable_updated_socket_index() {
  return &_impl_.updated_socket_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAddItemToSocketResponse::mutable_updated_socket_index() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAddItemToSocketResponse.updated_socket_index)
  return _internal_mutable_updated_socket_index();
}

// optional .CMsgAddItemToSocketResponse.EAddGem response = 3 [default = k_AddGem_Succeeded];
inline bool CMsgAddItemToSocketResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAddItemToSocketResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgAddItemToSocketResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgAddItemToSocketResponse_EAddGem CMsgAddItemToSocketResponse::_internal_response() const {
  return static_cast< ::CMsgAddItemToSocketResponse_EAddGem >(_impl_.response_);
}
inline ::CMsgAddItemToSocketResponse_EAddGem CMsgAddItemToSocketResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgAddItemToSocketResponse.response)
  return _internal_response();
}
inline void CMsgAddItemToSocketResponse::_internal_set_response(::CMsgAddItemToSocketResponse_EAddGem value) {
  assert(::CMsgAddItemToSocketResponse_EAddGem_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgAddItemToSocketResponse::set_response(::CMsgAddItemToSocketResponse_EAddGem value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgAddItemToSocketResponse.response)
}

// -------------------------------------------------------------------

// CMsgResetStrangeGemCount

// optional uint64 item_item_id = 1;
inline bool CMsgResetStrangeGemCount::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgResetStrangeGemCount::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgResetStrangeGemCount::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgResetStrangeGemCount::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgResetStrangeGemCount::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgResetStrangeGemCount.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgResetStrangeGemCount::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_item_id_ = value;
}
inline void CMsgResetStrangeGemCount::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgResetStrangeGemCount.item_item_id)
}

// optional uint32 socket_index = 2 [default = 65535];
inline bool CMsgResetStrangeGemCount::_internal_has_socket_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgResetStrangeGemCount::has_socket_index() const {
  return _internal_has_socket_index();
}
inline void CMsgResetStrangeGemCount::clear_socket_index() {
  _impl_.socket_index_ = 65535u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgResetStrangeGemCount::_internal_socket_index() const {
  return _impl_.socket_index_;
}
inline uint32_t CMsgResetStrangeGemCount::socket_index() const {
  // @@protoc_insertion_point(field_get:CMsgResetStrangeGemCount.socket_index)
  return _internal_socket_index();
}
inline void CMsgResetStrangeGemCount::_internal_set_socket_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.socket_index_ = value;
}
inline void CMsgResetStrangeGemCount::set_socket_index(uint32_t value) {
  _internal_set_socket_index(value);
  // @@protoc_insertion_point(field_set:CMsgResetStrangeGemCount.socket_index)
}

// -------------------------------------------------------------------

// CMsgResetStrangeGemCountResponse

// optional .CMsgResetStrangeGemCountResponse.EResetGem response = 1 [default = k_ResetGem_Succeeded];
inline bool CMsgResetStrangeGemCountResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgResetStrangeGemCountResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgResetStrangeGemCountResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgResetStrangeGemCountResponse_EResetGem CMsgResetStrangeGemCountResponse::_internal_response() const {
  return static_cast< ::CMsgResetStrangeGemCountResponse_EResetGem >(_impl_.response_);
}
inline ::CMsgResetStrangeGemCountResponse_EResetGem CMsgResetStrangeGemCountResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgResetStrangeGemCountResponse.response)
  return _internal_response();
}
inline void CMsgResetStrangeGemCountResponse::_internal_set_response(::CMsgResetStrangeGemCountResponse_EResetGem value) {
  assert(::CMsgResetStrangeGemCountResponse_EResetGem_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgResetStrangeGemCountResponse::set_response(::CMsgResetStrangeGemCountResponse_EResetGem value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgResetStrangeGemCountResponse.response)
}

// -------------------------------------------------------------------

// CMsgGCToClientPollFileRequest

// optional string file_name = 1;
inline bool CMsgGCToClientPollFileRequest::_internal_has_file_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientPollFileRequest::has_file_name() const {
  return _internal_has_file_name();
}
inline void CMsgGCToClientPollFileRequest::clear_file_name() {
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientPollFileRequest::file_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollFileRequest.file_name)
  return _internal_file_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientPollFileRequest::set_file_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.file_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollFileRequest.file_name)
}
inline std::string* CMsgGCToClientPollFileRequest::mutable_file_name() {
  std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientPollFileRequest.file_name)
  return _s;
}
inline const std::string& CMsgGCToClientPollFileRequest::_internal_file_name() const {
  return _impl_.file_name_.Get();
}
inline void CMsgGCToClientPollFileRequest::_internal_set_file_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientPollFileRequest::_internal_mutable_file_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientPollFileRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientPollFileRequest.file_name)
  if (!_internal_has_file_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.file_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientPollFileRequest::set_allocated_file_name(std::string* file_name) {
  if (file_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_name_.SetAllocated(file_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientPollFileRequest.file_name)
}

// optional uint32 client_version = 2;
inline bool CMsgGCToClientPollFileRequest::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientPollFileRequest::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgGCToClientPollFileRequest::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToClientPollFileRequest::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgGCToClientPollFileRequest::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollFileRequest.client_version)
  return _internal_client_version();
}
inline void CMsgGCToClientPollFileRequest::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_version_ = value;
}
inline void CMsgGCToClientPollFileRequest::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollFileRequest.client_version)
}

// optional uint32 poll_id = 3;
inline bool CMsgGCToClientPollFileRequest::_internal_has_poll_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientPollFileRequest::has_poll_id() const {
  return _internal_has_poll_id();
}
inline void CMsgGCToClientPollFileRequest::clear_poll_id() {
  _impl_.poll_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToClientPollFileRequest::_internal_poll_id() const {
  return _impl_.poll_id_;
}
inline uint32_t CMsgGCToClientPollFileRequest::poll_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollFileRequest.poll_id)
  return _internal_poll_id();
}
inline void CMsgGCToClientPollFileRequest::_internal_set_poll_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.poll_id_ = value;
}
inline void CMsgGCToClientPollFileRequest::set_poll_id(uint32_t value) {
  _internal_set_poll_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollFileRequest.poll_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientPollFileResponse

// optional uint32 poll_id = 1;
inline bool CMsgGCToClientPollFileResponse::_internal_has_poll_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientPollFileResponse::has_poll_id() const {
  return _internal_has_poll_id();
}
inline void CMsgGCToClientPollFileResponse::clear_poll_id() {
  _impl_.poll_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientPollFileResponse::_internal_poll_id() const {
  return _impl_.poll_id_;
}
inline uint32_t CMsgGCToClientPollFileResponse::poll_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollFileResponse.poll_id)
  return _internal_poll_id();
}
inline void CMsgGCToClientPollFileResponse::_internal_set_poll_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.poll_id_ = value;
}
inline void CMsgGCToClientPollFileResponse::set_poll_id(uint32_t value) {
  _internal_set_poll_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollFileResponse.poll_id)
}

// optional uint32 file_size = 2;
inline bool CMsgGCToClientPollFileResponse::_internal_has_file_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientPollFileResponse::has_file_size() const {
  return _internal_has_file_size();
}
inline void CMsgGCToClientPollFileResponse::clear_file_size() {
  _impl_.file_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToClientPollFileResponse::_internal_file_size() const {
  return _impl_.file_size_;
}
inline uint32_t CMsgGCToClientPollFileResponse::file_size() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollFileResponse.file_size)
  return _internal_file_size();
}
inline void CMsgGCToClientPollFileResponse::_internal_set_file_size(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.file_size_ = value;
}
inline void CMsgGCToClientPollFileResponse::set_file_size(uint32_t value) {
  _internal_set_file_size(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollFileResponse.file_size)
}

// optional uint32 file_crc = 3;
inline bool CMsgGCToClientPollFileResponse::_internal_has_file_crc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientPollFileResponse::has_file_crc() const {
  return _internal_has_file_crc();
}
inline void CMsgGCToClientPollFileResponse::clear_file_crc() {
  _impl_.file_crc_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToClientPollFileResponse::_internal_file_crc() const {
  return _impl_.file_crc_;
}
inline uint32_t CMsgGCToClientPollFileResponse::file_crc() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollFileResponse.file_crc)
  return _internal_file_crc();
}
inline void CMsgGCToClientPollFileResponse::_internal_set_file_crc(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.file_crc_ = value;
}
inline void CMsgGCToClientPollFileResponse::set_file_crc(uint32_t value) {
  _internal_set_file_crc(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollFileResponse.file_crc)
}

// -------------------------------------------------------------------

// CMsgGCToGCPerformManualOp

// optional uint64 op_id = 1;
inline bool CMsgGCToGCPerformManualOp::_internal_has_op_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCPerformManualOp::has_op_id() const {
  return _internal_has_op_id();
}
inline void CMsgGCToGCPerformManualOp::clear_op_id() {
  _impl_.op_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCToGCPerformManualOp::_internal_op_id() const {
  return _impl_.op_id_;
}
inline uint64_t CMsgGCToGCPerformManualOp::op_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCPerformManualOp.op_id)
  return _internal_op_id();
}
inline void CMsgGCToGCPerformManualOp::_internal_set_op_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.op_id_ = value;
}
inline void CMsgGCToGCPerformManualOp::set_op_id(uint64_t value) {
  _internal_set_op_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCPerformManualOp.op_id)
}

// optional uint32 group_code = 2;
inline bool CMsgGCToGCPerformManualOp::_internal_has_group_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCPerformManualOp::has_group_code() const {
  return _internal_has_group_code();
}
inline void CMsgGCToGCPerformManualOp::clear_group_code() {
  _impl_.group_code_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCPerformManualOp::_internal_group_code() const {
  return _impl_.group_code_;
}
inline uint32_t CMsgGCToGCPerformManualOp::group_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCPerformManualOp.group_code)
  return _internal_group_code();
}
inline void CMsgGCToGCPerformManualOp::_internal_set_group_code(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.group_code_ = value;
}
inline void CMsgGCToGCPerformManualOp::set_group_code(uint32_t value) {
  _internal_set_group_code(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCPerformManualOp.group_code)
}

// -------------------------------------------------------------------

// CMsgGCToGCPerformManualOpCompleted

// optional bool success = 1;
inline bool CMsgGCToGCPerformManualOpCompleted::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCPerformManualOpCompleted::has_success() const {
  return _internal_has_success();
}
inline void CMsgGCToGCPerformManualOpCompleted::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToGCPerformManualOpCompleted::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgGCToGCPerformManualOpCompleted::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCPerformManualOpCompleted.success)
  return _internal_success();
}
inline void CMsgGCToGCPerformManualOpCompleted::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgGCToGCPerformManualOpCompleted::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCPerformManualOpCompleted.success)
}

// optional int32 source_gc = 2 [default = -1];
inline bool CMsgGCToGCPerformManualOpCompleted::_internal_has_source_gc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCPerformManualOpCompleted::has_source_gc() const {
  return _internal_has_source_gc();
}
inline void CMsgGCToGCPerformManualOpCompleted::clear_source_gc() {
  _impl_.source_gc_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgGCToGCPerformManualOpCompleted::_internal_source_gc() const {
  return _impl_.source_gc_;
}
inline int32_t CMsgGCToGCPerformManualOpCompleted::source_gc() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCPerformManualOpCompleted.source_gc)
  return _internal_source_gc();
}
inline void CMsgGCToGCPerformManualOpCompleted::_internal_set_source_gc(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_gc_ = value;
}
inline void CMsgGCToGCPerformManualOpCompleted::set_source_gc(int32_t value) {
  _internal_set_source_gc(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCPerformManualOpCompleted.source_gc)
}

// -------------------------------------------------------------------

// CMsgGCToGCReloadServerRegionSettings

// -------------------------------------------------------------------

// CMsgGCAdditionalWelcomeMsgList

// repeated .CExtraMsgBlock welcome_messages = 1;
inline int CMsgGCAdditionalWelcomeMsgList::_internal_welcome_messages_size() const {
  return _impl_.welcome_messages_.size();
}
inline int CMsgGCAdditionalWelcomeMsgList::welcome_messages_size() const {
  return _internal_welcome_messages_size();
}
inline ::CExtraMsgBlock* CMsgGCAdditionalWelcomeMsgList::mutable_welcome_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCAdditionalWelcomeMsgList.welcome_messages)
  return _impl_.welcome_messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >*
CMsgGCAdditionalWelcomeMsgList::mutable_welcome_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCAdditionalWelcomeMsgList.welcome_messages)
  return &_impl_.welcome_messages_;
}
inline const ::CExtraMsgBlock& CMsgGCAdditionalWelcomeMsgList::_internal_welcome_messages(int index) const {
  return _impl_.welcome_messages_.Get(index);
}
inline const ::CExtraMsgBlock& CMsgGCAdditionalWelcomeMsgList::welcome_messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCAdditionalWelcomeMsgList.welcome_messages)
  return _internal_welcome_messages(index);
}
inline ::CExtraMsgBlock* CMsgGCAdditionalWelcomeMsgList::_internal_add_welcome_messages() {
  return _impl_.welcome_messages_.Add();
}
inline ::CExtraMsgBlock* CMsgGCAdditionalWelcomeMsgList::add_welcome_messages() {
  ::CExtraMsgBlock* _add = _internal_add_welcome_messages();
  // @@protoc_insertion_point(field_add:CMsgGCAdditionalWelcomeMsgList.welcome_messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >&
CMsgGCAdditionalWelcomeMsgList::welcome_messages() const {
  // @@protoc_insertion_point(field_list:CMsgGCAdditionalWelcomeMsgList.welcome_messages)
  return _impl_.welcome_messages_;
}

// -------------------------------------------------------------------

// CMsgApplyRemoteConVars_ConVar

// optional string name = 1;
inline bool CMsgApplyRemoteConVars_ConVar::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyRemoteConVars_ConVar::has_name() const {
  return _internal_has_name();
}
inline void CMsgApplyRemoteConVars_ConVar::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgApplyRemoteConVars_ConVar::name() const {
  // @@protoc_insertion_point(field_get:CMsgApplyRemoteConVars.ConVar.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgApplyRemoteConVars_ConVar::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgApplyRemoteConVars.ConVar.name)
}
inline std::string* CMsgApplyRemoteConVars_ConVar::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgApplyRemoteConVars.ConVar.name)
  return _s;
}
inline const std::string& CMsgApplyRemoteConVars_ConVar::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgApplyRemoteConVars_ConVar::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgApplyRemoteConVars_ConVar::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgApplyRemoteConVars_ConVar::release_name() {
  // @@protoc_insertion_point(field_release:CMsgApplyRemoteConVars.ConVar.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgApplyRemoteConVars_ConVar::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgApplyRemoteConVars.ConVar.name)
}

// optional string value = 2;
inline bool CMsgApplyRemoteConVars_ConVar::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyRemoteConVars_ConVar::has_value() const {
  return _internal_has_value();
}
inline void CMsgApplyRemoteConVars_ConVar::clear_value() {
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgApplyRemoteConVars_ConVar::value() const {
  // @@protoc_insertion_point(field_get:CMsgApplyRemoteConVars.ConVar.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgApplyRemoteConVars_ConVar::set_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgApplyRemoteConVars.ConVar.value)
}
inline std::string* CMsgApplyRemoteConVars_ConVar::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:CMsgApplyRemoteConVars.ConVar.value)
  return _s;
}
inline const std::string& CMsgApplyRemoteConVars_ConVar::_internal_value() const {
  return _impl_.value_.Get();
}
inline void CMsgApplyRemoteConVars_ConVar::_internal_set_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgApplyRemoteConVars_ConVar::_internal_mutable_value() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.value_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgApplyRemoteConVars_ConVar::release_value() {
  // @@protoc_insertion_point(field_release:CMsgApplyRemoteConVars.ConVar.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgApplyRemoteConVars_ConVar::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgApplyRemoteConVars.ConVar.value)
}

// optional uint32 version_min = 3;
inline bool CMsgApplyRemoteConVars_ConVar::_internal_has_version_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgApplyRemoteConVars_ConVar::has_version_min() const {
  return _internal_has_version_min();
}
inline void CMsgApplyRemoteConVars_ConVar::clear_version_min() {
  _impl_.version_min_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgApplyRemoteConVars_ConVar::_internal_version_min() const {
  return _impl_.version_min_;
}
inline uint32_t CMsgApplyRemoteConVars_ConVar::version_min() const {
  // @@protoc_insertion_point(field_get:CMsgApplyRemoteConVars.ConVar.version_min)
  return _internal_version_min();
}
inline void CMsgApplyRemoteConVars_ConVar::_internal_set_version_min(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_min_ = value;
}
inline void CMsgApplyRemoteConVars_ConVar::set_version_min(uint32_t value) {
  _internal_set_version_min(value);
  // @@protoc_insertion_point(field_set:CMsgApplyRemoteConVars.ConVar.version_min)
}

// optional uint32 version_max = 4;
inline bool CMsgApplyRemoteConVars_ConVar::_internal_has_version_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgApplyRemoteConVars_ConVar::has_version_max() const {
  return _internal_has_version_max();
}
inline void CMsgApplyRemoteConVars_ConVar::clear_version_max() {
  _impl_.version_max_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgApplyRemoteConVars_ConVar::_internal_version_max() const {
  return _impl_.version_max_;
}
inline uint32_t CMsgApplyRemoteConVars_ConVar::version_max() const {
  // @@protoc_insertion_point(field_get:CMsgApplyRemoteConVars.ConVar.version_max)
  return _internal_version_max();
}
inline void CMsgApplyRemoteConVars_ConVar::_internal_set_version_max(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.version_max_ = value;
}
inline void CMsgApplyRemoteConVars_ConVar::set_version_max(uint32_t value) {
  _internal_set_version_max(value);
  // @@protoc_insertion_point(field_set:CMsgApplyRemoteConVars.ConVar.version_max)
}

// optional .EGCPlatform platform = 5 [default = k_eGCPlatform_None];
inline bool CMsgApplyRemoteConVars_ConVar::_internal_has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgApplyRemoteConVars_ConVar::has_platform() const {
  return _internal_has_platform();
}
inline void CMsgApplyRemoteConVars_ConVar::clear_platform() {
  _impl_.platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::EGCPlatform CMsgApplyRemoteConVars_ConVar::_internal_platform() const {
  return static_cast< ::EGCPlatform >(_impl_.platform_);
}
inline ::EGCPlatform CMsgApplyRemoteConVars_ConVar::platform() const {
  // @@protoc_insertion_point(field_get:CMsgApplyRemoteConVars.ConVar.platform)
  return _internal_platform();
}
inline void CMsgApplyRemoteConVars_ConVar::_internal_set_platform(::EGCPlatform value) {
  assert(::EGCPlatform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.platform_ = value;
}
inline void CMsgApplyRemoteConVars_ConVar::set_platform(::EGCPlatform value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:CMsgApplyRemoteConVars.ConVar.platform)
}

// -------------------------------------------------------------------

// CMsgApplyRemoteConVars

// repeated .CMsgApplyRemoteConVars.ConVar con_vars = 1;
inline int CMsgApplyRemoteConVars::_internal_con_vars_size() const {
  return _impl_.con_vars_.size();
}
inline int CMsgApplyRemoteConVars::con_vars_size() const {
  return _internal_con_vars_size();
}
inline void CMsgApplyRemoteConVars::clear_con_vars() {
  _impl_.con_vars_.Clear();
}
inline ::CMsgApplyRemoteConVars_ConVar* CMsgApplyRemoteConVars::mutable_con_vars(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgApplyRemoteConVars.con_vars)
  return _impl_.con_vars_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgApplyRemoteConVars_ConVar >*
CMsgApplyRemoteConVars::mutable_con_vars() {
  // @@protoc_insertion_point(field_mutable_list:CMsgApplyRemoteConVars.con_vars)
  return &_impl_.con_vars_;
}
inline const ::CMsgApplyRemoteConVars_ConVar& CMsgApplyRemoteConVars::_internal_con_vars(int index) const {
  return _impl_.con_vars_.Get(index);
}
inline const ::CMsgApplyRemoteConVars_ConVar& CMsgApplyRemoteConVars::con_vars(int index) const {
  // @@protoc_insertion_point(field_get:CMsgApplyRemoteConVars.con_vars)
  return _internal_con_vars(index);
}
inline ::CMsgApplyRemoteConVars_ConVar* CMsgApplyRemoteConVars::_internal_add_con_vars() {
  return _impl_.con_vars_.Add();
}
inline ::CMsgApplyRemoteConVars_ConVar* CMsgApplyRemoteConVars::add_con_vars() {
  ::CMsgApplyRemoteConVars_ConVar* _add = _internal_add_con_vars();
  // @@protoc_insertion_point(field_add:CMsgApplyRemoteConVars.con_vars)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgApplyRemoteConVars_ConVar >&
CMsgApplyRemoteConVars::con_vars() const {
  // @@protoc_insertion_point(field_list:CMsgApplyRemoteConVars.con_vars)
  return _impl_.con_vars_;
}

// -------------------------------------------------------------------

// CMsgGCToClientApplyRemoteConVars

// optional .CMsgApplyRemoteConVars msg = 1;
inline bool CMsgGCToClientApplyRemoteConVars::_internal_has_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.msg_ != nullptr);
  return value;
}
inline bool CMsgGCToClientApplyRemoteConVars::has_msg() const {
  return _internal_has_msg();
}
inline void CMsgGCToClientApplyRemoteConVars::clear_msg() {
  if (_impl_.msg_ != nullptr) _impl_.msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgApplyRemoteConVars& CMsgGCToClientApplyRemoteConVars::_internal_msg() const {
  const ::CMsgApplyRemoteConVars* p = _impl_.msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgApplyRemoteConVars&>(
      ::_CMsgApplyRemoteConVars_default_instance_);
}
inline const ::CMsgApplyRemoteConVars& CMsgGCToClientApplyRemoteConVars::msg() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientApplyRemoteConVars.msg)
  return _internal_msg();
}
inline void CMsgGCToClientApplyRemoteConVars::unsafe_arena_set_allocated_msg(
    ::CMsgApplyRemoteConVars* msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.msg_);
  }
  _impl_.msg_ = msg;
  if (msg) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientApplyRemoteConVars.msg)
}
inline ::CMsgApplyRemoteConVars* CMsgGCToClientApplyRemoteConVars::release_msg() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgApplyRemoteConVars* temp = _impl_.msg_;
  _impl_.msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgApplyRemoteConVars* CMsgGCToClientApplyRemoteConVars::unsafe_arena_release_msg() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientApplyRemoteConVars.msg)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgApplyRemoteConVars* temp = _impl_.msg_;
  _impl_.msg_ = nullptr;
  return temp;
}
inline ::CMsgApplyRemoteConVars* CMsgGCToClientApplyRemoteConVars::_internal_mutable_msg() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgApplyRemoteConVars>(GetArenaForAllocation());
    _impl_.msg_ = p;
  }
  return _impl_.msg_;
}
inline ::CMsgApplyRemoteConVars* CMsgGCToClientApplyRemoteConVars::mutable_msg() {
  ::CMsgApplyRemoteConVars* _msg = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientApplyRemoteConVars.msg)
  return _msg;
}
inline void CMsgGCToClientApplyRemoteConVars::set_allocated_msg(::CMsgApplyRemoteConVars* msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.msg_;
  }
  if (msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(msg);
    if (message_arena != submessage_arena) {
      msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientApplyRemoteConVars.msg)
}

// -------------------------------------------------------------------

// CMsgGCToServerApplyRemoteConVars

// optional .CMsgApplyRemoteConVars msg = 1;
inline bool CMsgGCToServerApplyRemoteConVars::_internal_has_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.msg_ != nullptr);
  return value;
}
inline bool CMsgGCToServerApplyRemoteConVars::has_msg() const {
  return _internal_has_msg();
}
inline void CMsgGCToServerApplyRemoteConVars::clear_msg() {
  if (_impl_.msg_ != nullptr) _impl_.msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgApplyRemoteConVars& CMsgGCToServerApplyRemoteConVars::_internal_msg() const {
  const ::CMsgApplyRemoteConVars* p = _impl_.msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgApplyRemoteConVars&>(
      ::_CMsgApplyRemoteConVars_default_instance_);
}
inline const ::CMsgApplyRemoteConVars& CMsgGCToServerApplyRemoteConVars::msg() const {
  // @@protoc_insertion_point(field_get:CMsgGCToServerApplyRemoteConVars.msg)
  return _internal_msg();
}
inline void CMsgGCToServerApplyRemoteConVars::unsafe_arena_set_allocated_msg(
    ::CMsgApplyRemoteConVars* msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.msg_);
  }
  _impl_.msg_ = msg;
  if (msg) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToServerApplyRemoteConVars.msg)
}
inline ::CMsgApplyRemoteConVars* CMsgGCToServerApplyRemoteConVars::release_msg() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgApplyRemoteConVars* temp = _impl_.msg_;
  _impl_.msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgApplyRemoteConVars* CMsgGCToServerApplyRemoteConVars::unsafe_arena_release_msg() {
  // @@protoc_insertion_point(field_release:CMsgGCToServerApplyRemoteConVars.msg)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgApplyRemoteConVars* temp = _impl_.msg_;
  _impl_.msg_ = nullptr;
  return temp;
}
inline ::CMsgApplyRemoteConVars* CMsgGCToServerApplyRemoteConVars::_internal_mutable_msg() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgApplyRemoteConVars>(GetArenaForAllocation());
    _impl_.msg_ = p;
  }
  return _impl_.msg_;
}
inline ::CMsgApplyRemoteConVars* CMsgGCToServerApplyRemoteConVars::mutable_msg() {
  ::CMsgApplyRemoteConVars* _msg = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:CMsgGCToServerApplyRemoteConVars.msg)
  return _msg;
}
inline void CMsgGCToServerApplyRemoteConVars::set_allocated_msg(::CMsgApplyRemoteConVars* msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.msg_;
  }
  if (msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(msg);
    if (message_arena != submessage_arena) {
      msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToServerApplyRemoteConVars.msg)
}

// -------------------------------------------------------------------

// CMsgClientToGCIntegrityStatus_keyvalue

// optional uint32 id = 1;
inline bool CMsgClientToGCIntegrityStatus_keyvalue::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCIntegrityStatus_keyvalue::has_id() const {
  return _internal_has_id();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCIntegrityStatus_keyvalue::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t CMsgClientToGCIntegrityStatus_keyvalue::id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.keyvalue.id)
  return _internal_id();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::_internal_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCIntegrityStatus.keyvalue.id)
}

// optional uint32 extended = 2;
inline bool CMsgClientToGCIntegrityStatus_keyvalue::_internal_has_extended() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCIntegrityStatus_keyvalue::has_extended() const {
  return _internal_has_extended();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::clear_extended() {
  _impl_.extended_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCIntegrityStatus_keyvalue::_internal_extended() const {
  return _impl_.extended_;
}
inline uint32_t CMsgClientToGCIntegrityStatus_keyvalue::extended() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.keyvalue.extended)
  return _internal_extended();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::_internal_set_extended(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.extended_ = value;
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::set_extended(uint32_t value) {
  _internal_set_extended(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCIntegrityStatus.keyvalue.extended)
}

// optional uint64 value = 3;
inline bool CMsgClientToGCIntegrityStatus_keyvalue::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCIntegrityStatus_keyvalue::has_value() const {
  return _internal_has_value();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::clear_value() {
  _impl_.value_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgClientToGCIntegrityStatus_keyvalue::_internal_value() const {
  return _impl_.value_;
}
inline uint64_t CMsgClientToGCIntegrityStatus_keyvalue::value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.keyvalue.value)
  return _internal_value();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::_internal_set_value(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.value_ = value;
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::set_value(uint64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCIntegrityStatus.keyvalue.value)
}

// optional string string_value = 4;
inline bool CMsgClientToGCIntegrityStatus_keyvalue::_internal_has_string_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCIntegrityStatus_keyvalue::has_string_value() const {
  return _internal_has_string_value();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::clear_string_value() {
  _impl_.string_value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCIntegrityStatus_keyvalue::string_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.keyvalue.string_value)
  return _internal_string_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCIntegrityStatus_keyvalue::set_string_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.string_value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCIntegrityStatus.keyvalue.string_value)
}
inline std::string* CMsgClientToGCIntegrityStatus_keyvalue::mutable_string_value() {
  std::string* _s = _internal_mutable_string_value();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCIntegrityStatus.keyvalue.string_value)
  return _s;
}
inline const std::string& CMsgClientToGCIntegrityStatus_keyvalue::_internal_string_value() const {
  return _impl_.string_value_.Get();
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::_internal_set_string_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.string_value_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCIntegrityStatus_keyvalue::_internal_mutable_string_value() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.string_value_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCIntegrityStatus_keyvalue::release_string_value() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCIntegrityStatus.keyvalue.string_value)
  if (!_internal_has_string_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.string_value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.string_value_.IsDefault()) {
    _impl_.string_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCIntegrityStatus_keyvalue::set_allocated_string_value(std::string* string_value) {
  if (string_value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.string_value_.SetAllocated(string_value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.string_value_.IsDefault()) {
    _impl_.string_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCIntegrityStatus.keyvalue.string_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCIntegrityStatus

// optional string report = 1;
inline bool CMsgClientToGCIntegrityStatus::_internal_has_report() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCIntegrityStatus::has_report() const {
  return _internal_has_report();
}
inline void CMsgClientToGCIntegrityStatus::clear_report() {
  _impl_.report_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCIntegrityStatus::report() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.report)
  return _internal_report();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCIntegrityStatus::set_report(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.report_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCIntegrityStatus.report)
}
inline std::string* CMsgClientToGCIntegrityStatus::mutable_report() {
  std::string* _s = _internal_mutable_report();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCIntegrityStatus.report)
  return _s;
}
inline const std::string& CMsgClientToGCIntegrityStatus::_internal_report() const {
  return _impl_.report_.Get();
}
inline void CMsgClientToGCIntegrityStatus::_internal_set_report(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.report_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCIntegrityStatus::_internal_mutable_report() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.report_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCIntegrityStatus::release_report() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCIntegrityStatus.report)
  if (!_internal_has_report()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.report_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.report_.IsDefault()) {
    _impl_.report_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCIntegrityStatus::set_allocated_report(std::string* report) {
  if (report != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.report_.SetAllocated(report, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.report_.IsDefault()) {
    _impl_.report_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCIntegrityStatus.report)
}

// optional bool secure_allowed = 2;
inline bool CMsgClientToGCIntegrityStatus::_internal_has_secure_allowed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCIntegrityStatus::has_secure_allowed() const {
  return _internal_has_secure_allowed();
}
inline void CMsgClientToGCIntegrityStatus::clear_secure_allowed() {
  _impl_.secure_allowed_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCIntegrityStatus::_internal_secure_allowed() const {
  return _impl_.secure_allowed_;
}
inline bool CMsgClientToGCIntegrityStatus::secure_allowed() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.secure_allowed)
  return _internal_secure_allowed();
}
inline void CMsgClientToGCIntegrityStatus::_internal_set_secure_allowed(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.secure_allowed_ = value;
}
inline void CMsgClientToGCIntegrityStatus::set_secure_allowed(bool value) {
  _internal_set_secure_allowed(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCIntegrityStatus.secure_allowed)
}

// repeated .CMsgClientToGCIntegrityStatus.keyvalue diagnostics = 3;
inline int CMsgClientToGCIntegrityStatus::_internal_diagnostics_size() const {
  return _impl_.diagnostics_.size();
}
inline int CMsgClientToGCIntegrityStatus::diagnostics_size() const {
  return _internal_diagnostics_size();
}
inline void CMsgClientToGCIntegrityStatus::clear_diagnostics() {
  _impl_.diagnostics_.Clear();
}
inline ::CMsgClientToGCIntegrityStatus_keyvalue* CMsgClientToGCIntegrityStatus::mutable_diagnostics(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCIntegrityStatus.diagnostics)
  return _impl_.diagnostics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCIntegrityStatus_keyvalue >*
CMsgClientToGCIntegrityStatus::mutable_diagnostics() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCIntegrityStatus.diagnostics)
  return &_impl_.diagnostics_;
}
inline const ::CMsgClientToGCIntegrityStatus_keyvalue& CMsgClientToGCIntegrityStatus::_internal_diagnostics(int index) const {
  return _impl_.diagnostics_.Get(index);
}
inline const ::CMsgClientToGCIntegrityStatus_keyvalue& CMsgClientToGCIntegrityStatus::diagnostics(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIntegrityStatus.diagnostics)
  return _internal_diagnostics(index);
}
inline ::CMsgClientToGCIntegrityStatus_keyvalue* CMsgClientToGCIntegrityStatus::_internal_add_diagnostics() {
  return _impl_.diagnostics_.Add();
}
inline ::CMsgClientToGCIntegrityStatus_keyvalue* CMsgClientToGCIntegrityStatus::add_diagnostics() {
  ::CMsgClientToGCIntegrityStatus_keyvalue* _add = _internal_add_diagnostics();
  // @@protoc_insertion_point(field_add:CMsgClientToGCIntegrityStatus.diagnostics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCIntegrityStatus_keyvalue >&
CMsgClientToGCIntegrityStatus::diagnostics() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCIntegrityStatus.diagnostics)
  return _impl_.diagnostics_;
}

// -------------------------------------------------------------------

// CMsgClientToGCAggregateMetrics_SingleMetric

// optional string metric_name = 1;
inline bool CMsgClientToGCAggregateMetrics_SingleMetric::_internal_has_metric_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAggregateMetrics_SingleMetric::has_metric_name() const {
  return _internal_has_metric_name();
}
inline void CMsgClientToGCAggregateMetrics_SingleMetric::clear_metric_name() {
  _impl_.metric_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCAggregateMetrics_SingleMetric::metric_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAggregateMetrics.SingleMetric.metric_name)
  return _internal_metric_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCAggregateMetrics_SingleMetric::set_metric_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.metric_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCAggregateMetrics.SingleMetric.metric_name)
}
inline std::string* CMsgClientToGCAggregateMetrics_SingleMetric::mutable_metric_name() {
  std::string* _s = _internal_mutable_metric_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCAggregateMetrics.SingleMetric.metric_name)
  return _s;
}
inline const std::string& CMsgClientToGCAggregateMetrics_SingleMetric::_internal_metric_name() const {
  return _impl_.metric_name_.Get();
}
inline void CMsgClientToGCAggregateMetrics_SingleMetric::_internal_set_metric_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.metric_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCAggregateMetrics_SingleMetric::_internal_mutable_metric_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.metric_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCAggregateMetrics_SingleMetric::release_metric_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCAggregateMetrics.SingleMetric.metric_name)
  if (!_internal_has_metric_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.metric_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.metric_name_.IsDefault()) {
    _impl_.metric_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCAggregateMetrics_SingleMetric::set_allocated_metric_name(std::string* metric_name) {
  if (metric_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.metric_name_.SetAllocated(metric_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.metric_name_.IsDefault()) {
    _impl_.metric_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCAggregateMetrics.SingleMetric.metric_name)
}

// optional uint32 metric_count = 2;
inline bool CMsgClientToGCAggregateMetrics_SingleMetric::_internal_has_metric_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCAggregateMetrics_SingleMetric::has_metric_count() const {
  return _internal_has_metric_count();
}
inline void CMsgClientToGCAggregateMetrics_SingleMetric::clear_metric_count() {
  _impl_.metric_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCAggregateMetrics_SingleMetric::_internal_metric_count() const {
  return _impl_.metric_count_;
}
inline uint32_t CMsgClientToGCAggregateMetrics_SingleMetric::metric_count() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAggregateMetrics.SingleMetric.metric_count)
  return _internal_metric_count();
}
inline void CMsgClientToGCAggregateMetrics_SingleMetric::_internal_set_metric_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.metric_count_ = value;
}
inline void CMsgClientToGCAggregateMetrics_SingleMetric::set_metric_count(uint32_t value) {
  _internal_set_metric_count(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAggregateMetrics.SingleMetric.metric_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCAggregateMetrics

// repeated .CMsgClientToGCAggregateMetrics.SingleMetric metrics = 1;
inline int CMsgClientToGCAggregateMetrics::_internal_metrics_size() const {
  return _impl_.metrics_.size();
}
inline int CMsgClientToGCAggregateMetrics::metrics_size() const {
  return _internal_metrics_size();
}
inline void CMsgClientToGCAggregateMetrics::clear_metrics() {
  _impl_.metrics_.Clear();
}
inline ::CMsgClientToGCAggregateMetrics_SingleMetric* CMsgClientToGCAggregateMetrics::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCAggregateMetrics.metrics)
  return _impl_.metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCAggregateMetrics_SingleMetric >*
CMsgClientToGCAggregateMetrics::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCAggregateMetrics.metrics)
  return &_impl_.metrics_;
}
inline const ::CMsgClientToGCAggregateMetrics_SingleMetric& CMsgClientToGCAggregateMetrics::_internal_metrics(int index) const {
  return _impl_.metrics_.Get(index);
}
inline const ::CMsgClientToGCAggregateMetrics_SingleMetric& CMsgClientToGCAggregateMetrics::metrics(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAggregateMetrics.metrics)
  return _internal_metrics(index);
}
inline ::CMsgClientToGCAggregateMetrics_SingleMetric* CMsgClientToGCAggregateMetrics::_internal_add_metrics() {
  return _impl_.metrics_.Add();
}
inline ::CMsgClientToGCAggregateMetrics_SingleMetric* CMsgClientToGCAggregateMetrics::add_metrics() {
  ::CMsgClientToGCAggregateMetrics_SingleMetric* _add = _internal_add_metrics();
  // @@protoc_insertion_point(field_add:CMsgClientToGCAggregateMetrics.metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCAggregateMetrics_SingleMetric >&
CMsgClientToGCAggregateMetrics::metrics() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCAggregateMetrics.metrics)
  return _impl_.metrics_;
}

// -------------------------------------------------------------------

// CMsgGCToClientAggregateMetricsBackoff

// optional float upload_rate_modifier = 1;
inline bool CMsgGCToClientAggregateMetricsBackoff::_internal_has_upload_rate_modifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientAggregateMetricsBackoff::has_upload_rate_modifier() const {
  return _internal_has_upload_rate_modifier();
}
inline void CMsgGCToClientAggregateMetricsBackoff::clear_upload_rate_modifier() {
  _impl_.upload_rate_modifier_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CMsgGCToClientAggregateMetricsBackoff::_internal_upload_rate_modifier() const {
  return _impl_.upload_rate_modifier_;
}
inline float CMsgGCToClientAggregateMetricsBackoff::upload_rate_modifier() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientAggregateMetricsBackoff.upload_rate_modifier)
  return _internal_upload_rate_modifier();
}
inline void CMsgGCToClientAggregateMetricsBackoff::_internal_set_upload_rate_modifier(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.upload_rate_modifier_ = value;
}
inline void CMsgGCToClientAggregateMetricsBackoff::set_upload_rate_modifier(float value) {
  _internal_set_upload_rate_modifier(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientAggregateMetricsBackoff.upload_rate_modifier)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CMsgExtractGemsResponse_EExtractGems> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgExtractGemsResponse_EExtractGems>() {
  return ::CMsgExtractGemsResponse_EExtractGems_descriptor();
}
template <> struct is_proto_enum< ::CMsgAddSocketResponse_EAddSocket> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgAddSocketResponse_EAddSocket>() {
  return ::CMsgAddSocketResponse_EAddSocket_descriptor();
}
template <> struct is_proto_enum< ::CMsgAddItemToSocketResponse_EAddGem> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgAddItemToSocketResponse_EAddGem>() {
  return ::CMsgAddItemToSocketResponse_EAddGem_descriptor();
}
template <> struct is_proto_enum< ::CMsgResetStrangeGemCountResponse_EResetGem> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgResetStrangeGemCountResponse_EResetGem>() {
  return ::CMsgResetStrangeGemCountResponse_EResetGem_descriptor();
}
template <> struct is_proto_enum< ::EGCBaseMsg> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCBaseMsg>() {
  return ::EGCBaseMsg_descriptor();
}
template <> struct is_proto_enum< ::ECustomGameInstallStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECustomGameInstallStatus>() {
  return ::ECustomGameInstallStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_base_5fgcmessages_2eproto
