// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_msgid.proto

#include "dota_gcmessages_msgid.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fmsgid_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fmsgid_2eproto = nullptr;
const uint32_t TableStruct_dota_5fgcmessages_5fmsgid_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_dota_5fgcmessages_5fmsgid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033dota_gcmessages_msgid.proto*\365\236\002\n\nEDOTA"
  "GCMsg\022\025\n\020k_EMsgGCDOTABase\020\3306\022\035\n\030k_EMsgGC"
  "GameMatchSignOut\020\3346\022%\n k_EMsgGCGameMatch"
  "SignOutResponse\020\3356\022\034\n\027k_EMsgGCJoinChatCh"
  "annel\020\3416\022$\n\037k_EMsgGCJoinChatChannelRespo"
  "nse\020\3426\022\037\n\032k_EMsgGCOtherJoinedChannel\020\3456\022"
  "\035\n\030k_EMsgGCOtherLeftChannel\020\3466\022\"\n\035k_EMsg"
  "ServerToGCRequestStatus\020\3626\022\036\n\031k_EMsgGCSt"
  "artFindingMatch\020\3716\022\035\n\030k_EMsgGCConnectedP"
  "layers\020\3726\022\037\n\032k_EMsgGCAbandonCurrentGame\020"
  "\3736\022\035\n\030k_EMsgGCStopFindingMatch\020\3746\022 \n\033k_E"
  "MsgGCPracticeLobbyCreate\020\3766\022\037\n\032k_EMsgGCP"
  "racticeLobbyLeave\020\2007\022 \n\033k_EMsgGCPractice"
  "LobbyLaunch\020\2017\022\036\n\031k_EMsgGCPracticeLobbyL"
  "ist\020\2027\022&\n!k_EMsgGCPracticeLobbyListRespo"
  "nse\020\2037\022\036\n\031k_EMsgGCPracticeLobbyJoin\020\2047\022$"
  "\n\037k_EMsgGCPracticeLobbySetDetails\020\2067\022%\n "
  "k_EMsgGCPracticeLobbySetTeamSlot\020\2077\022)\n$k"
  "_EMsgGCInitialQuestionnaireResponse\020\2117\022\""
  "\n\035k_EMsgGCPracticeLobbyResponse\020\2177\022\"\n\035k_"
  "EMsgGCBroadcastNotification\020\2207\022!\n\034k_EMsg"
  "GCLiveScoreboardUpdate\020\2217\022#\n\036k_EMsgGCReq"
  "uestChatChannelList\020\2247\022+\n&k_EMsgGCReques"
  "tChatChannelListResponse\020\2257\022\024\n\017k_EMsgGCR"
  "eadyUp\020\2367\022\'\n\"k_EMsgGCKickedFromMatchmaki"
  "ngQueue\020\2377\022\033\n\026k_EMsgGCLeaverDetected\020\2407\022"
  "\037\n\032k_EMsgGCSpectateFriendGame\020\2417\022\'\n\"k_EM"
  "sgGCSpectateFriendGameResponse\020\2427\022$\n\037k_E"
  "MsgGCReportsRemainingRequest\020\2447\022%\n k_EMs"
  "gGCReportsRemainingResponse\020\2457\022\037\n\032k_EMsg"
  "GCSubmitPlayerReport\020\2467\022\'\n\"k_EMsgGCSubmi"
  "tPlayerReportResponse\020\2477\022\036\n\031k_EMsgGCPrac"
  "ticeLobbyKick\020\2517\022!\n\034k_EMsgGCSubmitPlayer"
  "ReportV2\020\2527\022)\n$k_EMsgGCSubmitPlayerRepor"
  "tResponseV2\020\2537\022\035\n\030k_EMsgGCRequestSaveGam"
  "es\020\2547\022#\n\036k_EMsgGCRequestSaveGamesServer\020"
  "\2557\022%\n k_EMsgGCRequestSaveGamesResponse\020\256"
  "7\022#\n\036k_EMsgGCLeaverDetectedResponse\020\2577\022\""
  "\n\035k_EMsgGCPlayerFailedToConnect\020\2607\022\035\n\030k_"
  "EMsgGCGCToRelayConnect\020\2617\022%\n k_EMsgGCGCT"
  "oRelayConnectresponse\020\2627\022\026\n\021k_EMsgGCWatc"
  "hGame\020\2637\022\036\n\031k_EMsgGCWatchGameResponse\020\2647"
  "\022\035\n\030k_EMsgGCBanStatusRequest\020\2657\022\036\n\031k_EMs"
  "gGCBanStatusResponse\020\2667\022 \n\033k_EMsgGCMatch"
  "DetailsRequest\020\2677\022!\n\034k_EMsgGCMatchDetail"
  "sResponse\020\2707\022\034\n\027k_EMsgGCCancelWatchGame\020"
  "\2717\022\022\n\rk_EMsgGCPopup\020\2767\022+\n&k_EMsgGCFriend"
  "PracticeLobbyListRequest\020\3077\022,\n\'k_EMsgGCF"
  "riendPracticeLobbyListResponse\020\3107\022&\n!k_E"
  "MsgGCPracticeLobbyJoinResponse\020\3117\022\027\n\022k_E"
  "MsgGCCreateTeam\020\3137\022\037\n\032k_EMsgGCCreateTeam"
  "Response\020\3147\022#\n\036k_EMsgGCTeamInvite_Invite"
  "rToGC\020\3227\0224\n/k_EMsgGCTeamInvite_GCImmedia"
  "teResponseToInviter\020\3237\022*\n%k_EMsgGCTeamIn"
  "vite_GCRequestToInvitee\020\3247\022+\n&k_EMsgGCTe"
  "amInvite_InviteeResponseToGC\020\3257\022+\n&k_EMs"
  "gGCTeamInvite_GCResponseToInviter\020\3267\022+\n&"
  "k_EMsgGCTeamInvite_GCResponseToInvitee\020\327"
  "7\022\033\n\026k_EMsgGCKickTeamMember\020\3307\022#\n\036k_EMsg"
  "GCKickTeamMemberResponse\020\3317\022\026\n\021k_EMsgGCL"
  "eaveTeam\020\3327\022\036\n\031k_EMsgGCLeaveTeamResponse"
  "\020\3337\022%\n k_EMsgGCApplyTeamToPracticeLobby\020"
  "\3467\022\036\n\031k_EMsgGCTransferTeamAdmin\020\3507\022.\n)k_"
  "EMsgGCPracticeLobbyJoinBroadcastChannel\020"
  "\3557\022!\n\034k_EMsgGC_TournamentItemEvent\020\3567\022)\n"
  "$k_EMsgGC_TournamentItemEventResponse\020\3577"
  "\022\026\n\021k_EMsgTeamFanfare\020\3647\022\036\n\031k_EMsgRespon"
  "seTeamFanfare\020\3657\022&\n!k_EMsgGC_GameServerU"
  "ploadSaveGame\020\3667\022&\n!k_EMsgGC_GameServerS"
  "aveGameResult\020\3677\022#\n\036k_EMsgGC_GameServerG"
  "etLoadGame\020\3707\022)\n$k_EMsgGC_GameServerGetL"
  "oadGameResult\020\3717\022\034\n\027k_EMsgGCEditTeamDeta"
  "ils\020\3767\022$\n\037k_EMsgGCEditTeamDetailsRespons"
  "e\020\3777\022\032\n\025k_EMsgGCReadyUpStatus\020\2028\022\037\n\032k_EM"
  "sgGCToGCMatchCompleted\020\2228\022!\n\034k_EMsgGCBal"
  "ancedShuffleLobby\020\2248\022$\n\037k_EMsgGCMatchmak"
  "ingStatsRequest\020\2358\022%\n k_EMsgGCMatchmakin"
  "gStatsResponse\020\2368\022\032\n\025k_EMsgGCBotGameCrea"
  "te\020\2378\022\"\n\035k_EMsgGCSetMatchHistoryAccess\020\240"
  "8\022*\n%k_EMsgGCSetMatchHistoryAccessRespon"
  "se\020\2418\022\034\n\027k_EMsgUpgradeLeagueItem\020\2438\022$\n\037k"
  "_EMsgUpgradeLeagueItemResponse\020\2448\022\"\n\035k_E"
  "MsgGCWatchDownloadedReplay\020\2468\022$\n\037k_EMsgC"
  "lientsRejoinChatChannels\020\2618\022 \n\033k_EMsgGCT"
  "oGCGetUserChatInfo\020\2628\022(\n#k_EMsgGCToGCGet"
  "UserChatInfoResponse\020\2638\022%\n k_EMsgGCToGCL"
  "eaveAllChatChannels\020\2648\022%\n k_EMsgGCToGCUp"
  "dateAccountChatBan\020\2658\022$\n\037k_EMsgGCToGCCan"
  "InviteUserToTeam\020\3028\022,\n\'k_EMsgGCToGCCanIn"
  "viteUserToTeamResponse\020\3038\022\034\n\027k_EMsgGCToG"
  "CGetUserRank\020\3048\022$\n\037k_EMsgGCToGCGetUserRa"
  "nkResponse\020\3058\022\037\n\032k_EMsgGCToGCAdjustUserR"
  "ank\020\3068\022\'\n\"k_EMsgGCToGCAdjustUserRankResp"
  "onse\020\3078\022 \n\033k_EMsgGCToGCUpdateTeamStats\020\310"
  "8\022\035\n\030k_EMsgGCToGCValidateTeam\020\3118\022%\n k_EM"
  "sgGCToGCValidateTeamResponse\020\3128\022\037\n\032k_EMs"
  "gGCToGCGetLeagueAdmin\020\3278\022\'\n\"k_EMsgGCToGC"
  "GetLeagueAdminResponse\020\3308\022\035\n\030k_EMsgGCLea"
  "veChatChannel\020\3508\022\030\n\023k_EMsgGCChatMessage\020"
  "\3518\022\035\n\030k_EMsgGCGetHeroStandings\020\3528\022%\n k_E"
  "MsgGCGetHeroStandingsResponse\020\3538\022*\n%k_EM"
  "sgGCItemEditorReservationsRequest\020\3638\022+\n&"
  "k_EMsgGCItemEditorReservationsResponse\020\364"
  "8\022%\n k_EMsgGCItemEditorReserveItemDef\020\3658"
  "\022-\n(k_EMsgGCItemEditorReserveItemDefResp"
  "onse\020\3668\022)\n$k_EMsgGCItemEditorReleaseRese"
  "rvation\020\3678\0221\n,k_EMsgGCItemEditorReleaseR"
  "eservationResponse\020\3708\022!\n\034k_EMsgGCRewardT"
  "utorialPrizes\020\3718\022#\n\036k_EMsgGCFantasyLiveP"
  "layerStats\020\2149\022$\n\037k_EMsgGCFantasyFinalPla"
  "yerStats\020\2159\022\033\n\026k_EMsgGCFlipLobbyTeams\020\2309"
  "\022\'\n\"k_EMsgGCToGCEvaluateReportedPlayer\020\232"
  "9\022/\n*k_EMsgGCToGCEvaluateReportedPlayerR"
  "esponse\020\2339\022-\n(k_EMsgGCToGCProcessPlayerR"
  "eportForTarget\020\2349\022%\n k_EMsgGCToGCProcess"
  "ReportSuccess\020\2359\022%\n k_EMsgGCNotifyAccoun"
  "tFlagsChange\020\2369\022\036\n\031k_EMsgGCSetProfilePri"
  "vacy\020\2379\022&\n!k_EMsgGCSetProfilePrivacyResp"
  "onse\020\2409\022\034\n\027k_EMsgGCClientSuspended\020\2569\022 \n"
  "\033k_EMsgGCPartyMemberSetCoach\020\2579\022\"\n\035k_EMs"
  "gGCPracticeLobbySetCoach\020\2629\022\035\n\030k_EMsgGCC"
  "hatModeratorBan\020\2779\022,\n\'k_EMsgGCLobbyUpdat"
  "eBroadcastChannelInfo\020\3079\022$\n\037k_EMsgGCToGC"
  "GrantTournamentItem\020\3149\022)\n$k_EMsgGCToGCUp"
  "gradeTwitchViewerItems\020\3179\022\'\n\"k_EMsgGCToG"
  "CGetLiveMatchAffiliates\020\3209\022/\n*k_EMsgGCTo"
  "GCGetLiveMatchAffiliatesResponse\020\3219\022*\n%k"
  "_EMsgGCToGCUpdatePlayerPennantCounts\020\3229\022"
  "\'\n\"k_EMsgGCToGCGetPlayerPennantCounts\020\3239"
  "\022/\n*k_EMsgGCToGCGetPlayerPennantCountsRe"
  "sponse\020\3249\022.\n)k_EMsgGCGameMatchSignOutPer"
  "missionRequest\020\3259\022/\n*k_EMsgGCGameMatchSi"
  "gnOutPermissionResponse\020\3269\022\037\n\032k_EMsgDOTA"
  "AwardEventPoints\020\3309\022\035\n\030k_EMsgDOTAGetEven"
  "tPoints\020\3339\022%\n k_EMsgDOTAGetEventPointsRe"
  "sponse\020\3349\022\'\n\"k_EMsgGCPartyLeaderWatchGam"
  "ePrompt\020\3459\022#\n\036k_EMsgGCCompendiumSetSelec"
  "tion\020\3559\022\"\n\035k_EMsgGCCompendiumDataRequest"
  "\020\3569\022#\n\036k_EMsgGCCompendiumDataResponse\020\3579"
  "\022$\n\037k_EMsgDOTAGetPlayerMatchHistory\020\3609\022,"
  "\n\'k_EMsgDOTAGetPlayerMatchHistoryRespons"
  "e\020\3619\022$\n\037k_EMsgGCToGCMatchmakingAddParty\020"
  "\3629\022\'\n\"k_EMsgGCToGCMatchmakingRemoveParty"
  "\020\3639\022,\n\'k_EMsgGCToGCMatchmakingRemoveAllP"
  "arties\020\3649\022&\n!k_EMsgGCToGCMatchmakingMatc"
  "hFound\020\3659\022+\n&k_EMsgGCToGCUpdateMatchMana"
  "gementStats\020\3669\022\'\n\"k_EMsgGCToGCUpdateMatc"
  "hmakingStats\020\3679\022 \n\033k_EMsgGCToServerPingR"
  "equest\020\3709\022!\n\034k_EMsgGCToServerPingRespons"
  "e\020\3719\022&\n!k_EMsgGCToServerEvaluateToxicCha"
  "t\020\3729\022&\n!k_EMsgServerToGCEvaluateToxicCha"
  "t\020\3739\022.\n)k_EMsgServerToGCEvaluateToxicCha"
  "tResponse\020\3749\022#\n\036k_EMsgGCToGCProcessMatch"
  "Leaver\020\202:\022!\n\034k_EMsgGCNotificationsReques"
  "t\020\203:\022\"\n\035k_EMsgGCNotificationsResponse\020\204:"
  "\022#\n\036k_EMsgGCToGCModifyNotification\020\205:\022\034\n"
  "\027k_EMsgGCLeagueAdminList\020\212:\022)\n$k_EMsgGCN"
  "otificationsMarkReadRequest\020\213:\0220\n+k_EMsg"
  "ServerToGCRequestBatchPlayerResources\020\232:"
  "\0228\n3k_EMsgServerToGCRequestBatchPlayerRe"
  "sourcesResponse\020\233:\022+\n&k_EMsgGCCompendium"
  "SetSelectionResponse\020\235:\022\035\n\030k_EMsgGCPlaye"
  "rInfoSubmit\020\240:\022%\n k_EMsgGCPlayerInfoSubm"
  "itResponse\020\241:\022 \n\033k_EMsgGCToGCGetAccountL"
  "evel\020\242:\022(\n#k_EMsgGCToGCGetAccountLevelRe"
  "sponse\020\243:\022(\n#k_EMsgDOTAGetWeekendTourney"
  "Schedule\020\250:\022%\n k_EMsgDOTAWeekendTourneyS"
  "chedule\020\251:\022+\n&k_EMsgGCJoinableCustomGame"
  "ModesRequest\020\252:\022,\n\'k_EMsgGCJoinableCusto"
  "mGameModesResponse\020\253:\022)\n$k_EMsgGCJoinabl"
  "eCustomLobbiesRequest\020\254:\022*\n%k_EMsgGCJoin"
  "ableCustomLobbiesResponse\020\255:\022!\n\034k_EMsgGC"
  "QuickJoinCustomLobby\020\256:\022)\n$k_EMsgGCQuick"
  "JoinCustomLobbyResponse\020\257:\022&\n!k_EMsgGCTo"
  "GCGrantEventPointAction\020\260:\022\'\n\"k_EMsgGCTo"
  "GCSetCompendiumSelection\020\266:\022\031\n\024k_EMsgGCH"
  "asItemQuery\020\274:\022\034\n\027k_EMsgGCHasItemRespons"
  "e\020\275:\022)\n$k_EMsgGCToGCGrantEventPointActio"
  "nMsg\020\300:\022(\n#k_EMsgGCToGCGetCompendiumSele"
  "ctions\020\304:\0220\n+k_EMsgGCToGCGetCompendiumSe"
  "lectionsResponse\020\305:\022)\n$k_EMsgServerToGCM"
  "atchConnectionStats\020\306:\022\'\n\"k_EMsgGCToClie"
  "ntTournamentItemDrop\020\307:\022$\n\037k_EMsgSQLDela"
  "yedGrantLeagueDrop\020\310:\022\'\n\"k_EMsgServerGCU"
  "pdateSpectatorCount\020\311:\022\037\n\032k_EMsgGCToGCEm"
  "oticonUnlock\020\315:\022\033\n\026k_EMsgSignOutDraftInf"
  "o\020\316:\022(\n#k_EMsgClientToGCEmoticonDataRequ"
  "est\020\317:\022!\n\034k_EMsgGCToClientEmoticonData\020\320"
  ":\022\?\n:k_EMsgGCPracticeLobbyToggleBroadcas"
  "tChannelCameramanStatus\020\321:\022\031\n\024k_EMsgDOTA"
  "RedeemItem\020\336:\022!\n\034k_EMsgDOTARedeemItemRes"
  "ponse\020\337:\022\'\n\"k_EMsgClientToGCGetAllHeroPr"
  "ogress\020\341:\022/\n*k_EMsgClientToGCGetAllHeroP"
  "rogressResponse\020\342:\022#\n\036k_EMsgGCToGCGetSer"
  "verForClient\020\343:\022+\n&k_EMsgGCToGCGetServer"
  "ForClientResponse\020\344:\022*\n%k_EMsgSQLProcess"
  "TournamentGameOutcome\020\345:\022\"\n\035k_EMsgSQLGra"
  "ntTrophyToAccount\020\346:\022\"\n\035k_EMsgClientToGC"
  "GetTrophyList\020\347:\022*\n%k_EMsgClientToGCGetT"
  "rophyListResponse\020\350:\022\"\n\035k_EMsgGCToClient"
  "TrophyAwarded\020\351:\022 \n\033k_EMsgGCGameBotMatch"
  "SignOut\020\352:\0221\n,k_EMsgGCGameBotMatchSignOu"
  "tPermissionRequest\020\353:\022\031\n\024k_EMsgSignOutBo"
  "tInfo\020\354:\022#\n\036k_EMsgGCToGCUpdateProfileCar"
  "ds\020\355:\022#\n\036k_EMsgClientToGCGetProfileCard\020"
  "\356:\022+\n&k_EMsgClientToGCGetProfileCardResp"
  "onse\020\357:\022$\n\037k_EMsgClientToGCGetBattleRepo"
  "rt\020\360:\022,\n\'k_EMsgClientToGCGetBattleReport"
  "Response\020\361:\022(\n#k_EMsgClientToGCSetProfil"
  "eCardSlots\020\362:\022\'\n\"k_EMsgGCToClientProfile"
  "CardUpdated\020\363:\022\'\n\"k_EMsgServerToGCVictor"
  "yPredictions\020\364:\0222\n-k_EMsgClientToGCGetBa"
  "ttleReportAggregateStats\020\365:\022:\n5k_EMsgCli"
  "entToGCGetBattleReportAggregateStatsResp"
  "onse\020\366:\022(\n#k_EMsgClientToGCGetBattleRepo"
  "rtInfo\020\367:\0220\n+k_EMsgClientToGCGetBattleRe"
  "portInfoResponse\020\370:\022&\n!k_EMsgSignOutComm"
  "unicationSummary\020\371:\022+\n&k_EMsgServerToGCR"
  "equestStatus_Response\020\372:\022%\n k_EMsgClient"
  "ToGCCreateHeroStatue\020\373:\022+\n&k_EMsgGCToCli"
  "entHeroStatueCreateResult\020\374:\022&\n!k_EMsgGC"
  "GCToLANServerRelayConnect\020\375:\022,\n\'k_EMsgCl"
  "ientToGCAcknowledgeBattleReport\020\376:\0224\n/k_"
  "EMsgClientToGCAcknowledgeBattleReportRes"
  "ponse\020\377:\0220\n+k_EMsgClientToGCGetBattleRep"
  "ortMatchHistory\020\200;\0228\n3k_EMsgClientToGCGe"
  "tBattleReportMatchHistoryResponse\020\201;\022(\n#"
  "k_EMsgServerToGCReportKillSummaries\020\202;\022("
  "\n#k_EMsgGCToGCUpdatePlayerPredictions\020\211;"
  "\022%\n k_EMsgGCToServerPredictionResult\020\212;\022"
  ",\n\'k_EMsgGCToGCReplayMonitorValidateRepl"
  "ay\020\221;\022\033\n\026k_EMsgLobbyEventPoints\020\224;\022%\n k_"
  "EMsgGCToGCGetCustomGameTickets\020\225;\022-\n(k_E"
  "MsgGCToGCGetCustomGameTicketsResponse\020\226;"
  "\022!\n\034k_EMsgGCToGCCustomGamePlayed\020\230;\022\'\n\"k"
  "_EMsgGCToGCGrantEventPointsToUser\020\231;\022 \n\033"
  "k_EMsgGameserverCrashReport\020\233;\022(\n#k_EMsg"
  "GameserverCrashReportResponse\020\234;\022(\n#k_EM"
  "sgGCToClientSteamDatagramTicket\020\235;\022(\n#k_"
  "EMsgGCToGCSendAccountsEventPoints\020\237;\022*\n%"
  "k_EMsgClientToGCRerollPlayerChallenge\020\240;"
  "\022*\n%k_EMsgServerToGCRerollPlayerChalleng"
  "e\020\241;\022*\n%k_EMsgGCRerollPlayerChallengeRes"
  "ponse\020\242;\022\'\n\"k_EMsgSignOutUpdatePlayerCha"
  "llenge\020\243;\022#\n\036k_EMsgClientToGCSetPartyLea"
  "der\020\244;\022\'\n\"k_EMsgClientToGCCancelPartyInv"
  "ites\020\245;\022-\n(k_EMsgSQLGrantLeagueMatchToTi"
  "cketHolders\020\250;\022)\n$k_EMsgGCToGCEmoticonUn"
  "lockNoRollback\020\252;\022%\n k_EMsgClientToGCApp"
  "lyGemCombiner\020\263;\022$\n\037k_EMsgClientToGCGetA"
  "llHeroOrder\020\266;\022,\n\'k_EMsgClientToGCGetAll"
  "HeroOrderResponse\020\267;\022$\n\037k_EMsgSQLGCToGCG"
  "rantBadgePoints\020\270;\022-\n(k_EMsgGCToGCCheckO"
  "wnsEntireEmoticonRange\020\273;\0225\n0k_EMsgGCToG"
  "CCheckOwnsEntireEmoticonRangeResponse\020\274;"
  "\022)\n$k_EMsgGCToClientRequestLaneSelection"
  "\020\307;\0221\n,k_EMsgGCToClientRequestLaneSelect"
  "ionResponse\020\310;\022,\n\'k_EMsgServerToGCCavern"
  "CrawlIsHeroActive\020\311;\0224\n/k_EMsgServerToGC"
  "CavernCrawlIsHeroActiveResponse\020\312;\0226\n1k_"
  "EMsgClientToGCPlayerCardSpecificPurchase"
  "Request\020\313;\0227\n2k_EMsgClientToGCPlayerCard"
  "SpecificPurchaseResponse\020\314;\022\'\n\"k_EMsgGCt"
  "oServerTensorflowInstance\020\315;\022\036\n\031k_EMsgSQ"
  "LSetIsLeagueAdmin\020\316;\022%\n k_EMsgGCToGCGetL"
  "iveLeagueMatches\020\317;\022-\n(k_EMsgGCToGCGetLi"
  "veLeagueMatchesResponse\020\320;\022*\n%k_EMsgDOTA"
  "LeagueInfoListAdminsRequest\020\321;\022*\n%k_EMsg"
  "DOTALeagueInfoListAdminsReponse\020\322;\022#\n\036k_"
  "EMsgGCToGCLeagueMatchStarted\020\335;\022%\n k_EMs"
  "gGCToGCLeagueMatchCompleted\020\336;\022+\n&k_EMsg"
  "GCToGCLeagueMatchStartedResponse\020\337;\022/\n*k"
  "_EMsgDOTALeagueAvailableLobbyNodesReques"
  "t\020\342;\022(\n#k_EMsgDOTALeagueAvailableLobbyNo"
  "des\020\343;\022\036\n\031k_EMsgGCToGCLeagueRequest\020\344;\022\037"
  "\n\032k_EMsgGCToGCLeagueResponse\020\345;\022\'\n\"k_EMs"
  "gGCToGCLeagueNodeGroupRequest\020\346;\022(\n#k_EM"
  "sgGCToGCLeagueNodeGroupResponse\020\347;\022\"\n\035k_"
  "EMsgGCToGCLeagueNodeRequest\020\350;\022#\n\036k_EMsg"
  "GCToGCLeagueNodeResponse\020\351;\022*\n%k_EMsgGCT"
  "oGCRealtimeStatsTerseRequest\020\352;\022+\n&k_EMs"
  "gGCToGCRealtimeStatsTerseResponse\020\353;\022%\n "
  "k_EMsgGCToGCGetTopMatchesRequest\020\354;\022&\n!k"
  "_EMsgGCToGCGetTopMatchesResponse\020\355;\022\'\n\"k"
  "_EMsgClientToGCGetFilteredPlayers\020\356;\022/\n*"
  "k_EMsgGCToClientGetFilteredPlayersRespon"
  "se\020\357;\022)\n$k_EMsgClientToGCRemoveFilteredP"
  "layer\020\360;\0221\n,k_EMsgGCToClientRemoveFilter"
  "edPlayerResponse\020\361;\022&\n!k_EMsgGCToClientP"
  "layerBeaconState\020\362;\022&\n!k_EMsgGCToClientP"
  "artyBeaconUpdate\020\363;\022&\n!k_EMsgGCToClientP"
  "artySearchInvite\020\364;\022&\n!k_EMsgClientToGCU"
  "pdatePartyBeacon\020\365;\022/\n*k_EMsgClientToGCR"
  "equestActiveBeaconParties\020\366;\0227\n2k_EMsgGC"
  "ToClientRequestActiveBeaconPartiesRespon"
  "se\020\367;\022$\n\037k_EMsgClientToGCManageFavorites"
  "\020\370;\022,\n\'k_EMsgGCToClientManageFavoritesRe"
  "sponse\020\371;\022(\n#k_EMsgClientToGCJoinPartyFr"
  "omBeacon\020\372;\0220\n+k_EMsgGCToClientJoinParty"
  "FromBeaconResponse\020\373;\022\'\n\"k_EMsgClientToG"
  "CGetFavoritePlayers\020\374;\022/\n*k_EMsgGCToClie"
  "ntGetFavoritePlayersResponse\020\375;\022*\n%k_EMs"
  "gClientToGCVerifyFavoritePlayers\020\376;\0222\n-k"
  "_EMsgGCToClientVerifyFavoritePlayersResp"
  "onse\020\377;\022\'\n\"k_EMsgGCToClientPartySearchIn"
  "vites\020\200<\022\"\n\035k_EMsgGCToClientRequestMMInf"
  "o\020\201<\022\033\n\026k_EMsgClientToGCMMInfo\020\202<\022\036\n\031k_E"
  "MsgSignOutTextMuteInfo\020\203<\022/\n*k_EMsgClien"
  "tToGCPurchaseLabyrinthBlessings\020\204<\0227\n2k_"
  "EMsgClientToGCPurchaseLabyrinthBlessings"
  "Response\020\205<\022/\n*k_EMsgClientToGCPurchaseF"
  "ilteredPlayerSlot\020\206<\0227\n2k_EMsgGCToClient"
  "PurchaseFilteredPlayerSlotResponse\020\207<\022-\n"
  "(k_EMsgClientToGCUpdateFilteredPlayerNot"
  "e\020\210<\0225\n0k_EMsgGCToClientUpdateFilteredPl"
  "ayerNoteResponse\020\211<\022\036\n\031k_EMsgClientToGCC"
  "laimSwag\020\212<\022&\n!k_EMsgGCToClientClaimSwag"
  "Response\020\213<\022%\n k_EMsgServerToGCLockCharm"
  "Trading\020\304>\022\'\n\"k_EMsgClientToGCPlayerStat"
  "sRequest\020\306>\022(\n#k_EMsgGCToClientPlayerSta"
  "tsResponse\020\307>\022#\n\036k_EMsgGCClearPracticeLo"
  "bbyTeam\020\310>\022)\n$k_EMsgClientToGCFindTopSou"
  "rceTVGames\020\311>\0221\n,k_EMsgGCToClientFindTop"
  "SourceTVGamesResponse\020\312>\022\026\n\021k_EMsgGCLobb"
  "yList\020\313>\022\036\n\031k_EMsgGCLobbyListResponse\020\314>"
  "\022$\n\037k_EMsgGCPlayerStatsMatchSignOut\020\315>\0221"
  "\n,k_EMsgClientToGCSocialFeedPostCommentR"
  "equest\020\320>\0222\n-k_EMsgGCToClientSocialFeedP"
  "ostCommentResponse\020\321>\0224\n/k_EMsgClientToG"
  "CCustomGamesFriendsPlayedRequest\020\322>\0225\n0k"
  "_EMsgGCToClientCustomGamesFriendsPlayedR"
  "esponse\020\323>\0223\n.k_EMsgClientToGCFriendsPla"
  "yedCustomGameRequest\020\324>\0224\n/k_EMsgGCToCli"
  "entFriendsPlayedCustomGameResponse\020\325>\022\037\n"
  "\032k_EMsgGCTopCustomGamesList\020\330>\022!\n\034k_EMsg"
  "ClientToGCSetPartyOpen\020\335>\022%\n k_EMsgClien"
  "tToGCMergePartyInvite\020\336>\022*\n%k_EMsgGCToCl"
  "ientMergeGroupInviteReply\020\337>\022\'\n\"k_EMsgCl"
  "ientToGCMergePartyResponse\020\340>\022,\n\'k_EMsgG"
  "CToClientMergePartyResponseReply\020\341>\022(\n#k"
  "_EMsgClientToGCGetProfileCardStats\020\342>\0220\n"
  "+k_EMsgClientToGCGetProfileCardStatsResp"
  "onse\020\343>\022,\n\'k_EMsgClientToGCTopLeagueMatc"
  "hesRequest\020\344>\022,\n\'k_EMsgClientToGCTopFrie"
  "ndMatchesRequest\020\345>\022,\n\'k_EMsgGCToClientP"
  "rofileCardStatsUpdated\020\350>\022\"\n\035k_EMsgServe"
  "rToGCRealtimeStats\020\351>\022+\n&k_EMsgGCToServe"
  "rRealtimeStatsStartStop\020\352>\022%\n k_EMsgGCTo"
  "GCGetServersForClients\020\355>\022-\n(k_EMsgGCToG"
  "CGetServersForClientsResponse\020\356>\022&\n!k_EM"
  "sgGCPracticeLobbyKickFromTeam\020\357>\022!\n\034k_EM"
  "sgDOTAChatGetMemberCount\020\360>\022)\n$k_EMsgDOT"
  "AChatGetMemberCountResponse\020\361>\0221\n,k_EMsg"
  "ClientToGCSocialFeedPostMessageRequest\020\362"
  ">\0222\n-k_EMsgGCToClientSocialFeedPostMessa"
  "geResponse\020\363>\022/\n*k_EMsgCustomGameListenS"
  "erverStartedLoading\020\364>\022*\n%k_EMsgCustomGa"
  "meClientFinishedLoading\020\365>\022/\n*k_EMsgGCPr"
  "acticeLobbyCloseBroadcastChannel\020\366>\022&\n!k"
  "_EMsgGCStartFindingMatchResponse\020\367>\022$\n\037k"
  "_EMsgSQLGCToGCGrantAccountFlag\020\371>\022-\n(k_E"
  "MsgGCToClientTopLeagueMatchesResponse\020\375>"
  "\022-\n(k_EMsgGCToClientTopFriendMatchesResp"
  "onse\020\376>\022*\n%k_EMsgClientToGCMatchesMinima"
  "lRequest\020\377>\022+\n&k_EMsgClientToGCMatchesMi"
  "nimalResponse\020\200\?\022\'\n\"k_EMsgGCToClientChat"
  "RegionsEnabled\020\203\?\022\035\n\030k_EMsgClientToGCPin"
  "gData\020\204\?\022%\n k_EMsgGCToGCEnsureAccountInP"
  "arty\020\207\?\022-\n(k_EMsgGCToGCEnsureAccountInPa"
  "rtyResponse\020\210\?\022&\n!k_EMsgClientToGCGetPro"
  "fileTickets\020\211\?\022.\n)k_EMsgClientToGCGetPro"
  "fileTicketsResponse\020\212\?\022\'\n\"k_EMsgGCToClie"
  "ntMatchGroupsVersion\020\213\?\022$\n\037k_EMsgClientT"
  "oGCH264Unsupported\020\214\?\022%\n k_EMsgClientToG"
  "CGetQuestProgress\020\216\?\022-\n(k_EMsgClientToGC"
  "GetQuestProgressResponse\020\217\?\022\031\n\024k_EMsgSig"
  "nOutXPCoins\020\220\?\022#\n\036k_EMsgGCToClientMatchS"
  "ignedOut\020\221\?\022 \n\033k_EMsgGCGetHeroStatsHisto"
  "ry\020\222\?\022(\n#k_EMsgGCGetHeroStatsHistoryResp"
  "onse\020\223\?\022&\n!k_EMsgClientToGCPrivateChatIn"
  "vite\020\224\?\022$\n\037k_EMsgClientToGCPrivateChatKi"
  "ck\020\230\?\022\'\n\"k_EMsgClientToGCPrivateChatProm"
  "ote\020\231\?\022&\n!k_EMsgClientToGCPrivateChatDem"
  "ote\020\232\?\022(\n#k_EMsgGCToClientPrivateChatRes"
  "ponse\020\233\?\0222\n-k_EMsgClientToGCLatestConduc"
  "tScorecardRequest\020\237\?\022+\n&k_EMsgClientToGC"
  "LatestConductScorecard\020\240\?\022$\n\037k_EMsgClien"
  "tToGCWageringRequest\020\243\?\022%\n k_EMsgGCToCli"
  "entWageringResponse\020\244\?\022&\n!k_EMsgClientTo"
  "GCEventGoalsRequest\020\247\?\022\'\n\"k_EMsgClientTo"
  "GCEventGoalsResponse\020\250\?\022(\n#k_EMsgGCToGCL"
  "eaguePredictionsUpdate\020\254\?\022&\n!k_EMsgGCToG"
  "CAddUserToPostGameChat\020\256\?\022)\n$k_EMsgClien"
  "tToGCHasPlayerVotedForMVP\020\257\?\0221\n,k_EMsgCl"
  "ientToGCHasPlayerVotedForMVPResponse\020\260\?\022"
  "\037\n\032k_EMsgClientToGCVoteForMVP\020\261\?\022\'\n\"k_EM"
  "sgClientToGCVoteForMVPResponse\020\262\?\022\"\n\035k_E"
  "MsgGCToGCGetEventOwnership\020\263\?\022*\n%k_EMsgG"
  "CToGCGetEventOwnershipResponse\020\264\?\0223\n.k_E"
  "MsgGCToClientAutomatedTournamentStateCha"
  "nge\020\265\?\022\'\n\"k_EMsgClientToGCWeekendTourney"
  "Opts\020\266\?\022/\n*k_EMsgClientToGCWeekendTourne"
  "yOptsResponse\020\267\?\022(\n#k_EMsgClientToGCWeek"
  "endTourneyLeave\020\270\?\0220\n+k_EMsgClientToGCWe"
  "ekendTourneyLeaveResponse\020\271\?\022)\n$k_EMsgCl"
  "ientToGCTeammateStatsRequest\020\274\?\022*\n%k_EMs"
  "gClientToGCTeammateStatsResponse\020\275\?\022\'\n\"k"
  "_EMsgClientToGCGetGiftPermissions\020\276\?\022/\n*"
  "k_EMsgClientToGCGetGiftPermissionsRespon"
  "se\020\277\?\022\"\n\035k_EMsgClientToGCVoteForArcana\020\300"
  "\?\022*\n%k_EMsgClientToGCVoteForArcanaRespon"
  "se\020\301\?\0220\n+k_EMsgClientToGCRequestArcanaVo"
  "tesRemaining\020\302\?\0228\n3k_EMsgClientToGCReque"
  "stArcanaVotesRemainingResponse\020\303\?\022&\n!k_E"
  "MsgGCTransferTeamAdminResponse\020\304\?\022\035\n\030k_E"
  "MsgGCToClientTeamInfo\020\307\?\022\036\n\031k_EMsgGCToCl"
  "ientTeamsInfo\020\310\?\022&\n!k_EMsgClientToGCMyTe"
  "amInfoRequest\020\311\?\022$\n\037k_EMsgClientToGCPubl"
  "ishUserStat\020\314\?\022\"\n\035k_EMsgGCToGCSignoutSpe"
  "ndWager\020\315\?\022\037\n\032k_EMsgGCSubmitLobbyMVPVote"
  "\020\320\?\022\'\n\"k_EMsgGCSubmitLobbyMVPVoteRespons"
  "e\020\321\?\022\'\n\"k_EMsgSignOutCommunityGoalProgre"
  "ss\020\326\?\022$\n\037k_EMsgGCToClientLobbyMVPAwarded"
  "\020\330\?\022)\n$k_EMsgGCToClientQuestProgressUpda"
  "ted\020\331\?\022#\n\036k_EMsgGCToClientWageringUpdate"
  "\020\332\?\022&\n!k_EMsgGCToClientArcanaVotesUpdate"
  "\020\333\?\022-\n(k_EMsgClientToGCSetSpectatorLobby"
  "Details\020\335\?\0225\n0k_EMsgClientToGCSetSpectat"
  "orLobbyDetailsResponse\020\336\?\022)\n$k_EMsgClien"
  "tToGCCreateSpectatorLobby\020\337\?\0221\n,k_EMsgCl"
  "ientToGCCreateSpectatorLobbyResponse\020\340\?\022"
  "\'\n\"k_EMsgClientToGCSpectatorLobbyList\020\341\?"
  "\022/\n*k_EMsgClientToGCSpectatorLobbyListRe"
  "sponse\020\342\?\022$\n\037k_EMsgSpectatorLobbyGameDet"
  "ails\020\343\?\0226\n1k_EMsgServerToGCCompendiumInG"
  "amePredictionResults\020\346\?\022:\n5k_EMsgServerT"
  "oGCCloseCompendiumInGamePredictionVoting"
  "\020\347\?\022\'\n\"k_EMsgClientToGCOpenPlayerCardPac"
  "k\020\350\?\022/\n*k_EMsgClientToGCOpenPlayerCardPa"
  "ckResponse\020\351\?\0225\n0k_EMsgClientToGCSelectC"
  "ompendiumInGamePrediction\020\352\?\022=\n8k_EMsgCl"
  "ientToGCSelectCompendiumInGamePrediction"
  "Response\020\353\?\0221\n,k_EMsgClientToGCWeekendTo"
  "urneyGetPlayerStats\020\354\?\0229\n4k_EMsgClientTo"
  "GCWeekendTourneyGetPlayerStatsResponse\020\355"
  "\?\022&\n!k_EMsgClientToGCRecyclePlayerCard\020\356"
  "\?\022.\n)k_EMsgClientToGCRecyclePlayerCardRe"
  "sponse\020\357\?\022)\n$k_EMsgClientToGCCreatePlaye"
  "rCardPack\020\360\?\0221\n,k_EMsgClientToGCCreatePl"
  "ayerCardPackResponse\020\361\?\022/\n*k_EMsgClientT"
  "oGCGetPlayerCardRosterRequest\020\362\?\0220\n+k_EM"
  "sgClientToGCGetPlayerCardRosterResponse\020"
  "\363\?\022/\n*k_EMsgClientToGCSetPlayerCardRoste"
  "rRequest\020\364\?\0220\n+k_EMsgClientToGCSetPlayer"
  "CardRosterResponse\020\365\?\022B\n=k_EMsgServerToG"
  "CCloseCompendiumInGamePredictionVotingRe"
  "sponse\020\367\?\022 \n\033k_EMsgLobbyBattleCupVictory"
  "\020\372\?\022\"\n\035k_EMsgGCGetPlayerCardItemInfo\020\373\?\022"
  "*\n%k_EMsgGCGetPlayerCardItemInfoResponse"
  "\020\374\?\022/\n*k_EMsgClientToGCRequestSteamDatag"
  "ramTicket\020\375\?\0227\n2k_EMsgClientToGCRequestS"
  "teamDatagramTicketResponse\020\376\?\022,\n\'k_EMsgG"
  "CToClientBattlePassRollupRequest\020\377\?\022-\n(k"
  "_EMsgGCToClientBattlePassRollupResponse\020"
  "\200@\022/\n*k_EMsgClientToGCTransferSeasonalMM"
  "RRequest\020\201@\0220\n+k_EMsgClientToGCTransferS"
  "easonalMMRResponse\020\202@\022+\n&k_EMsgGCToGCPub"
  "licChatCommunicationBan\020\203@\022\"\n\035k_EMsgGCTo"
  "GCUpdateAccountInfo\020\204@\022!\n\034k_EMsgGCChatRe"
  "portPublicSpam\020\205@\022+\n&k_EMsgClientToGCSet"
  "PartyBuilderOptions\020\206@\0223\n.k_EMsgClientTo"
  "GCSetPartyBuilderOptionsResponse\020\207@\022#\n\036k"
  "_EMsgGCToClientPlaytestStatus\020\210@\022!\n\034k_EM"
  "sgClientToGCJoinPlaytest\020\211@\022)\n$k_EMsgCli"
  "entToGCJoinPlaytestResponse\020\212@\022\037\n\032k_EMsg"
  "LobbyPlaytestDetails\020\213@\022\036\n\031k_EMsgDOTASet"
  "FavoriteTeam\020\214@\0220\n+k_EMsgGCToClientBattl"
  "ePassRollupListRequest\020\215@\0221\n,k_EMsgGCToC"
  "lientBattlePassRollupListResponse\020\216@\022\037\n\032"
  "k_EMsgDOTAClaimEventAction\020\221@\022\'\n\"k_EMsgD"
  "OTAClaimEventActionResponse\020\222@\022\"\n\035k_EMsg"
  "DOTAGetPeriodicResource\020\223@\022*\n%k_EMsgDOTA"
  "GetPeriodicResourceResponse\020\224@\022&\n!k_EMsg"
  "DOTAPeriodicResourceUpdated\020\225@\022\037\n\032k_EMsg"
  "ServerToGCSpendWager\020\226@\022\'\n\"k_EMsgGCToGCS"
  "ignoutSpendWagerToken\020\227@\022%\n k_EMsgSubmit"
  "TriviaQuestionAnswer\020\230@\022-\n(k_EMsgSubmitT"
  "riviaQuestionAnswerResponse\020\231@\022\034\n\027k_EMsg"
  "ClientToGCGiveTip\020\232@\022$\n\037k_EMsgClientToGC"
  "GiveTipResponse\020\233@\022\035\n\030k_EMsgStartTriviaS"
  "ession\020\234@\022%\n k_EMsgStartTriviaSessionRes"
  "ponse\020\235@\022#\n\036k_EMsgAnchorPhoneNumberReque"
  "st\020\236@\022$\n\037k_EMsgAnchorPhoneNumberResponse"
  "\020\237@\022%\n k_EMsgUnanchorPhoneNumberRequest\020"
  "\240@\022&\n!k_EMsgUnanchorPhoneNumberResponse\020"
  "\241@\022&\n!k_EMsgGCToGCSignoutSpendRankWager\020"
  "\245@\022 \n\033k_EMsgGCToGCGetFavoriteTeam\020\246@\022(\n#"
  "k_EMsgGCToGCGetFavoriteTeamResponse\020\247@\022\037"
  "\n\032k_EMsgSignOutEventGameData\020\250@\022&\n!k_EMs"
  "gClientToGCQuickStatsRequest\020\256@\022\'\n\"k_EMs"
  "gClientToGCQuickStatsResponse\020\257@\022,\n\'k_EM"
  "sgGCToGCSubtractEventPointsFromUser\020\260@\022)"
  "\n$k_EMsgSelectionPriorityChoiceRequest\020\261"
  "@\022*\n%k_EMsgSelectionPriorityChoiceRespon"
  "se\020\262@\0222\n-k_EMsgGCToGCCompendiumInGamePre"
  "dictionResults\020\263@\022\036\n\031k_EMsgGameAutograph"
  "Reward\020\264@\022&\n!k_EMsgGameAutographRewardRe"
  "sponse\020\265@\022\036\n\031k_EMsgDestroyLobbyRequest\020\266"
  "@\022\037\n\032k_EMsgDestroyLobbyResponse\020\267@\022&\n!k_"
  "EMsgPurchaseItemWithEventPoints\020\270@\022.\n)k_"
  "EMsgPurchaseItemWithEventPointsResponse\020"
  "\271@\0223\n.k_EMsgServerToGCMatchPlayerItemPur"
  "chaseHistory\020\272@\022*\n%k_EMsgGCToGCGrantPlus"
  "HeroMatchResults\020\273@\022&\n!k_EMsgServerToGCM"
  "atchStateHistory\020\277@\022\"\n\035k_EMsgPurchaseHer"
  "oRandomRelic\020\302@\022*\n%k_EMsgPurchaseHeroRan"
  "domRelicResponse\020\303@\022.\n)k_EMsgClientToGCC"
  "laimEventActionUsingItem\020\304@\0226\n1k_EMsgCli"
  "entToGCClaimEventActionUsingItemResponse"
  "\020\305@\022!\n\034k_EMsgPartyReadyCheckRequest\020\306@\022\""
  "\n\035k_EMsgPartyReadyCheckResponse\020\307@\022%\n k_"
  "EMsgPartyReadyCheckAcknowledge\020\310@\022*\n%k_E"
  "MsgGetRecentPlayTimeFriendsRequest\020\311@\022+\n"
  "&k_EMsgGetRecentPlayTimeFriendsResponse\020"
  "\312@\022(\n#k_EMsgGCToClientCommendNotificatio"
  "n\020\313@\022\031\n\024k_EMsgProfileRequest\020\314@\022\032\n\025k_EMs"
  "gProfileResponse\020\315@\022\030\n\023k_EMsgProfileUpda"
  "te\020\316@\022 \n\033k_EMsgProfileUpdateResponse\020\317@\022"
  " \n\033k_EMsgHeroGlobalDataRequest\020\322@\022!\n\034k_E"
  "MsgHeroGlobalDataResponse\020\323@\0225\n0k_EMsgCl"
  "ientToGCRequestPlusWeeklyChallengeResult"
  "\020\324@\022=\n8k_EMsgClientToGCRequestPlusWeekly"
  "ChallengeResultResponse\020\325@\022%\n k_EMsgGCTo"
  "GCGrantPlusPrepaidTime\020\326@\022$\n\037k_EMsgPriva"
  "teMetadataKeyRequest\020\327@\022%\n k_EMsgPrivate"
  "MetadataKeyResponse\020\330@\022$\n\037k_EMsgGCToGCRe"
  "concilePlusStatus\020\331@\022 \n\033k_EMsgGCToGCChec"
  "kPlusStatus\020\332@\022(\n#k_EMsgGCToGCCheckPlusS"
  "tatusResponse\020\333@\022,\n\'k_EMsgGCToGCReconcil"
  "ePlusAutoGrantItems\020\334@\022.\n)k_EMsgGCToGCRe"
  "concilePlusStatusUnreliable\020\335@\0220\n+k_EMsg"
  "GCToClientCavernCrawlMapPathCompleted\020\340@"
  "\022)\n$k_EMsgClientToGCCavernCrawlClaimRoom"
  "\020\341@\0221\n,k_EMsgClientToGCCavernCrawlClaimR"
  "oomResponse\020\342@\022-\n(k_EMsgClientToGCCavern"
  "CrawlUseItemOnRoom\020\343@\0225\n0k_EMsgClientToG"
  "CCavernCrawlUseItemOnRoomResponse\020\344@\022-\n("
  "k_EMsgClientToGCCavernCrawlUseItemOnPath"
  "\020\345@\0225\n0k_EMsgClientToGCCavernCrawlUseIte"
  "mOnPathResponse\020\346@\022/\n*k_EMsgClientToGCCa"
  "vernCrawlRequestMapState\020\347@\0227\n2k_EMsgCli"
  "entToGCCavernCrawlRequestMapStateRespons"
  "e\020\350@\022\026\n\021k_EMsgSignOutTips\020\351@\022+\n&k_EMsgCl"
  "ientToGCRequestEventPointLogV2\020\352@\0223\n.k_E"
  "MsgClientToGCRequestEventPointLogRespons"
  "eV2\020\353@\022,\n\'k_EMsgClientToGCRequestEventTi"
  "psSummary\020\354@\0224\n/k_EMsgClientToGCRequestE"
  "ventTipsSummaryResponse\020\355@\022&\n!k_EMsgClie"
  "ntToGCRequestSocialFeed\020\357@\022.\n)k_EMsgClie"
  "ntToGCRequestSocialFeedResponse\020\360@\022.\n)k_"
  "EMsgClientToGCRequestSocialFeedComments\020"
  "\361@\0226\n1k_EMsgClientToGCRequestSocialFeedC"
  "ommentsResponse\020\362@\0223\n.k_EMsgClientToGCCa"
  "vernCrawlGetClaimedRoomCount\020\364@\022;\n6k_EMs"
  "gClientToGCCavernCrawlGetClaimedRoomCoun"
  "tResponse\020\365@\0226\n1k_EMsgGCToGCReconcilePlu"
  "sAutoGrantItemsUnreliable\020\366@\022.\n)k_EMsgSe"
  "rverToGCAddBroadcastTimelineEvent\020\367@\022,\n\'"
  "k_EMsgGCToServerUpdateSteamBroadcasting\020"
  "\370@\022&\n!k_EMsgClientToGCRecordContestVote\020"
  "\371@\022.\n)k_EMsgGCToClientRecordContestVoteR"
  "esponse\020\372@\022\037\n\032k_EMsgGCToGCGrantAutograph"
  "\020\373@\022\'\n\"k_EMsgGCToGCGrantAutographRespons"
  "e\020\374@\022!\n\034k_EMsgSignOutConsumableUsage\020\375@\022"
  " \n\033k_EMsgLobbyEventGameDetails\020\376@\022\036\n\031k_E"
  "MsgDevGrantEventPoints\020\377@\022&\n!k_EMsgDevGr"
  "antEventPointsResponse\020\200A\022\036\n\031k_EMsgDevGr"
  "antEventAction\020\201A\022&\n!k_EMsgDevGrantEvent"
  "ActionResponse\020\202A\022\035\n\030k_EMsgDevResetEvent"
  "State\020\203A\022%\n k_EMsgDevResetEventStateResp"
  "onse\020\204A\022(\n#k_EMsgGCToGCReconcileEventOwn"
  "ership\020\205A\022\'\n\"k_EMsgConsumeEventSupportGr"
  "antItem\020\206A\022/\n*k_EMsgConsumeEventSupportG"
  "rantItemResponse\020\207A\0227\n2k_EMsgGCToClientC"
  "laimEventActionUsingItemCompleted\020\210A\022*\n%"
  "k_EMsgGCToClientCavernCrawlMapUpdated\020\211A"
  "\0227\n2k_EMsgServerToGCRequestPlayerRecentA"
  "ccomplishments\020\212A\022\?\n:k_EMsgServerToGCReq"
  "uestPlayerRecentAccomplishmentsResponse\020"
  "\213A\0227\n2k_EMsgClientToGCRequestPlayerRecen"
  "tAccomplishments\020\214A\022\?\n:k_EMsgClientToGCR"
  "equestPlayerRecentAccomplishmentsRespons"
  "e\020\215A\022;\n6k_EMsgClientToGCRequestPlayerHer"
  "oRecentAccomplishments\020\216A\022C\n>k_EMsgClien"
  "tToGCRequestPlayerHeroRecentAccomplishme"
  "ntsResponse\020\217A\022#\n\036k_EMsgSignOutEventActi"
  "onGrants\020\220A\022.\n)k_EMsgClientToGCRequestPl"
  "ayerCoachMatches\020\221A\0226\n1k_EMsgClientToGCR"
  "equestPlayerCoachMatchesResponse\020\222A\022.\n)k"
  "_EMsgClientToGCSubmitCoachTeammateRating"
  "\020\225A\0226\n1k_EMsgClientToGCSubmitCoachTeamma"
  "teRatingResponse\020\226A\0220\n+k_EMsgGCToClientC"
  "oachTeammateRatingsChanged\020\227A\022,\n\'k_EMsgC"
  "lientToGCRequestPlayerCoachMatch\020\231A\0224\n/k"
  "_EMsgClientToGCRequestPlayerCoachMatchRe"
  "sponse\020\232A\022(\n#k_EMsgClientToGCRequestCont"
  "estVotes\020\233A\0220\n+k_EMsgClientToGCRequestCo"
  "ntestVotesResponse\020\234A\022#\n\036k_EMsgClientToG"
  "CMVPVoteTimeout\020\235A\022+\n&k_EMsgClientToGCMV"
  "PVoteTimeoutResponse\020\236A\022\034\n\027k_EMsgDetaile"
  "dGameStats\020\241A\022 \n\033k_EMsgMatchMatchmakingS"
  "tats\020\250A\022,\n\'k_EMsgClientToGCSubmitPlayerM"
  "atchSurvey\020\251A\0224\n/k_EMsgClientToGCSubmitP"
  "layerMatchSurveyResponse\020\252A\022/\n*k_EMsgSQL"
  "GCToGCGrantAllHeroProgressAccount\020\253A\022/\n*"
  "k_EMsgSQLGCToGCGrantAllHeroProgressVicto"
  "ry\020\254A\022 \n\033k_EMsgDevDeleteEventActions\020\255A\022"
  "(\n#k_EMsgDevDeleteEventActionsResponse\020\256"
  "A\022\"\n\035k_EMsgGCToGCGetAllHeroCurrent\020\273C\022*\n"
  "%k_EMsgGCToGCGetAllHeroCurrentResponse\020\274"
  "C\022%\n k_EMsgGCSubmitPlayerAvoidRequest\020\275C"
  "\022-\n(k_EMsgGCSubmitPlayerAvoidRequestResp"
  "onse\020\276C\022)\n$k_EMsgGCToClientNotifications"
  "Updated\020\277C\022/\n*k_EMsgGCtoGCAssociatedExpl"
  "oiterAccountInfo\020\300C\0227\n2k_EMsgGCtoGCAssoc"
  "iatedExploiterAccountInfoResponse\020\301C\022*\n%"
  "k_EMsgGCtoGCRequestRecalibrationCheck\020\302C"
  "\022 \n\033k_EMsgGCToClientVACReminder\020\303C\022\"\n\035k_"
  "EMsgClientToGCUnderDraftBuy\020\304C\022*\n%k_EMsg"
  "ClientToGCUnderDraftBuyResponse\020\305C\022%\n k_"
  "EMsgClientToGCUnderDraftReroll\020\306C\022-\n(k_E"
  "MsgClientToGCUnderDraftRerollResponse\020\307C"
  "\022\033\n\026k_EMsgNeutralItemStats\020\310C\022 \n\033k_EMsgC"
  "lientToGCCreateGuild\020\311C\022(\n#k_EMsgClientT"
  "oGCCreateGuildResponse\020\312C\022!\n\034k_EMsgClien"
  "tToGCSetGuildInfo\020\313C\022)\n$k_EMsgClientToGC"
  "SetGuildInfoResponse\020\314C\022!\n\034k_EMsgClientT"
  "oGCAddGuildRole\020\315C\022)\n$k_EMsgClientToGCAd"
  "dGuildRoleResponse\020\316C\022$\n\037k_EMsgClientToG"
  "CModifyGuildRole\020\317C\022,\n\'k_EMsgClientToGCM"
  "odifyGuildRoleResponse\020\320C\022$\n\037k_EMsgClien"
  "tToGCRemoveGuildRole\020\321C\022,\n\'k_EMsgClientT"
  "oGCRemoveGuildRoleResponse\020\322C\022\036\n\031k_EMsgC"
  "lientToGCJoinGuild\020\323C\022&\n!k_EMsgClientToG"
  "CJoinGuildResponse\020\324C\022\037\n\032k_EMsgClientToG"
  "CLeaveGuild\020\325C\022\'\n\"k_EMsgClientToGCLeaveG"
  "uildResponse\020\326C\022\"\n\035k_EMsgClientToGCInvit"
  "eToGuild\020\327C\022*\n%k_EMsgClientToGCInviteToG"
  "uildResponse\020\330C\022)\n$k_EMsgClientToGCDecli"
  "neInviteToGuild\020\331C\0221\n,k_EMsgClientToGCDe"
  "clineInviteToGuildResponse\020\332C\022(\n#k_EMsgC"
  "lientToGCCancelInviteToGuild\020\333C\0220\n+k_EMs"
  "gClientToGCCancelInviteToGuildResponse\020\334"
  "C\022$\n\037k_EMsgClientToGCKickGuildMember\020\335C\022"
  ",\n\'k_EMsgClientToGCKickGuildMemberRespon"
  "se\020\336C\022\'\n\"k_EMsgClientToGCSetGuildMemberR"
  "ole\020\337C\022/\n*k_EMsgClientToGCSetGuildMember"
  "RoleResponse\020\340C\022%\n k_EMsgClientToGCReque"
  "stGuildData\020\341C\022-\n(k_EMsgClientToGCReques"
  "tGuildDataResponse\020\342C\022%\n k_EMsgGCToClien"
  "tGuildDataUpdated\020\343C\022+\n&k_EMsgClientToGC"
  "RequestGuildMembership\020\344C\0223\n.k_EMsgClien"
  "tToGCRequestGuildMembershipResponse\020\345C\022+"
  "\n&k_EMsgGCToClientGuildMembershipUpdated"
  "\020\346C\022(\n#k_EMsgClientToGCAcceptInviteToGui"
  "ld\020\351C\0220\n+k_EMsgClientToGCAcceptInviteToG"
  "uildResponse\020\352C\022&\n!k_EMsgClientToGCSetGu"
  "ildRoleOrder\020\353C\022.\n)k_EMsgClientToGCSetGu"
  "ildRoleOrderResponse\020\354C\022%\n k_EMsgClientT"
  "oGCRequestGuildFeed\020\355C\022-\n(k_EMsgClientTo"
  "GCRequestGuildFeedResponse\020\356C\0221\n,k_EMsgC"
  "lientToGCRequestAccountGuildEventData\020\357C"
  "\0229\n4k_EMsgClientToGCRequestAccountGuildE"
  "ventDataResponse\020\360C\0221\n,k_EMsgGCToClientA"
  "ccountGuildEventDataUpdated\020\361C\0220\n+k_EMsg"
  "ClientToGCRequestActiveGuildContracts\020\362C"
  "\0228\n3k_EMsgClientToGCRequestActiveGuildCo"
  "ntractsResponse\020\363C\0220\n+k_EMsgGCToClientAc"
  "tiveGuildContractsUpdated\020\364C\022%\n k_EMsgGC"
  "ToClientGuildFeedUpdated\020\365C\022(\n#k_EMsgCli"
  "entToGCSelectGuildContract\020\366C\0220\n+k_EMsgC"
  "lientToGCSelectGuildContractResponse\020\367C\022"
  "\'\n\"k_EMsgGCToGCCompleteGuildContracts\020\370C"
  "\022)\n$k_EMsgClientToGCAddPlayerToGuildChat"
  "\020\372C\0221\n,k_EMsgClientToGCAddPlayerToGuildC"
  "hatResponse\020\373C\022#\n\036k_EMsgClientToGCUnderD"
  "raftSell\020\374C\022+\n&k_EMsgClientToGCUnderDraf"
  "tSellResponse\020\375C\022&\n!k_EMsgClientToGCUnde"
  "rDraftRequest\020\376C\022\'\n\"k_EMsgClientToGCUnde"
  "rDraftResponse\020\377C\022+\n&k_EMsgClientToGCUnd"
  "erDraftRedeemReward\020\200D\0223\n.k_EMsgClientTo"
  "GCUnderDraftRedeemRewardResponse\020\201D\022&\n!k"
  "_EMsgGCToServerLobbyHeroBanRates\020\204D\022\'\n\"k"
  "_EMsgSignOutGuildContractProgress\020\207D\022\032\n\025"
  "k_EMsgSignOutMVPStats\020\210D\0220\n+k_EMsgClient"
  "ToGCRequestActiveGuildChallenge\020\211D\0228\n3k_"
  "EMsgClientToGCRequestActiveGuildChalleng"
  "eResponse\020\212D\0220\n+k_EMsgGCToClientActiveGu"
  "ildChallengeUpdated\020\213D\022+\n&k_EMsgClientTo"
  "GCRequestReporterUpdates\020\214D\0223\n.k_EMsgCli"
  "entToGCRequestReporterUpdatesResponse\020\215D"
  "\022/\n*k_EMsgClientToGCAcknowledgeReporterU"
  "pdates\020\216D\022(\n#k_EMsgSignOutGuildChallenge"
  "Progress\020\220D\022-\n(k_EMsgClientToGCRequestGu"
  "ildEventMembers\020\221D\0225\n0k_EMsgClientToGCRe"
  "questGuildEventMembersResponse\020\222D\022\'\n\"k_E"
  "MsgClientToGCReportGuildContent\020\225D\022/\n*k_"
  "EMsgClientToGCReportGuildContentResponse"
  "\020\226D\0223\n.k_EMsgClientToGCRequestAccountGui"
  "ldPersonaInfo\020\227D\022;\n6k_EMsgClientToGCRequ"
  "estAccountGuildPersonaInfoResponse\020\230D\0228\n"
  "3k_EMsgClientToGCRequestAccountGuildPers"
  "onaInfoBatch\020\231D\022@\n;k_EMsgClientToGCReque"
  "stAccountGuildPersonaInfoBatchResponse\020\232"
  "D\022*\n%k_EMsgGCToClientUnderDraftGoldUpdat"
  "ed\020\233D\022\'\n\"k_EMsgGCToServerRecordTrainingD"
  "ata\020\234D\022\032\n\025k_EMsgSignOutBounties\020\235D\022(\n#k_"
  "EMsgLobbyFeaturedGamemodeProgress\020\236D\022 \n\033"
  "k_EMsgLobbyGauntletProgress\020\237D\0221\n,k_EMsg"
  "ClientToGCSubmitDraftTriviaMatchAnswer\020\240"
  "D\0229\n4k_EMsgClientToGCSubmitDraftTriviaMa"
  "tchAnswerResponse\020\241D\022#\n\036k_EMsgGCToGCSign"
  "outSpendBounty\020\242D\022(\n#k_EMsgClientToGCApp"
  "lyGauntletTicket\020\243D\022,\n\'k_EMsgClientToGCU"
  "nderDraftRollBackBench\020\244D\0224\n/k_EMsgClien"
  "tToGCUnderDraftRollBackBenchResponse\020\245D\022"
  "$\n\037k_EMsgGCToGCGetEventActionScore\020\246D\022,\n"
  "\'k_EMsgGCToGCGetEventActionScoreResponse"
  "\020\247D\022&\n!k_EMsgServerToGCGetGuildContracts"
  "\020\250D\022.\n)k_EMsgServerToGCGetGuildContracts"
  "Response\020\251D\022\035\n\030k_EMsgLobbyEventGameData\020"
  "\252D\022,\n\'k_EMsgGCToClientGuildMembersDataUp"
  "dated\020\253D\022\'\n\"k_EMsgSignOutReportActivityM"
  "arkers\020\254D\022\037\n\032k_EMsgSignOutDiretideCandy\020"
  "\255D\0222\n-k_EMsgGCToClientPostGameItemAwardN"
  "otification\020\256D\022&\n!k_EMsgClientToGCGetOWM"
  "atchDetails\020\257D\022.\n)k_EMsgClientToGCGetOWM"
  "atchDetailsResponse\020\260D\022\'\n\"k_EMsgClientTo"
  "GCSubmitOWConviction\020\261D\022/\n*k_EMsgClientT"
  "oGCSubmitOWConvictionResponse\020\262D\022%\n k_EM"
  "sgGCToGCGetAccountSteamChina\020\263D\022-\n(k_EMs"
  "gGCToGCGetAccountSteamChinaResponse\020\264D\022,"
  "\n\'k_EMsgClientToGCClaimLeaderboardReward"
  "s\020\265D\0224\n/k_EMsgClientToGCClaimLeaderboard"
  "RewardsResponse\020\266D\022#\n\036k_EMsgClientToGCRe"
  "calibrateMMR\020\267D\022+\n&k_EMsgClientToGCRecal"
  "ibrateMMRResponse\020\270D\022*\n%k_EMsgGCToGCGran"
  "tEventPointActionList\020\271D\022\'\n\"k_EMsgClient"
  "ToGCChinaSSAURLRequest\020\274D\022(\n#k_EMsgClien"
  "tToGCChinaSSAURLResponse\020\275D\022,\n\'k_EMsgCli"
  "entToGCChinaSSAAcceptedRequest\020\276D\022-\n(k_E"
  "MsgClientToGCChinaSSAAcceptedResponse\020\277D"
  "\022$\n\037k_EMsgSignOutOverwatchSuspicion\020\300D\022\'"
  "\n\"k_EMsgServerToGCGetSuspicionConfig\020\301D\022"
  "/\n*k_EMsgServerToGCGetSuspicionConfigRes"
  "ponse\020\302D\0223\n.k_EMsgGCToGCGrantPlusHeroCha"
  "llengeMatchResults\020\303D\022,\n\'k_EMsgGCToClien"
  "tOverwatchCasesAvailable\020\304D\022!\n\034k_EMsgSer"
  "verToGCAccountCheck\020\305D\022+\n&k_EMsgClientTo"
  "GCStartWatchingOverwatch\020\306D\022*\n%k_EMsgCli"
  "entToGCStopWatchingOverwatch\020\307D\022\032\n\025k_EMs"
  "gSignOutPerfData\020\310D\022$\n\037k_EMsgClientToGCG"
  "etDPCFavorites\020\311D\022,\n\'k_EMsgClientToGCGet"
  "DPCFavoritesResponse\020\312D\022(\n#k_EMsgClientT"
  "oGCSetDPCFavoriteState\020\313D\0220\n+k_EMsgClien"
  "tToGCSetDPCFavoriteStateResponse\020\314D\022)\n$k"
  "_EMsgClientToGCOverwatchReplayError\020\315D\022+"
  "\n&k_EMsgServerToGCPlayerChallengeHistory"
  "\020\316D\022\031\n\024k_EMsgSignOutBanData\020\317D\022!\n\034k_EMsg"
  "WebapiDPCSeasonResults\020\320D\022 \n\033k_EMsgClien"
  "tToGCCoachFriend\020\321D\022(\n#k_EMsgClientToGCC"
  "oachFriendResponse\020\322D\0222\n-k_EMsgClientToG"
  "CRequestPrivateCoachingSession\020\323D\022:\n5k_E"
  "MsgClientToGCRequestPrivateCoachingSessi"
  "onResponse\020\324D\0221\n,k_EMsgClientToGCAcceptP"
  "rivateCoachingSession\020\325D\0229\n4k_EMsgClient"
  "ToGCAcceptPrivateCoachingSessionResponse"
  "\020\326D\0220\n+k_EMsgClientToGCLeavePrivateCoach"
  "ingSession\020\327D\0228\n3k_EMsgClientToGCLeavePr"
  "ivateCoachingSessionResponse\020\330D\0225\n0k_EMs"
  "gClientToGCGetCurrentPrivateCoachingSess"
  "ion\020\331D\022=\n8k_EMsgClientToGCGetCurrentPriv"
  "ateCoachingSessionResponse\020\332D\0222\n-k_EMsgG"
  "CToClientPrivateCoachingSessionUpdated\020\333"
  "D\0227\n2k_EMsgClientToGCSubmitPrivateCoachi"
  "ngSessionRating\020\334D\022\?\n:k_EMsgClientToGCSu"
  "bmitPrivateCoachingSessionRatingResponse"
  "\020\335D\0228\n3k_EMsgClientToGCGetAvailablePriva"
  "teCoachingSessions\020\336D\022@\n;k_EMsgClientToG"
  "CGetAvailablePrivateCoachingSessionsResp"
  "onse\020\337D\022\?\n:k_EMsgClientToGCGetAvailableP"
  "rivateCoachingSessionsSummary\020\340D\022G\nBk_EM"
  "sgClientToGCGetAvailablePrivateCoachingS"
  "essionsSummaryResponse\020\341D\0224\n/k_EMsgClien"
  "tToGCJoinPrivateCoachingSessionLobby\020\342D\022"
  "<\n7k_EMsgClientToGCJoinPrivateCoachingSe"
  "ssionLobbyResponse\020\343D\0220\n+k_EMsgClientToG"
  "CRespondToCoachFriendRequest\020\344D\0228\n3k_EMs"
  "gClientToGCRespondToCoachFriendRequestRe"
  "sponse\020\345D\022+\n&k_EMsgClientToGCSetEventAct"
  "iveSeasonID\020\346D\0223\n.k_EMsgClientToGCSetEve"
  "ntActiveSeasonIDResponse\020\347D\0227\n2k_EMsgSer"
  "verToGCMatchPlayerNeutralItemEquipHistor"
  "y\020\350D\0226\n1k_EMsgServerToGCCompendiumChosen"
  "InGamePredictions\020\351D\022-\n(k_EMsgClientToGC"
  "CreateTeamPlayerCardPack\020\352D\0225\n0k_EMsgCli"
  "entToGCCreateTeamPlayerCardPackResponse\020"
  "\353D\022$\n\037k_EMsgGCToServerSubmitCheerData\020\354D"
  "\022 \n\033k_EMsgGCToServerCheerConfig\020\355D\022#\n\036k_"
  "EMsgServerToGCGetCheerConfig\020\356D\022+\n&k_EMs"
  "gServerToGCGetCheerConfigResponse\020\357D\022#\n\036"
  "k_EMsgGCToGCGrantAutographByID\020\360D\022(\n#k_E"
  "MsgGCToServerCheerScalesOverride\020\361D\022\"\n\035k"
  "_EMsgGCToServerGetCheerState\020\362D\022%\n k_EMs"
  "gServerToGCReportCheerState\020\363D\022!\n\034k_EMsg"
  "GCToServerScenarioSave\020\364D\022*\n%k_EMsgGCToS"
  "erverAbilityDraftLobbyData\020\365D\022&\n!k_EMsgS"
  "ignOutReportCommunications\020\366D\0224\n/k_EMsgC"
  "lientToGCBatchGetPlayerCardRosterRequest"
  "\020\367D\0225\n0k_EMsgClientToGCBatchGetPlayerCar"
  "dRosterResponse\020\370D\022*\n%k_EMsgClientToGCGe"
  "tStickerbookRequest\020\371D\022+\n&k_EMsgClientTo"
  "GCGetStickerbookResponse\020\372D\0221\n,k_EMsgCli"
  "entToGCCreateStickerbookPageRequest\020\373D\0222"
  "\n-k_EMsgClientToGCCreateStickerbookPageR"
  "esponse\020\374D\0221\n,k_EMsgClientToGCDeleteStic"
  "kerbookPageRequest\020\375D\0222\n-k_EMsgClientToG"
  "CDeleteStickerbookPageResponse\020\376D\022)\n$k_E"
  "MsgClientToGCPlaceStickersRequest\020\377D\022*\n%"
  "k_EMsgClientToGCPlaceStickersResponse\020\200E"
  "\0223\n.k_EMsgClientToGCPlaceCollectionStick"
  "ersRequest\020\201E\0224\n/k_EMsgClientToGCPlaceCo"
  "llectionStickersResponse\020\202E\0224\n/k_EMsgCli"
  "entToGCOrderStickerbookTeamPageRequest\020\203"
  "E\0225\n0k_EMsgClientToGCOrderStickerbookTea"
  "mPageResponse\020\204E\022%\n k_EMsgServerToGCGetS"
  "tickerHeroes\020\205E\022-\n(k_EMsgServerToGCGetSt"
  "ickerHeroesResponse\020\206E\022)\n$k_EMsgClientTo"
  "GCCandyShopGetUserData\020\210E\0221\n,k_EMsgClien"
  "tToGCCandyShopGetUserDataResponse\020\211E\022-\n("
  "k_EMsgGCToClientCandyShopUserDataUpdated"
  "\020\212E\022,\n\'k_EMsgClientToGCCandyShopPurchase"
  "Reward\020\213E\0224\n/k_EMsgClientToGCCandyShopPu"
  "rchaseRewardResponse\020\214E\022(\n#k_EMsgClientT"
  "oGCCandyShopDoExchange\020\215E\0220\n+k_EMsgClien"
  "tToGCCandyShopDoExchangeResponse\020\216E\0220\n+k"
  "_EMsgClientToGCCandyShopDoVariableExchan"
  "ge\020\217E\0228\n3k_EMsgClientToGCCandyShopDoVari"
  "ableExchangeResponse\020\220E\022+\n&k_EMsgClientT"
  "oGCCandyShopRerollRewards\020\221E\0223\n.k_EMsgCl"
  "ientToGCCandyShopRerollRewardsResponse\020\222"
  "E\022#\n\036k_EMsgClientToGCSetHeroSticker\020\223E\022+"
  "\n&k_EMsgClientToGCSetHeroStickerResponse"
  "\020\224E\022$\n\037k_EMsgClientToGCGetHeroStickers\020\225"
  "E\022,\n\'k_EMsgClientToGCGetHeroStickersResp"
  "onse\020\226E\022$\n\037k_EMsgClientToGCSetFavoritePa"
  "ge\020\227E\022,\n\'k_EMsgClientToGCSetFavoritePage"
  "Response\020\230E\022+\n&k_EMsgClientToGCCandyShop"
  "DevGrantCandy\020\231E\0223\n.k_EMsgClientToGCCand"
  "yShopDevGrantCandyResponse\020\232E\022/\n*k_EMsgC"
  "lientToGCCandyShopDevClearInventory\020\233E\0227"
  "\n2k_EMsgClientToGCCandyShopDevClearInven"
  "toryResponse\020\234E\022&\n!k_EMsgClientToGCCandy"
  "ShopOpenBags\020\235E\022.\n)k_EMsgClientToGCCandy"
  "ShopOpenBagsResponse\020\236E\022/\n*k_EMsgClientT"
  "oGCCandyShopDevGrantCandyBags\020\237E\0227\n2k_EM"
  "sgClientToGCCandyShopDevGrantCandyBagsRe"
  "sponse\020\240E\0220\n+k_EMsgClientToGCCandyShopDe"
  "vShuffleExchange\020\241E\0228\n3k_EMsgClientToGCC"
  "andyShopDevShuffleExchangeResponse\020\242E\0223\n"
  ".k_EMsgClientToGCCandyShopDevGrantReroll"
  "Charges\020\243E\022;\n6k_EMsgClientToGCCandyShopD"
  "evGrantRerollChargesResponse\020\244E\022%\n k_EMs"
  "gLobbyAdditionalAccountData\020\245E\022%\n k_EMsg"
  "ServerToGCLobbyInitialized\020\246E\0228\n3k_EMsgC"
  "lientToGCCollectorsCacheAvailableDataReq"
  "uest\020\247E\0229\n4k_EMsgGCToClientCollectorsCac"
  "heAvailableDataResponse\020\250E\022$\n\037k_EMsgClie"
  "ntToGCUploadMatchClip\020\251E\022,\n\'k_EMsgGCToCl"
  "ientUploadMatchClipResponse\020\252E\022-\n(k_EMsg"
  "GCToServerSetSteamLearnKeysChanged\020\254E\022 \n"
  "\033k_EMsgSignOutMuertaMinigame\020\255E\022\'\n\"k_EMs"
  "gGCToServerLobbyHeroRoleStats\020\256E\022 \n\033k_EM"
  "sgClientToGCRankRequest\020\257E\022!\n\034k_EMsgGCTo"
  "ClientRankResponse\020\260E\022\037\n\032k_EMsgGCToClien"
  "tRankUpdate\020\261E\022\032\n\025k_EMsgSignOutMapStats\020"
  "\262E\022$\n\037k_EMsgClientToGCMapStatsRequest\020\263E"
  "\022%\n k_EMsgGCToClientMapStatsResponse\020\264E\022"
  "-\n(k_EMsgGCToServerSetSteamLearnInferenc"
  "ing\020\265E\022(\n#k_EMsgClientToGCShowcaseGetUse"
  "rData\020\266E\0220\n+k_EMsgClientToGCShowcaseGetU"
  "serDataResponse\020\267E\022(\n#k_EMsgClientToGCSh"
  "owcaseSetUserData\020\270E\0220\n+k_EMsgClientToGC"
  "ShowcaseSetUserDataResponse\020\271E\022/\n*k_EMsg"
  "ClientToGCFantasyCraftingGetUserData\020\272E\022"
  "7\n2k_EMsgClientToGCFantasyCraftingGetUse"
  "rDataResponse\020\273E\0224\n/k_EMsgClientToGCFant"
  "asyCraftingPerformOperation\020\274E\022<\n7k_EMsg"
  "ClientToGCFantasyCraftingPerformOperatio"
  "nResponse\020\275E\0222\n-k_EMsgGCToClientFantasyC"
  "raftingGetDataUpdated\020\276E\0223\n.k_EMsgClient"
  "ToGCFantasyCraftingDevModifyTablet\020\277E\022;\n"
  "6k_EMsgClientToGCFantasyCraftingDevModif"
  "yTabletResponse\020\300E\022&\n!k_EMsgClientToGCRo"
  "adToTIGetQuests\020\301E\022.\n)k_EMsgClientToGCRo"
  "adToTIGetQuestsResponse\020\302E\022+\n&k_EMsgClie"
  "ntToGCRoadToTIGetActiveQuest\020\303E\0223\n.k_EMs"
  "gClientToGCRoadToTIGetActiveQuestRespons"
  "e\020\304E\022%\n k_EMsgClientToGCBingoGetUserData"
  "\020\305E\022-\n(k_EMsgClientToGCBingoGetUserDataR"
  "esponse\020\306E\022\"\n\035k_EMsgClientToGCBingoClaim"
  "Row\020\307E\022*\n%k_EMsgClientToGCBingoClaimRowR"
  "esponse\020\310E\022\'\n\"k_EMsgClientToGCBingoDevRe"
  "rollCard\020\311E\022/\n*k_EMsgClientToGCBingoDevR"
  "erollCardResponse\020\312E\022&\n!k_EMsgClientToGC"
  "BingoGetStatsData\020\313E\022.\n)k_EMsgClientToGC"
  "BingoGetStatsDataResponse\020\314E\022)\n$k_EMsgGC"
  "ToClientBingoUserDataUpdated\020\315E\022-\n(k_EMs"
  "gGCToClientRoadToTIQuestDataUpdated\020\316E"
  ;
static ::_pbi::once_flag descriptor_table_dota_5fgcmessages_5fmsgid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dota_5fgcmessages_5fmsgid_2eproto = {
    false, false, 36758, descriptor_table_protodef_dota_5fgcmessages_5fmsgid_2eproto,
    "dota_gcmessages_msgid.proto",
    &descriptor_table_dota_5fgcmessages_5fmsgid_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_dota_5fgcmessages_5fmsgid_2eproto::offsets,
    nullptr, file_level_enum_descriptors_dota_5fgcmessages_5fmsgid_2eproto,
    file_level_service_descriptors_dota_5fgcmessages_5fmsgid_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dota_5fgcmessages_5fmsgid_2eproto_getter() {
  return &descriptor_table_dota_5fgcmessages_5fmsgid_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dota_5fgcmessages_5fmsgid_2eproto(&descriptor_table_dota_5fgcmessages_5fmsgid_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EDOTAGCMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fmsgid_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fmsgid_2eproto[0];
}
bool EDOTAGCMsg_IsValid(int value) {
  switch (value) {
    case 7000:
    case 7004:
    case 7005:
    case 7009:
    case 7010:
    case 7013:
    case 7014:
    case 7026:
    case 7033:
    case 7034:
    case 7035:
    case 7036:
    case 7038:
    case 7040:
    case 7041:
    case 7042:
    case 7043:
    case 7044:
    case 7046:
    case 7047:
    case 7049:
    case 7055:
    case 7056:
    case 7057:
    case 7060:
    case 7061:
    case 7070:
    case 7071:
    case 7072:
    case 7073:
    case 7074:
    case 7076:
    case 7077:
    case 7078:
    case 7079:
    case 7081:
    case 7082:
    case 7083:
    case 7084:
    case 7085:
    case 7086:
    case 7087:
    case 7088:
    case 7089:
    case 7090:
    case 7091:
    case 7092:
    case 7093:
    case 7094:
    case 7095:
    case 7096:
    case 7097:
    case 7102:
    case 7111:
    case 7112:
    case 7113:
    case 7115:
    case 7116:
    case 7122:
    case 7123:
    case 7124:
    case 7125:
    case 7126:
    case 7127:
    case 7128:
    case 7129:
    case 7130:
    case 7131:
    case 7142:
    case 7144:
    case 7149:
    case 7150:
    case 7151:
    case 7156:
    case 7157:
    case 7158:
    case 7159:
    case 7160:
    case 7161:
    case 7166:
    case 7167:
    case 7170:
    case 7186:
    case 7188:
    case 7197:
    case 7198:
    case 7199:
    case 7200:
    case 7201:
    case 7203:
    case 7204:
    case 7206:
    case 7217:
    case 7218:
    case 7219:
    case 7220:
    case 7221:
    case 7234:
    case 7235:
    case 7236:
    case 7237:
    case 7238:
    case 7239:
    case 7240:
    case 7241:
    case 7242:
    case 7255:
    case 7256:
    case 7272:
    case 7273:
    case 7274:
    case 7275:
    case 7283:
    case 7284:
    case 7285:
    case 7286:
    case 7287:
    case 7288:
    case 7289:
    case 7308:
    case 7309:
    case 7320:
    case 7322:
    case 7323:
    case 7324:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7342:
    case 7343:
    case 7346:
    case 7359:
    case 7367:
    case 7372:
    case 7375:
    case 7376:
    case 7377:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7384:
    case 7387:
    case 7388:
    case 7397:
    case 7405:
    case 7406:
    case 7407:
    case 7408:
    case 7409:
    case 7410:
    case 7411:
    case 7412:
    case 7413:
    case 7414:
    case 7415:
    case 7416:
    case 7417:
    case 7418:
    case 7419:
    case 7420:
    case 7426:
    case 7427:
    case 7428:
    case 7429:
    case 7434:
    case 7435:
    case 7450:
    case 7451:
    case 7453:
    case 7456:
    case 7457:
    case 7458:
    case 7459:
    case 7464:
    case 7465:
    case 7466:
    case 7467:
    case 7468:
    case 7469:
    case 7470:
    case 7471:
    case 7472:
    case 7478:
    case 7484:
    case 7485:
    case 7488:
    case 7492:
    case 7493:
    case 7494:
    case 7495:
    case 7496:
    case 7497:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7518:
    case 7519:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7531:
    case 7532:
    case 7533:
    case 7534:
    case 7535:
    case 7536:
    case 7537:
    case 7538:
    case 7539:
    case 7540:
    case 7541:
    case 7542:
    case 7543:
    case 7544:
    case 7545:
    case 7546:
    case 7547:
    case 7548:
    case 7549:
    case 7550:
    case 7551:
    case 7552:
    case 7553:
    case 7554:
    case 7561:
    case 7562:
    case 7569:
    case 7572:
    case 7573:
    case 7574:
    case 7576:
    case 7577:
    case 7579:
    case 7580:
    case 7581:
    case 7583:
    case 7584:
    case 7585:
    case 7586:
    case 7587:
    case 7588:
    case 7589:
    case 7592:
    case 7594:
    case 7603:
    case 7606:
    case 7607:
    case 7608:
    case 7611:
    case 7612:
    case 7623:
    case 7624:
    case 7625:
    case 7626:
    case 7627:
    case 7628:
    case 7629:
    case 7630:
    case 7631:
    case 7632:
    case 7633:
    case 7634:
    case 7645:
    case 7646:
    case 7647:
    case 7650:
    case 7651:
    case 7652:
    case 7653:
    case 7654:
    case 7655:
    case 7656:
    case 7657:
    case 7658:
    case 7659:
    case 7660:
    case 7661:
    case 7662:
    case 7663:
    case 7664:
    case 7665:
    case 7666:
    case 7667:
    case 7668:
    case 7669:
    case 7670:
    case 7671:
    case 7672:
    case 7673:
    case 7674:
    case 7675:
    case 7676:
    case 7677:
    case 7678:
    case 7679:
    case 7680:
    case 7681:
    case 7682:
    case 7683:
    case 7684:
    case 7685:
    case 7686:
    case 7687:
    case 7688:
    case 7689:
    case 7690:
    case 7691:
    case 8004:
    case 8006:
    case 8007:
    case 8008:
    case 8009:
    case 8010:
    case 8011:
    case 8012:
    case 8013:
    case 8016:
    case 8017:
    case 8018:
    case 8019:
    case 8020:
    case 8021:
    case 8024:
    case 8029:
    case 8030:
    case 8031:
    case 8032:
    case 8033:
    case 8034:
    case 8035:
    case 8036:
    case 8037:
    case 8040:
    case 8041:
    case 8042:
    case 8045:
    case 8046:
    case 8047:
    case 8048:
    case 8049:
    case 8050:
    case 8051:
    case 8052:
    case 8053:
    case 8054:
    case 8055:
    case 8057:
    case 8061:
    case 8062:
    case 8063:
    case 8064:
    case 8067:
    case 8068:
    case 8071:
    case 8072:
    case 8073:
    case 8074:
    case 8075:
    case 8076:
    case 8078:
    case 8079:
    case 8080:
    case 8081:
    case 8082:
    case 8083:
    case 8084:
    case 8088:
    case 8089:
    case 8090:
    case 8091:
    case 8095:
    case 8096:
    case 8099:
    case 8100:
    case 8103:
    case 8104:
    case 8108:
    case 8110:
    case 8111:
    case 8112:
    case 8113:
    case 8114:
    case 8115:
    case 8116:
    case 8117:
    case 8118:
    case 8119:
    case 8120:
    case 8121:
    case 8124:
    case 8125:
    case 8126:
    case 8127:
    case 8128:
    case 8129:
    case 8130:
    case 8131:
    case 8132:
    case 8135:
    case 8136:
    case 8137:
    case 8140:
    case 8141:
    case 8144:
    case 8145:
    case 8150:
    case 8152:
    case 8153:
    case 8154:
    case 8155:
    case 8157:
    case 8158:
    case 8159:
    case 8160:
    case 8161:
    case 8162:
    case 8163:
    case 8166:
    case 8167:
    case 8168:
    case 8169:
    case 8170:
    case 8171:
    case 8172:
    case 8173:
    case 8174:
    case 8175:
    case 8176:
    case 8177:
    case 8178:
    case 8179:
    case 8180:
    case 8181:
    case 8183:
    case 8186:
    case 8187:
    case 8188:
    case 8189:
    case 8190:
    case 8191:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8206:
    case 8209:
    case 8210:
    case 8211:
    case 8212:
    case 8213:
    case 8214:
    case 8215:
    case 8216:
    case 8217:
    case 8218:
    case 8219:
    case 8220:
    case 8221:
    case 8222:
    case 8223:
    case 8224:
    case 8225:
    case 8229:
    case 8230:
    case 8231:
    case 8232:
    case 8238:
    case 8239:
    case 8240:
    case 8241:
    case 8242:
    case 8243:
    case 8244:
    case 8245:
    case 8246:
    case 8247:
    case 8248:
    case 8249:
    case 8250:
    case 8251:
    case 8255:
    case 8258:
    case 8259:
    case 8260:
    case 8261:
    case 8262:
    case 8263:
    case 8264:
    case 8265:
    case 8266:
    case 8267:
    case 8268:
    case 8269:
    case 8270:
    case 8271:
    case 8274:
    case 8275:
    case 8276:
    case 8277:
    case 8278:
    case 8279:
    case 8280:
    case 8281:
    case 8282:
    case 8283:
    case 8284:
    case 8285:
    case 8288:
    case 8289:
    case 8290:
    case 8291:
    case 8292:
    case 8293:
    case 8294:
    case 8295:
    case 8296:
    case 8297:
    case 8298:
    case 8299:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8308:
    case 8309:
    case 8310:
    case 8311:
    case 8312:
    case 8313:
    case 8314:
    case 8315:
    case 8316:
    case 8317:
    case 8318:
    case 8319:
    case 8320:
    case 8321:
    case 8322:
    case 8323:
    case 8324:
    case 8325:
    case 8326:
    case 8327:
    case 8328:
    case 8329:
    case 8330:
    case 8331:
    case 8332:
    case 8333:
    case 8334:
    case 8335:
    case 8336:
    case 8337:
    case 8338:
    case 8341:
    case 8342:
    case 8343:
    case 8345:
    case 8346:
    case 8347:
    case 8348:
    case 8349:
    case 8350:
    case 8353:
    case 8360:
    case 8361:
    case 8362:
    case 8363:
    case 8364:
    case 8365:
    case 8366:
    case 8635:
    case 8636:
    case 8637:
    case 8638:
    case 8639:
    case 8640:
    case 8641:
    case 8642:
    case 8643:
    case 8644:
    case 8645:
    case 8646:
    case 8647:
    case 8648:
    case 8649:
    case 8650:
    case 8651:
    case 8652:
    case 8653:
    case 8654:
    case 8655:
    case 8656:
    case 8657:
    case 8658:
    case 8659:
    case 8660:
    case 8661:
    case 8662:
    case 8663:
    case 8664:
    case 8665:
    case 8666:
    case 8667:
    case 8668:
    case 8669:
    case 8670:
    case 8671:
    case 8672:
    case 8673:
    case 8674:
    case 8675:
    case 8676:
    case 8677:
    case 8678:
    case 8681:
    case 8682:
    case 8683:
    case 8684:
    case 8685:
    case 8686:
    case 8687:
    case 8688:
    case 8689:
    case 8690:
    case 8691:
    case 8692:
    case 8693:
    case 8694:
    case 8695:
    case 8696:
    case 8698:
    case 8699:
    case 8700:
    case 8701:
    case 8702:
    case 8703:
    case 8704:
    case 8705:
    case 8708:
    case 8711:
    case 8712:
    case 8713:
    case 8714:
    case 8715:
    case 8716:
    case 8717:
    case 8718:
    case 8720:
    case 8721:
    case 8722:
    case 8725:
    case 8726:
    case 8727:
    case 8728:
    case 8729:
    case 8730:
    case 8731:
    case 8732:
    case 8733:
    case 8734:
    case 8735:
    case 8736:
    case 8737:
    case 8738:
    case 8739:
    case 8740:
    case 8741:
    case 8742:
    case 8743:
    case 8744:
    case 8745:
    case 8746:
    case 8747:
    case 8748:
    case 8749:
    case 8750:
    case 8751:
    case 8752:
    case 8753:
    case 8754:
    case 8755:
    case 8756:
    case 8757:
    case 8758:
    case 8759:
    case 8760:
    case 8761:
    case 8764:
    case 8765:
    case 8766:
    case 8767:
    case 8768:
    case 8769:
    case 8770:
    case 8771:
    case 8772:
    case 8773:
    case 8774:
    case 8775:
    case 8776:
    case 8777:
    case 8778:
    case 8779:
    case 8780:
    case 8781:
    case 8782:
    case 8783:
    case 8784:
    case 8785:
    case 8786:
    case 8787:
    case 8788:
    case 8789:
    case 8790:
    case 8791:
    case 8792:
    case 8793:
    case 8794:
    case 8795:
    case 8796:
    case 8797:
    case 8798:
    case 8799:
    case 8800:
    case 8801:
    case 8802:
    case 8803:
    case 8804:
    case 8805:
    case 8806:
    case 8807:
    case 8808:
    case 8809:
    case 8810:
    case 8811:
    case 8812:
    case 8813:
    case 8814:
    case 8815:
    case 8816:
    case 8817:
    case 8818:
    case 8819:
    case 8820:
    case 8821:
    case 8822:
    case 8823:
    case 8824:
    case 8825:
    case 8826:
    case 8827:
    case 8828:
    case 8829:
    case 8830:
    case 8831:
    case 8832:
    case 8833:
    case 8834:
    case 8835:
    case 8836:
    case 8837:
    case 8838:
    case 8840:
    case 8841:
    case 8842:
    case 8843:
    case 8844:
    case 8845:
    case 8846:
    case 8847:
    case 8848:
    case 8849:
    case 8850:
    case 8851:
    case 8852:
    case 8853:
    case 8854:
    case 8855:
    case 8856:
    case 8857:
    case 8858:
    case 8859:
    case 8860:
    case 8861:
    case 8862:
    case 8863:
    case 8864:
    case 8865:
    case 8866:
    case 8867:
    case 8868:
    case 8869:
    case 8870:
    case 8871:
    case 8872:
    case 8873:
    case 8874:
    case 8876:
    case 8877:
    case 8878:
    case 8879:
    case 8880:
    case 8881:
    case 8882:
    case 8883:
    case 8884:
    case 8885:
    case 8886:
    case 8887:
    case 8888:
    case 8889:
    case 8890:
    case 8891:
    case 8892:
    case 8893:
    case 8894:
    case 8895:
    case 8896:
    case 8897:
    case 8898:
    case 8899:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 8907:
    case 8908:
    case 8909:
    case 8910:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
