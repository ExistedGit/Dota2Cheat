// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networksystem_protomessages.proto

#include "networksystem_protomessages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR NetMessageSplitscreenUserChanged::NetMessageSplitscreenUserChanged(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.slot_)*/0u} {}
struct NetMessageSplitscreenUserChangedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetMessageSplitscreenUserChangedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetMessageSplitscreenUserChangedDefaultTypeInternal() {}
  union {
    NetMessageSplitscreenUserChanged _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetMessageSplitscreenUserChangedDefaultTypeInternal _NetMessageSplitscreenUserChanged_default_instance_;
PROTOBUF_CONSTEXPR NetMessageConnectionClosed::NetMessageConnectionClosed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reason_)*/0u} {}
struct NetMessageConnectionClosedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetMessageConnectionClosedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetMessageConnectionClosedDefaultTypeInternal() {}
  union {
    NetMessageConnectionClosed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetMessageConnectionClosedDefaultTypeInternal _NetMessageConnectionClosed_default_instance_;
PROTOBUF_CONSTEXPR NetMessageConnectionCrashed::NetMessageConnectionCrashed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reason_)*/0u} {}
struct NetMessageConnectionCrashedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetMessageConnectionCrashedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetMessageConnectionCrashedDefaultTypeInternal() {}
  union {
    NetMessageConnectionCrashed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetMessageConnectionCrashedDefaultTypeInternal _NetMessageConnectionCrashed_default_instance_;
PROTOBUF_CONSTEXPR NetMessagePacketStart::NetMessagePacketStart(
    ::_pbi::ConstantInitialized) {}
struct NetMessagePacketStartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetMessagePacketStartDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetMessagePacketStartDefaultTypeInternal() {}
  union {
    NetMessagePacketStart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetMessagePacketStartDefaultTypeInternal _NetMessagePacketStart_default_instance_;
PROTOBUF_CONSTEXPR NetMessagePacketEnd::NetMessagePacketEnd(
    ::_pbi::ConstantInitialized) {}
struct NetMessagePacketEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetMessagePacketEndDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetMessagePacketEndDefaultTypeInternal() {}
  union {
    NetMessagePacketEnd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetMessagePacketEndDefaultTypeInternal _NetMessagePacketEnd_default_instance_;
static ::_pb::Metadata file_level_metadata_networksystem_5fprotomessages_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_networksystem_5fprotomessages_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_networksystem_5fprotomessages_2eproto = nullptr;

const uint32_t TableStruct_networksystem_5fprotomessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::NetMessageSplitscreenUserChanged, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetMessageSplitscreenUserChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetMessageSplitscreenUserChanged, _impl_.slot_),
  0,
  PROTOBUF_FIELD_OFFSET(::NetMessageConnectionClosed, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetMessageConnectionClosed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetMessageConnectionClosed, _impl_.reason_),
  0,
  PROTOBUF_FIELD_OFFSET(::NetMessageConnectionCrashed, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetMessageConnectionCrashed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetMessageConnectionCrashed, _impl_.reason_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetMessagePacketStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetMessagePacketEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::NetMessageSplitscreenUserChanged)},
  { 8, 15, -1, sizeof(::NetMessageConnectionClosed)},
  { 16, 23, -1, sizeof(::NetMessageConnectionCrashed)},
  { 24, -1, -1, sizeof(::NetMessagePacketStart)},
  { 30, -1, -1, sizeof(::NetMessagePacketEnd)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_NetMessageSplitscreenUserChanged_default_instance_._instance,
  &::_NetMessageConnectionClosed_default_instance_._instance,
  &::_NetMessageConnectionCrashed_default_instance_._instance,
  &::_NetMessagePacketStart_default_instance_._instance,
  &::_NetMessagePacketEnd_default_instance_._instance,
};

const char descriptor_table_protodef_networksystem_5fprotomessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!networksystem_protomessages.proto\"0\n N"
  "etMessageSplitscreenUserChanged\022\014\n\004slot\030"
  "\001 \001(\r\",\n\032NetMessageConnectionClosed\022\016\n\006r"
  "eason\030\001 \001(\r\"-\n\033NetMessageConnectionCrash"
  "ed\022\016\n\006reason\030\001 \001(\r\"\027\n\025NetMessagePacketSt"
  "art\"\025\n\023NetMessagePacketEnd"
  ;
static ::_pbi::once_flag descriptor_table_networksystem_5fprotomessages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_networksystem_5fprotomessages_2eproto = {
    false, false, 226, descriptor_table_protodef_networksystem_5fprotomessages_2eproto,
    "networksystem_protomessages.proto",
    &descriptor_table_networksystem_5fprotomessages_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_networksystem_5fprotomessages_2eproto::offsets,
    file_level_metadata_networksystem_5fprotomessages_2eproto, file_level_enum_descriptors_networksystem_5fprotomessages_2eproto,
    file_level_service_descriptors_networksystem_5fprotomessages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_networksystem_5fprotomessages_2eproto_getter() {
  return &descriptor_table_networksystem_5fprotomessages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_networksystem_5fprotomessages_2eproto(&descriptor_table_networksystem_5fprotomessages_2eproto);

// ===================================================================

class NetMessageSplitscreenUserChanged::_Internal {
 public:
  using HasBits = decltype(std::declval<NetMessageSplitscreenUserChanged>()._impl_._has_bits_);
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NetMessageSplitscreenUserChanged::NetMessageSplitscreenUserChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetMessageSplitscreenUserChanged)
}
NetMessageSplitscreenUserChanged::NetMessageSplitscreenUserChanged(const NetMessageSplitscreenUserChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetMessageSplitscreenUserChanged* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slot_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.slot_ = from._impl_.slot_;
  // @@protoc_insertion_point(copy_constructor:NetMessageSplitscreenUserChanged)
}

inline void NetMessageSplitscreenUserChanged::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slot_){0u}
  };
}

NetMessageSplitscreenUserChanged::~NetMessageSplitscreenUserChanged() {
  // @@protoc_insertion_point(destructor:NetMessageSplitscreenUserChanged)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetMessageSplitscreenUserChanged::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NetMessageSplitscreenUserChanged::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetMessageSplitscreenUserChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:NetMessageSplitscreenUserChanged)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetMessageSplitscreenUserChanged::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 slot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_slot(&has_bits);
          _impl_.slot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetMessageSplitscreenUserChanged::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetMessageSplitscreenUserChanged)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetMessageSplitscreenUserChanged)
  return target;
}

size_t NetMessageSplitscreenUserChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetMessageSplitscreenUserChanged)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 slot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_slot());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetMessageSplitscreenUserChanged::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetMessageSplitscreenUserChanged::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetMessageSplitscreenUserChanged::GetClassData() const { return &_class_data_; }


void NetMessageSplitscreenUserChanged::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetMessageSplitscreenUserChanged*>(&to_msg);
  auto& from = static_cast<const NetMessageSplitscreenUserChanged&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetMessageSplitscreenUserChanged)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_slot()) {
    _this->_internal_set_slot(from._internal_slot());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetMessageSplitscreenUserChanged::CopyFrom(const NetMessageSplitscreenUserChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetMessageSplitscreenUserChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetMessageSplitscreenUserChanged::IsInitialized() const {
  return true;
}

void NetMessageSplitscreenUserChanged::InternalSwap(NetMessageSplitscreenUserChanged* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.slot_, other->_impl_.slot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetMessageSplitscreenUserChanged::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networksystem_5fprotomessages_2eproto_getter, &descriptor_table_networksystem_5fprotomessages_2eproto_once,
      file_level_metadata_networksystem_5fprotomessages_2eproto[0]);
}

// ===================================================================

class NetMessageConnectionClosed::_Internal {
 public:
  using HasBits = decltype(std::declval<NetMessageConnectionClosed>()._impl_._has_bits_);
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NetMessageConnectionClosed::NetMessageConnectionClosed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetMessageConnectionClosed)
}
NetMessageConnectionClosed::NetMessageConnectionClosed(const NetMessageConnectionClosed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetMessageConnectionClosed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reason_ = from._impl_.reason_;
  // @@protoc_insertion_point(copy_constructor:NetMessageConnectionClosed)
}

inline void NetMessageConnectionClosed::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){0u}
  };
}

NetMessageConnectionClosed::~NetMessageConnectionClosed() {
  // @@protoc_insertion_point(destructor:NetMessageConnectionClosed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetMessageConnectionClosed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NetMessageConnectionClosed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetMessageConnectionClosed::Clear() {
// @@protoc_insertion_point(message_clear_start:NetMessageConnectionClosed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetMessageConnectionClosed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 reason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_reason(&has_bits);
          _impl_.reason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetMessageConnectionClosed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetMessageConnectionClosed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetMessageConnectionClosed)
  return target;
}

size_t NetMessageConnectionClosed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetMessageConnectionClosed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 reason = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetMessageConnectionClosed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetMessageConnectionClosed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetMessageConnectionClosed::GetClassData() const { return &_class_data_; }


void NetMessageConnectionClosed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetMessageConnectionClosed*>(&to_msg);
  auto& from = static_cast<const NetMessageConnectionClosed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetMessageConnectionClosed)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reason()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetMessageConnectionClosed::CopyFrom(const NetMessageConnectionClosed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetMessageConnectionClosed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetMessageConnectionClosed::IsInitialized() const {
  return true;
}

void NetMessageConnectionClosed::InternalSwap(NetMessageConnectionClosed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetMessageConnectionClosed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networksystem_5fprotomessages_2eproto_getter, &descriptor_table_networksystem_5fprotomessages_2eproto_once,
      file_level_metadata_networksystem_5fprotomessages_2eproto[1]);
}

// ===================================================================

class NetMessageConnectionCrashed::_Internal {
 public:
  using HasBits = decltype(std::declval<NetMessageConnectionCrashed>()._impl_._has_bits_);
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NetMessageConnectionCrashed::NetMessageConnectionCrashed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetMessageConnectionCrashed)
}
NetMessageConnectionCrashed::NetMessageConnectionCrashed(const NetMessageConnectionCrashed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetMessageConnectionCrashed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reason_ = from._impl_.reason_;
  // @@protoc_insertion_point(copy_constructor:NetMessageConnectionCrashed)
}

inline void NetMessageConnectionCrashed::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){0u}
  };
}

NetMessageConnectionCrashed::~NetMessageConnectionCrashed() {
  // @@protoc_insertion_point(destructor:NetMessageConnectionCrashed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetMessageConnectionCrashed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NetMessageConnectionCrashed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetMessageConnectionCrashed::Clear() {
// @@protoc_insertion_point(message_clear_start:NetMessageConnectionCrashed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetMessageConnectionCrashed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 reason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_reason(&has_bits);
          _impl_.reason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetMessageConnectionCrashed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetMessageConnectionCrashed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetMessageConnectionCrashed)
  return target;
}

size_t NetMessageConnectionCrashed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetMessageConnectionCrashed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 reason = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetMessageConnectionCrashed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetMessageConnectionCrashed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetMessageConnectionCrashed::GetClassData() const { return &_class_data_; }


void NetMessageConnectionCrashed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetMessageConnectionCrashed*>(&to_msg);
  auto& from = static_cast<const NetMessageConnectionCrashed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetMessageConnectionCrashed)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reason()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetMessageConnectionCrashed::CopyFrom(const NetMessageConnectionCrashed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetMessageConnectionCrashed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetMessageConnectionCrashed::IsInitialized() const {
  return true;
}

void NetMessageConnectionCrashed::InternalSwap(NetMessageConnectionCrashed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetMessageConnectionCrashed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networksystem_5fprotomessages_2eproto_getter, &descriptor_table_networksystem_5fprotomessages_2eproto_once,
      file_level_metadata_networksystem_5fprotomessages_2eproto[2]);
}

// ===================================================================

class NetMessagePacketStart::_Internal {
 public:
};

NetMessagePacketStart::NetMessagePacketStart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:NetMessagePacketStart)
}
NetMessagePacketStart::NetMessagePacketStart(const NetMessagePacketStart& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NetMessagePacketStart* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetMessagePacketStart)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetMessagePacketStart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetMessagePacketStart::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NetMessagePacketStart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networksystem_5fprotomessages_2eproto_getter, &descriptor_table_networksystem_5fprotomessages_2eproto_once,
      file_level_metadata_networksystem_5fprotomessages_2eproto[3]);
}

// ===================================================================

class NetMessagePacketEnd::_Internal {
 public:
};

NetMessagePacketEnd::NetMessagePacketEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:NetMessagePacketEnd)
}
NetMessagePacketEnd::NetMessagePacketEnd(const NetMessagePacketEnd& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NetMessagePacketEnd* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetMessagePacketEnd)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetMessagePacketEnd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetMessagePacketEnd::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NetMessagePacketEnd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networksystem_5fprotomessages_2eproto_getter, &descriptor_table_networksystem_5fprotomessages_2eproto_once,
      file_level_metadata_networksystem_5fprotomessages_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::NetMessageSplitscreenUserChanged*
Arena::CreateMaybeMessage< ::NetMessageSplitscreenUserChanged >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetMessageSplitscreenUserChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::NetMessageConnectionClosed*
Arena::CreateMaybeMessage< ::NetMessageConnectionClosed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetMessageConnectionClosed >(arena);
}
template<> PROTOBUF_NOINLINE ::NetMessageConnectionCrashed*
Arena::CreateMaybeMessage< ::NetMessageConnectionCrashed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetMessageConnectionCrashed >(arena);
}
template<> PROTOBUF_NOINLINE ::NetMessagePacketStart*
Arena::CreateMaybeMessage< ::NetMessagePacketStart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetMessagePacketStart >(arena);
}
template<> PROTOBUF_NOINLINE ::NetMessagePacketEnd*
Arena::CreateMaybeMessage< ::NetMessagePacketEnd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetMessagePacketEnd >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
