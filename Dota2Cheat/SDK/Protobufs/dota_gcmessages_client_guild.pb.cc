// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_guild.proto

#include "dota_gcmessages_client_guild.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR CMsgGuildInfo::CMsgGuildInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guild_tag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guild_description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guild_motd_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_timestamp_)*/0u
  , /*decltype(_impl_.guild_language_)*/0u
  , /*decltype(_impl_.guild_flags_)*/0u
  , /*decltype(_impl_.guild_region_)*/0u
  , /*decltype(_impl_.guild_logo_)*/uint64_t{0u}
  , /*decltype(_impl_.guild_chat_group_id_)*/uint64_t{0u}
  , /*decltype(_impl_.default_chat_channel_id_)*/uint64_t{0u}
  , /*decltype(_impl_.guild_primary_color_)*/0u
  , /*decltype(_impl_.guild_secondary_color_)*/0u
  , /*decltype(_impl_.guild_pattern_)*/0u
  , /*decltype(_impl_.guild_refresh_time_offset_)*/0u
  , /*decltype(_impl_.guild_required_rank_tier_)*/0u
  , /*decltype(_impl_.guild_motd_timestamp_)*/0u} {}
struct CMsgGuildInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildInfoDefaultTypeInternal() {}
  union {
    CMsgGuildInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildInfoDefaultTypeInternal _CMsgGuildInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildSummary_EventPoints::CMsgGuildSummary_EventPoints(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.event_id_)*/0u
  , /*decltype(_impl_.guild_points_)*/0u
  , /*decltype(_impl_.guild_rank_)*/0u
  , /*decltype(_impl_.guild_weekly_rank_)*/0u
  , /*decltype(_impl_.guild_weekly_percentile_)*/0u
  , /*decltype(_impl_.guild_current_percentile_)*/0u} {}
struct CMsgGuildSummary_EventPointsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildSummary_EventPointsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildSummary_EventPointsDefaultTypeInternal() {}
  union {
    CMsgGuildSummary_EventPoints _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildSummary_EventPointsDefaultTypeInternal _CMsgGuildSummary_EventPoints_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildSummary::CMsgGuildSummary(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.event_points_)*/{}
  , /*decltype(_impl_.guild_info_)*/nullptr
  , /*decltype(_impl_.member_count_)*/0u} {}
struct CMsgGuildSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildSummaryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildSummaryDefaultTypeInternal() {}
  union {
    CMsgGuildSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildSummaryDefaultTypeInternal _CMsgGuildSummary_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildRole::CMsgGuildRole(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.role_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.role_id_)*/0u
  , /*decltype(_impl_.role_flags_)*/0u
  , /*decltype(_impl_.role_order_)*/0u} {}
struct CMsgGuildRoleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildRoleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildRoleDefaultTypeInternal() {}
  union {
    CMsgGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildRoleDefaultTypeInternal _CMsgGuildRole_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildMember::CMsgGuildMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.member_account_id_)*/0u
  , /*decltype(_impl_.member_role_id_)*/0u
  , /*decltype(_impl_.member_joined_timestamp_)*/0u
  , /*decltype(_impl_.member_last_active_timestamp_)*/0u} {}
struct CMsgGuildMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildMemberDefaultTypeInternal() {}
  union {
    CMsgGuildMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildMemberDefaultTypeInternal _CMsgGuildMember_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildInvite::CMsgGuildInvite(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.requester_account_id_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u
  , /*decltype(_impl_.timestamp_sent_)*/0u} {}
struct CMsgGuildInviteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildInviteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildInviteDefaultTypeInternal() {}
  union {
    CMsgGuildInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildInviteDefaultTypeInternal _CMsgGuildInvite_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildData::CMsgGuildData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_roles_)*/{}
  , /*decltype(_impl_.guild_members_)*/{}
  , /*decltype(_impl_.guild_invites_)*/{}
  , /*decltype(_impl_.guild_info_)*/nullptr
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgGuildDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildDataDefaultTypeInternal() {}
  union {
    CMsgGuildData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildDataDefaultTypeInternal _CMsgGuildData_default_instance_;
PROTOBUF_CONSTEXPR CMsgAccountGuildInvite::CMsgAccountGuildInvite(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.requester_account_id_)*/0u
  , /*decltype(_impl_.timestamp_sent_)*/0u} {}
struct CMsgAccountGuildInviteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAccountGuildInviteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAccountGuildInviteDefaultTypeInternal() {}
  union {
    CMsgAccountGuildInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAccountGuildInviteDefaultTypeInternal _CMsgAccountGuildInvite_default_instance_;
PROTOBUF_CONSTEXPR CMsgAccountGuildMemberships::CMsgAccountGuildMemberships(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guild_ids_)*/{}
  , /*decltype(_impl_.guild_invites_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgAccountGuildMembershipsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAccountGuildMembershipsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAccountGuildMembershipsDefaultTypeInternal() {}
  union {
    CMsgAccountGuildMemberships _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAccountGuildMembershipsDefaultTypeInternal _CMsgAccountGuildMemberships_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildPersonaInfo::CMsgGuildPersonaInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_tag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.guild_flags_)*/0u} {}
struct CMsgGuildPersonaInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildPersonaInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildPersonaInfoDefaultTypeInternal() {}
  union {
    CMsgGuildPersonaInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildPersonaInfoDefaultTypeInternal _CMsgGuildPersonaInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgAccountGuildsPersonaInfo::CMsgAccountGuildsPersonaInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guild_persona_infos_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgAccountGuildsPersonaInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAccountGuildsPersonaInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAccountGuildsPersonaInfoDefaultTypeInternal() {}
  union {
    CMsgAccountGuildsPersonaInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAccountGuildsPersonaInfoDefaultTypeInternal _CMsgAccountGuildsPersonaInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgGuildFeedEvent::CMsgGuildFeedEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.feed_event_id_)*/uint64_t{0u}
  , /*decltype(_impl_.timestamp_)*/0u
  , /*decltype(_impl_.event_type_)*/0u
  , /*decltype(_impl_.param_uint_1_)*/0u
  , /*decltype(_impl_.param_uint_2_)*/0u
  , /*decltype(_impl_.param_uint_3_)*/0u} {}
struct CMsgGuildFeedEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGuildFeedEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGuildFeedEventDefaultTypeInternal() {}
  union {
    CMsgGuildFeedEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGuildFeedEventDefaultTypeInternal _CMsgGuildFeedEvent_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCreateGuild::CMsgClientToGCCreateGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_info_)*/nullptr
  , /*decltype(_impl_.guild_chat_type_)*/0} {}
struct CMsgClientToGCCreateGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCreateGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCreateGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCCreateGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCreateGuildDefaultTypeInternal _CMsgClientToGCCreateGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCreateGuildResponse::CMsgClientToGCCreateGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCCreateGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCreateGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCreateGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCreateGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCreateGuildResponseDefaultTypeInternal _CMsgClientToGCCreateGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildInfo::CMsgClientToGCSetGuildInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_info_)*/nullptr
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.guild_chat_type_)*/0} {}
struct CMsgClientToGCSetGuildInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildInfoDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetGuildInfoDefaultTypeInternal _CMsgClientToGCSetGuildInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildInfoResponse::CMsgClientToGCSetGuildInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal _CMsgClientToGCSetGuildInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildData::CMsgClientToGCRequestGuildData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCRequestGuildDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildDataDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestGuildDataDefaultTypeInternal _CMsgClientToGCRequestGuildData_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildDataResponse::CMsgClientToGCRequestGuildDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_data_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal _CMsgClientToGCRequestGuildDataResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientGuildDataUpdated::CMsgGCToClientGuildDataUpdated(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_data_)*/nullptr
  , /*decltype(_impl_.update_flags_)*/0u} {}
struct CMsgGCToClientGuildDataUpdatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientGuildDataUpdatedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildDataUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildDataUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientGuildDataUpdatedDefaultTypeInternal _CMsgGCToClientGuildDataUpdated_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientGuildMembersDataUpdated::CMsgGCToClientGuildMembersDataUpdated(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.members_data_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildMembersDataUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal _CMsgGCToClientGuildMembersDataUpdated_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildMembership::CMsgClientToGCRequestGuildMembership(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCRequestGuildMembershipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildMembershipDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildMembershipDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildMembership _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestGuildMembershipDefaultTypeInternal _CMsgClientToGCRequestGuildMembership_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildMembershipResponse::CMsgClientToGCRequestGuildMembershipResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_memberships_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildMembershipResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal _CMsgClientToGCRequestGuildMembershipResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientGuildMembershipUpdated::CMsgGCToClientGuildMembershipUpdated(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_memberships_)*/nullptr} {}
struct CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildMembershipUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal _CMsgGCToClientGuildMembershipUpdated_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCJoinGuild::CMsgClientToGCJoinGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCJoinGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCJoinGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCJoinGuildDefaultTypeInternal _CMsgClientToGCJoinGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCJoinGuildResponse::CMsgClientToGCJoinGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCJoinGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCJoinGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCJoinGuildResponseDefaultTypeInternal _CMsgClientToGCJoinGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCLeaveGuild::CMsgClientToGCLeaveGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCLeaveGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCLeaveGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCLeaveGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeaveGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCLeaveGuildDefaultTypeInternal _CMsgClientToGCLeaveGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCLeaveGuildResponse::CMsgClientToGCLeaveGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCLeaveGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCLeaveGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCLeaveGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeaveGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCLeaveGuildResponseDefaultTypeInternal _CMsgClientToGCLeaveGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCKickGuildMember::CMsgClientToGCKickGuildMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCKickGuildMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCKickGuildMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCKickGuildMemberDefaultTypeInternal() {}
  union {
    CMsgClientToGCKickGuildMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCKickGuildMemberDefaultTypeInternal _CMsgClientToGCKickGuildMember_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCKickGuildMemberResponse::CMsgClientToGCKickGuildMemberResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCKickGuildMemberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal _CMsgClientToGCKickGuildMemberResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildMemberRole::CMsgClientToGCSetGuildMemberRole(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u
  , /*decltype(_impl_.target_role_id_)*/0u} {}
struct CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildMemberRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal _CMsgClientToGCSetGuildMemberRole_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildMemberRoleResponse::CMsgClientToGCSetGuildMemberRoleResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildMemberRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal _CMsgClientToGCSetGuildMemberRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCInviteToGuild::CMsgClientToGCInviteToGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCInviteToGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCInviteToGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCInviteToGuildDefaultTypeInternal _CMsgClientToGCInviteToGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCInviteToGuildResponse::CMsgClientToGCInviteToGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCInviteToGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCInviteToGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCInviteToGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDeclineInviteToGuild::CMsgClientToGCDeclineInviteToGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCDeclineInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal _CMsgClientToGCDeclineInviteToGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDeclineInviteToGuildResponse::CMsgClientToGCDeclineInviteToGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCDeclineInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCDeclineInviteToGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAcceptInviteToGuild::CMsgClientToGCAcceptInviteToGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal _CMsgClientToGCAcceptInviteToGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAcceptInviteToGuildResponse::CMsgClientToGCAcceptInviteToGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCAcceptInviteToGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCancelInviteToGuild::CMsgClientToGCCancelInviteToGuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCCancelInviteToGuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCancelInviteToGuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCancelInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCCancelInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCancelInviteToGuildDefaultTypeInternal _CMsgClientToGCCancelInviteToGuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCancelInviteToGuildResponse::CMsgClientToGCCancelInviteToGuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCancelInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCCancelInviteToGuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAddGuildRole::CMsgClientToGCAddGuildRole(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.role_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.role_flags_)*/0u} {}
struct CMsgClientToGCAddGuildRoleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAddGuildRoleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAddGuildRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAddGuildRoleDefaultTypeInternal _CMsgClientToGCAddGuildRole_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAddGuildRoleResponse::CMsgClientToGCAddGuildRoleResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.role_id_)*/0u} {}
struct CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddGuildRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal _CMsgClientToGCAddGuildRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCModifyGuildRole::CMsgClientToGCModifyGuildRole(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.role_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.role_id_)*/0u
  , /*decltype(_impl_.role_flags_)*/0u} {}
struct CMsgClientToGCModifyGuildRoleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCModifyGuildRoleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCModifyGuildRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCModifyGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCModifyGuildRoleDefaultTypeInternal _CMsgClientToGCModifyGuildRole_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCModifyGuildRoleResponse::CMsgClientToGCModifyGuildRoleResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCModifyGuildRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal _CMsgClientToGCModifyGuildRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRemoveGuildRole::CMsgClientToGCRemoveGuildRole(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.role_id_)*/0u} {}
struct CMsgClientToGCRemoveGuildRoleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRemoveGuildRoleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRemoveGuildRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCRemoveGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRemoveGuildRoleDefaultTypeInternal _CMsgClientToGCRemoveGuildRole_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRemoveGuildRoleResponse::CMsgClientToGCRemoveGuildRoleResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRemoveGuildRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal _CMsgClientToGCRemoveGuildRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildRoleOrder::CMsgClientToGCSetGuildRoleOrder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.requested_role_ids_)*/{}
  , /*decltype(_impl_.previous_role_ids_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildRoleOrder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal _CMsgClientToGCSetGuildRoleOrder_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildRoleOrderResponse::CMsgClientToGCSetGuildRoleOrderResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.confirmed_role_ids_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildRoleOrderResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal _CMsgClientToGCSetGuildRoleOrderResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGuildFeedRequest::CMsgClientToGCGuildFeedRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.last_seen_id_)*/uint64_t{0u}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCGuildFeedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGuildFeedRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGuildFeedRequestDefaultTypeInternal() {}
  union {
    CMsgClientToGCGuildFeedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGuildFeedRequestDefaultTypeInternal _CMsgClientToGCGuildFeedRequest_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildFeedResponse::CMsgClientToGCRequestGuildFeedResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.feed_events_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildFeedResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal _CMsgClientToGCRequestGuildFeedResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientGuildFeedUpdated::CMsgGCToClientGuildFeedUpdated(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildFeedUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal _CMsgGCToClientGuildFeedUpdated_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAddPlayerToGuildChat::CMsgClientToGCAddPlayerToGuildChat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddPlayerToGuildChat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal _CMsgClientToGCAddPlayerToGuildChat_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAddPlayerToGuildChatResponse::CMsgClientToGCAddPlayerToGuildChatResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddPlayerToGuildChatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal _CMsgClientToGCAddPlayerToGuildChatResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgFindGuildByTagResponse::CMsgFindGuildByTagResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_summary_)*/nullptr
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgFindGuildByTagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgFindGuildByTagResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgFindGuildByTagResponseDefaultTypeInternal() {}
  union {
    CMsgFindGuildByTagResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgFindGuildByTagResponseDefaultTypeInternal _CMsgFindGuildByTagResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgSearchForOpenGuildsResponse_SearchResult::CMsgSearchForOpenGuildsResponse_SearchResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_summary_)*/nullptr
  , /*decltype(_impl_.guild_id_)*/0u} {}
struct CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal() {}
  union {
    CMsgSearchForOpenGuildsResponse_SearchResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal _CMsgSearchForOpenGuildsResponse_SearchResult_default_instance_;
PROTOBUF_CONSTEXPR CMsgSearchForOpenGuildsResponse::CMsgSearchForOpenGuildsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.search_results_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.use_whitelist_)*/false} {}
struct CMsgSearchForOpenGuildsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSearchForOpenGuildsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSearchForOpenGuildsResponseDefaultTypeInternal() {}
  union {
    CMsgSearchForOpenGuildsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSearchForOpenGuildsResponseDefaultTypeInternal _CMsgSearchForOpenGuildsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCReportGuildContent::CMsgClientToGCReportGuildContent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.guild_id_)*/0u
  , /*decltype(_impl_.guild_content_flags_)*/0u} {}
struct CMsgClientToGCReportGuildContentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCReportGuildContentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCReportGuildContentDefaultTypeInternal() {}
  union {
    CMsgClientToGCReportGuildContent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCReportGuildContentDefaultTypeInternal _CMsgClientToGCReportGuildContent_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCReportGuildContentResponse::CMsgClientToGCReportGuildContentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCReportGuildContentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCReportGuildContentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCReportGuildContentResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCReportGuildContentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCReportGuildContentResponseDefaultTypeInternal _CMsgClientToGCReportGuildContentResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfo::CMsgClientToGCRequestAccountGuildPersonaInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CMsgClientToGCRequestAccountGuildPersonaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.persona_info_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CMsgClientToGCRequestAccountGuildPersonaInfoBatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfoBatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoBatch_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.persona_infos_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[61];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[26];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto = nullptr;

const uint32_t TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_tag_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.created_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_language_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_flags_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_logo_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_region_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_chat_group_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_description_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.default_chat_channel_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_primary_color_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_secondary_color_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_pattern_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_refresh_time_offset_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_required_rank_tier_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_motd_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _impl_.guild_motd_),
  0,
  1,
  4,
  5,
  6,
  8,
  7,
  9,
  2,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_.event_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_.guild_points_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_.guild_rank_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_.guild_weekly_rank_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_.guild_weekly_percentile_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _impl_.guild_current_percentile_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _impl_.guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _impl_.member_count_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _impl_.event_points_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _impl_.role_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _impl_.role_flags_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _impl_.role_order_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _impl_.member_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _impl_.member_role_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _impl_.member_joined_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _impl_.member_last_active_timestamp_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _impl_.requester_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _impl_.target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _impl_.timestamp_sent_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _impl_.guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _impl_.guild_roles_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _impl_.guild_members_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _impl_.guild_invites_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _impl_.requester_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _impl_.timestamp_sent_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildMemberships, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildMemberships, _impl_.guild_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildMemberships, _impl_.guild_invites_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _impl_.guild_tag_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _impl_.guild_flags_),
  1,
  0,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildsPersonaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildsPersonaInfo, _impl_.guild_persona_infos_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_.feed_event_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_.event_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_.param_uint_1_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_.param_uint_2_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _impl_.param_uint_3_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, _impl_.guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, _impl_.guild_chat_type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, _impl_.guild_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _impl_.guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _impl_.guild_chat_type_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfoResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfoResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildData, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, _impl_.guild_data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, _impl_.guild_data_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, _impl_.update_flags_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, _impl_.members_data_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembership, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, _impl_.guild_memberships_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembershipUpdated, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembershipUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembershipUpdated, _impl_.guild_memberships_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuild, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuildResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuild, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuildResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, _impl_.target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMemberResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMemberResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _impl_.target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _impl_.target_role_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRoleResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRoleResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, _impl_.target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuildResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuild, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuildResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuild, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuildResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, _impl_.target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuildResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _impl_.role_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _impl_.role_flags_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, _impl_.role_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _impl_.role_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _impl_.role_flags_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRoleResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRoleResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, _impl_.role_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRoleResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRoleResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _impl_.requested_role_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _impl_.previous_role_ids_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, _impl_.confirmed_role_ids_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, _impl_.last_seen_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _impl_.feed_events_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildFeedUpdated, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildFeedUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildFeedUpdated, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChat, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChat, _impl_.guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChatResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChatResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _impl_.guild_summary_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, _impl_.guild_summary_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _impl_.search_results_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _impl_.use_whitelist_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, _impl_.guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, _impl_.guild_content_flags_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContentResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContentResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfo, _impl_.account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _impl_.persona_info_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatch, _impl_.account_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, _impl_.persona_infos_),
  0,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 23, -1, sizeof(::CMsgGuildInfo)},
  { 40, 52, -1, sizeof(::CMsgGuildSummary_EventPoints)},
  { 58, 67, -1, sizeof(::CMsgGuildSummary)},
  { 70, 80, -1, sizeof(::CMsgGuildRole)},
  { 84, 94, -1, sizeof(::CMsgGuildMember)},
  { 98, 107, -1, sizeof(::CMsgGuildInvite)},
  { 110, 121, -1, sizeof(::CMsgGuildData)},
  { 126, 135, -1, sizeof(::CMsgAccountGuildInvite)},
  { 138, -1, -1, sizeof(::CMsgAccountGuildMemberships)},
  { 146, 155, -1, sizeof(::CMsgGuildPersonaInfo)},
  { 158, -1, -1, sizeof(::CMsgAccountGuildsPersonaInfo)},
  { 165, 177, -1, sizeof(::CMsgGuildFeedEvent)},
  { 183, 191, -1, sizeof(::CMsgClientToGCCreateGuild)},
  { 193, 201, -1, sizeof(::CMsgClientToGCCreateGuildResponse)},
  { 203, 212, -1, sizeof(::CMsgClientToGCSetGuildInfo)},
  { 215, 222, -1, sizeof(::CMsgClientToGCSetGuildInfoResponse)},
  { 223, 230, -1, sizeof(::CMsgClientToGCRequestGuildData)},
  { 231, 239, -1, sizeof(::CMsgClientToGCRequestGuildDataResponse)},
  { 241, 249, -1, sizeof(::CMsgGCToClientGuildDataUpdated)},
  { 251, 259, -1, sizeof(::CMsgGCToClientGuildMembersDataUpdated)},
  { 261, -1, -1, sizeof(::CMsgClientToGCRequestGuildMembership)},
  { 267, 275, -1, sizeof(::CMsgClientToGCRequestGuildMembershipResponse)},
  { 277, 284, -1, sizeof(::CMsgGCToClientGuildMembershipUpdated)},
  { 285, 292, -1, sizeof(::CMsgClientToGCJoinGuild)},
  { 293, 300, -1, sizeof(::CMsgClientToGCJoinGuildResponse)},
  { 301, 308, -1, sizeof(::CMsgClientToGCLeaveGuild)},
  { 309, 316, -1, sizeof(::CMsgClientToGCLeaveGuildResponse)},
  { 317, 325, -1, sizeof(::CMsgClientToGCKickGuildMember)},
  { 327, 334, -1, sizeof(::CMsgClientToGCKickGuildMemberResponse)},
  { 335, 344, -1, sizeof(::CMsgClientToGCSetGuildMemberRole)},
  { 347, 354, -1, sizeof(::CMsgClientToGCSetGuildMemberRoleResponse)},
  { 355, 363, -1, sizeof(::CMsgClientToGCInviteToGuild)},
  { 365, 372, -1, sizeof(::CMsgClientToGCInviteToGuildResponse)},
  { 373, 380, -1, sizeof(::CMsgClientToGCDeclineInviteToGuild)},
  { 381, 388, -1, sizeof(::CMsgClientToGCDeclineInviteToGuildResponse)},
  { 389, 396, -1, sizeof(::CMsgClientToGCAcceptInviteToGuild)},
  { 397, 404, -1, sizeof(::CMsgClientToGCAcceptInviteToGuildResponse)},
  { 405, 413, -1, sizeof(::CMsgClientToGCCancelInviteToGuild)},
  { 415, 422, -1, sizeof(::CMsgClientToGCCancelInviteToGuildResponse)},
  { 423, 432, -1, sizeof(::CMsgClientToGCAddGuildRole)},
  { 435, 443, -1, sizeof(::CMsgClientToGCAddGuildRoleResponse)},
  { 445, 455, -1, sizeof(::CMsgClientToGCModifyGuildRole)},
  { 459, 466, -1, sizeof(::CMsgClientToGCModifyGuildRoleResponse)},
  { 467, 475, -1, sizeof(::CMsgClientToGCRemoveGuildRole)},
  { 477, 484, -1, sizeof(::CMsgClientToGCRemoveGuildRoleResponse)},
  { 485, 494, -1, sizeof(::CMsgClientToGCSetGuildRoleOrder)},
  { 497, 505, -1, sizeof(::CMsgClientToGCSetGuildRoleOrderResponse)},
  { 507, 515, -1, sizeof(::CMsgClientToGCGuildFeedRequest)},
  { 517, 526, -1, sizeof(::CMsgClientToGCRequestGuildFeedResponse)},
  { 529, 536, -1, sizeof(::CMsgGCToClientGuildFeedUpdated)},
  { 537, 544, -1, sizeof(::CMsgClientToGCAddPlayerToGuildChat)},
  { 545, 552, -1, sizeof(::CMsgClientToGCAddPlayerToGuildChatResponse)},
  { 553, 562, -1, sizeof(::CMsgFindGuildByTagResponse)},
  { 565, 573, -1, sizeof(::CMsgSearchForOpenGuildsResponse_SearchResult)},
  { 575, 584, -1, sizeof(::CMsgSearchForOpenGuildsResponse)},
  { 587, 595, -1, sizeof(::CMsgClientToGCReportGuildContent)},
  { 597, 604, -1, sizeof(::CMsgClientToGCReportGuildContentResponse)},
  { 605, 612, -1, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfo)},
  { 613, 621, -1, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse)},
  { 623, -1, -1, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfoBatch)},
  { 630, 638, -1, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_CMsgGuildInfo_default_instance_._instance,
  &::_CMsgGuildSummary_EventPoints_default_instance_._instance,
  &::_CMsgGuildSummary_default_instance_._instance,
  &::_CMsgGuildRole_default_instance_._instance,
  &::_CMsgGuildMember_default_instance_._instance,
  &::_CMsgGuildInvite_default_instance_._instance,
  &::_CMsgGuildData_default_instance_._instance,
  &::_CMsgAccountGuildInvite_default_instance_._instance,
  &::_CMsgAccountGuildMemberships_default_instance_._instance,
  &::_CMsgGuildPersonaInfo_default_instance_._instance,
  &::_CMsgAccountGuildsPersonaInfo_default_instance_._instance,
  &::_CMsgGuildFeedEvent_default_instance_._instance,
  &::_CMsgClientToGCCreateGuild_default_instance_._instance,
  &::_CMsgClientToGCCreateGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCSetGuildInfo_default_instance_._instance,
  &::_CMsgClientToGCSetGuildInfoResponse_default_instance_._instance,
  &::_CMsgClientToGCRequestGuildData_default_instance_._instance,
  &::_CMsgClientToGCRequestGuildDataResponse_default_instance_._instance,
  &::_CMsgGCToClientGuildDataUpdated_default_instance_._instance,
  &::_CMsgGCToClientGuildMembersDataUpdated_default_instance_._instance,
  &::_CMsgClientToGCRequestGuildMembership_default_instance_._instance,
  &::_CMsgClientToGCRequestGuildMembershipResponse_default_instance_._instance,
  &::_CMsgGCToClientGuildMembershipUpdated_default_instance_._instance,
  &::_CMsgClientToGCJoinGuild_default_instance_._instance,
  &::_CMsgClientToGCJoinGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCLeaveGuild_default_instance_._instance,
  &::_CMsgClientToGCLeaveGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCKickGuildMember_default_instance_._instance,
  &::_CMsgClientToGCKickGuildMemberResponse_default_instance_._instance,
  &::_CMsgClientToGCSetGuildMemberRole_default_instance_._instance,
  &::_CMsgClientToGCSetGuildMemberRoleResponse_default_instance_._instance,
  &::_CMsgClientToGCInviteToGuild_default_instance_._instance,
  &::_CMsgClientToGCInviteToGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCDeclineInviteToGuild_default_instance_._instance,
  &::_CMsgClientToGCDeclineInviteToGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCAcceptInviteToGuild_default_instance_._instance,
  &::_CMsgClientToGCAcceptInviteToGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCCancelInviteToGuild_default_instance_._instance,
  &::_CMsgClientToGCCancelInviteToGuildResponse_default_instance_._instance,
  &::_CMsgClientToGCAddGuildRole_default_instance_._instance,
  &::_CMsgClientToGCAddGuildRoleResponse_default_instance_._instance,
  &::_CMsgClientToGCModifyGuildRole_default_instance_._instance,
  &::_CMsgClientToGCModifyGuildRoleResponse_default_instance_._instance,
  &::_CMsgClientToGCRemoveGuildRole_default_instance_._instance,
  &::_CMsgClientToGCRemoveGuildRoleResponse_default_instance_._instance,
  &::_CMsgClientToGCSetGuildRoleOrder_default_instance_._instance,
  &::_CMsgClientToGCSetGuildRoleOrderResponse_default_instance_._instance,
  &::_CMsgClientToGCGuildFeedRequest_default_instance_._instance,
  &::_CMsgClientToGCRequestGuildFeedResponse_default_instance_._instance,
  &::_CMsgGCToClientGuildFeedUpdated_default_instance_._instance,
  &::_CMsgClientToGCAddPlayerToGuildChat_default_instance_._instance,
  &::_CMsgClientToGCAddPlayerToGuildChatResponse_default_instance_._instance,
  &::_CMsgFindGuildByTagResponse_default_instance_._instance,
  &::_CMsgSearchForOpenGuildsResponse_SearchResult_default_instance_._instance,
  &::_CMsgSearchForOpenGuildsResponse_default_instance_._instance,
  &::_CMsgClientToGCReportGuildContent_default_instance_._instance,
  &::_CMsgClientToGCReportGuildContentResponse_default_instance_._instance,
  &::_CMsgClientToGCRequestAccountGuildPersonaInfo_default_instance_._instance,
  &::_CMsgClientToGCRequestAccountGuildPersonaInfoResponse_default_instance_._instance,
  &::_CMsgClientToGCRequestAccountGuildPersonaInfoBatch_default_instance_._instance,
  &::_CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_default_instance_._instance,
};

const char descriptor_table_protodef_dota_5fgcmessages_5fclient_5fguild_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"dota_gcmessages_client_guild.proto\032\027do"
  "ta_shared_enums.proto\"\313\003\n\rCMsgGuildInfo\022"
  "\022\n\nguild_name\030\001 \001(\t\022\021\n\tguild_tag\030\002 \001(\t\022\031"
  "\n\021created_timestamp\030\003 \001(\r\022\026\n\016guild_langu"
  "age\030\004 \001(\r\022\023\n\013guild_flags\030\005 \001(\r\022\022\n\nguild_"
  "logo\030\007 \001(\004\022\024\n\014guild_region\030\010 \001(\r\022\033\n\023guil"
  "d_chat_group_id\030\t \001(\004\022\031\n\021guild_descripti"
  "on\030\n \001(\t\022\037\n\027default_chat_channel_id\030\013 \001("
  "\004\022\033\n\023guild_primary_color\030\014 \001(\r\022\035\n\025guild_"
  "secondary_color\030\r \001(\r\022\025\n\rguild_pattern\030\016"
  " \001(\r\022!\n\031guild_refresh_time_offset\030\017 \001(\r\022"
  " \n\030guild_required_rank_tier\030\020 \001(\r\022\034\n\024gui"
  "ld_motd_timestamp\030\021 \001(\r\022\022\n\nguild_motd\030\022 "
  "\001(\t\"\253\002\n\020CMsgGuildSummary\022\"\n\nguild_info\030\001"
  " \001(\0132\016.CMsgGuildInfo\022\024\n\014member_count\030\002 \001"
  "(\r\0223\n\014event_points\030\003 \003(\0132\035.CMsgGuildSumm"
  "ary.EventPoints\032\247\001\n\013EventPoints\022\020\n\010event"
  "_id\030\001 \001(\r\022\024\n\014guild_points\030\002 \001(\r\022\022\n\nguild"
  "_rank\030\003 \001(\r\022\031\n\021guild_weekly_rank\030\004 \001(\r\022\037"
  "\n\027guild_weekly_percentile\030\005 \001(\r\022 \n\030guild"
  "_current_percentile\030\006 \001(\r\"[\n\rCMsgGuildRo"
  "le\022\017\n\007role_id\030\001 \001(\r\022\021\n\trole_name\030\002 \001(\t\022\022"
  "\n\nrole_flags\030\003 \001(\r\022\022\n\nrole_order\030\004 \001(\r\"\213"
  "\001\n\017CMsgGuildMember\022\031\n\021member_account_id\030"
  "\001 \001(\r\022\026\n\016member_role_id\030\002 \001(\r\022\037\n\027member_"
  "joined_timestamp\030\003 \001(\r\022$\n\034member_last_ac"
  "tive_timestamp\030\004 \001(\r\"b\n\017CMsgGuildInvite\022"
  "\034\n\024requester_account_id\030\001 \001(\r\022\031\n\021target_"
  "account_id\030\002 \001(\r\022\026\n\016timestamp_sent\030\003 \001(\r"
  "\"\274\001\n\rCMsgGuildData\022\020\n\010guild_id\030\001 \001(\r\022\"\n\n"
  "guild_info\030\002 \001(\0132\016.CMsgGuildInfo\022#\n\013guil"
  "d_roles\030\003 \003(\0132\016.CMsgGuildRole\022\'\n\rguild_m"
  "embers\030\004 \003(\0132\020.CMsgGuildMember\022\'\n\rguild_"
  "invites\030\005 \003(\0132\020.CMsgGuildInvite\"`\n\026CMsgA"
  "ccountGuildInvite\022\020\n\010guild_id\030\001 \001(\r\022\034\n\024r"
  "equester_account_id\030\002 \001(\r\022\026\n\016timestamp_s"
  "ent\030\003 \001(\r\"`\n\033CMsgAccountGuildMemberships"
  "\022\021\n\tguild_ids\030\001 \003(\r\022.\n\rguild_invites\030\002 \003"
  "(\0132\027.CMsgAccountGuildInvite\"P\n\024CMsgGuild"
  "PersonaInfo\022\020\n\010guild_id\030\001 \001(\r\022\021\n\tguild_t"
  "ag\030\002 \001(\t\022\023\n\013guild_flags\030\003 \001(\r\"R\n\034CMsgAcc"
  "ountGuildsPersonaInfo\0222\n\023guild_persona_i"
  "nfos\030\001 \003(\0132\025.CMsgGuildPersonaInfo\"\224\001\n\022CM"
  "sgGuildFeedEvent\022\025\n\rfeed_event_id\030\001 \001(\004\022"
  "\021\n\ttimestamp\030\002 \001(\r\022\022\n\nevent_type\030\003 \001(\r\022\024"
  "\n\014param_uint_1\030\004 \001(\r\022\024\n\014param_uint_2\030\005 \001"
  "(\r\022\024\n\014param_uint_3\030\006 \001(\r\"\207\001\n\031CMsgClientT"
  "oGCCreateGuild\022\"\n\nguild_info\030\001 \001(\0132\016.CMs"
  "gGuildInfo\022F\n\017guild_chat_type\030\002 \001(\0162\017.EG"
  "uildChatType:\034k_EGuildChatType_Unspecifi"
  "ed\"\324\003\n!CMsgClientToGCCreateGuildResponse"
  "\022N\n\006result\030\001 \001(\0162,.CMsgClientToGCCreateG"
  "uildResponse.EResponse:\020k_eInternalError"
  "\022\020\n\010guild_id\030\002 \001(\r\"\314\002\n\tEResponse\022\024\n\020k_eI"
  "nternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eToo"
  "Busy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022"
  "\022\n\016k_eInvalidName\020\005\022\026\n\022k_eNameAlreadyUse"
  "d\020\006\022\021\n\rk_eInvalidTag\020\007\022\025\n\021k_eTagAlreadyU"
  "sed\020\010\022\031\n\025k_eInvalidDescription\020\t\022\024\n\020k_eI"
  "nvalidRegion\020\n\022\022\n\016k_eInvalidLogo\020\013\022\026\n\022k_"
  "eDoesNotOwnEvent\020\014\022\021\n\rk_eGuildLimit\020\r\022\022\n"
  "\016k_eInvalidMotD\020\016\022\016\n\nk_eBlocked\020\017\"\232\001\n\032CM"
  "sgClientToGCSetGuildInfo\022\020\n\010guild_id\030\001 \001"
  "(\r\022\"\n\nguild_info\030\002 \001(\0132\016.CMsgGuildInfo\022F"
  "\n\017guild_chat_type\030\003 \001(\0162\017.EGuildChatType"
  ":\034k_EGuildChatType_Unspecified\"\273\003\n\"CMsgC"
  "lientToGCSetGuildInfoResponse\022O\n\006result\030"
  "\001 \001(\0162-.CMsgClientToGCSetGuildInfoRespon"
  "se.EResponse:\020k_eInternalError\"\303\002\n\tEResp"
  "onse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess"
  "\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk"
  "_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eN"
  "otMember\020\006\022\023\n\017k_eNoPermission\020\007\022\022\n\016k_eMo"
  "tDTooLong\020\010\022\036\n\032k_eNameChangeNoPermission"
  "s\020\t\022\035\n\031k_eTagChangeNoPermissions\020\n\022\022\n\016k_"
  "eNameInvalid\020\013\022\021\n\rk_eTagInvalid\020\014\022\031\n\025k_e"
  "DescriptionInvalid\020\r\022\016\n\nk_eBlocked\020\016\"2\n\036"
  "CMsgClientToGCRequestGuildData\022\020\n\010guild_"
  "id\030\001 \001(\r\"\255\002\n&CMsgClientToGCRequestGuildD"
  "ataResponse\022S\n\006result\030\001 \001(\01621.CMsgClient"
  "ToGCRequestGuildDataResponse.EResponse:\020"
  "k_eInternalError\022\"\n\nguild_data\030\002 \001(\0132\016.C"
  "MsgGuildData\"\211\001\n\tEResponse\022\024\n\020k_eInterna"
  "lError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002"
  "\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_e"
  "InvalidGuild\020\005\022\020\n\014k_eNotMember\020\006\"Z\n\036CMsg"
  "GCToClientGuildDataUpdated\022\"\n\nguild_data"
  "\030\001 \001(\0132\016.CMsgGuildData\022\024\n\014update_flags\030\002"
  " \001(\r\"a\n%CMsgGCToClientGuildMembersDataUp"
  "dated\022\020\n\010guild_id\030\001 \001(\r\022&\n\014members_data\030"
  "\002 \003(\0132\020.CMsgGuildMember\"&\n$CMsgClientToG"
  "CRequestGuildMembership\"\246\002\n,CMsgClientTo"
  "GCRequestGuildMembershipResponse\022Y\n\006resu"
  "lt\030\001 \001(\01627.CMsgClientToGCRequestGuildMem"
  "bershipResponse.EResponse:\020k_eInternalEr"
  "ror\0227\n\021guild_memberships\030\002 \001(\0132\034.CMsgAcc"
  "ountGuildMemberships\"b\n\tEResponse\022\024\n\020k_e"
  "InternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTo"
  "oBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004"
  "\"_\n$CMsgGCToClientGuildMembershipUpdated"
  "\0227\n\021guild_memberships\030\001 \001(\0132\034.CMsgAccoun"
  "tGuildMemberships\"+\n\027CMsgClientToGCJoinG"
  "uild\022\020\n\010guild_id\030\001 \001(\r\"\330\002\n\037CMsgClientToG"
  "CJoinGuildResponse\022L\n\006result\030\001 \001(\0162*.CMs"
  "gClientToGCJoinGuildResponse.EResponse:\020"
  "k_eInternalError\"\346\001\n\tEResponse\022\024\n\020k_eInt"
  "ernalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBu"
  "sy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n"
  "\017k_eInvalidGuild\020\005\022\020\n\014k_eGuildFull\020\006\022\024\n\020"
  "k_eAlreadyMember\020\007\022\021\n\rk_eGuildLimit\020\010\022\032\n"
  "\026k_eGuildRequiresInvite\020\t\022\026\n\022k_eGuildRan"
  "kTooLow\020\n\",\n\030CMsgClientToGCLeaveGuild\022\020\n"
  "\010guild_id\030\001 \001(\r\"\217\002\n CMsgClientToGCLeaveG"
  "uildResponse\022M\n\006result\030\001 \001(\0162+.CMsgClien"
  "tToGCLeaveGuildResponse.EResponse:\020k_eIn"
  "ternalError\"\233\001\n\tEResponse\022\024\n\020k_eInternal"
  "Error\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022"
  "\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eI"
  "nvalidGuild\020\005\022\020\n\014k_eNotMember\020\006\022\020\n\014k_eLa"
  "stAdmin\020\007\"L\n\035CMsgClientToGCKickGuildMemb"
  "er\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021target_account_i"
  "d\030\002 \001(\r\"\322\002\n%CMsgClientToGCKickGuildMembe"
  "rResponse\022R\n\006result\030\001 \001(\01620.CMsgClientTo"
  "GCKickGuildMemberResponse.EResponse:\020k_e"
  "InternalError\"\324\001\n\tEResponse\022\024\n\020k_eIntern"
  "alError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020"
  "\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_"
  "eInvalidGuild\020\005\022\031\n\025k_eRequesterNotMember"
  "\020\006\022\026\n\022k_eTargetNotMember\020\007\022\023\n\017k_eNoPermi"
  "ssion\020\010\022\023\n\017k_eCantKickSelf\020\t\"g\n CMsgClie"
  "ntToGCSetGuildMemberRole\022\020\n\010guild_id\030\001 \001"
  "(\r\022\031\n\021target_account_id\030\002 \001(\r\022\026\n\016target_"
  "role_id\030\003 \001(\r\"\356\002\n(CMsgClientToGCSetGuild"
  "MemberRoleResponse\022U\n\006result\030\001 \001(\01623.CMs"
  "gClientToGCSetGuildMemberRoleResponse.ER"
  "esponse:\020k_eInternalError\"\352\001\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTim"
  "eout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\031\n\025k_eReques"
  "terNotMember\020\006\022\026\n\022k_eTargetNotMember\020\007\022\023"
  "\n\017k_eNoPermission\020\010\022\022\n\016k_eInvalidRole\020\t\022"
  "\025\n\021k_eAdminViolation\020\n\"J\n\033CMsgClientToGC"
  "InviteToGuild\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021targe"
  "t_account_id\030\002 \001(\r\"\223\003\n#CMsgClientToGCInv"
  "iteToGuildResponse\022P\n\006result\030\001 \001(\0162..CMs"
  "gClientToGCInviteToGuildResponse.ERespon"
  "se:\020k_eInternalError\"\231\002\n\tEResponse\022\024\n\020k_"
  "eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eT"
  "ooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020"
  "\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eGuildFull\020\006"
  "\022\031\n\025k_eRequesterNotMember\020\007\022\025\n\021k_eAlread"
  "yAMember\020\010\022\025\n\021k_eAlreadyInvited\020\t\022\032\n\026k_e"
  "NoInvitePermissions\020\n\022\025\n\021k_eTooManyInvit"
  "es\020\013\022\022\n\016k_eInvalidUser\020\014\"6\n\"CMsgClientTo"
  "GCDeclineInviteToGuild\022\020\n\010guild_id\030\001 \001(\r"
  "\"\225\002\n*CMsgClientToGCDeclineInviteToGuildR"
  "esponse\022W\n\006result\030\001 \001(\01625.CMsgClientToGC"
  "DeclineInviteToGuildResponse.EResponse:\020"
  "k_eInternalError\"\215\001\n\tEResponse\022\024\n\020k_eInt"
  "ernalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBu"
  "sy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n"
  "\017k_eInvalidGuild\020\005\022\024\n\020k_eNoInviteFound\020\006"
  "\"5\n!CMsgClientToGCAcceptInviteToGuild\022\020\n"
  "\010guild_id\030\001 \001(\r\"\346\002\n)CMsgClientToGCAccept"
  "InviteToGuildResponse\022V\n\006result\030\001 \001(\01624."
  "CMsgClientToGCAcceptInviteToGuildRespons"
  "e.EResponse:\020k_eInternalError\"\340\001\n\tERespo"
  "nse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020"
  "\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_"
  "eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\024\n\020k_eNo"
  "InviteFound\020\006\022\020\n\014k_eGuildFull\020\007\022\021\n\rk_eGu"
  "ildLimit\020\010\022\025\n\021k_eInvalidInviter\020\t\022\025\n\021k_e"
  "AlreadyInGuild\020\n\"P\n!CMsgClientToGCCancel"
  "InviteToGuild\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021targe"
  "t_account_id\030\002 \001(\r\"\251\002\n)CMsgClientToGCCan"
  "celInviteToGuildResponse\022V\n\006result\030\001 \001(\016"
  "24.CMsgClientToGCCancelInviteToGuildResp"
  "onse.EResponse:\020k_eInternalError\"\243\001\n\tERe"
  "sponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucce"
  "ss\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n"
  "\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\024\n\020k_"
  "eNoInviteFound\020\006\022\024\n\020k_eNoPermissions\020\007\"U"
  "\n\032CMsgClientToGCAddGuildRole\022\020\n\010guild_id"
  "\030\001 \001(\r\022\021\n\trole_name\030\002 \001(\t\022\022\n\nrole_flags\030"
  "\003 \001(\r\"\223\003\n\"CMsgClientToGCAddGuildRoleResp"
  "onse\022O\n\006result\030\001 \001(\0162-.CMsgClientToGCAdd"
  "GuildRoleResponse.EResponse:\020k_eInternal"
  "Error\022\017\n\007role_id\030\002 \001(\r\"\212\002\n\tEResponse\022\024\n\020"
  "k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_"
  "eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeou"
  "t\020\004\022\023\n\017k_eInvalidGuild\020\005\022\026\n\022k_eNameAlrea"
  "dyUsed\020\006\022\024\n\020k_eNoPermissions\020\007\022\023\n\017k_eInv"
  "alidFlags\020\010\022\022\n\016k_eInvalidName\020\t\022\025\n\021k_eAd"
  "minViolation\020\n\022\023\n\017k_eTooManyRoles\020\013\022\016\n\nk"
  "_eBlocked\020\014\"i\n\035CMsgClientToGCModifyGuild"
  "Role\022\020\n\010guild_id\030\001 \001(\r\022\017\n\007role_id\030\002 \001(\r\022"
  "\021\n\trole_name\030\003 \001(\t\022\022\n\nrole_flags\030\004 \001(\r\"\207"
  "\003\n%CMsgClientToGCModifyGuildRoleResponse"
  "\022R\n\006result\030\001 \001(\01620.CMsgClientToGCModifyG"
  "uildRoleResponse.EResponse:\020k_eInternalE"
  "rror\"\211\002\n\tEResponse\022\024\n\020k_eInternalError\020\000"
  "\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eD"
  "isabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInvalidG"
  "uild\020\005\022\022\n\016k_eInvalidRole\020\006\022\026\n\022k_eNameAlr"
  "eadyUsed\020\007\022\023\n\017k_eInvalidFlags\020\010\022\022\n\016k_eIn"
  "validName\020\t\022\024\n\020k_eNoPermissions\020\n\022\025\n\021k_e"
  "AdminViolation\020\013\022\016\n\nk_eBlocked\020\014\"B\n\035CMsg"
  "ClientToGCRemoveGuildRole\022\020\n\010guild_id\030\001 "
  "\001(\r\022\017\n\007role_id\030\002 \001(\r\"\351\002\n%CMsgClientToGCR"
  "emoveGuildRoleResponse\022R\n\006result\030\001 \001(\01620"
  ".CMsgClientToGCRemoveGuildRoleResponse.E"
  "Response:\020k_eInternalError\"\353\001\n\tEResponse"
  "\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016"
  "\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTi"
  "meout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\022\n\016k_eInval"
  "idRole\020\006\022\023\n\017k_eRoleNotEmpty\020\007\022\024\n\020k_eNoPe"
  "rmissions\020\010\022\025\n\021k_eAdminViolation\020\t\022\034\n\030k_"
  "eCantRemoveDefaultRole\020\n\"j\n\037CMsgClientTo"
  "GCSetGuildRoleOrder\022\020\n\010guild_id\030\001 \001(\r\022\032\n"
  "\022requested_role_ids\030\002 \003(\r\022\031\n\021previous_ro"
  "le_ids\030\003 \003(\r\"\353\002\n\'CMsgClientToGCSetGuildR"
  "oleOrderResponse\022T\n\006result\030\001 \001(\01622.CMsgC"
  "lientToGCSetGuildRoleOrderResponse.EResp"
  "onse:\020k_eInternalError\022\032\n\022confirmed_role"
  "_ids\030\002 \003(\r\"\315\001\n\tEResponse\022\024\n\020k_eInternalE"
  "rror\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017"
  "\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eIn"
  "validGuild\020\005\022\022\n\016k_eInvalidRole\020\006\022\023\n\017k_eI"
  "nvalidOrder\020\007\022\024\n\020k_eNoPermissions\020\010\022\025\n\021k"
  "_eAdminViolation\020\t\"H\n\036CMsgClientToGCGuil"
  "dFeedRequest\022\020\n\010guild_id\030\001 \001(\r\022\024\n\014last_s"
  "een_id\030\002 \001(\004\"\311\002\n&CMsgClientToGCRequestGu"
  "ildFeedResponse\022S\n\006result\030\001 \001(\01621.CMsgCl"
  "ientToGCRequestGuildFeedResponse.ERespon"
  "se:\020k_eInternalError\022\020\n\010guild_id\030\002 \001(\r\022("
  "\n\013feed_events\030\003 \003(\0132\023.CMsgGuildFeedEvent"
  "\"\215\001\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\n"
  "k_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisab"
  "led\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild"
  "\020\005\022\024\n\020k_eNoPermissions\020\006\"2\n\036CMsgGCToClie"
  "ntGuildFeedUpdated\022\020\n\010guild_id\030\001 \001(\r\"6\n\""
  "CMsgClientToGCAddPlayerToGuildChat\022\020\n\010gu"
  "ild_id\030\001 \001(\r\"\255\002\n*CMsgClientToGCAddPlayer"
  "ToGuildChatResponse\022W\n\006result\030\001 \001(\01625.CM"
  "sgClientToGCAddPlayerToGuildChatResponse"
  ".EResponse:\020k_eInternalError\"\245\001\n\tERespon"
  "se\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001"
  "\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_e"
  "Timeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eNot"
  "Member\020\006\022\032\n\026k_eSteamChatNotEnabled\020\007\"\257\002\n"
  "\032CMsgFindGuildByTagResponse\022G\n\006result\030\001 "
  "\001(\0162%.CMsgFindGuildByTagResponse.ERespon"
  "se:\020k_eInternalError\022\020\n\010guild_id\030\002 \001(\r\022("
  "\n\rguild_summary\030\003 \001(\0132\021.CMsgGuildSummary"
  "\"\213\001\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\n"
  "k_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisab"
  "led\020\003\022\016\n\nk_eTimeout\020\004\022\021\n\rk_eInvalidTag\020\005"
  "\022\024\n\020k_eGuildNotFound\020\006\"\375\002\n\037CMsgSearchFor"
  "OpenGuildsResponse\022L\n\006result\030\001 \001(\0162*.CMs"
  "gSearchForOpenGuildsResponse.EResponse:\020"
  "k_eInternalError\022E\n\016search_results\030\002 \003(\013"
  "2-.CMsgSearchForOpenGuildsResponse.Searc"
  "hResult\022\025\n\ruse_whitelist\030\003 \001(\010\032J\n\014Search"
  "Result\022\020\n\010guild_id\030\001 \001(\r\022(\n\rguild_summar"
  "y\030\002 \001(\0132\021.CMsgGuildSummary\"b\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTim"
  "eout\020\004\"\317\001\n CMsgClientToGCReportGuildCont"
  "ent\022\020\n\010guild_id\030\001 \001(\r\022\033\n\023guild_content_f"
  "lags\030\002 \001(\r\"|\n\rEContentFlags\022\013\n\007k_eNone\020\000"
  "\022\030\n\024k_eInappropriateName\020\001\022\027\n\023k_eInappro"
  "priateTag\020\002\022\030\n\024k_eInappropriateLogo\020\004\022\021\n"
  "\rk_eValidFlags\020\007\"\221\002\n(CMsgClientToGCRepor"
  "tGuildContentResponse\022U\n\006result\030\001 \001(\01623."
  "CMsgClientToGCReportGuildContentResponse"
  ".EResponse:\020k_eInternalError\"\215\001\n\tERespon"
  "se\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001"
  "\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_e"
  "Timeout\020\004\022\024\n\020k_eGuildNotFound\020\005\022\023\n\017k_eFl"
  "agsInvalid\020\006\"B\n,CMsgClientToGCRequestAcc"
  "ountGuildPersonaInfo\022\022\n\naccount_id\030\001 \001(\r"
  "\"\311\002\n4CMsgClientToGCRequestAccountGuildPe"
  "rsonaInfoResponse\022a\n\006result\030\001 \001(\0162\?.CMsg"
  "ClientToGCRequestAccountGuildPersonaInfo"
  "Response.EResponse:\020k_eInternalError\0223\n\014"
  "persona_info\030\002 \001(\0132\035.CMsgAccountGuildsPe"
  "rsonaInfo\"y\n\tEResponse\022\024\n\020k_eInternalErr"
  "or\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013"
  "k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\025\n\021k_eInva"
  "lidAccount\020\005\"H\n1CMsgClientToGCRequestAcc"
  "ountGuildPersonaInfoBatch\022\023\n\013account_ids"
  "\030\001 \003(\r\"\324\002\n9CMsgClientToGCRequestAccountG"
  "uildPersonaInfoBatchResponse\022f\n\006result\030\001"
  " \001(\0162D.CMsgClientToGCRequestAccountGuild"
  "PersonaInfoBatchResponse.EResponse:\020k_eI"
  "nternalError\0224\n\rpersona_infos\030\002 \003(\0132\035.CM"
  "sgAccountGuildsPersonaInfo\"y\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTim"
  "eout\020\004\022\025\n\021k_eInvalidRequest\020\005*\347\010\n\021EGuild"
  "AuditAction\022\037\n\033k_EGuildAuditAction_Inval"
  "id\020\000\022$\n k_EGuildAuditAction_GuildCreated"
  "\020\001\022,\n(k_EGuildAuditAction_GuildLanguageC"
  "hanged\020\002\022)\n%k_EGuildAuditAction_GuildFla"
  "gsChanged\020\003\022)\n%k_EGuildAuditAction_Guild"
  "MemberJoined\020\005\022\'\n#k_EGuildAuditAction_Gu"
  "ildMemberLeft\020\006\022)\n%k_EGuildAuditAction_G"
  "uildMemberKicked\020\007\022.\n*k_EGuildAuditActio"
  "n_GuildMemberRoleChanged\020\010\022(\n$k_EGuildAu"
  "ditAction_GuildLogoChanged\020\t\022*\n&k_EGuild"
  "AuditAction_GuildRegionChanged\020\n\022/\n+k_EG"
  "uildAuditAction_GuildDescriptionChanged\020"
  "\013\0220\n,k_EGuildAuditAction_GuildPrimaryCol"
  "orChanged\020\014\0222\n.k_EGuildAuditAction_Guild"
  "SecondaryColorChanged\020\r\022+\n\'k_EGuildAudit"
  "Action_GuildPatternChanged\020\016\022(\n$k_EGuild"
  "AuditAction_AdminClearedLogo\020\017\0220\n,k_EGui"
  "ldAuditAction_GuildRequiredRankChanged\020\020"
  "\022(\n$k_EGuildAuditAction_GuildMotDChanged"
  "\020\022\022&\n\"k_EGuildAuditAction_AdminResetName"
  "\020\023\022%\n!k_EGuildAuditAction_AdminResetTag\020"
  "\024\022!\n\035k_EGuildAuditAction_AdminLock\020\025\022(\n$"
  "k_EGuildAuditAction_GuildNameChanged\020\026\022\'"
  "\n#k_EGuildAuditAction_GuildTagChanged\020\027\022"
  "&\n\"k_EGuildAuditAction_AdminPermitted\020\030\022"
  "$\n k_EGuildAuditAction_AdminBlocked\020\031\022\'\n"
  "#k_EGuildAuditAction_AdminBannedUser\020\032\022\'"
  "\n#k_EGuildAuditAction_AdminExonerated\020\033*"
  "p\n\016EGuildChatType\022 \n\034k_EGuildChatType_Un"
  "specified\020\000\022#\n\037k_EGuildChatType_SteamCha"
  "tGroup\020\001\022\027\n\023k_EGuildChatType_GC\020\002"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_deps[1] = {
  &::descriptor_table_dota_5fshared_5fenums_2eproto,
};
static ::_pbi::once_flag descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto = {
    false, false, 13233, descriptor_table_protodef_dota_5fgcmessages_5fclient_5fguild_2eproto,
    "dota_gcmessages_client_guild.proto",
    &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once, descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_deps, 1, 61,
    schemas, file_default_instances, TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto::offsets,
    file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto, file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto,
    file_level_service_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter() {
  return &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dota_5fgcmessages_5fclient_5fguild_2eproto(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCreateGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[0];
}
bool CMsgClientToGCCreateGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInternalError;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eSuccess;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eDisabled;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eTimeout;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidName;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eNameAlreadyUsed;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidTag;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eTagAlreadyUsed;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidDescription;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidRegion;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidLogo;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eDoesNotOwnEvent;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eGuildLimit;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidMotD;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eBlocked;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCCreateGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[1];
}
bool CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eInternalError;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eSuccess;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTooBusy;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eDisabled;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTimeout;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eInvalidGuild;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNotMember;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNoPermission;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eMotDTooLong;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNameChangeNoPermissions;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTagChangeNoPermissions;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNameInvalid;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTagInvalid;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eDescriptionInvalid;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eBlocked;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::EResponse_MIN;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::EResponse_MAX;
constexpr int CMsgClientToGCSetGuildInfoResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[2];
}
bool CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eNotMember;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildDataResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[3];
}
bool CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildMembershipResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCJoinGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[4];
}
bool CMsgClientToGCJoinGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eInternalError;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eSuccess;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eDisabled;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eTimeout;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildFull;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eAlreadyMember;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildLimit;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildRequiresInvite;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildRankTooLow;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCJoinGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCLeaveGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[5];
}
bool CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eInternalError;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eSuccess;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eDisabled;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eTimeout;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eNotMember;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eLastAdmin;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCLeaveGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[6];
}
bool CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eInternalError;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eSuccess;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eTooBusy;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eDisabled;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eTimeout;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eInvalidGuild;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eRequesterNotMember;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eTargetNotMember;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eNoPermission;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eCantKickSelf;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::EResponse_MIN;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::EResponse_MAX;
constexpr int CMsgClientToGCKickGuildMemberResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[7];
}
bool CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eInternalError;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eSuccess;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eDisabled;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eTimeout;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eRequesterNotMember;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eTargetNotMember;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eNoPermission;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eInvalidRole;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCSetGuildMemberRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[8];
}
bool CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eGuildFull;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eRequesterNotMember;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eAlreadyAMember;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eAlreadyInvited;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eNoInvitePermissions;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eTooManyInvites;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eInvalidUser;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[9];
}
bool CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eNoInviteFound;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCDeclineInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[10];
}
bool CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eNoInviteFound;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eGuildFull;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eGuildLimit;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eInvalidInviter;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eAlreadyInGuild;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCAcceptInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[11];
}
bool CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eNoInviteFound;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eNoPermissions;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCCancelInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[12];
}
bool CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInternalError;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eSuccess;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eDisabled;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eTimeout;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eNameAlreadyUsed;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eNoPermissions;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInvalidFlags;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInvalidName;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eTooManyRoles;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eBlocked;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCAddGuildRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[13];
}
bool CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInternalError;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eSuccess;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eDisabled;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eTimeout;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidRole;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eNameAlreadyUsed;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidFlags;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidName;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eNoPermissions;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eBlocked;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCModifyGuildRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[14];
}
bool CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eInternalError;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eSuccess;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eDisabled;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eTimeout;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eInvalidRole;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eRoleNotEmpty;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eNoPermissions;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eCantRemoveDefaultRole;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCRemoveGuildRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[15];
}
bool CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInternalError;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eSuccess;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eTooBusy;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eDisabled;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eTimeout;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInvalidGuild;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInvalidRole;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInvalidOrder;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eNoPermissions;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eAdminViolation;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::EResponse_MIN;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::EResponse_MAX;
constexpr int CMsgClientToGCSetGuildRoleOrderResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[16];
}
bool CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eNoPermissions;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildFeedResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[17];
}
bool CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eInternalError;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eSuccess;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eTooBusy;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eDisabled;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eTimeout;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eInvalidGuild;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eNotMember;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eSteamChatNotEnabled;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::EResponse_MIN;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::EResponse_MAX;
constexpr int CMsgClientToGCAddPlayerToGuildChatResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgFindGuildByTagResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[18];
}
bool CMsgFindGuildByTagResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eInternalError;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eSuccess;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eTooBusy;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eDisabled;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eTimeout;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eInvalidTag;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eGuildNotFound;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::EResponse_MIN;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::EResponse_MAX;
constexpr int CMsgFindGuildByTagResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgSearchForOpenGuildsResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[19];
}
bool CMsgSearchForOpenGuildsResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eInternalError;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eSuccess;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eTooBusy;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eDisabled;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eTimeout;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::EResponse_MIN;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::EResponse_MAX;
constexpr int CMsgSearchForOpenGuildsResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportGuildContent_EContentFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[20];
}
bool CMsgClientToGCReportGuildContent_EContentFlags_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eNone;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eInappropriateName;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eInappropriateTag;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eInappropriateLogo;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eValidFlags;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::EContentFlags_MIN;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::EContentFlags_MAX;
constexpr int CMsgClientToGCReportGuildContent::EContentFlags_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportGuildContentResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[21];
}
bool CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eInternalError;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eSuccess;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eTooBusy;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eDisabled;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eTimeout;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eGuildNotFound;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eFlagsInvalid;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::EResponse_MIN;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::EResponse_MAX;
constexpr int CMsgClientToGCReportGuildContentResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[22];
}
bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eSuccess;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eDisabled;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eTimeout;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eInvalidAccount;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestAccountGuildPersonaInfoResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[23];
}
bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eSuccess;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eDisabled;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eTimeout;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eInvalidRequest;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildAuditAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[24];
}
bool EGuildAuditAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildChatType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[25];
}
bool EGuildChatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CMsgGuildInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildInfo>()._impl_._has_bits_);
  static void set_has_guild_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_created_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_guild_language(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_guild_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_guild_logo(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_guild_region(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_guild_chat_group_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_guild_description(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_chat_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_guild_primary_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_guild_secondary_color(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_guild_pattern(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_guild_refresh_time_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_guild_required_rank_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_guild_motd_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_guild_motd(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGuildInfo::CMsgGuildInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildInfo)
}
CMsgGuildInfo::CMsgGuildInfo(const CMsgGuildInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_name_){}
    , decltype(_impl_.guild_tag_){}
    , decltype(_impl_.guild_description_){}
    , decltype(_impl_.guild_motd_){}
    , decltype(_impl_.created_timestamp_){}
    , decltype(_impl_.guild_language_){}
    , decltype(_impl_.guild_flags_){}
    , decltype(_impl_.guild_region_){}
    , decltype(_impl_.guild_logo_){}
    , decltype(_impl_.guild_chat_group_id_){}
    , decltype(_impl_.default_chat_channel_id_){}
    , decltype(_impl_.guild_primary_color_){}
    , decltype(_impl_.guild_secondary_color_){}
    , decltype(_impl_.guild_pattern_){}
    , decltype(_impl_.guild_refresh_time_offset_){}
    , decltype(_impl_.guild_required_rank_tier_){}
    , decltype(_impl_.guild_motd_timestamp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.guild_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_guild_name()) {
    _this->_impl_.guild_name_.Set(from._internal_guild_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.guild_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_guild_tag()) {
    _this->_impl_.guild_tag_.Set(from._internal_guild_tag(), 
      _this->GetArenaForAllocation());
  }
  _impl_.guild_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_guild_description()) {
    _this->_impl_.guild_description_.Set(from._internal_guild_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.guild_motd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_motd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_guild_motd()) {
    _this->_impl_.guild_motd_.Set(from._internal_guild_motd(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.created_timestamp_, &from._impl_.created_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_motd_timestamp_) -
    reinterpret_cast<char*>(&_impl_.created_timestamp_)) + sizeof(_impl_.guild_motd_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildInfo)
}

inline void CMsgGuildInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_name_){}
    , decltype(_impl_.guild_tag_){}
    , decltype(_impl_.guild_description_){}
    , decltype(_impl_.guild_motd_){}
    , decltype(_impl_.created_timestamp_){0u}
    , decltype(_impl_.guild_language_){0u}
    , decltype(_impl_.guild_flags_){0u}
    , decltype(_impl_.guild_region_){0u}
    , decltype(_impl_.guild_logo_){uint64_t{0u}}
    , decltype(_impl_.guild_chat_group_id_){uint64_t{0u}}
    , decltype(_impl_.default_chat_channel_id_){uint64_t{0u}}
    , decltype(_impl_.guild_primary_color_){0u}
    , decltype(_impl_.guild_secondary_color_){0u}
    , decltype(_impl_.guild_pattern_){0u}
    , decltype(_impl_.guild_refresh_time_offset_){0u}
    , decltype(_impl_.guild_required_rank_tier_){0u}
    , decltype(_impl_.guild_motd_timestamp_){0u}
  };
  _impl_.guild_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.guild_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.guild_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.guild_motd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_motd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGuildInfo::~CMsgGuildInfo() {
  // @@protoc_insertion_point(destructor:CMsgGuildInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.guild_name_.Destroy();
  _impl_.guild_tag_.Destroy();
  _impl_.guild_description_.Destroy();
  _impl_.guild_motd_.Destroy();
}

void CMsgGuildInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.guild_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.guild_tag_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.guild_description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.guild_motd_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.created_timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_region_) -
        reinterpret_cast<char*>(&_impl_.created_timestamp_)) + sizeof(_impl_.guild_region_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.guild_logo_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_required_rank_tier_) -
        reinterpret_cast<char*>(&_impl_.guild_logo_)) + sizeof(_impl_.guild_required_rank_tier_));
  }
  _impl_.guild_motd_timestamp_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string guild_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_guild_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGuildInfo.guild_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string guild_tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_guild_tag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGuildInfo.guild_tag");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 created_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_created_timestamp(&has_bits);
          _impl_.created_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_language = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_guild_language(&has_bits);
          _impl_.guild_language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_guild_flags(&has_bits);
          _impl_.guild_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 guild_logo = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_guild_logo(&has_bits);
          _impl_.guild_logo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_region = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_guild_region(&has_bits);
          _impl_.guild_region_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 guild_chat_group_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_guild_chat_group_id(&has_bits);
          _impl_.guild_chat_group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string guild_description = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_guild_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGuildInfo.guild_description");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint64 default_chat_channel_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_default_chat_channel_id(&has_bits);
          _impl_.default_chat_channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_primary_color = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_guild_primary_color(&has_bits);
          _impl_.guild_primary_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_secondary_color = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_guild_secondary_color(&has_bits);
          _impl_.guild_secondary_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_pattern = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_guild_pattern(&has_bits);
          _impl_.guild_pattern_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_refresh_time_offset = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_guild_refresh_time_offset(&has_bits);
          _impl_.guild_refresh_time_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_required_rank_tier = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_guild_required_rank_tier(&has_bits);
          _impl_.guild_required_rank_tier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_motd_timestamp = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _Internal::set_has_guild_motd_timestamp(&has_bits);
          _impl_.guild_motd_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string guild_motd = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          auto str = _internal_mutable_guild_motd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGuildInfo.guild_motd");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string guild_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_name().data(), static_cast<int>(this->_internal_guild_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_guild_name(), target);
  }

  // optional string guild_tag = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_tag().data(), static_cast<int>(this->_internal_guild_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_tag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_guild_tag(), target);
  }

  // optional uint32 created_timestamp = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_created_timestamp(), target);
  }

  // optional uint32 guild_language = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_guild_language(), target);
  }

  // optional uint32 guild_flags = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_guild_flags(), target);
  }

  // optional uint64 guild_logo = 7;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_guild_logo(), target);
  }

  // optional uint32 guild_region = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_guild_region(), target);
  }

  // optional uint64 guild_chat_group_id = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(9, this->_internal_guild_chat_group_id(), target);
  }

  // optional string guild_description = 10;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_description().data(), static_cast<int>(this->_internal_guild_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_description");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_guild_description(), target);
  }

  // optional uint64 default_chat_channel_id = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(11, this->_internal_default_chat_channel_id(), target);
  }

  // optional uint32 guild_primary_color = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(12, this->_internal_guild_primary_color(), target);
  }

  // optional uint32 guild_secondary_color = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(13, this->_internal_guild_secondary_color(), target);
  }

  // optional uint32 guild_pattern = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(14, this->_internal_guild_pattern(), target);
  }

  // optional uint32 guild_refresh_time_offset = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(15, this->_internal_guild_refresh_time_offset(), target);
  }

  // optional uint32 guild_required_rank_tier = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(16, this->_internal_guild_required_rank_tier(), target);
  }

  // optional uint32 guild_motd_timestamp = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(17, this->_internal_guild_motd_timestamp(), target);
  }

  // optional string guild_motd = 18;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_motd().data(), static_cast<int>(this->_internal_guild_motd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_motd");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_guild_motd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildInfo)
  return target;
}

size_t CMsgGuildInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string guild_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_name());
    }

    // optional string guild_tag = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_tag());
    }

    // optional string guild_description = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_description());
    }

    // optional string guild_motd = 18;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_motd());
    }

    // optional uint32 created_timestamp = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_created_timestamp());
    }

    // optional uint32 guild_language = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_language());
    }

    // optional uint32 guild_flags = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_flags());
    }

    // optional uint32 guild_region = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_region());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint64 guild_logo = 7;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guild_logo());
    }

    // optional uint64 guild_chat_group_id = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guild_chat_group_id());
    }

    // optional uint64 default_chat_channel_id = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_default_chat_channel_id());
    }

    // optional uint32 guild_primary_color = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_primary_color());
    }

    // optional uint32 guild_secondary_color = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_secondary_color());
    }

    // optional uint32 guild_pattern = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_pattern());
    }

    // optional uint32 guild_refresh_time_offset = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_refresh_time_offset());
    }

    // optional uint32 guild_required_rank_tier = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt32Size(
          this->_internal_guild_required_rank_tier());
    }

  }
  // optional uint32 guild_motd_timestamp = 17;
  if (cached_has_bits & 0x00010000u) {
    total_size += 2 +
      ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_guild_motd_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildInfo::GetClassData() const { return &_class_data_; }


void CMsgGuildInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGuildInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_guild_name(from._internal_guild_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_guild_tag(from._internal_guild_tag());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_guild_description(from._internal_guild_description());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_guild_motd(from._internal_guild_motd());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.created_timestamp_ = from._impl_.created_timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.guild_language_ = from._impl_.guild_language_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.guild_flags_ = from._impl_.guild_flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.guild_region_ = from._impl_.guild_region_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.guild_logo_ = from._impl_.guild_logo_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.guild_chat_group_id_ = from._impl_.guild_chat_group_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.default_chat_channel_id_ = from._impl_.default_chat_channel_id_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.guild_primary_color_ = from._impl_.guild_primary_color_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.guild_secondary_color_ = from._impl_.guild_secondary_color_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.guild_pattern_ = from._impl_.guild_pattern_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.guild_refresh_time_offset_ = from._impl_.guild_refresh_time_offset_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.guild_required_rank_tier_ = from._impl_.guild_required_rank_tier_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    _this->_internal_set_guild_motd_timestamp(from._internal_guild_motd_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildInfo::CopyFrom(const CMsgGuildInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildInfo::IsInitialized() const {
  return true;
}

void CMsgGuildInfo::InternalSwap(CMsgGuildInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.guild_name_, lhs_arena,
      &other->_impl_.guild_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.guild_tag_, lhs_arena,
      &other->_impl_.guild_tag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.guild_description_, lhs_arena,
      &other->_impl_.guild_description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.guild_motd_, lhs_arena,
      &other->_impl_.guild_motd_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildInfo, _impl_.guild_motd_timestamp_)
      + sizeof(CMsgGuildInfo::_impl_.guild_motd_timestamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildInfo, _impl_.created_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.created_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.created_timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[0]);
}

// ===================================================================

class CMsgGuildSummary_EventPoints::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildSummary_EventPoints>()._impl_._has_bits_);
  static void set_has_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_points(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_guild_rank(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_guild_weekly_rank(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_guild_weekly_percentile(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_guild_current_percentile(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGuildSummary_EventPoints::CMsgGuildSummary_EventPoints(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildSummary.EventPoints)
}
CMsgGuildSummary_EventPoints::CMsgGuildSummary_EventPoints(const CMsgGuildSummary_EventPoints& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildSummary_EventPoints* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.event_id_){}
    , decltype(_impl_.guild_points_){}
    , decltype(_impl_.guild_rank_){}
    , decltype(_impl_.guild_weekly_rank_){}
    , decltype(_impl_.guild_weekly_percentile_){}
    , decltype(_impl_.guild_current_percentile_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.event_id_, &from._impl_.event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_current_percentile_) -
    reinterpret_cast<char*>(&_impl_.event_id_)) + sizeof(_impl_.guild_current_percentile_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildSummary.EventPoints)
}

inline void CMsgGuildSummary_EventPoints::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.event_id_){0u}
    , decltype(_impl_.guild_points_){0u}
    , decltype(_impl_.guild_rank_){0u}
    , decltype(_impl_.guild_weekly_rank_){0u}
    , decltype(_impl_.guild_weekly_percentile_){0u}
    , decltype(_impl_.guild_current_percentile_){0u}
  };
}

CMsgGuildSummary_EventPoints::~CMsgGuildSummary_EventPoints() {
  // @@protoc_insertion_point(destructor:CMsgGuildSummary.EventPoints)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildSummary_EventPoints::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGuildSummary_EventPoints::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildSummary_EventPoints::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildSummary.EventPoints)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_current_percentile_) -
        reinterpret_cast<char*>(&_impl_.event_id_)) + sizeof(_impl_.guild_current_percentile_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildSummary_EventPoints::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 event_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_event_id(&has_bits);
          _impl_.event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_points = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_guild_points(&has_bits);
          _impl_.guild_points_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_rank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_guild_rank(&has_bits);
          _impl_.guild_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_weekly_rank = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_guild_weekly_rank(&has_bits);
          _impl_.guild_weekly_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_weekly_percentile = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_guild_weekly_percentile(&has_bits);
          _impl_.guild_weekly_percentile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_current_percentile = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_guild_current_percentile(&has_bits);
          _impl_.guild_current_percentile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildSummary_EventPoints::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildSummary.EventPoints)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_event_id(), target);
  }

  // optional uint32 guild_points = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_points(), target);
  }

  // optional uint32 guild_rank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_guild_rank(), target);
  }

  // optional uint32 guild_weekly_rank = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_guild_weekly_rank(), target);
  }

  // optional uint32 guild_weekly_percentile = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_guild_weekly_percentile(), target);
  }

  // optional uint32 guild_current_percentile = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_guild_current_percentile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildSummary.EventPoints)
  return target;
}

size_t CMsgGuildSummary_EventPoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildSummary.EventPoints)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint32 event_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_event_id());
    }

    // optional uint32 guild_points = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_points());
    }

    // optional uint32 guild_rank = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_rank());
    }

    // optional uint32 guild_weekly_rank = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_weekly_rank());
    }

    // optional uint32 guild_weekly_percentile = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_weekly_percentile());
    }

    // optional uint32 guild_current_percentile = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_current_percentile());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildSummary_EventPoints::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildSummary_EventPoints::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildSummary_EventPoints::GetClassData() const { return &_class_data_; }


void CMsgGuildSummary_EventPoints::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildSummary_EventPoints*>(&to_msg);
  auto& from = static_cast<const CMsgGuildSummary_EventPoints&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildSummary.EventPoints)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.event_id_ = from._impl_.event_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_points_ = from._impl_.guild_points_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.guild_rank_ = from._impl_.guild_rank_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.guild_weekly_rank_ = from._impl_.guild_weekly_rank_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.guild_weekly_percentile_ = from._impl_.guild_weekly_percentile_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.guild_current_percentile_ = from._impl_.guild_current_percentile_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildSummary_EventPoints::CopyFrom(const CMsgGuildSummary_EventPoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildSummary.EventPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildSummary_EventPoints::IsInitialized() const {
  return true;
}

void CMsgGuildSummary_EventPoints::InternalSwap(CMsgGuildSummary_EventPoints* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildSummary_EventPoints, _impl_.guild_current_percentile_)
      + sizeof(CMsgGuildSummary_EventPoints::_impl_.guild_current_percentile_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildSummary_EventPoints, _impl_.event_id_)>(
          reinterpret_cast<char*>(&_impl_.event_id_),
          reinterpret_cast<char*>(&other->_impl_.event_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildSummary_EventPoints::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[1]);
}

// ===================================================================

class CMsgGuildSummary::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildSummary>()._impl_._has_bits_);
  static const ::CMsgGuildInfo& guild_info(const CMsgGuildSummary* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_member_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgGuildInfo&
CMsgGuildSummary::_Internal::guild_info(const CMsgGuildSummary* msg) {
  return *msg->_impl_.guild_info_;
}
CMsgGuildSummary::CMsgGuildSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildSummary)
}
CMsgGuildSummary::CMsgGuildSummary(const CMsgGuildSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildSummary* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.event_points_){from._impl_.event_points_}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.member_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    _this->_impl_.guild_info_ = new ::CMsgGuildInfo(*from._impl_.guild_info_);
  }
  _this->_impl_.member_count_ = from._impl_.member_count_;
  // @@protoc_insertion_point(copy_constructor:CMsgGuildSummary)
}

inline void CMsgGuildSummary::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.event_points_){arena}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.member_count_){0u}
  };
}

CMsgGuildSummary::~CMsgGuildSummary() {
  // @@protoc_insertion_point(destructor:CMsgGuildSummary)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.event_points_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.guild_info_;
}

void CMsgGuildSummary::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildSummary)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_points_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_info_ != nullptr);
    _impl_.guild_info_->Clear();
  }
  _impl_.member_count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildSummary::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgGuildInfo guild_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 member_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_member_count(&has_bits);
          _impl_.member_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGuildSummary.EventPoints event_points = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildSummary::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildSummary)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgGuildInfo guild_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::guild_info(this),
        _Internal::guild_info(this).GetCachedSize(), target, stream);
  }

  // optional uint32 member_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_count(), target);
  }

  // repeated .CMsgGuildSummary.EventPoints event_points = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_points(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildSummary)
  return target;
}

size_t CMsgGuildSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildSummary)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildSummary.EventPoints event_points = 3;
  total_size += 1UL * this->_internal_event_points_size();
  for (const auto& msg : this->_impl_.event_points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildInfo guild_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_info_);
    }

    // optional uint32 member_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_member_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildSummary::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildSummary::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildSummary::GetClassData() const { return &_class_data_; }


void CMsgGuildSummary::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildSummary*>(&to_msg);
  auto& from = static_cast<const CMsgGuildSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildSummary)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.event_points_.MergeFrom(from._impl_.event_points_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(
          from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.member_count_ = from._impl_.member_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildSummary::CopyFrom(const CMsgGuildSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildSummary::IsInitialized() const {
  return true;
}

void CMsgGuildSummary::InternalSwap(CMsgGuildSummary* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.event_points_.InternalSwap(&other->_impl_.event_points_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildSummary, _impl_.member_count_)
      + sizeof(CMsgGuildSummary::_impl_.member_count_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildSummary, _impl_.guild_info_)>(
          reinterpret_cast<char*>(&_impl_.guild_info_),
          reinterpret_cast<char*>(&other->_impl_.guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildSummary::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[2]);
}

// ===================================================================

class CMsgGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildRole>()._impl_._has_bits_);
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_role_order(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGuildRole::CMsgGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildRole)
}
CMsgGuildRole::CMsgGuildRole(const CMsgGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildRole* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.role_name_){}
    , decltype(_impl_.role_id_){}
    , decltype(_impl_.role_flags_){}
    , decltype(_impl_.role_order_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_role_name()) {
    _this->_impl_.role_name_.Set(from._internal_role_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.role_id_, &from._impl_.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.role_order_) -
    reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.role_order_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildRole)
}

inline void CMsgGuildRole::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.role_name_){}
    , decltype(_impl_.role_id_){0u}
    , decltype(_impl_.role_flags_){0u}
    , decltype(_impl_.role_order_){0u}
  };
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGuildRole::~CMsgGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgGuildRole)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_name_.Destroy();
}

void CMsgGuildRole::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildRole)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.role_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.role_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.role_order_) -
        reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.role_order_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildRole::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_role_id(&has_bits);
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string role_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_role_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGuildRole.role_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_role_flags(&has_bits);
          _impl_.role_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_order = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_role_order(&has_bits);
          _impl_.role_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildRole::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildRole)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 role_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_role_id(), target);
  }

  // optional string role_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildRole.role_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_role_name(), target);
  }

  // optional uint32 role_flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_role_flags(), target);
  }

  // optional uint32 role_order = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_role_order(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildRole)
  return target;
}

size_t CMsgGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildRole)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string role_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role_name());
    }

    // optional uint32 role_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_id());
    }

    // optional uint32 role_flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_flags());
    }

    // optional uint32 role_order = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_order());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildRole::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildRole::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildRole::GetClassData() const { return &_class_data_; }


void CMsgGuildRole::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildRole*>(&to_msg);
  auto& from = static_cast<const CMsgGuildRole&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildRole)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_role_name(from._internal_role_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.role_id_ = from._impl_.role_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.role_flags_ = from._impl_.role_flags_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.role_order_ = from._impl_.role_order_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildRole::CopyFrom(const CMsgGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildRole::IsInitialized() const {
  return true;
}

void CMsgGuildRole::InternalSwap(CMsgGuildRole* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.role_name_, lhs_arena,
      &other->_impl_.role_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildRole, _impl_.role_order_)
      + sizeof(CMsgGuildRole::_impl_.role_order_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildRole, _impl_.role_id_)>(
          reinterpret_cast<char*>(&_impl_.role_id_),
          reinterpret_cast<char*>(&other->_impl_.role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildRole::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[3]);
}

// ===================================================================

class CMsgGuildMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildMember>()._impl_._has_bits_);
  static void set_has_member_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_member_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_member_joined_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_member_last_active_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGuildMember::CMsgGuildMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildMember)
}
CMsgGuildMember::CMsgGuildMember(const CMsgGuildMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.member_account_id_){}
    , decltype(_impl_.member_role_id_){}
    , decltype(_impl_.member_joined_timestamp_){}
    , decltype(_impl_.member_last_active_timestamp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.member_account_id_, &from._impl_.member_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.member_last_active_timestamp_) -
    reinterpret_cast<char*>(&_impl_.member_account_id_)) + sizeof(_impl_.member_last_active_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildMember)
}

inline void CMsgGuildMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.member_account_id_){0u}
    , decltype(_impl_.member_role_id_){0u}
    , decltype(_impl_.member_joined_timestamp_){0u}
    , decltype(_impl_.member_last_active_timestamp_){0u}
  };
}

CMsgGuildMember::~CMsgGuildMember() {
  // @@protoc_insertion_point(destructor:CMsgGuildMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGuildMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.member_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.member_last_active_timestamp_) -
        reinterpret_cast<char*>(&_impl_.member_account_id_)) + sizeof(_impl_.member_last_active_timestamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 member_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_member_account_id(&has_bits);
          _impl_.member_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 member_role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_member_role_id(&has_bits);
          _impl_.member_role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 member_joined_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_member_joined_timestamp(&has_bits);
          _impl_.member_joined_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 member_last_active_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_member_last_active_timestamp(&has_bits);
          _impl_.member_last_active_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 member_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_member_account_id(), target);
  }

  // optional uint32 member_role_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_role_id(), target);
  }

  // optional uint32 member_joined_timestamp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_member_joined_timestamp(), target);
  }

  // optional uint32 member_last_active_timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_member_last_active_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildMember)
  return target;
}

size_t CMsgGuildMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 member_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_member_account_id());
    }

    // optional uint32 member_role_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_member_role_id());
    }

    // optional uint32 member_joined_timestamp = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_member_joined_timestamp());
    }

    // optional uint32 member_last_active_timestamp = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_member_last_active_timestamp());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildMember::GetClassData() const { return &_class_data_; }


void CMsgGuildMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildMember*>(&to_msg);
  auto& from = static_cast<const CMsgGuildMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.member_account_id_ = from._impl_.member_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.member_role_id_ = from._impl_.member_role_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.member_joined_timestamp_ = from._impl_.member_joined_timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.member_last_active_timestamp_ = from._impl_.member_last_active_timestamp_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildMember::CopyFrom(const CMsgGuildMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildMember::IsInitialized() const {
  return true;
}

void CMsgGuildMember::InternalSwap(CMsgGuildMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildMember, _impl_.member_last_active_timestamp_)
      + sizeof(CMsgGuildMember::_impl_.member_last_active_timestamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildMember, _impl_.member_account_id_)>(
          reinterpret_cast<char*>(&_impl_.member_account_id_),
          reinterpret_cast<char*>(&other->_impl_.member_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[4]);
}

// ===================================================================

class CMsgGuildInvite::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildInvite>()._impl_._has_bits_);
  static void set_has_requester_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_timestamp_sent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgGuildInvite::CMsgGuildInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildInvite)
}
CMsgGuildInvite::CMsgGuildInvite(const CMsgGuildInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildInvite* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.requester_account_id_){}
    , decltype(_impl_.target_account_id_){}
    , decltype(_impl_.timestamp_sent_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.requester_account_id_, &from._impl_.requester_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.timestamp_sent_) -
    reinterpret_cast<char*>(&_impl_.requester_account_id_)) + sizeof(_impl_.timestamp_sent_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildInvite)
}

inline void CMsgGuildInvite::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.requester_account_id_){0u}
    , decltype(_impl_.target_account_id_){0u}
    , decltype(_impl_.timestamp_sent_){0u}
  };
}

CMsgGuildInvite::~CMsgGuildInvite() {
  // @@protoc_insertion_point(destructor:CMsgGuildInvite)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGuildInvite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildInvite)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.requester_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.timestamp_sent_) -
        reinterpret_cast<char*>(&_impl_.requester_account_id_)) + sizeof(_impl_.timestamp_sent_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildInvite::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 requester_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_requester_account_id(&has_bits);
          _impl_.requester_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 timestamp_sent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_timestamp_sent(&has_bits);
          _impl_.timestamp_sent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildInvite::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildInvite)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 requester_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requester_account_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional uint32 timestamp_sent = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_timestamp_sent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildInvite)
  return target;
}

size_t CMsgGuildInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildInvite)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 requester_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requester_account_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

    // optional uint32 timestamp_sent = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp_sent());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildInvite::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildInvite::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildInvite::GetClassData() const { return &_class_data_; }


void CMsgGuildInvite::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildInvite*>(&to_msg);
  auto& from = static_cast<const CMsgGuildInvite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildInvite)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.requester_account_id_ = from._impl_.requester_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.timestamp_sent_ = from._impl_.timestamp_sent_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildInvite::CopyFrom(const CMsgGuildInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildInvite::IsInitialized() const {
  return true;
}

void CMsgGuildInvite::InternalSwap(CMsgGuildInvite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildInvite, _impl_.timestamp_sent_)
      + sizeof(CMsgGuildInvite::_impl_.timestamp_sent_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildInvite, _impl_.requester_account_id_)>(
          reinterpret_cast<char*>(&_impl_.requester_account_id_),
          reinterpret_cast<char*>(&other->_impl_.requester_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildInvite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[5]);
}

// ===================================================================

class CMsgGuildData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildData>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildInfo& guild_info(const CMsgGuildData* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildInfo&
CMsgGuildData::_Internal::guild_info(const CMsgGuildData* msg) {
  return *msg->_impl_.guild_info_;
}
CMsgGuildData::CMsgGuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildData)
}
CMsgGuildData::CMsgGuildData(const CMsgGuildData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_roles_){from._impl_.guild_roles_}
    , decltype(_impl_.guild_members_){from._impl_.guild_members_}
    , decltype(_impl_.guild_invites_){from._impl_.guild_invites_}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    _this->_impl_.guild_info_ = new ::CMsgGuildInfo(*from._impl_.guild_info_);
  }
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGuildData)
}

inline void CMsgGuildData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_roles_){arena}
    , decltype(_impl_.guild_members_){arena}
    , decltype(_impl_.guild_invites_){arena}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgGuildData::~CMsgGuildData() {
  // @@protoc_insertion_point(destructor:CMsgGuildData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.guild_roles_.~RepeatedPtrField();
  _impl_.guild_members_.~RepeatedPtrField();
  _impl_.guild_invites_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.guild_info_;
}

void CMsgGuildData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_roles_.Clear();
  _impl_.guild_members_.Clear();
  _impl_.guild_invites_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_info_ != nullptr);
    _impl_.guild_info_->Clear();
  }
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgGuildInfo guild_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGuildRole guild_roles = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGuildMember guild_members = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGuildInvite guild_invites = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildInfo guild_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::guild_info(this),
        _Internal::guild_info(this).GetCachedSize(), target, stream);
  }

  // repeated .CMsgGuildRole guild_roles = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_guild_roles_size()); i < n; i++) {
    const auto& repfield = this->_internal_guild_roles(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgGuildMember guild_members = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_guild_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_guild_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgGuildInvite guild_invites = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_guild_invites_size()); i < n; i++) {
    const auto& repfield = this->_internal_guild_invites(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildData)
  return target;
}

size_t CMsgGuildData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildRole guild_roles = 3;
  total_size += 1UL * this->_internal_guild_roles_size();
  for (const auto& msg : this->_impl_.guild_roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgGuildMember guild_members = 4;
  total_size += 1UL * this->_internal_guild_members_size();
  for (const auto& msg : this->_impl_.guild_members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgGuildInvite guild_invites = 5;
  total_size += 1UL * this->_internal_guild_invites_size();
  for (const auto& msg : this->_impl_.guild_invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildInfo guild_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_info_);
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildData::GetClassData() const { return &_class_data_; }


void CMsgGuildData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildData*>(&to_msg);
  auto& from = static_cast<const CMsgGuildData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.guild_roles_.MergeFrom(from._impl_.guild_roles_);
  _this->_impl_.guild_members_.MergeFrom(from._impl_.guild_members_);
  _this->_impl_.guild_invites_.MergeFrom(from._impl_.guild_invites_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(
          from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildData::CopyFrom(const CMsgGuildData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildData::IsInitialized() const {
  return true;
}

void CMsgGuildData::InternalSwap(CMsgGuildData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.guild_roles_.InternalSwap(&other->_impl_.guild_roles_);
  _impl_.guild_members_.InternalSwap(&other->_impl_.guild_members_);
  _impl_.guild_invites_.InternalSwap(&other->_impl_.guild_invites_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildData, _impl_.guild_id_)
      + sizeof(CMsgGuildData::_impl_.guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildData, _impl_.guild_info_)>(
          reinterpret_cast<char*>(&_impl_.guild_info_),
          reinterpret_cast<char*>(&other->_impl_.guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[6]);
}

// ===================================================================

class CMsgAccountGuildInvite::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAccountGuildInvite>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requester_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_timestamp_sent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgAccountGuildInvite::CMsgAccountGuildInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountGuildInvite)
}
CMsgAccountGuildInvite::CMsgAccountGuildInvite(const CMsgAccountGuildInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAccountGuildInvite* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.requester_account_id_){}
    , decltype(_impl_.timestamp_sent_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.timestamp_sent_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.timestamp_sent_));
  // @@protoc_insertion_point(copy_constructor:CMsgAccountGuildInvite)
}

inline void CMsgAccountGuildInvite::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.requester_account_id_){0u}
    , decltype(_impl_.timestamp_sent_){0u}
  };
}

CMsgAccountGuildInvite::~CMsgAccountGuildInvite() {
  // @@protoc_insertion_point(destructor:CMsgAccountGuildInvite)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAccountGuildInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgAccountGuildInvite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAccountGuildInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountGuildInvite)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.timestamp_sent_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.timestamp_sent_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountGuildInvite::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 requester_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_requester_account_id(&has_bits);
          _impl_.requester_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 timestamp_sent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_timestamp_sent(&has_bits);
          _impl_.timestamp_sent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAccountGuildInvite::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountGuildInvite)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 requester_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_requester_account_id(), target);
  }

  // optional uint32 timestamp_sent = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_timestamp_sent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountGuildInvite)
  return target;
}

size_t CMsgAccountGuildInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountGuildInvite)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 requester_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requester_account_id());
    }

    // optional uint32 timestamp_sent = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp_sent());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAccountGuildInvite::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAccountGuildInvite::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAccountGuildInvite::GetClassData() const { return &_class_data_; }


void CMsgAccountGuildInvite::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAccountGuildInvite*>(&to_msg);
  auto& from = static_cast<const CMsgAccountGuildInvite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountGuildInvite)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.requester_account_id_ = from._impl_.requester_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.timestamp_sent_ = from._impl_.timestamp_sent_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAccountGuildInvite::CopyFrom(const CMsgAccountGuildInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountGuildInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountGuildInvite::IsInitialized() const {
  return true;
}

void CMsgAccountGuildInvite::InternalSwap(CMsgAccountGuildInvite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAccountGuildInvite, _impl_.timestamp_sent_)
      + sizeof(CMsgAccountGuildInvite::_impl_.timestamp_sent_)
      - PROTOBUF_FIELD_OFFSET(CMsgAccountGuildInvite, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountGuildInvite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[7]);
}

// ===================================================================

class CMsgAccountGuildMemberships::_Internal {
 public:
};

CMsgAccountGuildMemberships::CMsgAccountGuildMemberships(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountGuildMemberships)
}
CMsgAccountGuildMemberships::CMsgAccountGuildMemberships(const CMsgAccountGuildMemberships& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAccountGuildMemberships* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guild_ids_){from._impl_.guild_ids_}
    , decltype(_impl_.guild_invites_){from._impl_.guild_invites_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAccountGuildMemberships)
}

inline void CMsgAccountGuildMemberships::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guild_ids_){arena}
    , decltype(_impl_.guild_invites_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgAccountGuildMemberships::~CMsgAccountGuildMemberships() {
  // @@protoc_insertion_point(destructor:CMsgAccountGuildMemberships)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAccountGuildMemberships::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.guild_ids_.~RepeatedField();
  _impl_.guild_invites_.~RepeatedPtrField();
}

void CMsgAccountGuildMemberships::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAccountGuildMemberships::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountGuildMemberships)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_ids_.Clear();
  _impl_.guild_invites_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountGuildMemberships::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 guild_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_guild_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_guild_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgAccountGuildInvite guild_invites = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAccountGuildMemberships::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountGuildMemberships)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 guild_ids = 1;
  for (int i = 0, n = this->_internal_guild_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_ids(i), target);
  }

  // repeated .CMsgAccountGuildInvite guild_invites = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_guild_invites_size()); i < n; i++) {
    const auto& repfield = this->_internal_guild_invites(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountGuildMemberships)
  return target;
}

size_t CMsgAccountGuildMemberships::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountGuildMemberships)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 guild_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.guild_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_guild_ids_size());
    total_size += data_size;
  }

  // repeated .CMsgAccountGuildInvite guild_invites = 2;
  total_size += 1UL * this->_internal_guild_invites_size();
  for (const auto& msg : this->_impl_.guild_invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAccountGuildMemberships::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAccountGuildMemberships::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAccountGuildMemberships::GetClassData() const { return &_class_data_; }


void CMsgAccountGuildMemberships::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAccountGuildMemberships*>(&to_msg);
  auto& from = static_cast<const CMsgAccountGuildMemberships&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountGuildMemberships)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.guild_ids_.MergeFrom(from._impl_.guild_ids_);
  _this->_impl_.guild_invites_.MergeFrom(from._impl_.guild_invites_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAccountGuildMemberships::CopyFrom(const CMsgAccountGuildMemberships& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountGuildMemberships)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountGuildMemberships::IsInitialized() const {
  return true;
}

void CMsgAccountGuildMemberships::InternalSwap(CMsgAccountGuildMemberships* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.guild_ids_.InternalSwap(&other->_impl_.guild_ids_);
  _impl_.guild_invites_.InternalSwap(&other->_impl_.guild_invites_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountGuildMemberships::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[8]);
}

// ===================================================================

class CMsgGuildPersonaInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildPersonaInfo>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_guild_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgGuildPersonaInfo::CMsgGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildPersonaInfo)
}
CMsgGuildPersonaInfo::CMsgGuildPersonaInfo(const CMsgGuildPersonaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildPersonaInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_tag_){}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.guild_flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.guild_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_guild_tag()) {
    _this->_impl_.guild_tag_.Set(from._internal_guild_tag(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_flags_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.guild_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildPersonaInfo)
}

inline void CMsgGuildPersonaInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_tag_){}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.guild_flags_){0u}
  };
  _impl_.guild_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGuildPersonaInfo::~CMsgGuildPersonaInfo() {
  // @@protoc_insertion_point(destructor:CMsgGuildPersonaInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildPersonaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.guild_tag_.Destroy();
}

void CMsgGuildPersonaInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildPersonaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildPersonaInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.guild_tag_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_flags_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.guild_flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildPersonaInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string guild_tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_guild_tag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGuildPersonaInfo.guild_tag");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_guild_flags(&has_bits);
          _impl_.guild_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildPersonaInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildPersonaInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional string guild_tag = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_tag().data(), static_cast<int>(this->_internal_guild_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildPersonaInfo.guild_tag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_guild_tag(), target);
  }

  // optional uint32 guild_flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_guild_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildPersonaInfo)
  return target;
}

size_t CMsgGuildPersonaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildPersonaInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string guild_tag = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_tag());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 guild_flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildPersonaInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildPersonaInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildPersonaInfo::GetClassData() const { return &_class_data_; }


void CMsgGuildPersonaInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildPersonaInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGuildPersonaInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildPersonaInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_guild_tag(from._internal_guild_tag());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.guild_flags_ = from._impl_.guild_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildPersonaInfo::CopyFrom(const CMsgGuildPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildPersonaInfo::IsInitialized() const {
  return true;
}

void CMsgGuildPersonaInfo::InternalSwap(CMsgGuildPersonaInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.guild_tag_, lhs_arena,
      &other->_impl_.guild_tag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildPersonaInfo, _impl_.guild_flags_)
      + sizeof(CMsgGuildPersonaInfo::_impl_.guild_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildPersonaInfo, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildPersonaInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[9]);
}

// ===================================================================

class CMsgAccountGuildsPersonaInfo::_Internal {
 public:
};

CMsgAccountGuildsPersonaInfo::CMsgAccountGuildsPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountGuildsPersonaInfo)
}
CMsgAccountGuildsPersonaInfo::CMsgAccountGuildsPersonaInfo(const CMsgAccountGuildsPersonaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAccountGuildsPersonaInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guild_persona_infos_){from._impl_.guild_persona_infos_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAccountGuildsPersonaInfo)
}

inline void CMsgAccountGuildsPersonaInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guild_persona_infos_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgAccountGuildsPersonaInfo::~CMsgAccountGuildsPersonaInfo() {
  // @@protoc_insertion_point(destructor:CMsgAccountGuildsPersonaInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAccountGuildsPersonaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.guild_persona_infos_.~RepeatedPtrField();
}

void CMsgAccountGuildsPersonaInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAccountGuildsPersonaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountGuildsPersonaInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_persona_infos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountGuildsPersonaInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_persona_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAccountGuildsPersonaInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountGuildsPersonaInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_guild_persona_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_guild_persona_infos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountGuildsPersonaInfo)
  return target;
}

size_t CMsgAccountGuildsPersonaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountGuildsPersonaInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
  total_size += 1UL * this->_internal_guild_persona_infos_size();
  for (const auto& msg : this->_impl_.guild_persona_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAccountGuildsPersonaInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAccountGuildsPersonaInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAccountGuildsPersonaInfo::GetClassData() const { return &_class_data_; }


void CMsgAccountGuildsPersonaInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAccountGuildsPersonaInfo*>(&to_msg);
  auto& from = static_cast<const CMsgAccountGuildsPersonaInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountGuildsPersonaInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.guild_persona_infos_.MergeFrom(from._impl_.guild_persona_infos_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAccountGuildsPersonaInfo::CopyFrom(const CMsgAccountGuildsPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountGuildsPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountGuildsPersonaInfo::IsInitialized() const {
  return true;
}

void CMsgAccountGuildsPersonaInfo::InternalSwap(CMsgAccountGuildsPersonaInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.guild_persona_infos_.InternalSwap(&other->_impl_.guild_persona_infos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountGuildsPersonaInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[10]);
}

// ===================================================================

class CMsgGuildFeedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildFeedEvent>()._impl_._has_bits_);
  static void set_has_feed_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_event_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_param_uint_1(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_param_uint_2(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_param_uint_3(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGuildFeedEvent::CMsgGuildFeedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildFeedEvent)
}
CMsgGuildFeedEvent::CMsgGuildFeedEvent(const CMsgGuildFeedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGuildFeedEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.feed_event_id_){}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.event_type_){}
    , decltype(_impl_.param_uint_1_){}
    , decltype(_impl_.param_uint_2_){}
    , decltype(_impl_.param_uint_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.feed_event_id_, &from._impl_.feed_event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.param_uint_3_) -
    reinterpret_cast<char*>(&_impl_.feed_event_id_)) + sizeof(_impl_.param_uint_3_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildFeedEvent)
}

inline void CMsgGuildFeedEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.feed_event_id_){uint64_t{0u}}
    , decltype(_impl_.timestamp_){0u}
    , decltype(_impl_.event_type_){0u}
    , decltype(_impl_.param_uint_1_){0u}
    , decltype(_impl_.param_uint_2_){0u}
    , decltype(_impl_.param_uint_3_){0u}
  };
}

CMsgGuildFeedEvent::~CMsgGuildFeedEvent() {
  // @@protoc_insertion_point(destructor:CMsgGuildFeedEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGuildFeedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGuildFeedEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGuildFeedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildFeedEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.feed_event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.param_uint_3_) -
        reinterpret_cast<char*>(&_impl_.feed_event_id_)) + sizeof(_impl_.param_uint_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildFeedEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 feed_event_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_feed_event_id(&has_bits);
          _impl_.feed_event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_timestamp(&has_bits);
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 event_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_event_type(&has_bits);
          _impl_.event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 param_uint_1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_param_uint_1(&has_bits);
          _impl_.param_uint_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 param_uint_2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_param_uint_2(&has_bits);
          _impl_.param_uint_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 param_uint_3 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_param_uint_3(&has_bits);
          _impl_.param_uint_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGuildFeedEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildFeedEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 feed_event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_feed_event_id(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_timestamp(), target);
  }

  // optional uint32 event_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_event_type(), target);
  }

  // optional uint32 param_uint_1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_param_uint_1(), target);
  }

  // optional uint32 param_uint_2 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_param_uint_2(), target);
  }

  // optional uint32 param_uint_3 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_param_uint_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildFeedEvent)
  return target;
}

size_t CMsgGuildFeedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildFeedEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint64 feed_event_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_feed_event_id());
    }

    // optional uint32 timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp());
    }

    // optional uint32 event_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_event_type());
    }

    // optional uint32 param_uint_1 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_param_uint_1());
    }

    // optional uint32 param_uint_2 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_param_uint_2());
    }

    // optional uint32 param_uint_3 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_param_uint_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGuildFeedEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGuildFeedEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGuildFeedEvent::GetClassData() const { return &_class_data_; }


void CMsgGuildFeedEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGuildFeedEvent*>(&to_msg);
  auto& from = static_cast<const CMsgGuildFeedEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildFeedEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.feed_event_id_ = from._impl_.feed_event_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.event_type_ = from._impl_.event_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.param_uint_1_ = from._impl_.param_uint_1_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.param_uint_2_ = from._impl_.param_uint_2_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.param_uint_3_ = from._impl_.param_uint_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGuildFeedEvent::CopyFrom(const CMsgGuildFeedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildFeedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildFeedEvent::IsInitialized() const {
  return true;
}

void CMsgGuildFeedEvent::InternalSwap(CMsgGuildFeedEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildFeedEvent, _impl_.param_uint_3_)
      + sizeof(CMsgGuildFeedEvent::_impl_.param_uint_3_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildFeedEvent, _impl_.feed_event_id_)>(
          reinterpret_cast<char*>(&_impl_.feed_event_id_),
          reinterpret_cast<char*>(&other->_impl_.feed_event_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildFeedEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[11]);
}

// ===================================================================

class CMsgClientToGCCreateGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCreateGuild>()._impl_._has_bits_);
  static const ::CMsgGuildInfo& guild_info(const CMsgClientToGCCreateGuild* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_chat_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgGuildInfo&
CMsgClientToGCCreateGuild::_Internal::guild_info(const CMsgClientToGCCreateGuild* msg) {
  return *msg->_impl_.guild_info_;
}
CMsgClientToGCCreateGuild::CMsgClientToGCCreateGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCreateGuild)
}
CMsgClientToGCCreateGuild::CMsgClientToGCCreateGuild(const CMsgClientToGCCreateGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCreateGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.guild_chat_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    _this->_impl_.guild_info_ = new ::CMsgGuildInfo(*from._impl_.guild_info_);
  }
  _this->_impl_.guild_chat_type_ = from._impl_.guild_chat_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateGuild)
}

inline void CMsgClientToGCCreateGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.guild_chat_type_){0}
  };
}

CMsgClientToGCCreateGuild::~CMsgClientToGCCreateGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCreateGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_info_;
}

void CMsgClientToGCCreateGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCreateGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCreateGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_info_ != nullptr);
    _impl_.guild_info_->Clear();
  }
  _impl_.guild_chat_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCreateGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgGuildInfo guild_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGuildChatType_IsValid(val))) {
            _internal_set_guild_chat_type(static_cast<::EGuildChatType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCreateGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgGuildInfo guild_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::guild_info(this),
        _Internal::guild_info(this).GetCachedSize(), target, stream);
  }

  // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_guild_chat_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateGuild)
  return target;
}

size_t CMsgClientToGCCreateGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCreateGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildInfo guild_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_info_);
    }

    // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_guild_chat_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCreateGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCreateGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCreateGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCreateGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCreateGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCreateGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCreateGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(
          from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_chat_type_ = from._impl_.guild_chat_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCreateGuild::CopyFrom(const CMsgClientToGCCreateGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCreateGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateGuild::InternalSwap(CMsgClientToGCCreateGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuild, _impl_.guild_chat_type_)
      + sizeof(CMsgClientToGCCreateGuild::_impl_.guild_chat_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuild, _impl_.guild_info_)>(
          reinterpret_cast<char*>(&_impl_.guild_info_),
          reinterpret_cast<char*>(&other->_impl_.guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCreateGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[12]);
}

// ===================================================================

class CMsgClientToGCCreateGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCreateGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCCreateGuildResponse::CMsgClientToGCCreateGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCreateGuildResponse)
}
CMsgClientToGCCreateGuildResponse::CMsgClientToGCCreateGuildResponse(const CMsgClientToGCCreateGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCreateGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_id_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateGuildResponse)
}

inline void CMsgClientToGCCreateGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCCreateGuildResponse::~CMsgClientToGCCreateGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCreateGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCreateGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCreateGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCreateGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_id_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.guild_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCreateGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCreateGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCreateGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCreateGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateGuildResponse)
  return target;
}

size_t CMsgClientToGCCreateGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCreateGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCreateGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCreateGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCreateGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCreateGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCreateGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCreateGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCreateGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCreateGuildResponse::CopyFrom(const CMsgClientToGCCreateGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCreateGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateGuildResponse::InternalSwap(CMsgClientToGCCreateGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuildResponse, _impl_.guild_id_)
      + sizeof(CMsgClientToGCCreateGuildResponse::_impl_.guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuildResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCreateGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[13]);
}

// ===================================================================

class CMsgClientToGCSetGuildInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildInfo>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildInfo& guild_info(const CMsgClientToGCSetGuildInfo* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_chat_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgGuildInfo&
CMsgClientToGCSetGuildInfo::_Internal::guild_info(const CMsgClientToGCSetGuildInfo* msg) {
  return *msg->_impl_.guild_info_;
}
CMsgClientToGCSetGuildInfo::CMsgClientToGCSetGuildInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildInfo)
}
CMsgClientToGCSetGuildInfo::CMsgClientToGCSetGuildInfo(const CMsgClientToGCSetGuildInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetGuildInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.guild_chat_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    _this->_impl_.guild_info_ = new ::CMsgGuildInfo(*from._impl_.guild_info_);
  }
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_chat_type_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.guild_chat_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildInfo)
}

inline void CMsgClientToGCSetGuildInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_info_){nullptr}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.guild_chat_type_){0}
  };
}

CMsgClientToGCSetGuildInfo::~CMsgClientToGCSetGuildInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetGuildInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_info_;
}

void CMsgClientToGCSetGuildInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetGuildInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_info_ != nullptr);
    _impl_.guild_info_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_chat_type_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.guild_chat_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgGuildInfo guild_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGuildChatType_IsValid(val))) {
            _internal_set_guild_chat_type(static_cast<::EGuildChatType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetGuildInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildInfo guild_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::guild_info(this),
        _Internal::guild_info(this).GetCachedSize(), target, stream);
  }

  // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_guild_chat_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildInfo)
  return target;
}

size_t CMsgClientToGCSetGuildInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgGuildInfo guild_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_info_);
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_guild_chat_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetGuildInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetGuildInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetGuildInfo::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetGuildInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetGuildInfo*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetGuildInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(
          from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.guild_chat_type_ = from._impl_.guild_chat_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetGuildInfo::CopyFrom(const CMsgClientToGCSetGuildInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildInfo::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildInfo::InternalSwap(CMsgClientToGCSetGuildInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildInfo, _impl_.guild_chat_type_)
      + sizeof(CMsgClientToGCSetGuildInfo::_impl_.guild_chat_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildInfo, _impl_.guild_info_)>(
          reinterpret_cast<char*>(&_impl_.guild_info_),
          reinterpret_cast<char*>(&other->_impl_.guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[14]);
}

// ===================================================================

class CMsgClientToGCSetGuildInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildInfoResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildInfoResponse::CMsgClientToGCSetGuildInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildInfoResponse)
}
CMsgClientToGCSetGuildInfoResponse::CMsgClientToGCSetGuildInfoResponse(const CMsgClientToGCSetGuildInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetGuildInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildInfoResponse)
}

inline void CMsgClientToGCSetGuildInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCSetGuildInfoResponse::~CMsgClientToGCSetGuildInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetGuildInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetGuildInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetGuildInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSetGuildInfoResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetGuildInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildInfoResponse)
  return target;
}

size_t CMsgClientToGCSetGuildInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetGuildInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetGuildInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetGuildInfoResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetGuildInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetGuildInfoResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetGuildInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetGuildInfoResponse::CopyFrom(const CMsgClientToGCSetGuildInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildInfoResponse::InternalSwap(CMsgClientToGCSetGuildInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[15]);
}

// ===================================================================

class CMsgClientToGCRequestGuildData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildData>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestGuildData::CMsgClientToGCRequestGuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildData)
}
CMsgClientToGCRequestGuildData::CMsgClientToGCRequestGuildData(const CMsgClientToGCRequestGuildData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestGuildData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildData)
}

inline void CMsgClientToGCRequestGuildData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCRequestGuildData::~CMsgClientToGCRequestGuildData() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestGuildData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRequestGuildData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestGuildData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildData)
  return target;
}

size_t CMsgClientToGCRequestGuildData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestGuildData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestGuildData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestGuildData::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestGuildData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestGuildData*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestGuildData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestGuildData::CopyFrom(const CMsgClientToGCRequestGuildData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildData::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildData::InternalSwap(CMsgClientToGCRequestGuildData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[16]);
}

// ===================================================================

class CMsgClientToGCRequestGuildDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildDataResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildData& guild_data(const CMsgClientToGCRequestGuildDataResponse* msg);
  static void set_has_guild_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildData&
CMsgClientToGCRequestGuildDataResponse::_Internal::guild_data(const CMsgClientToGCRequestGuildDataResponse* msg) {
  return *msg->_impl_.guild_data_;
}
CMsgClientToGCRequestGuildDataResponse::CMsgClientToGCRequestGuildDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildDataResponse)
}
CMsgClientToGCRequestGuildDataResponse::CMsgClientToGCRequestGuildDataResponse(const CMsgClientToGCRequestGuildDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestGuildDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_data_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_data()) {
    _this->_impl_.guild_data_ = new ::CMsgGuildData(*from._impl_.guild_data_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildDataResponse)
}

inline void CMsgClientToGCRequestGuildDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_data_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestGuildDataResponse::~CMsgClientToGCRequestGuildDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestGuildDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_data_;
}

void CMsgClientToGCRequestGuildDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_data_ != nullptr);
    _impl_.guild_data_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildDataResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgGuildData guild_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestGuildDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgGuildData guild_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::guild_data(this),
        _Internal::guild_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildDataResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildData guild_data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_data_);
    }

    // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestGuildDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestGuildDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestGuildDataResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestGuildDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestGuildDataResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestGuildDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_data()->::CMsgGuildData::MergeFrom(
          from._internal_guild_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestGuildDataResponse::CopyFrom(const CMsgClientToGCRequestGuildDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildDataResponse::InternalSwap(CMsgClientToGCRequestGuildDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildDataResponse, _impl_.result_)
      + sizeof(CMsgClientToGCRequestGuildDataResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildDataResponse, _impl_.guild_data_)>(
          reinterpret_cast<char*>(&_impl_.guild_data_),
          reinterpret_cast<char*>(&other->_impl_.guild_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[17]);
}

// ===================================================================

class CMsgGCToClientGuildDataUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildDataUpdated>()._impl_._has_bits_);
  static const ::CMsgGuildData& guild_data(const CMsgGCToClientGuildDataUpdated* msg);
  static void set_has_guild_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_update_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgGuildData&
CMsgGCToClientGuildDataUpdated::_Internal::guild_data(const CMsgGCToClientGuildDataUpdated* msg) {
  return *msg->_impl_.guild_data_;
}
CMsgGCToClientGuildDataUpdated::CMsgGCToClientGuildDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildDataUpdated)
}
CMsgGCToClientGuildDataUpdated::CMsgGCToClientGuildDataUpdated(const CMsgGCToClientGuildDataUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientGuildDataUpdated* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_data_){nullptr}
    , decltype(_impl_.update_flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_data()) {
    _this->_impl_.guild_data_ = new ::CMsgGuildData(*from._impl_.guild_data_);
  }
  _this->_impl_.update_flags_ = from._impl_.update_flags_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildDataUpdated)
}

inline void CMsgGCToClientGuildDataUpdated::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_data_){nullptr}
    , decltype(_impl_.update_flags_){0u}
  };
}

CMsgGCToClientGuildDataUpdated::~CMsgGCToClientGuildDataUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildDataUpdated)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientGuildDataUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_data_;
}

void CMsgGCToClientGuildDataUpdated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientGuildDataUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildDataUpdated)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_data_ != nullptr);
    _impl_.guild_data_->Clear();
  }
  _impl_.update_flags_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildDataUpdated::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgGuildData guild_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 update_flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_update_flags(&has_bits);
          _impl_.update_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientGuildDataUpdated::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildDataUpdated)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgGuildData guild_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::guild_data(this),
        _Internal::guild_data(this).GetCachedSize(), target, stream);
  }

  // optional uint32 update_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_update_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildDataUpdated)
  return target;
}

size_t CMsgGCToClientGuildDataUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildDataUpdated)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildData guild_data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_data_);
    }

    // optional uint32 update_flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_update_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientGuildDataUpdated::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientGuildDataUpdated::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientGuildDataUpdated::GetClassData() const { return &_class_data_; }


void CMsgGCToClientGuildDataUpdated::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientGuildDataUpdated*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientGuildDataUpdated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildDataUpdated)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_data()->::CMsgGuildData::MergeFrom(
          from._internal_guild_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.update_flags_ = from._impl_.update_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientGuildDataUpdated::CopyFrom(const CMsgGCToClientGuildDataUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildDataUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildDataUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildDataUpdated::InternalSwap(CMsgGCToClientGuildDataUpdated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientGuildDataUpdated, _impl_.update_flags_)
      + sizeof(CMsgGCToClientGuildDataUpdated::_impl_.update_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientGuildDataUpdated, _impl_.guild_data_)>(
          reinterpret_cast<char*>(&_impl_.guild_data_),
          reinterpret_cast<char*>(&other->_impl_.guild_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildDataUpdated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[18]);
}

// ===================================================================

class CMsgGCToClientGuildMembersDataUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildMembersDataUpdated>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientGuildMembersDataUpdated::CMsgGCToClientGuildMembersDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildMembersDataUpdated)
}
CMsgGCToClientGuildMembersDataUpdated::CMsgGCToClientGuildMembersDataUpdated(const CMsgGCToClientGuildMembersDataUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientGuildMembersDataUpdated* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.members_data_){from._impl_.members_data_}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildMembersDataUpdated)
}

inline void CMsgGCToClientGuildMembersDataUpdated::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.members_data_){arena}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgGCToClientGuildMembersDataUpdated::~CMsgGCToClientGuildMembersDataUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildMembersDataUpdated)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientGuildMembersDataUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.members_data_.~RepeatedPtrField();
}

void CMsgGCToClientGuildMembersDataUpdated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientGuildMembersDataUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildMembersDataUpdated)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.members_data_.Clear();
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildMembersDataUpdated::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGuildMember members_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientGuildMembersDataUpdated::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildMembersDataUpdated)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // repeated .CMsgGuildMember members_data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_members_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildMembersDataUpdated)
  return target;
}

size_t CMsgGCToClientGuildMembersDataUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildMembersDataUpdated)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildMember members_data = 2;
  total_size += 1UL * this->_internal_members_data_size();
  for (const auto& msg : this->_impl_.members_data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientGuildMembersDataUpdated::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientGuildMembersDataUpdated::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientGuildMembersDataUpdated::GetClassData() const { return &_class_data_; }


void CMsgGCToClientGuildMembersDataUpdated::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientGuildMembersDataUpdated*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientGuildMembersDataUpdated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildMembersDataUpdated)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.members_data_.MergeFrom(from._impl_.members_data_);
  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientGuildMembersDataUpdated::CopyFrom(const CMsgGCToClientGuildMembersDataUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildMembersDataUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildMembersDataUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildMembersDataUpdated::InternalSwap(CMsgGCToClientGuildMembersDataUpdated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.members_data_.InternalSwap(&other->_impl_.members_data_);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildMembersDataUpdated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[19]);
}

// ===================================================================

class CMsgClientToGCRequestGuildMembership::_Internal {
 public:
};

CMsgClientToGCRequestGuildMembership::CMsgClientToGCRequestGuildMembership(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildMembership)
}
CMsgClientToGCRequestGuildMembership::CMsgClientToGCRequestGuildMembership(const CMsgClientToGCRequestGuildMembership& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCRequestGuildMembership* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildMembership)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestGuildMembership::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestGuildMembership::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildMembership::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[20]);
}

// ===================================================================

class CMsgClientToGCRequestGuildMembershipResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildMembershipResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountGuildMemberships& guild_memberships(const CMsgClientToGCRequestGuildMembershipResponse* msg);
  static void set_has_guild_memberships(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountGuildMemberships&
CMsgClientToGCRequestGuildMembershipResponse::_Internal::guild_memberships(const CMsgClientToGCRequestGuildMembershipResponse* msg) {
  return *msg->_impl_.guild_memberships_;
}
CMsgClientToGCRequestGuildMembershipResponse::CMsgClientToGCRequestGuildMembershipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildMembershipResponse)
}
CMsgClientToGCRequestGuildMembershipResponse::CMsgClientToGCRequestGuildMembershipResponse(const CMsgClientToGCRequestGuildMembershipResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestGuildMembershipResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_memberships_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_memberships()) {
    _this->_impl_.guild_memberships_ = new ::CMsgAccountGuildMemberships(*from._impl_.guild_memberships_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildMembershipResponse)
}

inline void CMsgClientToGCRequestGuildMembershipResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_memberships_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestGuildMembershipResponse::~CMsgClientToGCRequestGuildMembershipResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildMembershipResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestGuildMembershipResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_memberships_;
}

void CMsgClientToGCRequestGuildMembershipResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildMembershipResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildMembershipResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_memberships_ != nullptr);
    _impl_.guild_memberships_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildMembershipResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildMembershipResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAccountGuildMemberships guild_memberships = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_memberships(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestGuildMembershipResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildMembershipResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountGuildMemberships guild_memberships = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::guild_memberships(this),
        _Internal::guild_memberships(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildMembershipResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildMembershipResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildMembershipResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountGuildMemberships guild_memberships = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_memberships_);
    }

    // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestGuildMembershipResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestGuildMembershipResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestGuildMembershipResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestGuildMembershipResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestGuildMembershipResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestGuildMembershipResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildMembershipResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_memberships()->::CMsgAccountGuildMemberships::MergeFrom(
          from._internal_guild_memberships());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestGuildMembershipResponse::CopyFrom(const CMsgClientToGCRequestGuildMembershipResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildMembershipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildMembershipResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildMembershipResponse::InternalSwap(CMsgClientToGCRequestGuildMembershipResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildMembershipResponse, _impl_.result_)
      + sizeof(CMsgClientToGCRequestGuildMembershipResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildMembershipResponse, _impl_.guild_memberships_)>(
          reinterpret_cast<char*>(&_impl_.guild_memberships_),
          reinterpret_cast<char*>(&other->_impl_.guild_memberships_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildMembershipResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[21]);
}

// ===================================================================

class CMsgGCToClientGuildMembershipUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildMembershipUpdated>()._impl_._has_bits_);
  static const ::CMsgAccountGuildMemberships& guild_memberships(const CMsgGCToClientGuildMembershipUpdated* msg);
  static void set_has_guild_memberships(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountGuildMemberships&
CMsgGCToClientGuildMembershipUpdated::_Internal::guild_memberships(const CMsgGCToClientGuildMembershipUpdated* msg) {
  return *msg->_impl_.guild_memberships_;
}
CMsgGCToClientGuildMembershipUpdated::CMsgGCToClientGuildMembershipUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildMembershipUpdated)
}
CMsgGCToClientGuildMembershipUpdated::CMsgGCToClientGuildMembershipUpdated(const CMsgGCToClientGuildMembershipUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientGuildMembershipUpdated* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_memberships_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_memberships()) {
    _this->_impl_.guild_memberships_ = new ::CMsgAccountGuildMemberships(*from._impl_.guild_memberships_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildMembershipUpdated)
}

inline void CMsgGCToClientGuildMembershipUpdated::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_memberships_){nullptr}
  };
}

CMsgGCToClientGuildMembershipUpdated::~CMsgGCToClientGuildMembershipUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildMembershipUpdated)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientGuildMembershipUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_memberships_;
}

void CMsgGCToClientGuildMembershipUpdated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientGuildMembershipUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildMembershipUpdated)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_memberships_ != nullptr);
    _impl_.guild_memberships_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildMembershipUpdated::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgAccountGuildMemberships guild_memberships = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_memberships(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientGuildMembershipUpdated::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildMembershipUpdated)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgAccountGuildMemberships guild_memberships = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::guild_memberships(this),
        _Internal::guild_memberships(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildMembershipUpdated)
  return target;
}

size_t CMsgGCToClientGuildMembershipUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildMembershipUpdated)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgAccountGuildMemberships guild_memberships = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.guild_memberships_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientGuildMembershipUpdated::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientGuildMembershipUpdated::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientGuildMembershipUpdated::GetClassData() const { return &_class_data_; }


void CMsgGCToClientGuildMembershipUpdated::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientGuildMembershipUpdated*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientGuildMembershipUpdated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildMembershipUpdated)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_memberships()) {
    _this->_internal_mutable_guild_memberships()->::CMsgAccountGuildMemberships::MergeFrom(
        from._internal_guild_memberships());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientGuildMembershipUpdated::CopyFrom(const CMsgGCToClientGuildMembershipUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildMembershipUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildMembershipUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildMembershipUpdated::InternalSwap(CMsgGCToClientGuildMembershipUpdated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_memberships_, other->_impl_.guild_memberships_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildMembershipUpdated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[22]);
}

// ===================================================================

class CMsgClientToGCJoinGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCJoinGuild>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCJoinGuild::CMsgClientToGCJoinGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinGuild)
}
CMsgClientToGCJoinGuild::CMsgClientToGCJoinGuild(const CMsgClientToGCJoinGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCJoinGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinGuild)
}

inline void CMsgClientToGCJoinGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCJoinGuild::~CMsgClientToGCJoinGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCJoinGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCJoinGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCJoinGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCJoinGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinGuild)
  return target;
}

size_t CMsgClientToGCJoinGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCJoinGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCJoinGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCJoinGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCJoinGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCJoinGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCJoinGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCJoinGuild::CopyFrom(const CMsgClientToGCJoinGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinGuild::InternalSwap(CMsgClientToGCJoinGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[23]);
}

// ===================================================================

class CMsgClientToGCJoinGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCJoinGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCJoinGuildResponse::CMsgClientToGCJoinGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinGuildResponse)
}
CMsgClientToGCJoinGuildResponse::CMsgClientToGCJoinGuildResponse(const CMsgClientToGCJoinGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCJoinGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinGuildResponse)
}

inline void CMsgClientToGCJoinGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCJoinGuildResponse::~CMsgClientToGCJoinGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCJoinGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCJoinGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCJoinGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCJoinGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCJoinGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCJoinGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinGuildResponse)
  return target;
}

size_t CMsgClientToGCJoinGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCJoinGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCJoinGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCJoinGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCJoinGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCJoinGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCJoinGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCJoinGuildResponse::CopyFrom(const CMsgClientToGCJoinGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinGuildResponse::InternalSwap(CMsgClientToGCJoinGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[24]);
}

// ===================================================================

class CMsgClientToGCLeaveGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeaveGuild>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeaveGuild::CMsgClientToGCLeaveGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeaveGuild)
}
CMsgClientToGCLeaveGuild::CMsgClientToGCLeaveGuild(const CMsgClientToGCLeaveGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCLeaveGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeaveGuild)
}

inline void CMsgClientToGCLeaveGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCLeaveGuild::~CMsgClientToGCLeaveGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeaveGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCLeaveGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCLeaveGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCLeaveGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeaveGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeaveGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCLeaveGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeaveGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeaveGuild)
  return target;
}

size_t CMsgClientToGCLeaveGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeaveGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCLeaveGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCLeaveGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCLeaveGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCLeaveGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCLeaveGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCLeaveGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeaveGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCLeaveGuild::CopyFrom(const CMsgClientToGCLeaveGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeaveGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeaveGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeaveGuild::InternalSwap(CMsgClientToGCLeaveGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeaveGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[25]);
}

// ===================================================================

class CMsgClientToGCLeaveGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeaveGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeaveGuildResponse::CMsgClientToGCLeaveGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeaveGuildResponse)
}
CMsgClientToGCLeaveGuildResponse::CMsgClientToGCLeaveGuildResponse(const CMsgClientToGCLeaveGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCLeaveGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeaveGuildResponse)
}

inline void CMsgClientToGCLeaveGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCLeaveGuildResponse::~CMsgClientToGCLeaveGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeaveGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCLeaveGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCLeaveGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCLeaveGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeaveGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeaveGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCLeaveGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCLeaveGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeaveGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeaveGuildResponse)
  return target;
}

size_t CMsgClientToGCLeaveGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeaveGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCLeaveGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCLeaveGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCLeaveGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCLeaveGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCLeaveGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCLeaveGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeaveGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCLeaveGuildResponse::CopyFrom(const CMsgClientToGCLeaveGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeaveGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeaveGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeaveGuildResponse::InternalSwap(CMsgClientToGCLeaveGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeaveGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[26]);
}

// ===================================================================

class CMsgClientToGCKickGuildMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCKickGuildMember>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCKickGuildMember::CMsgClientToGCKickGuildMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCKickGuildMember)
}
CMsgClientToGCKickGuildMember::CMsgClientToGCKickGuildMember(const CMsgClientToGCKickGuildMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCKickGuildMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.target_account_id_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCKickGuildMember)
}

inline void CMsgClientToGCKickGuildMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.target_account_id_){0u}
  };
}

CMsgClientToGCKickGuildMember::~CMsgClientToGCKickGuildMember() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCKickGuildMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCKickGuildMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCKickGuildMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCKickGuildMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCKickGuildMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.target_account_id_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCKickGuildMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCKickGuildMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCKickGuildMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCKickGuildMember)
  return target;
}

size_t CMsgClientToGCKickGuildMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCKickGuildMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCKickGuildMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCKickGuildMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCKickGuildMember::GetClassData() const { return &_class_data_; }


void CMsgClientToGCKickGuildMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCKickGuildMember*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCKickGuildMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCKickGuildMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCKickGuildMember::CopyFrom(const CMsgClientToGCKickGuildMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCKickGuildMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCKickGuildMember::IsInitialized() const {
  return true;
}

void CMsgClientToGCKickGuildMember::InternalSwap(CMsgClientToGCKickGuildMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCKickGuildMember, _impl_.target_account_id_)
      + sizeof(CMsgClientToGCKickGuildMember::_impl_.target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCKickGuildMember, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCKickGuildMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[27]);
}

// ===================================================================

class CMsgClientToGCKickGuildMemberResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCKickGuildMemberResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCKickGuildMemberResponse::CMsgClientToGCKickGuildMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCKickGuildMemberResponse)
}
CMsgClientToGCKickGuildMemberResponse::CMsgClientToGCKickGuildMemberResponse(const CMsgClientToGCKickGuildMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCKickGuildMemberResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCKickGuildMemberResponse)
}

inline void CMsgClientToGCKickGuildMemberResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCKickGuildMemberResponse::~CMsgClientToGCKickGuildMemberResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCKickGuildMemberResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCKickGuildMemberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCKickGuildMemberResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCKickGuildMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCKickGuildMemberResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCKickGuildMemberResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCKickGuildMemberResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCKickGuildMemberResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCKickGuildMemberResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCKickGuildMemberResponse)
  return target;
}

size_t CMsgClientToGCKickGuildMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCKickGuildMemberResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCKickGuildMemberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCKickGuildMemberResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCKickGuildMemberResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCKickGuildMemberResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCKickGuildMemberResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCKickGuildMemberResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCKickGuildMemberResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCKickGuildMemberResponse::CopyFrom(const CMsgClientToGCKickGuildMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCKickGuildMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCKickGuildMemberResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCKickGuildMemberResponse::InternalSwap(CMsgClientToGCKickGuildMemberResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCKickGuildMemberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[28]);
}

// ===================================================================

class CMsgClientToGCSetGuildMemberRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildMemberRole>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCSetGuildMemberRole::CMsgClientToGCSetGuildMemberRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildMemberRole)
}
CMsgClientToGCSetGuildMemberRole::CMsgClientToGCSetGuildMemberRole(const CMsgClientToGCSetGuildMemberRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetGuildMemberRole* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.target_account_id_){}
    , decltype(_impl_.target_role_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.target_role_id_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_role_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildMemberRole)
}

inline void CMsgClientToGCSetGuildMemberRole::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.target_account_id_){0u}
    , decltype(_impl_.target_role_id_){0u}
  };
}

CMsgClientToGCSetGuildMemberRole::~CMsgClientToGCSetGuildMemberRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildMemberRole)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetGuildMemberRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetGuildMemberRole::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetGuildMemberRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildMemberRole)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.target_role_id_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_role_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildMemberRole::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_role_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_target_role_id(&has_bits);
          _impl_.target_role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetGuildMemberRole::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildMemberRole)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional uint32 target_role_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_target_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildMemberRole)
  return target;
}

size_t CMsgClientToGCSetGuildMemberRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildMemberRole)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

    // optional uint32 target_role_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_role_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetGuildMemberRole::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetGuildMemberRole::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetGuildMemberRole::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetGuildMemberRole::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetGuildMemberRole*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetGuildMemberRole&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildMemberRole)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_role_id_ = from._impl_.target_role_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetGuildMemberRole::CopyFrom(const CMsgClientToGCSetGuildMemberRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildMemberRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildMemberRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildMemberRole::InternalSwap(CMsgClientToGCSetGuildMemberRole* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildMemberRole, _impl_.target_role_id_)
      + sizeof(CMsgClientToGCSetGuildMemberRole::_impl_.target_role_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildMemberRole, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildMemberRole::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[29]);
}

// ===================================================================

class CMsgClientToGCSetGuildMemberRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildMemberRoleResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildMemberRoleResponse::CMsgClientToGCSetGuildMemberRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildMemberRoleResponse)
}
CMsgClientToGCSetGuildMemberRoleResponse::CMsgClientToGCSetGuildMemberRoleResponse(const CMsgClientToGCSetGuildMemberRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetGuildMemberRoleResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildMemberRoleResponse)
}

inline void CMsgClientToGCSetGuildMemberRoleResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCSetGuildMemberRoleResponse::~CMsgClientToGCSetGuildMemberRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildMemberRoleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetGuildMemberRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetGuildMemberRoleResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetGuildMemberRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildMemberRoleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildMemberRoleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSetGuildMemberRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetGuildMemberRoleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildMemberRoleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildMemberRoleResponse)
  return target;
}

size_t CMsgClientToGCSetGuildMemberRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildMemberRoleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetGuildMemberRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetGuildMemberRoleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetGuildMemberRoleResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetGuildMemberRoleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetGuildMemberRoleResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetGuildMemberRoleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildMemberRoleResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetGuildMemberRoleResponse::CopyFrom(const CMsgClientToGCSetGuildMemberRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildMemberRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildMemberRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildMemberRoleResponse::InternalSwap(CMsgClientToGCSetGuildMemberRoleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildMemberRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[30]);
}

// ===================================================================

class CMsgClientToGCInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCInviteToGuild>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCInviteToGuild::CMsgClientToGCInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCInviteToGuild)
}
CMsgClientToGCInviteToGuild::CMsgClientToGCInviteToGuild(const CMsgClientToGCInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCInviteToGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.target_account_id_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCInviteToGuild)
}

inline void CMsgClientToGCInviteToGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.target_account_id_){0u}
  };
}

CMsgClientToGCInviteToGuild::~CMsgClientToGCInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCInviteToGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCInviteToGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCInviteToGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.target_account_id_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCInviteToGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCInviteToGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCInviteToGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCInviteToGuild)
  return target;
}

size_t CMsgClientToGCInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCInviteToGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCInviteToGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCInviteToGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCInviteToGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCInviteToGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCInviteToGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCInviteToGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCInviteToGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCInviteToGuild::CopyFrom(const CMsgClientToGCInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCInviteToGuild::InternalSwap(CMsgClientToGCInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCInviteToGuild, _impl_.target_account_id_)
      + sizeof(CMsgClientToGCInviteToGuild::_impl_.target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCInviteToGuild, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCInviteToGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[31]);
}

// ===================================================================

class CMsgClientToGCInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCInviteToGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCInviteToGuildResponse::CMsgClientToGCInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCInviteToGuildResponse)
}
CMsgClientToGCInviteToGuildResponse::CMsgClientToGCInviteToGuildResponse(const CMsgClientToGCInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCInviteToGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCInviteToGuildResponse)
}

inline void CMsgClientToGCInviteToGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCInviteToGuildResponse::~CMsgClientToGCInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCInviteToGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCInviteToGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCInviteToGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCInviteToGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCInviteToGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCInviteToGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCInviteToGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCInviteToGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCInviteToGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCInviteToGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCInviteToGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCInviteToGuildResponse::CopyFrom(const CMsgClientToGCInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCInviteToGuildResponse::InternalSwap(CMsgClientToGCInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCInviteToGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[32]);
}

// ===================================================================

class CMsgClientToGCDeclineInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDeclineInviteToGuild>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCDeclineInviteToGuild::CMsgClientToGCDeclineInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDeclineInviteToGuild)
}
CMsgClientToGCDeclineInviteToGuild::CMsgClientToGCDeclineInviteToGuild(const CMsgClientToGCDeclineInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDeclineInviteToGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDeclineInviteToGuild)
}

inline void CMsgClientToGCDeclineInviteToGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCDeclineInviteToGuild::~CMsgClientToGCDeclineInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDeclineInviteToGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDeclineInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCDeclineInviteToGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDeclineInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDeclineInviteToGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDeclineInviteToGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDeclineInviteToGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDeclineInviteToGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDeclineInviteToGuild)
  return target;
}

size_t CMsgClientToGCDeclineInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDeclineInviteToGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDeclineInviteToGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDeclineInviteToGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDeclineInviteToGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDeclineInviteToGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDeclineInviteToGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDeclineInviteToGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDeclineInviteToGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDeclineInviteToGuild::CopyFrom(const CMsgClientToGCDeclineInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDeclineInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDeclineInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCDeclineInviteToGuild::InternalSwap(CMsgClientToGCDeclineInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDeclineInviteToGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[33]);
}

// ===================================================================

class CMsgClientToGCDeclineInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDeclineInviteToGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCDeclineInviteToGuildResponse::CMsgClientToGCDeclineInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDeclineInviteToGuildResponse)
}
CMsgClientToGCDeclineInviteToGuildResponse::CMsgClientToGCDeclineInviteToGuildResponse(const CMsgClientToGCDeclineInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDeclineInviteToGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDeclineInviteToGuildResponse)
}

inline void CMsgClientToGCDeclineInviteToGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCDeclineInviteToGuildResponse::~CMsgClientToGCDeclineInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDeclineInviteToGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDeclineInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCDeclineInviteToGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDeclineInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDeclineInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDeclineInviteToGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCDeclineInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDeclineInviteToGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDeclineInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDeclineInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCDeclineInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDeclineInviteToGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDeclineInviteToGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDeclineInviteToGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDeclineInviteToGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDeclineInviteToGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDeclineInviteToGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDeclineInviteToGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDeclineInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDeclineInviteToGuildResponse::CopyFrom(const CMsgClientToGCDeclineInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDeclineInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDeclineInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCDeclineInviteToGuildResponse::InternalSwap(CMsgClientToGCDeclineInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDeclineInviteToGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[34]);
}

// ===================================================================

class CMsgClientToGCAcceptInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptInviteToGuild>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAcceptInviteToGuild::CMsgClientToGCAcceptInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptInviteToGuild)
}
CMsgClientToGCAcceptInviteToGuild::CMsgClientToGCAcceptInviteToGuild(const CMsgClientToGCAcceptInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAcceptInviteToGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptInviteToGuild)
}

inline void CMsgClientToGCAcceptInviteToGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCAcceptInviteToGuild::~CMsgClientToGCAcceptInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptInviteToGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAcceptInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCAcceptInviteToGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAcceptInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptInviteToGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptInviteToGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAcceptInviteToGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptInviteToGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptInviteToGuild)
  return target;
}

size_t CMsgClientToGCAcceptInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptInviteToGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAcceptInviteToGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAcceptInviteToGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAcceptInviteToGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAcceptInviteToGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAcceptInviteToGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAcceptInviteToGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptInviteToGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAcceptInviteToGuild::CopyFrom(const CMsgClientToGCAcceptInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptInviteToGuild::InternalSwap(CMsgClientToGCAcceptInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptInviteToGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[35]);
}

// ===================================================================

class CMsgClientToGCAcceptInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptInviteToGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAcceptInviteToGuildResponse::CMsgClientToGCAcceptInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptInviteToGuildResponse)
}
CMsgClientToGCAcceptInviteToGuildResponse::CMsgClientToGCAcceptInviteToGuildResponse(const CMsgClientToGCAcceptInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAcceptInviteToGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptInviteToGuildResponse)
}

inline void CMsgClientToGCAcceptInviteToGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCAcceptInviteToGuildResponse::~CMsgClientToGCAcceptInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptInviteToGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAcceptInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCAcceptInviteToGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAcceptInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptInviteToGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAcceptInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAcceptInviteToGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCAcceptInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptInviteToGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAcceptInviteToGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAcceptInviteToGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAcceptInviteToGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAcceptInviteToGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAcceptInviteToGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAcceptInviteToGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAcceptInviteToGuildResponse::CopyFrom(const CMsgClientToGCAcceptInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptInviteToGuildResponse::InternalSwap(CMsgClientToGCAcceptInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptInviteToGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[36]);
}

// ===================================================================

class CMsgClientToGCCancelInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCancelInviteToGuild>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCCancelInviteToGuild::CMsgClientToGCCancelInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCancelInviteToGuild)
}
CMsgClientToGCCancelInviteToGuild::CMsgClientToGCCancelInviteToGuild(const CMsgClientToGCCancelInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCancelInviteToGuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.target_account_id_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCancelInviteToGuild)
}

inline void CMsgClientToGCCancelInviteToGuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.target_account_id_){0u}
  };
}

CMsgClientToGCCancelInviteToGuild::~CMsgClientToGCCancelInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCancelInviteToGuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCancelInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCancelInviteToGuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCancelInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCancelInviteToGuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.target_account_id_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.target_account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCancelInviteToGuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCancelInviteToGuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCancelInviteToGuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCancelInviteToGuild)
  return target;
}

size_t CMsgClientToGCCancelInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCancelInviteToGuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCancelInviteToGuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCancelInviteToGuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCancelInviteToGuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCancelInviteToGuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCancelInviteToGuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCancelInviteToGuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCancelInviteToGuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCancelInviteToGuild::CopyFrom(const CMsgClientToGCCancelInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCancelInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCancelInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCCancelInviteToGuild::InternalSwap(CMsgClientToGCCancelInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCancelInviteToGuild, _impl_.target_account_id_)
      + sizeof(CMsgClientToGCCancelInviteToGuild::_impl_.target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCancelInviteToGuild, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCancelInviteToGuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[37]);
}

// ===================================================================

class CMsgClientToGCCancelInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCancelInviteToGuildResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCancelInviteToGuildResponse::CMsgClientToGCCancelInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCancelInviteToGuildResponse)
}
CMsgClientToGCCancelInviteToGuildResponse::CMsgClientToGCCancelInviteToGuildResponse(const CMsgClientToGCCancelInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCancelInviteToGuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCancelInviteToGuildResponse)
}

inline void CMsgClientToGCCancelInviteToGuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCCancelInviteToGuildResponse::~CMsgClientToGCCancelInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCancelInviteToGuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCancelInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCancelInviteToGuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCancelInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCancelInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCancelInviteToGuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCancelInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCancelInviteToGuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCancelInviteToGuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCancelInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCCancelInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCancelInviteToGuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCancelInviteToGuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCancelInviteToGuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCancelInviteToGuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCancelInviteToGuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCancelInviteToGuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCancelInviteToGuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCancelInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCancelInviteToGuildResponse::CopyFrom(const CMsgClientToGCCancelInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCancelInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCancelInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCancelInviteToGuildResponse::InternalSwap(CMsgClientToGCCancelInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCancelInviteToGuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[38]);
}

// ===================================================================

class CMsgClientToGCAddGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddGuildRole>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCAddGuildRole::CMsgClientToGCAddGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddGuildRole)
}
CMsgClientToGCAddGuildRole::CMsgClientToGCAddGuildRole(const CMsgClientToGCAddGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAddGuildRole* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.role_name_){}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.role_flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_role_name()) {
    _this->_impl_.role_name_.Set(from._internal_role_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.role_flags_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.role_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddGuildRole)
}

inline void CMsgClientToGCAddGuildRole::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.role_name_){}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.role_flags_){0u}
  };
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCAddGuildRole::~CMsgClientToGCAddGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddGuildRole)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAddGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_name_.Destroy();
}

void CMsgClientToGCAddGuildRole::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAddGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddGuildRole)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.role_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.role_flags_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.role_flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddGuildRole::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string role_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_role_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCAddGuildRole.role_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_role_flags(&has_bits);
          _impl_.role_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAddGuildRole::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddGuildRole)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional string role_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCAddGuildRole.role_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_role_name(), target);
  }

  // optional uint32 role_flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_role_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddGuildRole)
  return target;
}

size_t CMsgClientToGCAddGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddGuildRole)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string role_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role_name());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 role_flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAddGuildRole::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAddGuildRole::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAddGuildRole::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAddGuildRole::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAddGuildRole*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAddGuildRole&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddGuildRole)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_role_name(from._internal_role_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.role_flags_ = from._impl_.role_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAddGuildRole::CopyFrom(const CMsgClientToGCAddGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddGuildRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddGuildRole::InternalSwap(CMsgClientToGCAddGuildRole* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.role_name_, lhs_arena,
      &other->_impl_.role_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRole, _impl_.role_flags_)
      + sizeof(CMsgClientToGCAddGuildRole::_impl_.role_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRole, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddGuildRole::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[39]);
}

// ===================================================================

class CMsgClientToGCAddGuildRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddGuildRoleResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCAddGuildRoleResponse::CMsgClientToGCAddGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddGuildRoleResponse)
}
CMsgClientToGCAddGuildRoleResponse::CMsgClientToGCAddGuildRoleResponse(const CMsgClientToGCAddGuildRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAddGuildRoleResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}
    , decltype(_impl_.role_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.role_id_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.role_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddGuildRoleResponse)
}

inline void CMsgClientToGCAddGuildRoleResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.role_id_){0u}
  };
}

CMsgClientToGCAddGuildRoleResponse::~CMsgClientToGCAddGuildRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddGuildRoleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAddGuildRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCAddGuildRoleResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAddGuildRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddGuildRoleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.role_id_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.role_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddGuildRoleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAddGuildRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_role_id(&has_bits);
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAddGuildRoleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddGuildRoleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 role_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddGuildRoleResponse)
  return target;
}

size_t CMsgClientToGCAddGuildRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddGuildRoleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 role_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAddGuildRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAddGuildRoleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAddGuildRoleResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAddGuildRoleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAddGuildRoleResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAddGuildRoleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.role_id_ = from._impl_.role_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAddGuildRoleResponse::CopyFrom(const CMsgClientToGCAddGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddGuildRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddGuildRoleResponse::InternalSwap(CMsgClientToGCAddGuildRoleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRoleResponse, _impl_.role_id_)
      + sizeof(CMsgClientToGCAddGuildRoleResponse::_impl_.role_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRoleResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddGuildRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[40]);
}

// ===================================================================

class CMsgClientToGCModifyGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModifyGuildRole>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_role_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCModifyGuildRole::CMsgClientToGCModifyGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModifyGuildRole)
}
CMsgClientToGCModifyGuildRole::CMsgClientToGCModifyGuildRole(const CMsgClientToGCModifyGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCModifyGuildRole* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.role_name_){}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.role_id_){}
    , decltype(_impl_.role_flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_role_name()) {
    _this->_impl_.role_name_.Set(from._internal_role_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.role_flags_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.role_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModifyGuildRole)
}

inline void CMsgClientToGCModifyGuildRole::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.role_name_){}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.role_id_){0u}
    , decltype(_impl_.role_flags_){0u}
  };
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCModifyGuildRole::~CMsgClientToGCModifyGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModifyGuildRole)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCModifyGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_name_.Destroy();
}

void CMsgClientToGCModifyGuildRole::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCModifyGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModifyGuildRole)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.role_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.role_flags_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.role_flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModifyGuildRole::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_role_id(&has_bits);
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string role_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_role_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCModifyGuildRole.role_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_role_flags(&has_bits);
          _impl_.role_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCModifyGuildRole::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModifyGuildRole)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 role_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role_id(), target);
  }

  // optional string role_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModifyGuildRole.role_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_role_name(), target);
  }

  // optional uint32 role_flags = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_role_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModifyGuildRole)
  return target;
}

size_t CMsgClientToGCModifyGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModifyGuildRole)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string role_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role_name());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 role_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_id());
    }

    // optional uint32 role_flags = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCModifyGuildRole::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCModifyGuildRole::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCModifyGuildRole::GetClassData() const { return &_class_data_; }


void CMsgClientToGCModifyGuildRole::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCModifyGuildRole*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCModifyGuildRole&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModifyGuildRole)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_role_name(from._internal_role_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.role_id_ = from._impl_.role_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.role_flags_ = from._impl_.role_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCModifyGuildRole::CopyFrom(const CMsgClientToGCModifyGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModifyGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModifyGuildRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCModifyGuildRole::InternalSwap(CMsgClientToGCModifyGuildRole* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.role_name_, lhs_arena,
      &other->_impl_.role_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCModifyGuildRole, _impl_.role_flags_)
      + sizeof(CMsgClientToGCModifyGuildRole::_impl_.role_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCModifyGuildRole, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModifyGuildRole::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[41]);
}

// ===================================================================

class CMsgClientToGCModifyGuildRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModifyGuildRoleResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCModifyGuildRoleResponse::CMsgClientToGCModifyGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModifyGuildRoleResponse)
}
CMsgClientToGCModifyGuildRoleResponse::CMsgClientToGCModifyGuildRoleResponse(const CMsgClientToGCModifyGuildRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCModifyGuildRoleResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModifyGuildRoleResponse)
}

inline void CMsgClientToGCModifyGuildRoleResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCModifyGuildRoleResponse::~CMsgClientToGCModifyGuildRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModifyGuildRoleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCModifyGuildRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCModifyGuildRoleResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCModifyGuildRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModifyGuildRoleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModifyGuildRoleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCModifyGuildRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCModifyGuildRoleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModifyGuildRoleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModifyGuildRoleResponse)
  return target;
}

size_t CMsgClientToGCModifyGuildRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModifyGuildRoleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCModifyGuildRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCModifyGuildRoleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCModifyGuildRoleResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCModifyGuildRoleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCModifyGuildRoleResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCModifyGuildRoleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModifyGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCModifyGuildRoleResponse::CopyFrom(const CMsgClientToGCModifyGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModifyGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModifyGuildRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCModifyGuildRoleResponse::InternalSwap(CMsgClientToGCModifyGuildRoleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModifyGuildRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[42]);
}

// ===================================================================

class CMsgClientToGCRemoveGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRemoveGuildRole>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRemoveGuildRole::CMsgClientToGCRemoveGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRemoveGuildRole)
}
CMsgClientToGCRemoveGuildRole::CMsgClientToGCRemoveGuildRole(const CMsgClientToGCRemoveGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRemoveGuildRole* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.role_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.role_id_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.role_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRemoveGuildRole)
}

inline void CMsgClientToGCRemoveGuildRole::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.role_id_){0u}
  };
}

CMsgClientToGCRemoveGuildRole::~CMsgClientToGCRemoveGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRemoveGuildRole)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRemoveGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRemoveGuildRole::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRemoveGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRemoveGuildRole)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.role_id_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.role_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRemoveGuildRole::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_role_id(&has_bits);
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRemoveGuildRole::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRemoveGuildRole)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 role_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRemoveGuildRole)
  return target;
}

size_t CMsgClientToGCRemoveGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRemoveGuildRole)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 role_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_role_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRemoveGuildRole::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRemoveGuildRole::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRemoveGuildRole::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRemoveGuildRole::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRemoveGuildRole*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRemoveGuildRole&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRemoveGuildRole)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.role_id_ = from._impl_.role_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRemoveGuildRole::CopyFrom(const CMsgClientToGCRemoveGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRemoveGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveGuildRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveGuildRole::InternalSwap(CMsgClientToGCRemoveGuildRole* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRemoveGuildRole, _impl_.role_id_)
      + sizeof(CMsgClientToGCRemoveGuildRole::_impl_.role_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRemoveGuildRole, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRemoveGuildRole::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[43]);
}

// ===================================================================

class CMsgClientToGCRemoveGuildRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRemoveGuildRoleResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRemoveGuildRoleResponse::CMsgClientToGCRemoveGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRemoveGuildRoleResponse)
}
CMsgClientToGCRemoveGuildRoleResponse::CMsgClientToGCRemoveGuildRoleResponse(const CMsgClientToGCRemoveGuildRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRemoveGuildRoleResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRemoveGuildRoleResponse)
}

inline void CMsgClientToGCRemoveGuildRoleResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRemoveGuildRoleResponse::~CMsgClientToGCRemoveGuildRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRemoveGuildRoleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRemoveGuildRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRemoveGuildRoleResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRemoveGuildRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRemoveGuildRoleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRemoveGuildRoleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRemoveGuildRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRemoveGuildRoleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRemoveGuildRoleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRemoveGuildRoleResponse)
  return target;
}

size_t CMsgClientToGCRemoveGuildRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRemoveGuildRoleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRemoveGuildRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRemoveGuildRoleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRemoveGuildRoleResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRemoveGuildRoleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRemoveGuildRoleResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRemoveGuildRoleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRemoveGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRemoveGuildRoleResponse::CopyFrom(const CMsgClientToGCRemoveGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRemoveGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveGuildRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveGuildRoleResponse::InternalSwap(CMsgClientToGCRemoveGuildRoleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRemoveGuildRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[44]);
}

// ===================================================================

class CMsgClientToGCSetGuildRoleOrder::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildRoleOrder>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildRoleOrder::CMsgClientToGCSetGuildRoleOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildRoleOrder)
}
CMsgClientToGCSetGuildRoleOrder::CMsgClientToGCSetGuildRoleOrder(const CMsgClientToGCSetGuildRoleOrder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetGuildRoleOrder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.requested_role_ids_){from._impl_.requested_role_ids_}
    , decltype(_impl_.previous_role_ids_){from._impl_.previous_role_ids_}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildRoleOrder)
}

inline void CMsgClientToGCSetGuildRoleOrder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.requested_role_ids_){arena}
    , decltype(_impl_.previous_role_ids_){arena}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCSetGuildRoleOrder::~CMsgClientToGCSetGuildRoleOrder() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildRoleOrder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetGuildRoleOrder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.requested_role_ids_.~RepeatedField();
  _impl_.previous_role_ids_.~RepeatedField();
}

void CMsgClientToGCSetGuildRoleOrder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetGuildRoleOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildRoleOrder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requested_role_ids_.Clear();
  _impl_.previous_role_ids_.Clear();
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildRoleOrder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 requested_role_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_requested_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_requested_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 previous_role_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_previous_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_previous_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetGuildRoleOrder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildRoleOrder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // repeated uint32 requested_role_ids = 2;
  for (int i = 0, n = this->_internal_requested_role_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_requested_role_ids(i), target);
  }

  // repeated uint32 previous_role_ids = 3;
  for (int i = 0, n = this->_internal_previous_role_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_previous_role_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildRoleOrder)
  return target;
}

size_t CMsgClientToGCSetGuildRoleOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildRoleOrder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 requested_role_ids = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.requested_role_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_requested_role_ids_size());
    total_size += data_size;
  }

  // repeated uint32 previous_role_ids = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.previous_role_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_previous_role_ids_size());
    total_size += data_size;
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetGuildRoleOrder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetGuildRoleOrder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetGuildRoleOrder::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetGuildRoleOrder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetGuildRoleOrder*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetGuildRoleOrder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildRoleOrder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.requested_role_ids_.MergeFrom(from._impl_.requested_role_ids_);
  _this->_impl_.previous_role_ids_.MergeFrom(from._impl_.previous_role_ids_);
  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetGuildRoleOrder::CopyFrom(const CMsgClientToGCSetGuildRoleOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildRoleOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildRoleOrder::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildRoleOrder::InternalSwap(CMsgClientToGCSetGuildRoleOrder* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.requested_role_ids_.InternalSwap(&other->_impl_.requested_role_ids_);
  _impl_.previous_role_ids_.InternalSwap(&other->_impl_.previous_role_ids_);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildRoleOrder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[45]);
}

// ===================================================================

class CMsgClientToGCSetGuildRoleOrderResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildRoleOrderResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildRoleOrderResponse::CMsgClientToGCSetGuildRoleOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildRoleOrderResponse)
}
CMsgClientToGCSetGuildRoleOrderResponse::CMsgClientToGCSetGuildRoleOrderResponse(const CMsgClientToGCSetGuildRoleOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetGuildRoleOrderResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.confirmed_role_ids_){from._impl_.confirmed_role_ids_}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildRoleOrderResponse)
}

inline void CMsgClientToGCSetGuildRoleOrderResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.confirmed_role_ids_){arena}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCSetGuildRoleOrderResponse::~CMsgClientToGCSetGuildRoleOrderResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildRoleOrderResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetGuildRoleOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.confirmed_role_ids_.~RepeatedField();
}

void CMsgClientToGCSetGuildRoleOrderResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetGuildRoleOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildRoleOrderResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.confirmed_role_ids_.Clear();
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildRoleOrderResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSetGuildRoleOrderResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 confirmed_role_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_confirmed_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_confirmed_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetGuildRoleOrderResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildRoleOrderResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated uint32 confirmed_role_ids = 2;
  for (int i = 0, n = this->_internal_confirmed_role_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_confirmed_role_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildRoleOrderResponse)
  return target;
}

size_t CMsgClientToGCSetGuildRoleOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildRoleOrderResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 confirmed_role_ids = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.confirmed_role_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_confirmed_role_ids_size());
    total_size += data_size;
  }

  // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetGuildRoleOrderResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetGuildRoleOrderResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetGuildRoleOrderResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetGuildRoleOrderResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetGuildRoleOrderResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetGuildRoleOrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildRoleOrderResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.confirmed_role_ids_.MergeFrom(from._impl_.confirmed_role_ids_);
  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetGuildRoleOrderResponse::CopyFrom(const CMsgClientToGCSetGuildRoleOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildRoleOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildRoleOrderResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildRoleOrderResponse::InternalSwap(CMsgClientToGCSetGuildRoleOrderResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.confirmed_role_ids_.InternalSwap(&other->_impl_.confirmed_role_ids_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildRoleOrderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[46]);
}

// ===================================================================

class CMsgClientToGCGuildFeedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGuildFeedRequest>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_last_seen_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGuildFeedRequest::CMsgClientToGCGuildFeedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGuildFeedRequest)
}
CMsgClientToGCGuildFeedRequest::CMsgClientToGCGuildFeedRequest(const CMsgClientToGCGuildFeedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGuildFeedRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.last_seen_id_){}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.last_seen_id_, &from._impl_.last_seen_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_id_) -
    reinterpret_cast<char*>(&_impl_.last_seen_id_)) + sizeof(_impl_.guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGuildFeedRequest)
}

inline void CMsgClientToGCGuildFeedRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.last_seen_id_){uint64_t{0u}}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCGuildFeedRequest::~CMsgClientToGCGuildFeedRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGuildFeedRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGuildFeedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGuildFeedRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGuildFeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGuildFeedRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.last_seen_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_id_) -
        reinterpret_cast<char*>(&_impl_.last_seen_id_)) + sizeof(_impl_.guild_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGuildFeedRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 last_seen_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_last_seen_id(&has_bits);
          _impl_.last_seen_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGuildFeedRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGuildFeedRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint64 last_seen_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_last_seen_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGuildFeedRequest)
  return target;
}

size_t CMsgClientToGCGuildFeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGuildFeedRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 last_seen_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_last_seen_id());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGuildFeedRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGuildFeedRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGuildFeedRequest::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGuildFeedRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGuildFeedRequest*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGuildFeedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGuildFeedRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.last_seen_id_ = from._impl_.last_seen_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGuildFeedRequest::CopyFrom(const CMsgClientToGCGuildFeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGuildFeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGuildFeedRequest::IsInitialized() const {
  return true;
}

void CMsgClientToGCGuildFeedRequest::InternalSwap(CMsgClientToGCGuildFeedRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGuildFeedRequest, _impl_.guild_id_)
      + sizeof(CMsgClientToGCGuildFeedRequest::_impl_.guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGuildFeedRequest, _impl_.last_seen_id_)>(
          reinterpret_cast<char*>(&_impl_.last_seen_id_),
          reinterpret_cast<char*>(&other->_impl_.last_seen_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGuildFeedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[47]);
}

// ===================================================================

class CMsgClientToGCRequestGuildFeedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildFeedResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRequestGuildFeedResponse::CMsgClientToGCRequestGuildFeedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildFeedResponse)
}
CMsgClientToGCRequestGuildFeedResponse::CMsgClientToGCRequestGuildFeedResponse(const CMsgClientToGCRequestGuildFeedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestGuildFeedResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.feed_events_){from._impl_.feed_events_}
    , decltype(_impl_.result_){}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_id_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildFeedResponse)
}

inline void CMsgClientToGCRequestGuildFeedResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.feed_events_){arena}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCRequestGuildFeedResponse::~CMsgClientToGCRequestGuildFeedResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildFeedResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestGuildFeedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.feed_events_.~RepeatedPtrField();
}

void CMsgClientToGCRequestGuildFeedResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildFeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildFeedResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feed_events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_id_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.guild_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildFeedResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildFeedResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGuildFeedEvent feed_events = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_feed_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestGuildFeedResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildFeedResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_id(), target);
  }

  // repeated .CMsgGuildFeedEvent feed_events = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_feed_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_feed_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildFeedResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildFeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildFeedResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildFeedEvent feed_events = 3;
  total_size += 1UL * this->_internal_feed_events_size();
  for (const auto& msg : this->_impl_.feed_events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestGuildFeedResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestGuildFeedResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestGuildFeedResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestGuildFeedResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestGuildFeedResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestGuildFeedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildFeedResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.feed_events_.MergeFrom(from._impl_.feed_events_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestGuildFeedResponse::CopyFrom(const CMsgClientToGCRequestGuildFeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildFeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildFeedResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildFeedResponse::InternalSwap(CMsgClientToGCRequestGuildFeedResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.feed_events_.InternalSwap(&other->_impl_.feed_events_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildFeedResponse, _impl_.guild_id_)
      + sizeof(CMsgClientToGCRequestGuildFeedResponse::_impl_.guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildFeedResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildFeedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[48]);
}

// ===================================================================

class CMsgGCToClientGuildFeedUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildFeedUpdated>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientGuildFeedUpdated::CMsgGCToClientGuildFeedUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildFeedUpdated)
}
CMsgGCToClientGuildFeedUpdated::CMsgGCToClientGuildFeedUpdated(const CMsgGCToClientGuildFeedUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientGuildFeedUpdated* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildFeedUpdated)
}

inline void CMsgGCToClientGuildFeedUpdated::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgGCToClientGuildFeedUpdated::~CMsgGCToClientGuildFeedUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildFeedUpdated)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientGuildFeedUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToClientGuildFeedUpdated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientGuildFeedUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildFeedUpdated)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildFeedUpdated::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientGuildFeedUpdated::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildFeedUpdated)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildFeedUpdated)
  return target;
}

size_t CMsgGCToClientGuildFeedUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildFeedUpdated)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientGuildFeedUpdated::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientGuildFeedUpdated::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientGuildFeedUpdated::GetClassData() const { return &_class_data_; }


void CMsgGCToClientGuildFeedUpdated::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientGuildFeedUpdated*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientGuildFeedUpdated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildFeedUpdated)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientGuildFeedUpdated::CopyFrom(const CMsgGCToClientGuildFeedUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildFeedUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildFeedUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildFeedUpdated::InternalSwap(CMsgGCToClientGuildFeedUpdated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildFeedUpdated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[49]);
}

// ===================================================================

class CMsgClientToGCAddPlayerToGuildChat::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddPlayerToGuildChat>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAddPlayerToGuildChat::CMsgClientToGCAddPlayerToGuildChat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddPlayerToGuildChat)
}
CMsgClientToGCAddPlayerToGuildChat::CMsgClientToGCAddPlayerToGuildChat(const CMsgClientToGCAddPlayerToGuildChat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAddPlayerToGuildChat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddPlayerToGuildChat)
}

inline void CMsgClientToGCAddPlayerToGuildChat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgClientToGCAddPlayerToGuildChat::~CMsgClientToGCAddPlayerToGuildChat() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddPlayerToGuildChat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAddPlayerToGuildChat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCAddPlayerToGuildChat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAddPlayerToGuildChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddPlayerToGuildChat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddPlayerToGuildChat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAddPlayerToGuildChat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddPlayerToGuildChat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddPlayerToGuildChat)
  return target;
}

size_t CMsgClientToGCAddPlayerToGuildChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddPlayerToGuildChat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAddPlayerToGuildChat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAddPlayerToGuildChat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAddPlayerToGuildChat::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAddPlayerToGuildChat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAddPlayerToGuildChat*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAddPlayerToGuildChat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddPlayerToGuildChat)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _this->_internal_set_guild_id(from._internal_guild_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAddPlayerToGuildChat::CopyFrom(const CMsgClientToGCAddPlayerToGuildChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddPlayerToGuildChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddPlayerToGuildChat::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddPlayerToGuildChat::InternalSwap(CMsgClientToGCAddPlayerToGuildChat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.guild_id_, other->_impl_.guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddPlayerToGuildChat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[50]);
}

// ===================================================================

class CMsgClientToGCAddPlayerToGuildChatResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddPlayerToGuildChatResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAddPlayerToGuildChatResponse::CMsgClientToGCAddPlayerToGuildChatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddPlayerToGuildChatResponse)
}
CMsgClientToGCAddPlayerToGuildChatResponse::CMsgClientToGCAddPlayerToGuildChatResponse(const CMsgClientToGCAddPlayerToGuildChatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAddPlayerToGuildChatResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddPlayerToGuildChatResponse)
}

inline void CMsgClientToGCAddPlayerToGuildChatResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCAddPlayerToGuildChatResponse::~CMsgClientToGCAddPlayerToGuildChatResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddPlayerToGuildChatResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAddPlayerToGuildChatResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCAddPlayerToGuildChatResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAddPlayerToGuildChatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddPlayerToGuildChatResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAddPlayerToGuildChatResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddPlayerToGuildChatResponse)
  return target;
}

size_t CMsgClientToGCAddPlayerToGuildChatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAddPlayerToGuildChatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAddPlayerToGuildChatResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAddPlayerToGuildChatResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAddPlayerToGuildChatResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAddPlayerToGuildChatResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAddPlayerToGuildChatResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAddPlayerToGuildChatResponse::CopyFrom(const CMsgClientToGCAddPlayerToGuildChatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddPlayerToGuildChatResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddPlayerToGuildChatResponse::InternalSwap(CMsgClientToGCAddPlayerToGuildChatResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddPlayerToGuildChatResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[51]);
}

// ===================================================================

class CMsgFindGuildByTagResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgFindGuildByTagResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgGuildSummary& guild_summary(const CMsgFindGuildByTagResponse* msg);
  static void set_has_guild_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildSummary&
CMsgFindGuildByTagResponse::_Internal::guild_summary(const CMsgFindGuildByTagResponse* msg) {
  return *msg->_impl_.guild_summary_;
}
CMsgFindGuildByTagResponse::CMsgFindGuildByTagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgFindGuildByTagResponse)
}
CMsgFindGuildByTagResponse::CMsgFindGuildByTagResponse(const CMsgFindGuildByTagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgFindGuildByTagResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_summary_){nullptr}
    , decltype(_impl_.result_){}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_summary()) {
    _this->_impl_.guild_summary_ = new ::CMsgGuildSummary(*from._impl_.guild_summary_);
  }
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_id_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgFindGuildByTagResponse)
}

inline void CMsgFindGuildByTagResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_summary_){nullptr}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgFindGuildByTagResponse::~CMsgFindGuildByTagResponse() {
  // @@protoc_insertion_point(destructor:CMsgFindGuildByTagResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgFindGuildByTagResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_summary_;
}

void CMsgFindGuildByTagResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgFindGuildByTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFindGuildByTagResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_summary_ != nullptr);
    _impl_.guild_summary_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_id_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.guild_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgFindGuildByTagResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgFindGuildByTagResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgFindGuildByTagResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgGuildSummary guild_summary = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_summary(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgFindGuildByTagResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFindGuildByTagResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildSummary guild_summary = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::guild_summary(this),
        _Internal::guild_summary(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFindGuildByTagResponse)
  return target;
}

size_t CMsgFindGuildByTagResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFindGuildByTagResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgGuildSummary guild_summary = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_summary_);
    }

    // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgFindGuildByTagResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgFindGuildByTagResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgFindGuildByTagResponse::GetClassData() const { return &_class_data_; }


void CMsgFindGuildByTagResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgFindGuildByTagResponse*>(&to_msg);
  auto& from = static_cast<const CMsgFindGuildByTagResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgFindGuildByTagResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_summary()->::CMsgGuildSummary::MergeFrom(
          from._internal_guild_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgFindGuildByTagResponse::CopyFrom(const CMsgFindGuildByTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFindGuildByTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFindGuildByTagResponse::IsInitialized() const {
  return true;
}

void CMsgFindGuildByTagResponse::InternalSwap(CMsgFindGuildByTagResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgFindGuildByTagResponse, _impl_.guild_id_)
      + sizeof(CMsgFindGuildByTagResponse::_impl_.guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgFindGuildByTagResponse, _impl_.guild_summary_)>(
          reinterpret_cast<char*>(&_impl_.guild_summary_),
          reinterpret_cast<char*>(&other->_impl_.guild_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgFindGuildByTagResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[52]);
}

// ===================================================================

class CMsgSearchForOpenGuildsResponse_SearchResult::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgSearchForOpenGuildsResponse_SearchResult>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildSummary& guild_summary(const CMsgSearchForOpenGuildsResponse_SearchResult* msg);
  static void set_has_guild_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildSummary&
CMsgSearchForOpenGuildsResponse_SearchResult::_Internal::guild_summary(const CMsgSearchForOpenGuildsResponse_SearchResult* msg) {
  return *msg->_impl_.guild_summary_;
}
CMsgSearchForOpenGuildsResponse_SearchResult::CMsgSearchForOpenGuildsResponse_SearchResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgSearchForOpenGuildsResponse.SearchResult)
}
CMsgSearchForOpenGuildsResponse_SearchResult::CMsgSearchForOpenGuildsResponse_SearchResult(const CMsgSearchForOpenGuildsResponse_SearchResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgSearchForOpenGuildsResponse_SearchResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_summary_){nullptr}
    , decltype(_impl_.guild_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_summary()) {
    _this->_impl_.guild_summary_ = new ::CMsgGuildSummary(*from._impl_.guild_summary_);
  }
  _this->_impl_.guild_id_ = from._impl_.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgSearchForOpenGuildsResponse.SearchResult)
}

inline void CMsgSearchForOpenGuildsResponse_SearchResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_summary_){nullptr}
    , decltype(_impl_.guild_id_){0u}
  };
}

CMsgSearchForOpenGuildsResponse_SearchResult::~CMsgSearchForOpenGuildsResponse_SearchResult() {
  // @@protoc_insertion_point(destructor:CMsgSearchForOpenGuildsResponse.SearchResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgSearchForOpenGuildsResponse_SearchResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.guild_summary_;
}

void CMsgSearchForOpenGuildsResponse_SearchResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgSearchForOpenGuildsResponse_SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.guild_summary_ != nullptr);
    _impl_.guild_summary_->Clear();
  }
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgSearchForOpenGuildsResponse_SearchResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgGuildSummary guild_summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_summary(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgSearchForOpenGuildsResponse_SearchResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildSummary guild_summary = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::guild_summary(this),
        _Internal::guild_summary(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSearchForOpenGuildsResponse.SearchResult)
  return target;
}

size_t CMsgSearchForOpenGuildsResponse_SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildSummary guild_summary = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.guild_summary_);
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgSearchForOpenGuildsResponse_SearchResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgSearchForOpenGuildsResponse_SearchResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgSearchForOpenGuildsResponse_SearchResult::GetClassData() const { return &_class_data_; }


void CMsgSearchForOpenGuildsResponse_SearchResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgSearchForOpenGuildsResponse_SearchResult*>(&to_msg);
  auto& from = static_cast<const CMsgSearchForOpenGuildsResponse_SearchResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_guild_summary()->::CMsgGuildSummary::MergeFrom(
          from._internal_guild_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSearchForOpenGuildsResponse_SearchResult::CopyFrom(const CMsgSearchForOpenGuildsResponse_SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSearchForOpenGuildsResponse_SearchResult::IsInitialized() const {
  return true;
}

void CMsgSearchForOpenGuildsResponse_SearchResult::InternalSwap(CMsgSearchForOpenGuildsResponse_SearchResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse_SearchResult, _impl_.guild_id_)
      + sizeof(CMsgSearchForOpenGuildsResponse_SearchResult::_impl_.guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse_SearchResult, _impl_.guild_summary_)>(
          reinterpret_cast<char*>(&_impl_.guild_summary_),
          reinterpret_cast<char*>(&other->_impl_.guild_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgSearchForOpenGuildsResponse_SearchResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[53]);
}

// ===================================================================

class CMsgSearchForOpenGuildsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgSearchForOpenGuildsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_whitelist(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgSearchForOpenGuildsResponse::CMsgSearchForOpenGuildsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgSearchForOpenGuildsResponse)
}
CMsgSearchForOpenGuildsResponse::CMsgSearchForOpenGuildsResponse(const CMsgSearchForOpenGuildsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgSearchForOpenGuildsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.search_results_){from._impl_.search_results_}
    , decltype(_impl_.result_){}
    , decltype(_impl_.use_whitelist_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.use_whitelist_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.use_whitelist_));
  // @@protoc_insertion_point(copy_constructor:CMsgSearchForOpenGuildsResponse)
}

inline void CMsgSearchForOpenGuildsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.search_results_){arena}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.use_whitelist_){false}
  };
}

CMsgSearchForOpenGuildsResponse::~CMsgSearchForOpenGuildsResponse() {
  // @@protoc_insertion_point(destructor:CMsgSearchForOpenGuildsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgSearchForOpenGuildsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.search_results_.~RepeatedPtrField();
}

void CMsgSearchForOpenGuildsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgSearchForOpenGuildsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSearchForOpenGuildsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.search_results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.use_whitelist_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.use_whitelist_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgSearchForOpenGuildsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgSearchForOpenGuildsResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgSearchForOpenGuildsResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_search_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool use_whitelist = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_use_whitelist(&has_bits);
          _impl_.use_whitelist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgSearchForOpenGuildsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSearchForOpenGuildsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_search_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_search_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool use_whitelist = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_use_whitelist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSearchForOpenGuildsResponse)
  return target;
}

size_t CMsgSearchForOpenGuildsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSearchForOpenGuildsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
  total_size += 1UL * this->_internal_search_results_size();
  for (const auto& msg : this->_impl_.search_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional bool use_whitelist = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgSearchForOpenGuildsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgSearchForOpenGuildsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgSearchForOpenGuildsResponse::GetClassData() const { return &_class_data_; }


void CMsgSearchForOpenGuildsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgSearchForOpenGuildsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgSearchForOpenGuildsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSearchForOpenGuildsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.search_results_.MergeFrom(from._impl_.search_results_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.use_whitelist_ = from._impl_.use_whitelist_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSearchForOpenGuildsResponse::CopyFrom(const CMsgSearchForOpenGuildsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSearchForOpenGuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSearchForOpenGuildsResponse::IsInitialized() const {
  return true;
}

void CMsgSearchForOpenGuildsResponse::InternalSwap(CMsgSearchForOpenGuildsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.search_results_.InternalSwap(&other->_impl_.search_results_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse, _impl_.use_whitelist_)
      + sizeof(CMsgSearchForOpenGuildsResponse::_impl_.use_whitelist_)
      - PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgSearchForOpenGuildsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[54]);
}

// ===================================================================

class CMsgClientToGCReportGuildContent::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReportGuildContent>()._impl_._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_content_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCReportGuildContent::CMsgClientToGCReportGuildContent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReportGuildContent)
}
CMsgClientToGCReportGuildContent::CMsgClientToGCReportGuildContent(const CMsgClientToGCReportGuildContent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCReportGuildContent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){}
    , decltype(_impl_.guild_content_flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guild_id_, &from._impl_.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.guild_content_flags_) -
    reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.guild_content_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReportGuildContent)
}

inline void CMsgClientToGCReportGuildContent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.guild_id_){0u}
    , decltype(_impl_.guild_content_flags_){0u}
  };
}

CMsgClientToGCReportGuildContent::~CMsgClientToGCReportGuildContent() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReportGuildContent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCReportGuildContent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCReportGuildContent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCReportGuildContent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReportGuildContent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.guild_content_flags_) -
        reinterpret_cast<char*>(&_impl_.guild_id_)) + sizeof(_impl_.guild_content_flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReportGuildContent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          _impl_.guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 guild_content_flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_guild_content_flags(&has_bits);
          _impl_.guild_content_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCReportGuildContent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReportGuildContent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 guild_content_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_content_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReportGuildContent)
  return target;
}

size_t CMsgClientToGCReportGuildContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReportGuildContent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_id());
    }

    // optional uint32 guild_content_flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_guild_content_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCReportGuildContent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCReportGuildContent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCReportGuildContent::GetClassData() const { return &_class_data_; }


void CMsgClientToGCReportGuildContent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCReportGuildContent*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCReportGuildContent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReportGuildContent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guild_id_ = from._impl_.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guild_content_flags_ = from._impl_.guild_content_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCReportGuildContent::CopyFrom(const CMsgClientToGCReportGuildContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReportGuildContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReportGuildContent::IsInitialized() const {
  return true;
}

void CMsgClientToGCReportGuildContent::InternalSwap(CMsgClientToGCReportGuildContent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCReportGuildContent, _impl_.guild_content_flags_)
      + sizeof(CMsgClientToGCReportGuildContent::_impl_.guild_content_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCReportGuildContent, _impl_.guild_id_)>(
          reinterpret_cast<char*>(&_impl_.guild_id_),
          reinterpret_cast<char*>(&other->_impl_.guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReportGuildContent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[55]);
}

// ===================================================================

class CMsgClientToGCReportGuildContentResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReportGuildContentResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCReportGuildContentResponse::CMsgClientToGCReportGuildContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReportGuildContentResponse)
}
CMsgClientToGCReportGuildContentResponse::CMsgClientToGCReportGuildContentResponse(const CMsgClientToGCReportGuildContentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCReportGuildContentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReportGuildContentResponse)
}

inline void CMsgClientToGCReportGuildContentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCReportGuildContentResponse::~CMsgClientToGCReportGuildContentResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReportGuildContentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCReportGuildContentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCReportGuildContentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCReportGuildContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReportGuildContentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReportGuildContentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCReportGuildContentResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCReportGuildContentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReportGuildContentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReportGuildContentResponse)
  return target;
}

size_t CMsgClientToGCReportGuildContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReportGuildContentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCReportGuildContentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCReportGuildContentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCReportGuildContentResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCReportGuildContentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCReportGuildContentResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCReportGuildContentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReportGuildContentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCReportGuildContentResponse::CopyFrom(const CMsgClientToGCReportGuildContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReportGuildContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReportGuildContentResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCReportGuildContentResponse::InternalSwap(CMsgClientToGCReportGuildContentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReportGuildContentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[56]);
}

// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestAccountGuildPersonaInfo>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestAccountGuildPersonaInfo::CMsgClientToGCRequestAccountGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfo)
}
CMsgClientToGCRequestAccountGuildPersonaInfo::CMsgClientToGCRequestAccountGuildPersonaInfo(const CMsgClientToGCRequestAccountGuildPersonaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestAccountGuildPersonaInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfo)
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCRequestAccountGuildPersonaInfo::~CMsgClientToGCRequestAccountGuildPersonaInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestAccountGuildPersonaInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfo)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestAccountGuildPersonaInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestAccountGuildPersonaInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestAccountGuildPersonaInfo::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestAccountGuildPersonaInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestAccountGuildPersonaInfo*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestAccountGuildPersonaInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfo::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[57]);
}

// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestAccountGuildPersonaInfoResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountGuildsPersonaInfo& persona_info(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse* msg);
  static void set_has_persona_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountGuildsPersonaInfo&
CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_Internal::persona_info(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse* msg) {
  return *msg->_impl_.persona_info_;
}
CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CMsgClientToGCRequestAccountGuildPersonaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
}
CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CMsgClientToGCRequestAccountGuildPersonaInfoResponse(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.persona_info_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_persona_info()) {
    _this->_impl_.persona_info_ = new ::CMsgAccountGuildsPersonaInfo(*from._impl_.persona_info_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.persona_info_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestAccountGuildPersonaInfoResponse::~CMsgClientToGCRequestAccountGuildPersonaInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.persona_info_;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.persona_info_ != nullptr);
    _impl_.persona_info_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_persona_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::persona_info(this),
        _Internal::persona_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.persona_info_);
    }

    // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestAccountGuildPersonaInfoResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestAccountGuildPersonaInfoResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestAccountGuildPersonaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_persona_info()->::CMsgAccountGuildsPersonaInfo::MergeFrom(
          from._internal_persona_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _impl_.result_)
      + sizeof(CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _impl_.persona_info_)>(
          reinterpret_cast<char*>(&_impl_.persona_info_),
          reinterpret_cast<char*>(&other->_impl_.persona_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[58]);
}

// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_Internal {
 public:
};

CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CMsgClientToGCRequestAccountGuildPersonaInfoBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
}
CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CMsgClientToGCRequestAccountGuildPersonaInfoBatch(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestAccountGuildPersonaInfoBatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_ids_){from._impl_.account_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgClientToGCRequestAccountGuildPersonaInfoBatch::~CMsgClientToGCRequestAccountGuildPersonaInfoBatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.account_ids_.~RepeatedField();
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 account_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_account_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 account_ids = 1;
  for (int i = 0, n = this->_internal_account_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfoBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 account_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.account_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_account_ids_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestAccountGuildPersonaInfoBatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestAccountGuildPersonaInfoBatch::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestAccountGuildPersonaInfoBatch*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestAccountGuildPersonaInfoBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.account_ids_.MergeFrom(from._impl_.account_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfoBatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.account_ids_.InternalSwap(&other->_impl_.account_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfoBatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[59]);
}

// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
}
CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.persona_infos_){from._impl_.persona_infos_}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.persona_infos_){arena}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::~CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.persona_infos_.~RepeatedPtrField();
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.persona_infos_.Clear();
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_persona_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_persona_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_persona_infos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
  total_size += 1UL * this->_internal_persona_infos_size();
  for (const auto& msg : this->_impl_.persona_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.persona_infos_.MergeFrom(from._impl_.persona_infos_);
  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.persona_infos_.InternalSwap(&other->_impl_.persona_infos_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[60]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgGuildInfo*
Arena::CreateMaybeMessage< ::CMsgGuildInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildSummary_EventPoints*
Arena::CreateMaybeMessage< ::CMsgGuildSummary_EventPoints >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildSummary_EventPoints >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildSummary*
Arena::CreateMaybeMessage< ::CMsgGuildSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildRole*
Arena::CreateMaybeMessage< ::CMsgGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildMember*
Arena::CreateMaybeMessage< ::CMsgGuildMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildInvite*
Arena::CreateMaybeMessage< ::CMsgGuildInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildData*
Arena::CreateMaybeMessage< ::CMsgGuildData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountGuildInvite*
Arena::CreateMaybeMessage< ::CMsgAccountGuildInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountGuildInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountGuildMemberships*
Arena::CreateMaybeMessage< ::CMsgAccountGuildMemberships >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountGuildMemberships >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildPersonaInfo*
Arena::CreateMaybeMessage< ::CMsgGuildPersonaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildPersonaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountGuildsPersonaInfo*
Arena::CreateMaybeMessage< ::CMsgAccountGuildsPersonaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountGuildsPersonaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildFeedEvent*
Arena::CreateMaybeMessage< ::CMsgGuildFeedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildFeedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCreateGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCCreateGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCreateGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCreateGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCCreateGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCreateGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildInfo*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildInfoResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildData*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildDataResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildDataUpdated*
Arena::CreateMaybeMessage< ::CMsgGCToClientGuildDataUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildDataUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildMembersDataUpdated*
Arena::CreateMaybeMessage< ::CMsgGCToClientGuildMembersDataUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildMembersDataUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildMembership*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildMembership >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildMembership >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildMembershipResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildMembershipResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildMembershipResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildMembershipUpdated*
Arena::CreateMaybeMessage< ::CMsgGCToClientGuildMembershipUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildMembershipUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCJoinGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCJoinGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeaveGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCLeaveGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeaveGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeaveGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCLeaveGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeaveGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCKickGuildMember*
Arena::CreateMaybeMessage< ::CMsgClientToGCKickGuildMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCKickGuildMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCKickGuildMemberResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCKickGuildMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCKickGuildMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildMemberRole*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildMemberRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildMemberRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildMemberRoleResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildMemberRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildMemberRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCInviteToGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCInviteToGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDeclineInviteToGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCDeclineInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDeclineInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDeclineInviteToGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCDeclineInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDeclineInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptInviteToGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptInviteToGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCancelInviteToGuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCCancelInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCancelInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCancelInviteToGuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCCancelInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCancelInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddGuildRole*
Arena::CreateMaybeMessage< ::CMsgClientToGCAddGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddGuildRoleResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCAddGuildRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddGuildRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModifyGuildRole*
Arena::CreateMaybeMessage< ::CMsgClientToGCModifyGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModifyGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModifyGuildRoleResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCModifyGuildRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModifyGuildRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRemoveGuildRole*
Arena::CreateMaybeMessage< ::CMsgClientToGCRemoveGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRemoveGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRemoveGuildRoleResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRemoveGuildRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRemoveGuildRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildRoleOrder*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildRoleOrder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildRoleOrder >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildRoleOrderResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildRoleOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildRoleOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGuildFeedRequest*
Arena::CreateMaybeMessage< ::CMsgClientToGCGuildFeedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGuildFeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildFeedResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildFeedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildFeedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildFeedUpdated*
Arena::CreateMaybeMessage< ::CMsgGCToClientGuildFeedUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildFeedUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddPlayerToGuildChat*
Arena::CreateMaybeMessage< ::CMsgClientToGCAddPlayerToGuildChat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddPlayerToGuildChat >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddPlayerToGuildChatResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCAddPlayerToGuildChatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddPlayerToGuildChatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgFindGuildByTagResponse*
Arena::CreateMaybeMessage< ::CMsgFindGuildByTagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgFindGuildByTagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgSearchForOpenGuildsResponse_SearchResult*
Arena::CreateMaybeMessage< ::CMsgSearchForOpenGuildsResponse_SearchResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgSearchForOpenGuildsResponse_SearchResult >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgSearchForOpenGuildsResponse*
Arena::CreateMaybeMessage< ::CMsgSearchForOpenGuildsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgSearchForOpenGuildsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReportGuildContent*
Arena::CreateMaybeMessage< ::CMsgClientToGCReportGuildContent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReportGuildContent >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReportGuildContentResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCReportGuildContentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReportGuildContentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfo*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
