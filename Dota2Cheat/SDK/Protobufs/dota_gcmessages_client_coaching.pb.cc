// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_coaching.proto

#include "dota_gcmessages_client_coaching.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR CMsgPlayerCoachMatch::CMsgPlayerCoachMatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.teammate_ratings_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.match_outcome_)*/0
  , /*decltype(_impl_.coached_team_)*/0u
  , /*decltype(_impl_.start_time_)*/0u
  , /*decltype(_impl_.duration_)*/0u
  , /*decltype(_impl_.coach_flags_)*/0u} {}
struct CMsgPlayerCoachMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPlayerCoachMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPlayerCoachMatchDefaultTypeInternal() {}
  union {
    CMsgPlayerCoachMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPlayerCoachMatchDefaultTypeInternal _CMsgPlayerCoachMatch_default_instance_;
PROTOBUF_CONSTEXPR CMsgPrivateCoachingSessionMember::CMsgPrivateCoachingSessionMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.member_flags_)*/0u
  , /*decltype(_impl_.member_session_rating_)*/0} {}
struct CMsgPrivateCoachingSessionMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPrivateCoachingSessionMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPrivateCoachingSessionMemberDefaultTypeInternal() {}
  union {
    CMsgPrivateCoachingSessionMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPrivateCoachingSessionMemberDefaultTypeInternal _CMsgPrivateCoachingSessionMember_default_instance_;
PROTOBUF_CONSTEXPR CMsgPrivateCoachingSession::CMsgPrivateCoachingSession(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.session_members_)*/{}
  , /*decltype(_impl_.private_coaching_session_id_)*/uint64_t{0u}
  , /*decltype(_impl_.requested_timestamp_)*/0u
  , /*decltype(_impl_.requested_language_)*/0u
  , /*decltype(_impl_.current_lobby_id_)*/uint64_t{0u}
  , /*decltype(_impl_.coaching_session_state_)*/0
  , /*decltype(_impl_.accepted_timestamp_)*/0u
  , /*decltype(_impl_.current_server_steam_id_)*/uint64_t{0u}
  , /*decltype(_impl_.completed_timestamp_)*/0u} {}
struct CMsgPrivateCoachingSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPrivateCoachingSessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPrivateCoachingSessionDefaultTypeInternal _CMsgPrivateCoachingSession_default_instance_;
PROTOBUF_CONSTEXPR CMsgPrivateCoachingSessionStatus::CMsgPrivateCoachingSessionStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.requester_competitive_rank_tier_)*/0u
  , /*decltype(_impl_.requester_games_played_)*/0u} {}
struct CMsgPrivateCoachingSessionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPrivateCoachingSessionStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPrivateCoachingSessionStatusDefaultTypeInternal() {}
  union {
    CMsgPrivateCoachingSessionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPrivateCoachingSessionStatusDefaultTypeInternal _CMsgPrivateCoachingSessionStatus_default_instance_;
PROTOBUF_CONSTEXPR CMsgAvailablePrivateCoachingSession::CMsgAvailablePrivateCoachingSession(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_)*/nullptr
  , /*decltype(_impl_.coaching_session_status_)*/nullptr} {}
struct CMsgAvailablePrivateCoachingSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAvailablePrivateCoachingSessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAvailablePrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgAvailablePrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAvailablePrivateCoachingSessionDefaultTypeInternal _CMsgAvailablePrivateCoachingSession_default_instance_;
PROTOBUF_CONSTEXPR CMsgAvailablePrivateCoachingSessionList::CMsgAvailablePrivateCoachingSessionList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.available_coaching_sessions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal() {}
  union {
    CMsgAvailablePrivateCoachingSessionList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal _CMsgAvailablePrivateCoachingSessionList_default_instance_;
PROTOBUF_CONSTEXPR CMsgAvailablePrivateCoachingSessionSummary::CMsgAvailablePrivateCoachingSessionSummary(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_count_)*/0u} {}
struct CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal() {}
  union {
    CMsgAvailablePrivateCoachingSessionSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal _CMsgAvailablePrivateCoachingSessionSummary_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatches::CMsgClientToGCRequestPlayerCoachMatches(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatches _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatches_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatchesResponse::CMsgClientToGCRequestPlayerCoachMatchesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coach_matches_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatchesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatchesResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatch::CMsgClientToGCRequestPlayerCoachMatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatch_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatchResponse::CMsgClientToGCRequestPlayerCoachMatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coach_match_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatchResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSubmitCoachTeammateRating::CMsgClientToGCSubmitCoachTeammateRating(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.coach_account_id_)*/0u
  , /*decltype(_impl_.rating_)*/0} {}
struct CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitCoachTeammateRating _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal _CMsgClientToGCSubmitCoachTeammateRating_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSubmitCoachTeammateRatingResponse::CMsgClientToGCSubmitCoachTeammateRatingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitCoachTeammateRatingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal _CMsgClientToGCSubmitCoachTeammateRatingResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientCoachTeammateRatingsChanged::CMsgGCToClientCoachTeammateRatingsChanged(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coach_match_)*/nullptr} {}
struct CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal() {}
  union {
    CMsgGCToClientCoachTeammateRatingsChanged _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal _CMsgGCToClientCoachTeammateRatingsChanged_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestPrivateCoachingSession::CMsgClientToGCRequestPrivateCoachingSession(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.language_)*/0u} {}
struct CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCRequestPrivateCoachingSession_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestPrivateCoachingSessionResponse::CMsgClientToGCRequestPrivateCoachingSessionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCRequestPrivateCoachingSessionResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAcceptPrivateCoachingSession::CMsgClientToGCAcceptPrivateCoachingSession(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCAcceptPrivateCoachingSession_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCAcceptPrivateCoachingSessionResponse::CMsgClientToGCAcceptPrivateCoachingSessionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptPrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCAcceptPrivateCoachingSessionResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCLeavePrivateCoachingSession::CMsgClientToGCLeavePrivateCoachingSession(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeavePrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCLeavePrivateCoachingSession_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCLeavePrivateCoachingSessionResponse::CMsgClientToGCLeavePrivateCoachingSessionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeavePrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCLeavePrivateCoachingSessionResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetCurrentPrivateCoachingSession::CMsgClientToGCGetCurrentPrivateCoachingSession(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetCurrentPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCGetCurrentPrivateCoachingSession_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.current_session_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientPrivateCoachingSessionUpdated::CMsgGCToClientPrivateCoachingSessionUpdated(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_)*/nullptr} {}
struct CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientPrivateCoachingSessionUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal _CMsgGCToClientPrivateCoachingSessionUpdated_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPrivateCoachingSessionRating::CMsgClientToGCSubmitPrivateCoachingSessionRating(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_id_)*/uint64_t{0u}
  , /*decltype(_impl_.session_rating_)*/0} {}
struct CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitPrivateCoachingSessionRating _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal _CMsgClientToGCSubmitPrivateCoachingSessionRating_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal _CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessions::CMsgClientToGCGetAvailablePrivateCoachingSessions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.language_)*/0u} {}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessions_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.available_sessions_list_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coaching_session_summary_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCJoinPrivateCoachingSessionLobby::CMsgClientToGCJoinPrivateCoachingSessionLobby(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinPrivateCoachingSessionLobby _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal _CMsgClientToGCJoinPrivateCoachingSessionLobby_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal _CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCoachFriend::CMsgClientToGCCoachFriend(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCCoachFriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCoachFriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCoachFriendDefaultTypeInternal() {}
  union {
    CMsgClientToGCCoachFriend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCoachFriendDefaultTypeInternal _CMsgClientToGCCoachFriend_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCoachFriendResponse::CMsgClientToGCCoachFriendResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCCoachFriendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCoachFriendResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCoachFriendResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCoachFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCoachFriendResponseDefaultTypeInternal _CMsgClientToGCCoachFriendResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRespondToCoachFriendRequest::CMsgClientToGCRespondToCoachFriendRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.coach_account_id_)*/0u
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal() {}
  union {
    CMsgClientToGCRespondToCoachFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal _CMsgClientToGCRespondToCoachFriendRequest_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRespondToCoachFriendRequestResponse::CMsgClientToGCRespondToCoachFriendRequestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRespondToCoachFriendRequestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal _CMsgClientToGCRespondToCoachFriendRequestResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[35];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[17];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto = nullptr;

const uint32_t TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.match_outcome_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.coached_team_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.start_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.duration_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.teammate_ratings_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _impl_.coach_flags_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _impl_.member_flags_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _impl_.member_session_rating_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.private_coaching_session_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.requested_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.requested_language_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.coaching_session_state_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.session_members_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.current_lobby_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.current_server_steam_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.accepted_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _impl_.completed_timestamp_),
  0,
  1,
  2,
  4,
  ~0u,
  3,
  6,
  5,
  7,
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, _impl_.requester_competitive_rank_tier_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, _impl_.requester_games_played_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, _impl_.coaching_session_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, _impl_.coaching_session_status_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionList, _impl_.available_coaching_sessions_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionSummary, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionSummary, _impl_.coaching_session_count_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatches, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, _impl_.coach_matches_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatch, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatch, _impl_.match_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, _impl_.coach_match_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _impl_.coach_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _impl_.rating_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _impl_.reason_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRatingResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRatingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRatingResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCoachTeammateRatingsChanged, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCoachTeammateRatingsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCoachTeammateRatingsChanged, _impl_.coach_match_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSession, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSession, _impl_.language_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, _impl_.coaching_session_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSession, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSession, _impl_.coaching_session_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, _impl_.coaching_session_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSessionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSessionResponse, _impl_.result_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _impl_.current_session_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPrivateCoachingSessionUpdated, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPrivateCoachingSessionUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPrivateCoachingSessionUpdated, _impl_.coaching_session_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, _impl_.coaching_session_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, _impl_.session_rating_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessions, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessions, _impl_.language_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _impl_.available_sessions_list_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _impl_.coaching_session_summary_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriend, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriend, _impl_.target_account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriendResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriendResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, _impl_.coach_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, _impl_.response_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequestResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequestResponse, _impl_.result_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, -1, sizeof(::CMsgPlayerCoachMatch)},
  { 20, 29, -1, sizeof(::CMsgPrivateCoachingSessionMember)},
  { 32, 47, -1, sizeof(::CMsgPrivateCoachingSession)},
  { 56, 64, -1, sizeof(::CMsgPrivateCoachingSessionStatus)},
  { 66, 74, -1, sizeof(::CMsgAvailablePrivateCoachingSession)},
  { 76, -1, -1, sizeof(::CMsgAvailablePrivateCoachingSessionList)},
  { 83, 90, -1, sizeof(::CMsgAvailablePrivateCoachingSessionSummary)},
  { 91, -1, -1, sizeof(::CMsgClientToGCRequestPlayerCoachMatches)},
  { 97, 105, -1, sizeof(::CMsgClientToGCRequestPlayerCoachMatchesResponse)},
  { 107, 114, -1, sizeof(::CMsgClientToGCRequestPlayerCoachMatch)},
  { 115, 123, -1, sizeof(::CMsgClientToGCRequestPlayerCoachMatchResponse)},
  { 125, 135, -1, sizeof(::CMsgClientToGCSubmitCoachTeammateRating)},
  { 139, 146, -1, sizeof(::CMsgClientToGCSubmitCoachTeammateRatingResponse)},
  { 147, 154, -1, sizeof(::CMsgGCToClientCoachTeammateRatingsChanged)},
  { 155, 162, -1, sizeof(::CMsgClientToGCRequestPrivateCoachingSession)},
  { 163, 171, -1, sizeof(::CMsgClientToGCRequestPrivateCoachingSessionResponse)},
  { 173, 180, -1, sizeof(::CMsgClientToGCAcceptPrivateCoachingSession)},
  { 181, 189, -1, sizeof(::CMsgClientToGCAcceptPrivateCoachingSessionResponse)},
  { 191, -1, -1, sizeof(::CMsgClientToGCLeavePrivateCoachingSession)},
  { 197, 204, -1, sizeof(::CMsgClientToGCLeavePrivateCoachingSessionResponse)},
  { 205, -1, -1, sizeof(::CMsgClientToGCGetCurrentPrivateCoachingSession)},
  { 211, 219, -1, sizeof(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)},
  { 221, 228, -1, sizeof(::CMsgGCToClientPrivateCoachingSessionUpdated)},
  { 229, 237, -1, sizeof(::CMsgClientToGCSubmitPrivateCoachingSessionRating)},
  { 239, 246, -1, sizeof(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)},
  { 247, 254, -1, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessions)},
  { 255, 263, -1, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)},
  { 265, -1, -1, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)},
  { 271, 279, -1, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)},
  { 281, -1, -1, sizeof(::CMsgClientToGCJoinPrivateCoachingSessionLobby)},
  { 287, 294, -1, sizeof(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)},
  { 295, 302, -1, sizeof(::CMsgClientToGCCoachFriend)},
  { 303, 310, -1, sizeof(::CMsgClientToGCCoachFriendResponse)},
  { 311, 319, -1, sizeof(::CMsgClientToGCRespondToCoachFriendRequest)},
  { 321, 328, -1, sizeof(::CMsgClientToGCRespondToCoachFriendRequestResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_CMsgPlayerCoachMatch_default_instance_._instance,
  &::_CMsgPrivateCoachingSessionMember_default_instance_._instance,
  &::_CMsgPrivateCoachingSession_default_instance_._instance,
  &::_CMsgPrivateCoachingSessionStatus_default_instance_._instance,
  &::_CMsgAvailablePrivateCoachingSession_default_instance_._instance,
  &::_CMsgAvailablePrivateCoachingSessionList_default_instance_._instance,
  &::_CMsgAvailablePrivateCoachingSessionSummary_default_instance_._instance,
  &::_CMsgClientToGCRequestPlayerCoachMatches_default_instance_._instance,
  &::_CMsgClientToGCRequestPlayerCoachMatchesResponse_default_instance_._instance,
  &::_CMsgClientToGCRequestPlayerCoachMatch_default_instance_._instance,
  &::_CMsgClientToGCRequestPlayerCoachMatchResponse_default_instance_._instance,
  &::_CMsgClientToGCSubmitCoachTeammateRating_default_instance_._instance,
  &::_CMsgClientToGCSubmitCoachTeammateRatingResponse_default_instance_._instance,
  &::_CMsgGCToClientCoachTeammateRatingsChanged_default_instance_._instance,
  &::_CMsgClientToGCRequestPrivateCoachingSession_default_instance_._instance,
  &::_CMsgClientToGCRequestPrivateCoachingSessionResponse_default_instance_._instance,
  &::_CMsgClientToGCAcceptPrivateCoachingSession_default_instance_._instance,
  &::_CMsgClientToGCAcceptPrivateCoachingSessionResponse_default_instance_._instance,
  &::_CMsgClientToGCLeavePrivateCoachingSession_default_instance_._instance,
  &::_CMsgClientToGCLeavePrivateCoachingSessionResponse_default_instance_._instance,
  &::_CMsgClientToGCGetCurrentPrivateCoachingSession_default_instance_._instance,
  &::_CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_default_instance_._instance,
  &::_CMsgGCToClientPrivateCoachingSessionUpdated_default_instance_._instance,
  &::_CMsgClientToGCSubmitPrivateCoachingSessionRating_default_instance_._instance,
  &::_CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_default_instance_._instance,
  &::_CMsgClientToGCGetAvailablePrivateCoachingSessions_default_instance_._instance,
  &::_CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_default_instance_._instance,
  &::_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary_default_instance_._instance,
  &::_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_default_instance_._instance,
  &::_CMsgClientToGCJoinPrivateCoachingSessionLobby_default_instance_._instance,
  &::_CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_default_instance_._instance,
  &::_CMsgClientToGCCoachFriend_default_instance_._instance,
  &::_CMsgClientToGCCoachFriendResponse_default_instance_._instance,
  &::_CMsgClientToGCRespondToCoachFriendRequest_default_instance_._instance,
  &::_CMsgClientToGCRespondToCoachFriendRequestResponse_default_instance_._instance,
};

const char descriptor_table_protodef_dota_5fgcmessages_5fclient_5fcoaching_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%dota_gcmessages_client_coaching.proto\032"
  "\027dota_shared_enums.proto\032\"dota_gcmessage"
  "s_common_lobby.proto\"\352\001\n\024CMsgPlayerCoach"
  "Match\022\020\n\010match_id\030\001 \001(\004\022>\n\rmatch_outcome"
  "\030\002 \001(\0162\016.EMatchOutcome:\027k_EMatchOutcome_"
  "Unknown\022\024\n\014coached_team\030\003 \001(\r\022\022\n\nstart_t"
  "ime\030\004 \001(\007\022\020\n\010duration\030\005 \001(\r\022/\n\020teammate_"
  "ratings\030\006 \003(\0162\025.ECoachTeammateRating\022\023\n\013"
  "coach_flags\030\007 \001(\r\"\237\001\n CMsgPrivateCoachin"
  "gSessionMember\022\022\n\naccount_id\030\001 \001(\r\022\024\n\014me"
  "mber_flags\030\002 \001(\r\022Q\n\025member_session_ratin"
  "g\030\003 \001(\0162\025.ECoachTeammateRating:\033k_ECoach"
  "TeammateRating_None\"\221\003\n\032CMsgPrivateCoach"
  "ingSession\022#\n\033private_coaching_session_i"
  "d\030\001 \001(\004\022\033\n\023requested_timestamp\030\002 \001(\007\022\032\n\022"
  "requested_language\030\003 \001(\r\022e\n\026coaching_ses"
  "sion_state\030\004 \001(\0162\035.EPrivateCoachingSessi"
  "onState:&k_ePrivateCoachingSessionState_"
  "Invalid\022:\n\017session_members\030\005 \003(\0132!.CMsgP"
  "rivateCoachingSessionMember\022\030\n\020current_l"
  "obby_id\030\006 \001(\004\022\037\n\027current_server_steam_id"
  "\030\007 \001(\004\022\032\n\022accepted_timestamp\030\010 \001(\007\022\033\n\023co"
  "mpleted_timestamp\030\t \001(\007\"k\n CMsgPrivateCo"
  "achingSessionStatus\022\'\n\037requester_competi"
  "tive_rank_tier\030\001 \001(\r\022\036\n\026requester_games_"
  "played\030\002 \001(\r\"\240\001\n#CMsgAvailablePrivateCoa"
  "chingSession\0225\n\020coaching_session\030\001 \001(\0132\033"
  ".CMsgPrivateCoachingSession\022B\n\027coaching_"
  "session_status\030\002 \001(\0132!.CMsgPrivateCoachi"
  "ngSessionStatus\"t\n\'CMsgAvailablePrivateC"
  "oachingSessionList\022I\n\033available_coaching"
  "_sessions\030\001 \003(\0132$.CMsgAvailablePrivateCo"
  "achingSession\"L\n*CMsgAvailablePrivateCoa"
  "chingSessionSummary\022\036\n\026coaching_session_"
  "count\030\001 \001(\r\")\n\'CMsgClientToGCRequestPlay"
  "erCoachMatches\"\221\002\n/CMsgClientToGCRequest"
  "PlayerCoachMatchesResponse\022\\\n\006result\030\001 \001"
  "(\0162:.CMsgClientToGCRequestPlayerCoachMat"
  "chesResponse.EResponse:\020k_eInternalError"
  "\022,\n\rcoach_matches\030\002 \003(\0132\025.CMsgPlayerCoac"
  "hMatch\"R\n\tEResponse\022\024\n\020k_eInternalError\020"
  "\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_e"
  "Disabled\020\003\"9\n%CMsgClientToGCRequestPlaye"
  "rCoachMatch\022\020\n\010match_id\030\001 \001(\004\"\213\002\n-CMsgCl"
  "ientToGCRequestPlayerCoachMatchResponse\022"
  "Z\n\006result\030\001 \001(\01628.CMsgClientToGCRequestP"
  "layerCoachMatchResponse.EResponse:\020k_eIn"
  "ternalError\022*\n\013coach_match\030\002 \001(\0132\025.CMsgP"
  "layerCoachMatch\"R\n\tEResponse\022\024\n\020k_eInter"
  "nalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy"
  "\020\002\022\017\n\013k_eDisabled\020\003\"\251\001\n\'CMsgClientToGCSu"
  "bmitCoachTeammateRating\022\020\n\010match_id\030\001 \001("
  "\004\022\030\n\020coach_account_id\030\002 \001(\r\022B\n\006rating\030\003 "
  "\001(\0162\025.ECoachTeammateRating:\033k_ECoachTeam"
  "mateRating_None\022\016\n\006reason\030\004 \001(\t\"\261\003\n/CMsg"
  "ClientToGCSubmitCoachTeammateRatingRespo"
  "nse\022\\\n\006result\030\001 \001(\0162:.CMsgClientToGCSubm"
  "itCoachTeammateRatingResponse.EResponse:"
  "\020k_eInternalError\"\237\002\n\tEResponse\022\024\n\020k_eIn"
  "ternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooB"
  "usy\020\002\022\017\n\013k_eDisabled\020\003\022\023\n\017k_eInvalidInpu"
  "t\020\004\022\027\n\023k_eAlreadySubmitted\020\005\022\025\n\021k_eVotin"
  "gFinished\020\006\022\027\n\023k_ePlayerNotInMatch\020\007\022\026\n\022"
  "k_eCoachNotInMatch\020\010\022\033\n\027k_ePlayerNotOnCo"
  "achTeam\020\t\022\037\n\033k_ePlayerInSamePartyAsCoach"
  "\020\n\022\027\n\023k_eMatchNotEligible\020\013\"W\n)CMsgGCToC"
  "lientCoachTeammateRatingsChanged\022*\n\013coac"
  "h_match\030\001 \001(\0132\025.CMsgPlayerCoachMatch\"\?\n+"
  "CMsgClientToGCRequestPrivateCoachingSess"
  "ion\022\020\n\010language\030\001 \001(\r\"\207\004\n3CMsgClientToGC"
  "RequestPrivateCoachingSessionResponse\022`\n"
  "\006result\030\001 \001(\0162>.CMsgClientToGCRequestPri"
  "vateCoachingSessionResponse.EResponse:\020k"
  "_eInternalError\0225\n\020coaching_session\030\002 \001("
  "\0132\033.CMsgPrivateCoachingSession\"\266\002\n\tEResp"
  "onse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess"
  "\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk"
  "_eTimeout\020\004\022\027\n\023k_eAlreadyInSession\020\005\022\032\n\026"
  "k_eBehaviorScoreTooLow\020\006\022\027\n\023k_eInvalidLo"
  "bbyType\020\007\022\030\n\024k_eLowPriorityPlayer\020\010\022\027\n\023k"
  "_eLowPriorityLobby\020\t\022\027\n\023k_eLowPriorityPa"
  "rty\020\n\022\022\n\016k_eTextChatBan\020\013\022\023\n\017k_eVoiceCha"
  "tBan\020\014\022\017\n\013k_eMatchBan\020\r\"I\n*CMsgClientToG"
  "CAcceptPrivateCoachingSession\022\033\n\023coachin"
  "g_session_id\030\001 \001(\004\"\331\005\n2CMsgClientToGCAcc"
  "eptPrivateCoachingSessionResponse\022_\n\006res"
  "ult\030\001 \001(\0162=.CMsgClientToGCAcceptPrivateC"
  "oachingSessionResponse.EResponse:\020k_eInt"
  "ernalError\0225\n\020coaching_session\030\002 \001(\0132\033.C"
  "MsgPrivateCoachingSession\"\212\004\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTim"
  "eout\020\004\022\025\n\021k_eUnknownSession\020\005\022\026\n\022k_eAlre"
  "adyHasCoach\020\006\022\030\n\024k_eAlreadyHasSession\020\007\022"
  "\022\n\016k_eInvalidUser\020\010\022\026\n\022k_eAlreadyFinishe"
  "d\020\t\022\027\n\023k_eInvalidLobbyType\020\n\022\025\n\021k_eAlrea"
  "dyInLobby\020\013\022\021\n\rk_eLobbyIsLan\020\014\022\024\n\020k_eLob"
  "byIsLeague\020\r\022\030\n\024k_eInvalidLobbyState\020\016\022\033"
  "\n\027k_eRequesterIsNotPlayer\020\017\022\025\n\021k_eTooMan"
  "yCoaches\020\020\022\025\n\021k_eCoachWasPlayer\020\021\022\037\n\033k_e"
  "CoachBehaviorScoreTooLow\020\022\022\035\n\031k_eCoachRa"
  "nkNotCalibrated\020\023\022\033\n\027k_eCoachRankNotElig"
  "ible\020\024\022\026\n\022k_eCoachRankTooLow\020\025\"+\n)CMsgCl"
  "ientToGCLeavePrivateCoachingSession\"\236\002\n1"
  "CMsgClientToGCLeavePrivateCoachingSessio"
  "nResponse\022^\n\006result\030\001 \001(\0162<.CMsgClientTo"
  "GCLeavePrivateCoachingSessionResponse.ER"
  "esponse:\020k_eInternalError\"\210\001\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTim"
  "eout\020\004\022\020\n\014k_eNoSession\020\005\022\022\n\016k_eAlreadyLe"
  "ft\020\006\"0\n.CMsgClientToGCGetCurrentPrivateC"
  "oachingSession\"\267\002\n6CMsgClientToGCGetCurr"
  "entPrivateCoachingSessionResponse\022c\n\006res"
  "ult\030\001 \001(\0162A.CMsgClientToGCGetCurrentPriv"
  "ateCoachingSessionResponse.EResponse:\020k_"
  "eInternalError\0224\n\017current_session\030\002 \001(\0132"
  "\033.CMsgPrivateCoachingSession\"b\n\tERespons"
  "e\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022"
  "\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eT"
  "imeout\020\004\"d\n+CMsgGCToClientPrivateCoachin"
  "gSessionUpdated\0225\n\020coaching_session\030\001 \001("
  "\0132\033.CMsgPrivateCoachingSession\"\233\001\n0CMsgC"
  "lientToGCSubmitPrivateCoachingSessionRat"
  "ing\022\033\n\023coaching_session_id\030\001 \001(\004\022J\n\016sess"
  "ion_rating\030\002 \001(\0162\025.ECoachTeammateRating:"
  "\033k_ECoachTeammateRating_None\"\234\003\n8CMsgCli"
  "entToGCSubmitPrivateCoachingSessionRatin"
  "gResponse\022e\n\006result\030\001 \001(\0162C.CMsgClientTo"
  "GCSubmitPrivateCoachingSessionRatingResp"
  "onse.EResponse:\020k_eInternalError\"\370\001\n\tERe"
  "sponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucce"
  "ss\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n"
  "\nk_eTimeout\020\004\022\025\n\021k_eUnknownSession\020\005\022\020\n\014"
  "k_eNotMember\020\006\022\027\n\023k_eAlreadySubmitted\020\007\022"
  "\024\n\020k_eSessionActive\020\010\022\026\n\022k_eSessionTooSh"
  "ort\020\t\022\016\n\nk_eNoCoach\020\n\022\024\n\020k_eInvalidRatin"
  "g\020\013\"E\n1CMsgClientToGCGetAvailablePrivate"
  "CoachingSessions\022\020\n\010language\030\001 \001(\r\"\322\002\n9C"
  "MsgClientToGCGetAvailablePrivateCoaching"
  "SessionsResponse\022f\n\006result\030\001 \001(\0162D.CMsgC"
  "lientToGCGetAvailablePrivateCoachingSess"
  "ionsResponse.EResponse:\020k_eInternalError"
  "\022I\n\027available_sessions_list\030\002 \001(\0132(.CMsg"
  "AvailablePrivateCoachingSessionList\"b\n\tE"
  "Response\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuc"
  "cess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022"
  "\016\n\nk_eTimeout\020\004\":\n8CMsgClientToGCGetAvai"
  "lablePrivateCoachingSessionsSummary\"\344\002\n@"
  "CMsgClientToGCGetAvailablePrivateCoachin"
  "gSessionsSummaryResponse\022m\n\006result\030\001 \001(\016"
  "2K.CMsgClientToGCGetAvailablePrivateCoac"
  "hingSessionsSummaryResponse.EResponse:\020k"
  "_eInternalError\022M\n\030coaching_session_summ"
  "ary\030\002 \001(\0132+.CMsgAvailablePrivateCoaching"
  "SessionSummary\"b\n\tEResponse\022\024\n\020k_eIntern"
  "alError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020"
  "\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\"/\n-CM"
  "sgClientToGCJoinPrivateCoachingSessionLo"
  "bby\"\311\004\n5CMsgClientToGCJoinPrivateCoachin"
  "gSessionLobbyResponse\022b\n\006result\030\001 \001(\0162@."
  "CMsgClientToGCJoinPrivateCoachingSession"
  "LobbyResponse.EResponse:\020k_eInternalErro"
  "r\"\253\003\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n"
  "\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisa"
  "bled\020\003\022\016\n\nk_eTimeout\020\004\022\020\n\014k_eNoSession\020\005"
  "\022\026\n\022k_eSessionFinished\020\006\022\022\n\016k_eAlreadyLe"
  "ft\020\007\022\020\n\014k_eNotACoach\020\010\022\016\n\nk_eNoLobby\020\t\022\027"
  "\n\023k_eCoachInThisLobby\020\n\022\024\n\020k_eCoachInALo"
  "bby\020\013\022\021\n\rk_eLobbyIsLan\020\014\022\024\n\020k_eLobbyIsLe"
  "ague\020\r\022\027\n\023k_eInvalidLobbyType\020\016\022\030\n\024k_eIn"
  "validLobbyState\020\017\022\033\n\027k_eRequesterIsNotPl"
  "ayer\020\020\022\025\n\021k_eTooManyCoaches\020\021\022\025\n\021k_eCoac"
  "hWasPlayer\020\022\022\021\n\rk_eJoinFailed\020\023\"6\n\031CMsgC"
  "lientToGCCoachFriend\022\031\n\021target_account_i"
  "d\030\001 \001(\r\"\276\004\n!CMsgClientToGCCoachFriendRes"
  "ponse\022N\n\006result\030\001 \001(\0162,.CMsgClientToGCCo"
  "achFriendResponse.EResponse:\020k_eInternal"
  "Error\"\310\003\n\tEResponse\022\024\n\020k_eInternalError\020"
  "\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_e"
  "Disabled\020\003\022\016\n\nk_eTimeout\020\004\022\031\n\025k_eCoachNo"
  "tSubscriber\020\005\022\024\n\020k_eLobbyNotFound\020\006\022\031\n\025k"
  "_eFriendsOnBothSides\020\007\022\021\n\rk_eNotFriends\020"
  "\010\022\027\n\023k_eCoachInThisLobby\020\t\022\024\n\020k_eCoachIn"
  "ALobby\020\n\022\021\n\rk_eLobbyIsLan\020\013\022\027\n\023k_eInvali"
  "dLobbyType\020\014\022\030\n\024k_eInvalidLobbyState\020\r\022\031"
  "\n\025k_eFriendIsNotAPlayer\020\016\022\025\n\021k_eTooManyC"
  "oaches\020\017\022\031\n\025k_eCoachSwitchedTeams\020\020\022\024\n\020k"
  "_eLobbyIsLeague\020\021\022\025\n\021k_eCoachWasPlayer\020\022"
  "\022\026\n\022k_eRequestRejected\020\023\"\235\001\n)CMsgClientT"
  "oGCRespondToCoachFriendRequest\022\030\n\020coach_"
  "account_id\030\001 \001(\r\022V\n\010response\030\002 \001(\0162\036.ELo"
  "bbyMemberCoachRequestState:$k_eLobbyMemb"
  "erCoachRequestState_None\"\266\003\n1CMsgClientT"
  "oGCRespondToCoachFriendRequestResponse\022^"
  "\n\006result\030\001 \001(\0162<.CMsgClientToGCRespondTo"
  "CoachFriendRequestResponse.EResponse:\020k_"
  "eInternalError\"\240\002\n\tEResponse\022\024\n\020k_eInter"
  "nalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy"
  "\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\024\n\020k"
  "_eLobbyNotFound\020\005\022\030\n\024k_eInvalidLobbyStat"
  "e\020\006\022\026\n\022k_eCoachNotInLobby\020\007\022\030\n\024k_ePlayer"
  "InvalidTeam\020\010\022\027\n\023k_eCoachInvalidTeam\020\t\022\020"
  "\n\014k_eNoRequest\020\n\022\026\n\022k_eInvalidResponse\020\013"
  "\022\027\n\023k_eAlreadyResponded\020\014*\245\001\n\024ECoachTeam"
  "mateRating\022\037\n\033k_ECoachTeammateRating_Non"
  "e\020\000\022#\n\037k_ECoachTeammateRating_Positive\020\001"
  "\022#\n\037k_ECoachTeammateRating_Negative\020\002\022\"\n"
  "\036k_ECoachTeammateRating_Abusive\020\003*\271\002\n\034EP"
  "rivateCoachingSessionState\022*\n&k_ePrivate"
  "CoachingSessionState_Invalid\020\000\0224\n0k_ePri"
  "vateCoachingSessionState_SearchingForCoa"
  "ch\020\001\0220\n,k_ePrivateCoachingSessionState_C"
  "oachAssigned\020\002\022+\n\'k_ePrivateCoachingSess"
  "ionState_Finished\020\003\022*\n&k_ePrivateCoachin"
  "gSessionState_Expired\020\004\022,\n(k_ePrivateCoa"
  "chingSessionState_Abandoned\020\005*\272\001\n!EPriva"
  "teCoachingSessionMemberFlag\0221\n-k_EPrivat"
  "eCoachingSessionMemberFlag_Requester\020\001\022-"
  "\n)k_EPrivateCoachingSessionMemberFlag_Co"
  "ach\020\002\0223\n/k_EPrivateCoachingSessionMember"
  "Flag_LeftSession\020\004*q\n\025EPlayerCoachMatchF"
  "lag\022.\n*k_EPlayerCoachMatchFlag_EligibleF"
  "orRewards\020\001\022(\n$k_EPlayerCoachMatchFlag_P"
  "rivateCoach\020\002"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_deps[2] = {
  &::descriptor_table_dota_5fgcmessages_5fcommon_5flobby_2eproto,
  &::descriptor_table_dota_5fshared_5fenums_2eproto,
};
static ::_pbi::once_flag descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto = {
    false, false, 8973, descriptor_table_protodef_dota_5fgcmessages_5fclient_5fcoaching_2eproto,
    "dota_gcmessages_client_coaching.proto",
    &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once, descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_deps, 2, 35,
    schemas, file_default_instances, TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto::offsets,
    file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto, file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto,
    file_level_service_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter() {
  return &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dota_5fgcmessages_5fclient_5fcoaching_2eproto(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[0];
}
bool CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eInternalError;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eSuccess;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eDisabled;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestPlayerCoachMatchesResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[1];
}
bool CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eInternalError;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eSuccess;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eDisabled;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestPlayerCoachMatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[2];
}
bool CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eInternalError;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eSuccess;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eTooBusy;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eDisabled;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eInvalidInput;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eAlreadySubmitted;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eVotingFinished;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_ePlayerNotInMatch;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eCoachNotInMatch;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_ePlayerNotOnCoachTeam;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_ePlayerInSamePartyAsCoach;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eMatchNotEligible;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::EResponse_MIN;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::EResponse_MAX;
constexpr int CMsgClientToGCSubmitCoachTeammateRatingResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[3];
}
bool CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eAlreadyInSession;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eBehaviorScoreTooLow;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eLowPriorityPlayer;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eLowPriorityLobby;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eLowPriorityParty;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eTextChatBan;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eVoiceChatBan;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eMatchBan;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestPrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[4];
}
bool CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eUnknownSession;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyHasCoach;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyHasSession;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInvalidUser;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyFinished;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyInLobby;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eLobbyIsLan;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eLobbyIsLeague;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eRequesterIsNotPlayer;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eTooManyCoaches;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachWasPlayer;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachBehaviorScoreTooLow;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachRankNotCalibrated;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachRankNotEligible;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachRankTooLow;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCAcceptPrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[5];
}
bool CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eNoSession;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eAlreadyLeft;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCLeavePrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[6];
}
bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[7];
}
bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eInternalError;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eSuccess;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eTooBusy;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eDisabled;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eTimeout;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eUnknownSession;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eNotMember;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eAlreadySubmitted;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eSessionActive;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eSessionTooShort;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eNoCoach;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eInvalidRating;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::EResponse_MIN;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::EResponse_MAX;
constexpr int CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[8];
}
bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eInternalError;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eSuccess;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eDisabled;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eTimeout;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::EResponse_MIN;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[9];
}
bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eInternalError;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eSuccess;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eDisabled;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eTimeout;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::EResponse_MIN;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[10];
}
bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eInternalError;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eSuccess;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eTooBusy;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eDisabled;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eTimeout;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eNoSession;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eSessionFinished;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eAlreadyLeft;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eNotACoach;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eNoLobby;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eCoachInThisLobby;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eCoachInALobby;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eLobbyIsLan;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eLobbyIsLeague;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eRequesterIsNotPlayer;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eTooManyCoaches;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eCoachWasPlayer;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eJoinFailed;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::EResponse_MIN;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::EResponse_MAX;
constexpr int CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCoachFriendResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[11];
}
bool CMsgClientToGCCoachFriendResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eInternalError;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eSuccess;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eTooBusy;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eDisabled;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eTimeout;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachNotSubscriber;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eLobbyNotFound;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eFriendsOnBothSides;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eNotFriends;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachInThisLobby;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachInALobby;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eLobbyIsLan;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eFriendIsNotAPlayer;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eTooManyCoaches;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachSwitchedTeams;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eLobbyIsLeague;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachWasPlayer;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eRequestRejected;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::EResponse_MIN;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::EResponse_MAX;
constexpr int CMsgClientToGCCoachFriendResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[12];
}
bool CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eInternalError;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eSuccess;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eTooBusy;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eDisabled;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eTimeout;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eLobbyNotFound;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eCoachNotInLobby;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_ePlayerInvalidTeam;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eCoachInvalidTeam;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eNoRequest;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eInvalidResponse;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eAlreadyResponded;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::EResponse_MIN;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::EResponse_MAX;
constexpr int CMsgClientToGCRespondToCoachFriendRequestResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECoachTeammateRating_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[13];
}
bool ECoachTeammateRating_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPrivateCoachingSessionState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[14];
}
bool EPrivateCoachingSessionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPrivateCoachingSessionMemberFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[15];
}
bool EPrivateCoachingSessionMemberFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPlayerCoachMatchFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[16];
}
bool EPlayerCoachMatchFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CMsgPlayerCoachMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPlayerCoachMatch>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_match_outcome(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_coached_team(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_coach_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgPlayerCoachMatch::CMsgPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgPlayerCoachMatch)
}
CMsgPlayerCoachMatch::CMsgPlayerCoachMatch(const CMsgPlayerCoachMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgPlayerCoachMatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.teammate_ratings_){from._impl_.teammate_ratings_}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.match_outcome_){}
    , decltype(_impl_.coached_team_){}
    , decltype(_impl_.start_time_){}
    , decltype(_impl_.duration_){}
    , decltype(_impl_.coach_flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.coach_flags_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.coach_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgPlayerCoachMatch)
}

inline void CMsgPlayerCoachMatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.teammate_ratings_){arena}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.match_outcome_){0}
    , decltype(_impl_.coached_team_){0u}
    , decltype(_impl_.start_time_){0u}
    , decltype(_impl_.duration_){0u}
    , decltype(_impl_.coach_flags_){0u}
  };
}

CMsgPlayerCoachMatch::~CMsgPlayerCoachMatch() {
  // @@protoc_insertion_point(destructor:CMsgPlayerCoachMatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgPlayerCoachMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.teammate_ratings_.~RepeatedField();
}

void CMsgPlayerCoachMatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgPlayerCoachMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPlayerCoachMatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.teammate_ratings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.coach_flags_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.coach_flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPlayerCoachMatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EMatchOutcome_IsValid(val))) {
            _internal_set_match_outcome(static_cast<::EMatchOutcome>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 coached_team = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_coached_team(&has_bits);
          _impl_.coached_team_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed32 start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_start_time(&has_bits);
          _impl_.start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint32_t>(ptr);
          ptr += sizeof(uint32_t);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 duration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_duration(&has_bits);
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ECoachTeammateRating teammate_ratings = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
              _internal_add_teammate_ratings(static_cast<::ECoachTeammateRating>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<48>(ptr));
        } else if (static_cast<uint8_t>(tag) == 50) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_teammate_ratings(), ptr, ctx, ::ECoachTeammateRating_IsValid, &_internal_metadata_, 6);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 coach_flags = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_coach_flags(&has_bits);
          _impl_.coach_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgPlayerCoachMatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerCoachMatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_match_outcome(), target);
  }

  // optional uint32 coached_team = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_coached_team(), target);
  }

  // optional fixed32 start_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(4, this->_internal_start_time(), target);
  }

  // optional uint32 duration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_duration(), target);
  }

  // repeated .ECoachTeammateRating teammate_ratings = 6;
  for (int i = 0, n = this->_internal_teammate_ratings_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_teammate_ratings(i), target);
  }

  // optional uint32 coach_flags = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_coach_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerCoachMatch)
  return target;
}

size_t CMsgPlayerCoachMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPlayerCoachMatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ECoachTeammateRating teammate_ratings = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_teammate_ratings_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_teammate_ratings(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_match_outcome());
    }

    // optional uint32 coached_team = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_coached_team());
    }

    // optional fixed32 start_time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional uint32 duration = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_duration());
    }

    // optional uint32 coach_flags = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_coach_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgPlayerCoachMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgPlayerCoachMatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgPlayerCoachMatch::GetClassData() const { return &_class_data_; }


void CMsgPlayerCoachMatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgPlayerCoachMatch*>(&to_msg);
  auto& from = static_cast<const CMsgPlayerCoachMatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPlayerCoachMatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.teammate_ratings_.MergeFrom(from._impl_.teammate_ratings_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.match_outcome_ = from._impl_.match_outcome_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.coached_team_ = from._impl_.coached_team_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.start_time_ = from._impl_.start_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.duration_ = from._impl_.duration_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.coach_flags_ = from._impl_.coach_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPlayerCoachMatch::CopyFrom(const CMsgPlayerCoachMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPlayerCoachMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlayerCoachMatch::IsInitialized() const {
  return true;
}

void CMsgPlayerCoachMatch::InternalSwap(CMsgPlayerCoachMatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.teammate_ratings_.InternalSwap(&other->_impl_.teammate_ratings_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPlayerCoachMatch, _impl_.coach_flags_)
      + sizeof(CMsgPlayerCoachMatch::_impl_.coach_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgPlayerCoachMatch, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPlayerCoachMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[0]);
}

// ===================================================================

class CMsgPrivateCoachingSessionMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPrivateCoachingSessionMember>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_member_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_member_session_rating(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgPrivateCoachingSessionMember::CMsgPrivateCoachingSessionMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgPrivateCoachingSessionMember)
}
CMsgPrivateCoachingSessionMember::CMsgPrivateCoachingSessionMember(const CMsgPrivateCoachingSessionMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgPrivateCoachingSessionMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.member_flags_){}
    , decltype(_impl_.member_session_rating_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.member_session_rating_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.member_session_rating_));
  // @@protoc_insertion_point(copy_constructor:CMsgPrivateCoachingSessionMember)
}

inline void CMsgPrivateCoachingSessionMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.member_flags_){0u}
    , decltype(_impl_.member_session_rating_){0}
  };
}

CMsgPrivateCoachingSessionMember::~CMsgPrivateCoachingSessionMember() {
  // @@protoc_insertion_point(destructor:CMsgPrivateCoachingSessionMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgPrivateCoachingSessionMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgPrivateCoachingSessionMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgPrivateCoachingSessionMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPrivateCoachingSessionMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.member_session_rating_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.member_session_rating_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPrivateCoachingSessionMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 member_flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_member_flags(&has_bits);
          _impl_.member_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
            _internal_set_member_session_rating(static_cast<::ECoachTeammateRating>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgPrivateCoachingSessionMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPrivateCoachingSessionMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint32 member_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_flags(), target);
  }

  // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_member_session_rating(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPrivateCoachingSessionMember)
  return target;
}

size_t CMsgPrivateCoachingSessionMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPrivateCoachingSessionMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 member_flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_member_flags());
    }

    // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_member_session_rating());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgPrivateCoachingSessionMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgPrivateCoachingSessionMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgPrivateCoachingSessionMember::GetClassData() const { return &_class_data_; }


void CMsgPrivateCoachingSessionMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgPrivateCoachingSessionMember*>(&to_msg);
  auto& from = static_cast<const CMsgPrivateCoachingSessionMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPrivateCoachingSessionMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.member_flags_ = from._impl_.member_flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.member_session_rating_ = from._impl_.member_session_rating_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPrivateCoachingSessionMember::CopyFrom(const CMsgPrivateCoachingSessionMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPrivateCoachingSessionMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPrivateCoachingSessionMember::IsInitialized() const {
  return true;
}

void CMsgPrivateCoachingSessionMember::InternalSwap(CMsgPrivateCoachingSessionMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionMember, _impl_.member_session_rating_)
      + sizeof(CMsgPrivateCoachingSessionMember::_impl_.member_session_rating_)
      - PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionMember, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPrivateCoachingSessionMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[1]);
}

// ===================================================================

class CMsgPrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPrivateCoachingSession>()._impl_._has_bits_);
  static void set_has_private_coaching_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requested_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_requested_language(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_coaching_session_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_current_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_current_server_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_accepted_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_completed_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

CMsgPrivateCoachingSession::CMsgPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgPrivateCoachingSession)
}
CMsgPrivateCoachingSession::CMsgPrivateCoachingSession(const CMsgPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgPrivateCoachingSession* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.session_members_){from._impl_.session_members_}
    , decltype(_impl_.private_coaching_session_id_){}
    , decltype(_impl_.requested_timestamp_){}
    , decltype(_impl_.requested_language_){}
    , decltype(_impl_.current_lobby_id_){}
    , decltype(_impl_.coaching_session_state_){}
    , decltype(_impl_.accepted_timestamp_){}
    , decltype(_impl_.current_server_steam_id_){}
    , decltype(_impl_.completed_timestamp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.private_coaching_session_id_, &from._impl_.private_coaching_session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.completed_timestamp_) -
    reinterpret_cast<char*>(&_impl_.private_coaching_session_id_)) + sizeof(_impl_.completed_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgPrivateCoachingSession)
}

inline void CMsgPrivateCoachingSession::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.session_members_){arena}
    , decltype(_impl_.private_coaching_session_id_){uint64_t{0u}}
    , decltype(_impl_.requested_timestamp_){0u}
    , decltype(_impl_.requested_language_){0u}
    , decltype(_impl_.current_lobby_id_){uint64_t{0u}}
    , decltype(_impl_.coaching_session_state_){0}
    , decltype(_impl_.accepted_timestamp_){0u}
    , decltype(_impl_.current_server_steam_id_){uint64_t{0u}}
    , decltype(_impl_.completed_timestamp_){0u}
  };
}

CMsgPrivateCoachingSession::~CMsgPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgPrivateCoachingSession)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.session_members_.~RepeatedPtrField();
}

void CMsgPrivateCoachingSession::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_members_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.private_coaching_session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.completed_timestamp_) -
        reinterpret_cast<char*>(&_impl_.private_coaching_session_id_)) + sizeof(_impl_.completed_timestamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPrivateCoachingSession::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 private_coaching_session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_private_coaching_session_id(&has_bits);
          _impl_.private_coaching_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed32 requested_timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_requested_timestamp(&has_bits);
          _impl_.requested_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint32_t>(ptr);
          ptr += sizeof(uint32_t);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 requested_language = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_requested_language(&has_bits);
          _impl_.requested_language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EPrivateCoachingSessionState_IsValid(val))) {
            _internal_set_coaching_session_state(static_cast<::EPrivateCoachingSessionState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_session_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint64 current_lobby_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_current_lobby_id(&has_bits);
          _impl_.current_lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 current_server_steam_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_current_server_steam_id(&has_bits);
          _impl_.current_server_steam_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed32 accepted_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _Internal::set_has_accepted_timestamp(&has_bits);
          _impl_.accepted_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint32_t>(ptr);
          ptr += sizeof(uint32_t);
        } else
          goto handle_unusual;
        continue;
      // optional fixed32 completed_timestamp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 77)) {
          _Internal::set_has_completed_timestamp(&has_bits);
          _impl_.completed_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint32_t>(ptr);
          ptr += sizeof(uint32_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgPrivateCoachingSession::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 private_coaching_session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_private_coaching_session_id(), target);
  }

  // optional fixed32 requested_timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(2, this->_internal_requested_timestamp(), target);
  }

  // optional uint32 requested_language = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_requested_language(), target);
  }

  // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_coaching_session_state(), target);
  }

  // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_session_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_session_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint64 current_lobby_id = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_current_lobby_id(), target);
  }

  // optional uint64 current_server_steam_id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_current_server_steam_id(), target);
  }

  // optional fixed32 accepted_timestamp = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(8, this->_internal_accepted_timestamp(), target);
  }

  // optional fixed32 completed_timestamp = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(9, this->_internal_completed_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPrivateCoachingSession)
  return target;
}

size_t CMsgPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPrivateCoachingSession)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
  total_size += 1UL * this->_internal_session_members_size();
  for (const auto& msg : this->_impl_.session_members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 private_coaching_session_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_private_coaching_session_id());
    }

    // optional fixed32 requested_timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional uint32 requested_language = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requested_language());
    }

    // optional uint64 current_lobby_id = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_current_lobby_id());
    }

    // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_coaching_session_state());
    }

    // optional fixed32 accepted_timestamp = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional uint64 current_server_steam_id = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_current_server_steam_id());
    }

    // optional fixed32 completed_timestamp = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgPrivateCoachingSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgPrivateCoachingSession::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgPrivateCoachingSession::GetClassData() const { return &_class_data_; }


void CMsgPrivateCoachingSession::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgPrivateCoachingSession*>(&to_msg);
  auto& from = static_cast<const CMsgPrivateCoachingSession&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.session_members_.MergeFrom(from._impl_.session_members_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.private_coaching_session_id_ = from._impl_.private_coaching_session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.requested_timestamp_ = from._impl_.requested_timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.requested_language_ = from._impl_.requested_language_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.current_lobby_id_ = from._impl_.current_lobby_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.coaching_session_state_ = from._impl_.coaching_session_state_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.accepted_timestamp_ = from._impl_.accepted_timestamp_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.current_server_steam_id_ = from._impl_.current_server_steam_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.completed_timestamp_ = from._impl_.completed_timestamp_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPrivateCoachingSession::CopyFrom(const CMsgPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgPrivateCoachingSession::InternalSwap(CMsgPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.session_members_.InternalSwap(&other->_impl_.session_members_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSession, _impl_.completed_timestamp_)
      + sizeof(CMsgPrivateCoachingSession::_impl_.completed_timestamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSession, _impl_.private_coaching_session_id_)>(
          reinterpret_cast<char*>(&_impl_.private_coaching_session_id_),
          reinterpret_cast<char*>(&other->_impl_.private_coaching_session_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPrivateCoachingSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[2]);
}

// ===================================================================

class CMsgPrivateCoachingSessionStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPrivateCoachingSessionStatus>()._impl_._has_bits_);
  static void set_has_requester_competitive_rank_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requester_games_played(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgPrivateCoachingSessionStatus::CMsgPrivateCoachingSessionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgPrivateCoachingSessionStatus)
}
CMsgPrivateCoachingSessionStatus::CMsgPrivateCoachingSessionStatus(const CMsgPrivateCoachingSessionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgPrivateCoachingSessionStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.requester_competitive_rank_tier_){}
    , decltype(_impl_.requester_games_played_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.requester_competitive_rank_tier_, &from._impl_.requester_competitive_rank_tier_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.requester_games_played_) -
    reinterpret_cast<char*>(&_impl_.requester_competitive_rank_tier_)) + sizeof(_impl_.requester_games_played_));
  // @@protoc_insertion_point(copy_constructor:CMsgPrivateCoachingSessionStatus)
}

inline void CMsgPrivateCoachingSessionStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.requester_competitive_rank_tier_){0u}
    , decltype(_impl_.requester_games_played_){0u}
  };
}

CMsgPrivateCoachingSessionStatus::~CMsgPrivateCoachingSessionStatus() {
  // @@protoc_insertion_point(destructor:CMsgPrivateCoachingSessionStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgPrivateCoachingSessionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgPrivateCoachingSessionStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgPrivateCoachingSessionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPrivateCoachingSessionStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.requester_competitive_rank_tier_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.requester_games_played_) -
        reinterpret_cast<char*>(&_impl_.requester_competitive_rank_tier_)) + sizeof(_impl_.requester_games_played_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPrivateCoachingSessionStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 requester_competitive_rank_tier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_requester_competitive_rank_tier(&has_bits);
          _impl_.requester_competitive_rank_tier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 requester_games_played = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_requester_games_played(&has_bits);
          _impl_.requester_games_played_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgPrivateCoachingSessionStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPrivateCoachingSessionStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 requester_competitive_rank_tier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requester_competitive_rank_tier(), target);
  }

  // optional uint32 requester_games_played = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_requester_games_played(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPrivateCoachingSessionStatus)
  return target;
}

size_t CMsgPrivateCoachingSessionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPrivateCoachingSessionStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 requester_competitive_rank_tier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requester_competitive_rank_tier());
    }

    // optional uint32 requester_games_played = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requester_games_played());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgPrivateCoachingSessionStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgPrivateCoachingSessionStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgPrivateCoachingSessionStatus::GetClassData() const { return &_class_data_; }


void CMsgPrivateCoachingSessionStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgPrivateCoachingSessionStatus*>(&to_msg);
  auto& from = static_cast<const CMsgPrivateCoachingSessionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPrivateCoachingSessionStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.requester_competitive_rank_tier_ = from._impl_.requester_competitive_rank_tier_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.requester_games_played_ = from._impl_.requester_games_played_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPrivateCoachingSessionStatus::CopyFrom(const CMsgPrivateCoachingSessionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPrivateCoachingSessionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPrivateCoachingSessionStatus::IsInitialized() const {
  return true;
}

void CMsgPrivateCoachingSessionStatus::InternalSwap(CMsgPrivateCoachingSessionStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionStatus, _impl_.requester_games_played_)
      + sizeof(CMsgPrivateCoachingSessionStatus::_impl_.requester_games_played_)
      - PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionStatus, _impl_.requester_competitive_rank_tier_)>(
          reinterpret_cast<char*>(&_impl_.requester_competitive_rank_tier_),
          reinterpret_cast<char*>(&other->_impl_.requester_competitive_rank_tier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPrivateCoachingSessionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[3]);
}

// ===================================================================

class CMsgAvailablePrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAvailablePrivateCoachingSession>()._impl_._has_bits_);
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgAvailablePrivateCoachingSession* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgPrivateCoachingSessionStatus& coaching_session_status(const CMsgAvailablePrivateCoachingSession* msg);
  static void set_has_coaching_session_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgAvailablePrivateCoachingSession::_Internal::coaching_session(const CMsgAvailablePrivateCoachingSession* msg) {
  return *msg->_impl_.coaching_session_;
}
const ::CMsgPrivateCoachingSessionStatus&
CMsgAvailablePrivateCoachingSession::_Internal::coaching_session_status(const CMsgAvailablePrivateCoachingSession* msg) {
  return *msg->_impl_.coaching_session_status_;
}
CMsgAvailablePrivateCoachingSession::CMsgAvailablePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAvailablePrivateCoachingSession)
}
CMsgAvailablePrivateCoachingSession::CMsgAvailablePrivateCoachingSession(const CMsgAvailablePrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAvailablePrivateCoachingSession* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
    , decltype(_impl_.coaching_session_status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    _this->_impl_.coaching_session_ = new ::CMsgPrivateCoachingSession(*from._impl_.coaching_session_);
  }
  if (from._internal_has_coaching_session_status()) {
    _this->_impl_.coaching_session_status_ = new ::CMsgPrivateCoachingSessionStatus(*from._impl_.coaching_session_status_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgAvailablePrivateCoachingSession)
}

inline void CMsgAvailablePrivateCoachingSession::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
    , decltype(_impl_.coaching_session_status_){nullptr}
  };
}

CMsgAvailablePrivateCoachingSession::~CMsgAvailablePrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgAvailablePrivateCoachingSession)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAvailablePrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coaching_session_;
  if (this != internal_default_instance()) delete _impl_.coaching_session_status_;
}

void CMsgAvailablePrivateCoachingSession::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAvailablePrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAvailablePrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.coaching_session_ != nullptr);
      _impl_.coaching_session_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.coaching_session_status_ != nullptr);
      _impl_.coaching_session_status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAvailablePrivateCoachingSession::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgPrivateCoachingSession coaching_session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAvailablePrivateCoachingSession::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAvailablePrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::coaching_session(this),
        _Internal::coaching_session(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::coaching_session_status(this),
        _Internal::coaching_session_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAvailablePrivateCoachingSession)
  return target;
}

size_t CMsgAvailablePrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAvailablePrivateCoachingSession)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession coaching_session = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.coaching_session_);
    }

    // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.coaching_session_status_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAvailablePrivateCoachingSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAvailablePrivateCoachingSession::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAvailablePrivateCoachingSession::GetClassData() const { return &_class_data_; }


void CMsgAvailablePrivateCoachingSession::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAvailablePrivateCoachingSession*>(&to_msg);
  auto& from = static_cast<const CMsgAvailablePrivateCoachingSession&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAvailablePrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(
          from._internal_coaching_session());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_coaching_session_status()->::CMsgPrivateCoachingSessionStatus::MergeFrom(
          from._internal_coaching_session_status());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAvailablePrivateCoachingSession::CopyFrom(const CMsgAvailablePrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAvailablePrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAvailablePrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgAvailablePrivateCoachingSession::InternalSwap(CMsgAvailablePrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAvailablePrivateCoachingSession, _impl_.coaching_session_status_)
      + sizeof(CMsgAvailablePrivateCoachingSession::_impl_.coaching_session_status_)
      - PROTOBUF_FIELD_OFFSET(CMsgAvailablePrivateCoachingSession, _impl_.coaching_session_)>(
          reinterpret_cast<char*>(&_impl_.coaching_session_),
          reinterpret_cast<char*>(&other->_impl_.coaching_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAvailablePrivateCoachingSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[4]);
}

// ===================================================================

class CMsgAvailablePrivateCoachingSessionList::_Internal {
 public:
};

CMsgAvailablePrivateCoachingSessionList::CMsgAvailablePrivateCoachingSessionList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAvailablePrivateCoachingSessionList)
}
CMsgAvailablePrivateCoachingSessionList::CMsgAvailablePrivateCoachingSessionList(const CMsgAvailablePrivateCoachingSessionList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAvailablePrivateCoachingSessionList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.available_coaching_sessions_){from._impl_.available_coaching_sessions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAvailablePrivateCoachingSessionList)
}

inline void CMsgAvailablePrivateCoachingSessionList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.available_coaching_sessions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgAvailablePrivateCoachingSessionList::~CMsgAvailablePrivateCoachingSessionList() {
  // @@protoc_insertion_point(destructor:CMsgAvailablePrivateCoachingSessionList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAvailablePrivateCoachingSessionList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.available_coaching_sessions_.~RepeatedPtrField();
}

void CMsgAvailablePrivateCoachingSessionList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAvailablePrivateCoachingSessionList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAvailablePrivateCoachingSessionList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_coaching_sessions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAvailablePrivateCoachingSessionList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_available_coaching_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAvailablePrivateCoachingSessionList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAvailablePrivateCoachingSessionList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_available_coaching_sessions_size()); i < n; i++) {
    const auto& repfield = this->_internal_available_coaching_sessions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAvailablePrivateCoachingSessionList)
  return target;
}

size_t CMsgAvailablePrivateCoachingSessionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAvailablePrivateCoachingSessionList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
  total_size += 1UL * this->_internal_available_coaching_sessions_size();
  for (const auto& msg : this->_impl_.available_coaching_sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAvailablePrivateCoachingSessionList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAvailablePrivateCoachingSessionList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAvailablePrivateCoachingSessionList::GetClassData() const { return &_class_data_; }


void CMsgAvailablePrivateCoachingSessionList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAvailablePrivateCoachingSessionList*>(&to_msg);
  auto& from = static_cast<const CMsgAvailablePrivateCoachingSessionList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAvailablePrivateCoachingSessionList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.available_coaching_sessions_.MergeFrom(from._impl_.available_coaching_sessions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAvailablePrivateCoachingSessionList::CopyFrom(const CMsgAvailablePrivateCoachingSessionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAvailablePrivateCoachingSessionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAvailablePrivateCoachingSessionList::IsInitialized() const {
  return true;
}

void CMsgAvailablePrivateCoachingSessionList::InternalSwap(CMsgAvailablePrivateCoachingSessionList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.available_coaching_sessions_.InternalSwap(&other->_impl_.available_coaching_sessions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAvailablePrivateCoachingSessionList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[5]);
}

// ===================================================================

class CMsgAvailablePrivateCoachingSessionSummary::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAvailablePrivateCoachingSessionSummary>()._impl_._has_bits_);
  static void set_has_coaching_session_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAvailablePrivateCoachingSessionSummary::CMsgAvailablePrivateCoachingSessionSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAvailablePrivateCoachingSessionSummary)
}
CMsgAvailablePrivateCoachingSessionSummary::CMsgAvailablePrivateCoachingSessionSummary(const CMsgAvailablePrivateCoachingSessionSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAvailablePrivateCoachingSessionSummary* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.coaching_session_count_ = from._impl_.coaching_session_count_;
  // @@protoc_insertion_point(copy_constructor:CMsgAvailablePrivateCoachingSessionSummary)
}

inline void CMsgAvailablePrivateCoachingSessionSummary::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_count_){0u}
  };
}

CMsgAvailablePrivateCoachingSessionSummary::~CMsgAvailablePrivateCoachingSessionSummary() {
  // @@protoc_insertion_point(destructor:CMsgAvailablePrivateCoachingSessionSummary)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAvailablePrivateCoachingSessionSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgAvailablePrivateCoachingSessionSummary::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAvailablePrivateCoachingSessionSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAvailablePrivateCoachingSessionSummary)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.coaching_session_count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAvailablePrivateCoachingSessionSummary::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 coaching_session_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_coaching_session_count(&has_bits);
          _impl_.coaching_session_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAvailablePrivateCoachingSessionSummary::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAvailablePrivateCoachingSessionSummary)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 coaching_session_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coaching_session_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAvailablePrivateCoachingSessionSummary)
  return target;
}

size_t CMsgAvailablePrivateCoachingSessionSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAvailablePrivateCoachingSessionSummary)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 coaching_session_count = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_coaching_session_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAvailablePrivateCoachingSessionSummary::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAvailablePrivateCoachingSessionSummary::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAvailablePrivateCoachingSessionSummary::GetClassData() const { return &_class_data_; }


void CMsgAvailablePrivateCoachingSessionSummary::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAvailablePrivateCoachingSessionSummary*>(&to_msg);
  auto& from = static_cast<const CMsgAvailablePrivateCoachingSessionSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAvailablePrivateCoachingSessionSummary)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coaching_session_count()) {
    _this->_internal_set_coaching_session_count(from._internal_coaching_session_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAvailablePrivateCoachingSessionSummary::CopyFrom(const CMsgAvailablePrivateCoachingSessionSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAvailablePrivateCoachingSessionSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAvailablePrivateCoachingSessionSummary::IsInitialized() const {
  return true;
}

void CMsgAvailablePrivateCoachingSessionSummary::InternalSwap(CMsgAvailablePrivateCoachingSessionSummary* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.coaching_session_count_, other->_impl_.coaching_session_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAvailablePrivateCoachingSessionSummary::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[6]);
}

// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatches::_Internal {
 public:
};

CMsgClientToGCRequestPlayerCoachMatches::CMsgClientToGCRequestPlayerCoachMatches(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatches)
}
CMsgClientToGCRequestPlayerCoachMatches::CMsgClientToGCRequestPlayerCoachMatches(const CMsgClientToGCRequestPlayerCoachMatches& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCRequestPlayerCoachMatches* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatches)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestPlayerCoachMatches::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestPlayerCoachMatches::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatches::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[7]);
}

// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatchesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPlayerCoachMatchesResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestPlayerCoachMatchesResponse::CMsgClientToGCRequestPlayerCoachMatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatchesResponse)
}
CMsgClientToGCRequestPlayerCoachMatchesResponse::CMsgClientToGCRequestPlayerCoachMatchesResponse(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestPlayerCoachMatchesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_matches_){from._impl_.coach_matches_}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatchesResponse)
}

inline void CMsgClientToGCRequestPlayerCoachMatchesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_matches_){arena}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestPlayerCoachMatchesResponse::~CMsgClientToGCRequestPlayerCoachMatchesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestPlayerCoachMatchesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.coach_matches_.~RepeatedPtrField();
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.coach_matches_.Clear();
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatchesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgPlayerCoachMatch coach_matches = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coach_matches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestPlayerCoachMatchesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgPlayerCoachMatch coach_matches = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_coach_matches_size()); i < n; i++) {
    const auto& repfield = this->_internal_coach_matches(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgPlayerCoachMatch coach_matches = 2;
  total_size += 1UL * this->_internal_coach_matches_size();
  for (const auto& msg : this->_impl_.coach_matches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestPlayerCoachMatchesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestPlayerCoachMatchesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestPlayerCoachMatchesResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestPlayerCoachMatchesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestPlayerCoachMatchesResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestPlayerCoachMatchesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.coach_matches_.MergeFrom(from._impl_.coach_matches_);
  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatchesResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::InternalSwap(CMsgClientToGCRequestPlayerCoachMatchesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.coach_matches_.InternalSwap(&other->_impl_.coach_matches_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatchesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[8]);
}

// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPlayerCoachMatch>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestPlayerCoachMatch::CMsgClientToGCRequestPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatch)
}
CMsgClientToGCRequestPlayerCoachMatch::CMsgClientToGCRequestPlayerCoachMatch(const CMsgClientToGCRequestPlayerCoachMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestPlayerCoachMatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.match_id_ = from._impl_.match_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatch)
}

inline void CMsgClientToGCRequestPlayerCoachMatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){uint64_t{0u}}
  };
}

CMsgClientToGCRequestPlayerCoachMatch::~CMsgClientToGCRequestPlayerCoachMatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestPlayerCoachMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRequestPlayerCoachMatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestPlayerCoachMatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatch)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 match_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestPlayerCoachMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestPlayerCoachMatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestPlayerCoachMatch::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestPlayerCoachMatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestPlayerCoachMatch*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestPlayerCoachMatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_match_id()) {
    _this->_internal_set_match_id(from._internal_match_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestPlayerCoachMatch::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatch::InternalSwap(CMsgClientToGCRequestPlayerCoachMatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.match_id_, other->_impl_.match_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[9]);
}

// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPlayerCoachMatchResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPlayerCoachMatch& coach_match(const CMsgClientToGCRequestPlayerCoachMatchResponse* msg);
  static void set_has_coach_match(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPlayerCoachMatch&
CMsgClientToGCRequestPlayerCoachMatchResponse::_Internal::coach_match(const CMsgClientToGCRequestPlayerCoachMatchResponse* msg) {
  return *msg->_impl_.coach_match_;
}
CMsgClientToGCRequestPlayerCoachMatchResponse::CMsgClientToGCRequestPlayerCoachMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatchResponse)
}
CMsgClientToGCRequestPlayerCoachMatchResponse::CMsgClientToGCRequestPlayerCoachMatchResponse(const CMsgClientToGCRequestPlayerCoachMatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestPlayerCoachMatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_match_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coach_match()) {
    _this->_impl_.coach_match_ = new ::CMsgPlayerCoachMatch(*from._impl_.coach_match_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatchResponse)
}

inline void CMsgClientToGCRequestPlayerCoachMatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_match_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestPlayerCoachMatchResponse::~CMsgClientToGCRequestPlayerCoachMatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestPlayerCoachMatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coach_match_;
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.coach_match_ != nullptr);
    _impl_.coach_match_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPlayerCoachMatch coach_match = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coach_match(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestPlayerCoachMatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPlayerCoachMatch coach_match = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::coach_match(this),
        _Internal::coach_match(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatchResponse)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPlayerCoachMatch coach_match = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.coach_match_);
    }

    // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestPlayerCoachMatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestPlayerCoachMatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestPlayerCoachMatchResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestPlayerCoachMatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestPlayerCoachMatchResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestPlayerCoachMatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_coach_match()->::CMsgPlayerCoachMatch::MergeFrom(
          from._internal_coach_match());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::InternalSwap(CMsgClientToGCRequestPlayerCoachMatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPlayerCoachMatchResponse, _impl_.result_)
      + sizeof(CMsgClientToGCRequestPlayerCoachMatchResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPlayerCoachMatchResponse, _impl_.coach_match_)>(
          reinterpret_cast<char*>(&_impl_.coach_match_),
          reinterpret_cast<char*>(&other->_impl_.coach_match_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[10]);
}

// ===================================================================

class CMsgClientToGCSubmitCoachTeammateRating::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitCoachTeammateRating>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_coach_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rating(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitCoachTeammateRating::CMsgClientToGCSubmitCoachTeammateRating(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitCoachTeammateRating)
}
CMsgClientToGCSubmitCoachTeammateRating::CMsgClientToGCSubmitCoachTeammateRating(const CMsgClientToGCSubmitCoachTeammateRating& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSubmitCoachTeammateRating* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.coach_account_id_){}
    , decltype(_impl_.rating_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_reason()) {
    _this->_impl_.reason_.Set(from._internal_reason(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rating_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.rating_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitCoachTeammateRating)
}

inline void CMsgClientToGCSubmitCoachTeammateRating::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.coach_account_id_){0u}
    , decltype(_impl_.rating_){0}
  };
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCSubmitCoachTeammateRating::~CMsgClientToGCSubmitCoachTeammateRating() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitCoachTeammateRating)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSubmitCoachTeammateRating::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reason_.Destroy();
}

void CMsgClientToGCSubmitCoachTeammateRating::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSubmitCoachTeammateRating::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitCoachTeammateRating)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.reason_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.rating_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.rating_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitCoachTeammateRating::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 coach_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_coach_account_id(&has_bits);
          _impl_.coach_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
            _internal_set_rating(static_cast<::ECoachTeammateRating>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCSubmitCoachTeammateRating.reason");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSubmitCoachTeammateRating::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitCoachTeammateRating)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional uint32 coach_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_coach_account_id(), target);
  }

  // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_rating(), target);
  }

  // optional string reason = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSubmitCoachTeammateRating.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitCoachTeammateRating)
  return target;
}

size_t CMsgClientToGCSubmitCoachTeammateRating::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitCoachTeammateRating)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string reason = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reason());
    }

    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional uint32 coach_account_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_coach_account_id());
    }

    // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_rating());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSubmitCoachTeammateRating::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSubmitCoachTeammateRating::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSubmitCoachTeammateRating::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSubmitCoachTeammateRating::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSubmitCoachTeammateRating*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSubmitCoachTeammateRating&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitCoachTeammateRating)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.coach_account_id_ = from._impl_.coach_account_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.rating_ = from._impl_.rating_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSubmitCoachTeammateRating::CopyFrom(const CMsgClientToGCSubmitCoachTeammateRating& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitCoachTeammateRating)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitCoachTeammateRating::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitCoachTeammateRating::InternalSwap(CMsgClientToGCSubmitCoachTeammateRating* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reason_, lhs_arena,
      &other->_impl_.reason_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitCoachTeammateRating, _impl_.rating_)
      + sizeof(CMsgClientToGCSubmitCoachTeammateRating::_impl_.rating_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitCoachTeammateRating, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitCoachTeammateRating::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[11]);
}

// ===================================================================

class CMsgClientToGCSubmitCoachTeammateRatingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitCoachTeammateRatingResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitCoachTeammateRatingResponse::CMsgClientToGCSubmitCoachTeammateRatingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitCoachTeammateRatingResponse)
}
CMsgClientToGCSubmitCoachTeammateRatingResponse::CMsgClientToGCSubmitCoachTeammateRatingResponse(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSubmitCoachTeammateRatingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitCoachTeammateRatingResponse)
}

inline void CMsgClientToGCSubmitCoachTeammateRatingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCSubmitCoachTeammateRatingResponse::~CMsgClientToGCSubmitCoachTeammateRatingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSubmitCoachTeammateRatingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitCoachTeammateRatingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSubmitCoachTeammateRatingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  return target;
}

size_t CMsgClientToGCSubmitCoachTeammateRatingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSubmitCoachTeammateRatingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSubmitCoachTeammateRatingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSubmitCoachTeammateRatingResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSubmitCoachTeammateRatingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSubmitCoachTeammateRatingResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSubmitCoachTeammateRatingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::CopyFrom(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitCoachTeammateRatingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::InternalSwap(CMsgClientToGCSubmitCoachTeammateRatingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitCoachTeammateRatingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[12]);
}

// ===================================================================

class CMsgGCToClientCoachTeammateRatingsChanged::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientCoachTeammateRatingsChanged>()._impl_._has_bits_);
  static const ::CMsgPlayerCoachMatch& coach_match(const CMsgGCToClientCoachTeammateRatingsChanged* msg);
  static void set_has_coach_match(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPlayerCoachMatch&
CMsgGCToClientCoachTeammateRatingsChanged::_Internal::coach_match(const CMsgGCToClientCoachTeammateRatingsChanged* msg) {
  return *msg->_impl_.coach_match_;
}
CMsgGCToClientCoachTeammateRatingsChanged::CMsgGCToClientCoachTeammateRatingsChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientCoachTeammateRatingsChanged)
}
CMsgGCToClientCoachTeammateRatingsChanged::CMsgGCToClientCoachTeammateRatingsChanged(const CMsgGCToClientCoachTeammateRatingsChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientCoachTeammateRatingsChanged* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_match_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coach_match()) {
    _this->_impl_.coach_match_ = new ::CMsgPlayerCoachMatch(*from._impl_.coach_match_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientCoachTeammateRatingsChanged)
}

inline void CMsgGCToClientCoachTeammateRatingsChanged::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_match_){nullptr}
  };
}

CMsgGCToClientCoachTeammateRatingsChanged::~CMsgGCToClientCoachTeammateRatingsChanged() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientCoachTeammateRatingsChanged)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientCoachTeammateRatingsChanged::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coach_match_;
}

void CMsgGCToClientCoachTeammateRatingsChanged::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientCoachTeammateRatingsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientCoachTeammateRatingsChanged)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.coach_match_ != nullptr);
    _impl_.coach_match_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientCoachTeammateRatingsChanged::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgPlayerCoachMatch coach_match = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coach_match(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientCoachTeammateRatingsChanged::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientCoachTeammateRatingsChanged)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgPlayerCoachMatch coach_match = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::coach_match(this),
        _Internal::coach_match(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientCoachTeammateRatingsChanged)
  return target;
}

size_t CMsgGCToClientCoachTeammateRatingsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientCoachTeammateRatingsChanged)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgPlayerCoachMatch coach_match = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.coach_match_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientCoachTeammateRatingsChanged::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientCoachTeammateRatingsChanged::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientCoachTeammateRatingsChanged::GetClassData() const { return &_class_data_; }


void CMsgGCToClientCoachTeammateRatingsChanged::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientCoachTeammateRatingsChanged*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientCoachTeammateRatingsChanged&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientCoachTeammateRatingsChanged)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coach_match()) {
    _this->_internal_mutable_coach_match()->::CMsgPlayerCoachMatch::MergeFrom(
        from._internal_coach_match());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientCoachTeammateRatingsChanged::CopyFrom(const CMsgGCToClientCoachTeammateRatingsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientCoachTeammateRatingsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientCoachTeammateRatingsChanged::IsInitialized() const {
  return true;
}

void CMsgGCToClientCoachTeammateRatingsChanged::InternalSwap(CMsgGCToClientCoachTeammateRatingsChanged* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.coach_match_, other->_impl_.coach_match_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientCoachTeammateRatingsChanged::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[13]);
}

// ===================================================================

class CMsgClientToGCRequestPrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPrivateCoachingSession>()._impl_._has_bits_);
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestPrivateCoachingSession::CMsgClientToGCRequestPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPrivateCoachingSession)
}
CMsgClientToGCRequestPrivateCoachingSession::CMsgClientToGCRequestPrivateCoachingSession(const CMsgClientToGCRequestPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestPrivateCoachingSession* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.language_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.language_ = from._impl_.language_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPrivateCoachingSession)
}

inline void CMsgClientToGCRequestPrivateCoachingSession::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.language_){0u}
  };
}

CMsgClientToGCRequestPrivateCoachingSession::~CMsgClientToGCRequestPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPrivateCoachingSession)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRequestPrivateCoachingSession::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.language_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPrivateCoachingSession::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 language = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_language(&has_bits);
          _impl_.language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestPrivateCoachingSession::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 language = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPrivateCoachingSession)
  return target;
}

size_t CMsgClientToGCRequestPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPrivateCoachingSession)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 language = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestPrivateCoachingSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestPrivateCoachingSession::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestPrivateCoachingSession::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestPrivateCoachingSession::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestPrivateCoachingSession*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestPrivateCoachingSession&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_language()) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestPrivateCoachingSession::CopyFrom(const CMsgClientToGCRequestPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPrivateCoachingSession::InternalSwap(CMsgClientToGCRequestPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.language_, other->_impl_.language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPrivateCoachingSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[14]);
}

// ===================================================================

class CMsgClientToGCRequestPrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPrivateCoachingSessionResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgClientToGCRequestPrivateCoachingSessionResponse* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgClientToGCRequestPrivateCoachingSessionResponse::_Internal::coaching_session(const CMsgClientToGCRequestPrivateCoachingSessionResponse* msg) {
  return *msg->_impl_.coaching_session_;
}
CMsgClientToGCRequestPrivateCoachingSessionResponse::CMsgClientToGCRequestPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPrivateCoachingSessionResponse)
}
CMsgClientToGCRequestPrivateCoachingSessionResponse::CMsgClientToGCRequestPrivateCoachingSessionResponse(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestPrivateCoachingSessionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    _this->_impl_.coaching_session_ = new ::CMsgPrivateCoachingSession(*from._impl_.coaching_session_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPrivateCoachingSessionResponse)
}

inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestPrivateCoachingSessionResponse::~CMsgClientToGCRequestPrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coaching_session_;
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.coaching_session_ != nullptr);
    _impl_.coaching_session_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSession coaching_session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestPrivateCoachingSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPrivateCoachingSession coaching_session = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::coaching_session(this),
        _Internal::coaching_session(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCRequestPrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession coaching_session = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.coaching_session_);
    }

    // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestPrivateCoachingSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestPrivateCoachingSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestPrivateCoachingSessionResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestPrivateCoachingSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestPrivateCoachingSessionResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestPrivateCoachingSessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(
          from._internal_coaching_session());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCRequestPrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPrivateCoachingSessionResponse, _impl_.result_)
      + sizeof(CMsgClientToGCRequestPrivateCoachingSessionResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPrivateCoachingSessionResponse, _impl_.coaching_session_)>(
          reinterpret_cast<char*>(&_impl_.coaching_session_),
          reinterpret_cast<char*>(&other->_impl_.coaching_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPrivateCoachingSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[15]);
}

// ===================================================================

class CMsgClientToGCAcceptPrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptPrivateCoachingSession>()._impl_._has_bits_);
  static void set_has_coaching_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAcceptPrivateCoachingSession::CMsgClientToGCAcceptPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptPrivateCoachingSession)
}
CMsgClientToGCAcceptPrivateCoachingSession::CMsgClientToGCAcceptPrivateCoachingSession(const CMsgClientToGCAcceptPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAcceptPrivateCoachingSession* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.coaching_session_id_ = from._impl_.coaching_session_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptPrivateCoachingSession)
}

inline void CMsgClientToGCAcceptPrivateCoachingSession::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_id_){uint64_t{0u}}
  };
}

CMsgClientToGCAcceptPrivateCoachingSession::~CMsgClientToGCAcceptPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptPrivateCoachingSession)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAcceptPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCAcceptPrivateCoachingSession::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAcceptPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptPrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.coaching_session_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptPrivateCoachingSession::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 coaching_session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_coaching_session_id(&has_bits);
          _impl_.coaching_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAcceptPrivateCoachingSession::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptPrivateCoachingSession)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 coaching_session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_coaching_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptPrivateCoachingSession)
  return target;
}

size_t CMsgClientToGCAcceptPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptPrivateCoachingSession)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 coaching_session_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_coaching_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAcceptPrivateCoachingSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAcceptPrivateCoachingSession::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAcceptPrivateCoachingSession::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAcceptPrivateCoachingSession::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAcceptPrivateCoachingSession*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAcceptPrivateCoachingSession&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coaching_session_id()) {
    _this->_internal_set_coaching_session_id(from._internal_coaching_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAcceptPrivateCoachingSession::CopyFrom(const CMsgClientToGCAcceptPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptPrivateCoachingSession::InternalSwap(CMsgClientToGCAcceptPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.coaching_session_id_, other->_impl_.coaching_session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptPrivateCoachingSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[16]);
}

// ===================================================================

class CMsgClientToGCAcceptPrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptPrivateCoachingSessionResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgClientToGCAcceptPrivateCoachingSessionResponse* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgClientToGCAcceptPrivateCoachingSessionResponse::_Internal::coaching_session(const CMsgClientToGCAcceptPrivateCoachingSessionResponse* msg) {
  return *msg->_impl_.coaching_session_;
}
CMsgClientToGCAcceptPrivateCoachingSessionResponse::CMsgClientToGCAcceptPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
}
CMsgClientToGCAcceptPrivateCoachingSessionResponse::CMsgClientToGCAcceptPrivateCoachingSessionResponse(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCAcceptPrivateCoachingSessionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    _this->_impl_.coaching_session_ = new ::CMsgPrivateCoachingSession(*from._impl_.coaching_session_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
}

inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCAcceptPrivateCoachingSessionResponse::~CMsgClientToGCAcceptPrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coaching_session_;
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.coaching_session_ != nullptr);
    _impl_.coaching_session_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptPrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSession coaching_session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCAcceptPrivateCoachingSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPrivateCoachingSession coaching_session = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::coaching_session(this),
        _Internal::coaching_session(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCAcceptPrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession coaching_session = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.coaching_session_);
    }

    // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCAcceptPrivateCoachingSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCAcceptPrivateCoachingSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCAcceptPrivateCoachingSessionResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCAcceptPrivateCoachingSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCAcceptPrivateCoachingSessionResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCAcceptPrivateCoachingSessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(
          from._internal_coaching_session());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptPrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCAcceptPrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCAcceptPrivateCoachingSessionResponse, _impl_.result_)
      + sizeof(CMsgClientToGCAcceptPrivateCoachingSessionResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCAcceptPrivateCoachingSessionResponse, _impl_.coaching_session_)>(
          reinterpret_cast<char*>(&_impl_.coaching_session_),
          reinterpret_cast<char*>(&other->_impl_.coaching_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptPrivateCoachingSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[17]);
}

// ===================================================================

class CMsgClientToGCLeavePrivateCoachingSession::_Internal {
 public:
};

CMsgClientToGCLeavePrivateCoachingSession::CMsgClientToGCLeavePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeavePrivateCoachingSession)
}
CMsgClientToGCLeavePrivateCoachingSession::CMsgClientToGCLeavePrivateCoachingSession(const CMsgClientToGCLeavePrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCLeavePrivateCoachingSession* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeavePrivateCoachingSession)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCLeavePrivateCoachingSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCLeavePrivateCoachingSession::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeavePrivateCoachingSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[18]);
}

// ===================================================================

class CMsgClientToGCLeavePrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeavePrivateCoachingSessionResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeavePrivateCoachingSessionResponse::CMsgClientToGCLeavePrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeavePrivateCoachingSessionResponse)
}
CMsgClientToGCLeavePrivateCoachingSessionResponse::CMsgClientToGCLeavePrivateCoachingSessionResponse(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCLeavePrivateCoachingSessionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeavePrivateCoachingSessionResponse)
}

inline void CMsgClientToGCLeavePrivateCoachingSessionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCLeavePrivateCoachingSessionResponse::~CMsgClientToGCLeavePrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCLeavePrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeavePrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCLeavePrivateCoachingSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCLeavePrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCLeavePrivateCoachingSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCLeavePrivateCoachingSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCLeavePrivateCoachingSessionResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCLeavePrivateCoachingSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCLeavePrivateCoachingSessionResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCLeavePrivateCoachingSessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeavePrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCLeavePrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeavePrivateCoachingSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[19]);
}

// ===================================================================

class CMsgClientToGCGetCurrentPrivateCoachingSession::_Internal {
 public:
};

CMsgClientToGCGetCurrentPrivateCoachingSession::CMsgClientToGCGetCurrentPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetCurrentPrivateCoachingSession)
}
CMsgClientToGCGetCurrentPrivateCoachingSession::CMsgClientToGCGetCurrentPrivateCoachingSession(const CMsgClientToGCGetCurrentPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCGetCurrentPrivateCoachingSession* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetCurrentPrivateCoachingSession)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetCurrentPrivateCoachingSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetCurrentPrivateCoachingSession::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetCurrentPrivateCoachingSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[20]);
}

// ===================================================================

class CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPrivateCoachingSession& current_session(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* msg);
  static void set_has_current_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_Internal::current_session(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* msg) {
  return *msg->_impl_.current_session_;
}
CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
}
CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.current_session_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_current_session()) {
    _this->_impl_.current_session_ = new ::CMsgPrivateCoachingSession(*from._impl_.current_session_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
}

inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.current_session_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::~CMsgClientToGCGetCurrentPrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.current_session_;
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.current_session_ != nullptr);
    _impl_.current_session_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSession current_session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_session(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPrivateCoachingSession current_session = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::current_session(this),
        _Internal::current_session(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession current_session = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.current_session_);
    }

    // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_current_session()->::CMsgPrivateCoachingSession::MergeFrom(
          from._internal_current_session());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _impl_.result_)
      + sizeof(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _impl_.current_session_)>(
          reinterpret_cast<char*>(&_impl_.current_session_),
          reinterpret_cast<char*>(&other->_impl_.current_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[21]);
}

// ===================================================================

class CMsgGCToClientPrivateCoachingSessionUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientPrivateCoachingSessionUpdated>()._impl_._has_bits_);
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgGCToClientPrivateCoachingSessionUpdated* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgGCToClientPrivateCoachingSessionUpdated::_Internal::coaching_session(const CMsgGCToClientPrivateCoachingSessionUpdated* msg) {
  return *msg->_impl_.coaching_session_;
}
CMsgGCToClientPrivateCoachingSessionUpdated::CMsgGCToClientPrivateCoachingSessionUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientPrivateCoachingSessionUpdated)
}
CMsgGCToClientPrivateCoachingSessionUpdated::CMsgGCToClientPrivateCoachingSessionUpdated(const CMsgGCToClientPrivateCoachingSessionUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientPrivateCoachingSessionUpdated* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    _this->_impl_.coaching_session_ = new ::CMsgPrivateCoachingSession(*from._impl_.coaching_session_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientPrivateCoachingSessionUpdated)
}

inline void CMsgGCToClientPrivateCoachingSessionUpdated::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_){nullptr}
  };
}

CMsgGCToClientPrivateCoachingSessionUpdated::~CMsgGCToClientPrivateCoachingSessionUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientPrivateCoachingSessionUpdated)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientPrivateCoachingSessionUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coaching_session_;
}

void CMsgGCToClientPrivateCoachingSessionUpdated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientPrivateCoachingSessionUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.coaching_session_ != nullptr);
    _impl_.coaching_session_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientPrivateCoachingSessionUpdated::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgPrivateCoachingSession coaching_session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientPrivateCoachingSessionUpdated::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::coaching_session(this),
        _Internal::coaching_session(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientPrivateCoachingSessionUpdated)
  return target;
}

size_t CMsgGCToClientPrivateCoachingSessionUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.coaching_session_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientPrivateCoachingSessionUpdated::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientPrivateCoachingSessionUpdated::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientPrivateCoachingSessionUpdated::GetClassData() const { return &_class_data_; }


void CMsgGCToClientPrivateCoachingSessionUpdated::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientPrivateCoachingSessionUpdated*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientPrivateCoachingSessionUpdated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coaching_session()) {
    _this->_internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(
        from._internal_coaching_session());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientPrivateCoachingSessionUpdated::CopyFrom(const CMsgGCToClientPrivateCoachingSessionUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientPrivateCoachingSessionUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientPrivateCoachingSessionUpdated::InternalSwap(CMsgGCToClientPrivateCoachingSessionUpdated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.coaching_session_, other->_impl_.coaching_session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientPrivateCoachingSessionUpdated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[22]);
}

// ===================================================================

class CMsgClientToGCSubmitPrivateCoachingSessionRating::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitPrivateCoachingSessionRating>()._impl_._has_bits_);
  static void set_has_coaching_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_session_rating(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCSubmitPrivateCoachingSessionRating::CMsgClientToGCSubmitPrivateCoachingSessionRating(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRating)
}
CMsgClientToGCSubmitPrivateCoachingSessionRating::CMsgClientToGCSubmitPrivateCoachingSessionRating(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSubmitPrivateCoachingSessionRating* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_id_){}
    , decltype(_impl_.session_rating_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.coaching_session_id_, &from._impl_.coaching_session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.session_rating_) -
    reinterpret_cast<char*>(&_impl_.coaching_session_id_)) + sizeof(_impl_.session_rating_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRating)
}

inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_id_){uint64_t{0u}}
    , decltype(_impl_.session_rating_){0}
  };
}

CMsgClientToGCSubmitPrivateCoachingSessionRating::~CMsgClientToGCSubmitPrivateCoachingSessionRating() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.coaching_session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.session_rating_) -
        reinterpret_cast<char*>(&_impl_.coaching_session_id_)) + sizeof(_impl_.session_rating_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitPrivateCoachingSessionRating::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 coaching_session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_coaching_session_id(&has_bits);
          _impl_.coaching_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
            _internal_set_session_rating(static_cast<::ECoachTeammateRating>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSubmitPrivateCoachingSessionRating::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 coaching_session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_coaching_session_id(), target);
  }

  // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_session_rating(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  return target;
}

size_t CMsgClientToGCSubmitPrivateCoachingSessionRating::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 coaching_session_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_coaching_session_id());
    }

    // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_session_rating());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSubmitPrivateCoachingSessionRating::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSubmitPrivateCoachingSessionRating::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSubmitPrivateCoachingSessionRating::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSubmitPrivateCoachingSessionRating::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSubmitPrivateCoachingSessionRating*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSubmitPrivateCoachingSessionRating&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.coaching_session_id_ = from._impl_.coaching_session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.session_rating_ = from._impl_.session_rating_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::CopyFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitPrivateCoachingSessionRating::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::InternalSwap(CMsgClientToGCSubmitPrivateCoachingSessionRating* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitPrivateCoachingSessionRating, _impl_.session_rating_)
      + sizeof(CMsgClientToGCSubmitPrivateCoachingSessionRating::_impl_.session_rating_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitPrivateCoachingSessionRating, _impl_.coaching_session_id_)>(
          reinterpret_cast<char*>(&_impl_.coaching_session_id_),
          reinterpret_cast<char*>(&other->_impl_.coaching_session_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitPrivateCoachingSessionRating::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[23]);
}

// ===================================================================

class CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
}
CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
}

inline void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::~CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  return target;
}

size_t CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CopyFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::InternalSwap(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[24]);
}

// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessions::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAvailablePrivateCoachingSessions>()._impl_._has_bits_);
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAvailablePrivateCoachingSessions::CMsgClientToGCGetAvailablePrivateCoachingSessions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessions)
}
CMsgClientToGCGetAvailablePrivateCoachingSessions::CMsgClientToGCGetAvailablePrivateCoachingSessions(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAvailablePrivateCoachingSessions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.language_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.language_ = from._impl_.language_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessions)
}

inline void CMsgClientToGCGetAvailablePrivateCoachingSessions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.language_){0u}
  };
}

CMsgClientToGCGetAvailablePrivateCoachingSessions::~CMsgClientToGCGetAvailablePrivateCoachingSessions() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAvailablePrivateCoachingSessions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.language_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 language = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_language(&has_bits);
          _impl_.language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAvailablePrivateCoachingSessions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 language = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 language = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAvailablePrivateCoachingSessions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAvailablePrivateCoachingSessions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAvailablePrivateCoachingSessions::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAvailablePrivateCoachingSessions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAvailablePrivateCoachingSessions*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_language()) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessions::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.language_, other->_impl_.language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[25]);
}

// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAvailablePrivateCoachingSessionList& available_sessions_list(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* msg);
  static void set_has_available_sessions_list(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAvailablePrivateCoachingSessionList&
CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_Internal::available_sessions_list(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* msg) {
  return *msg->_impl_.available_sessions_list_;
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.available_sessions_list_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_available_sessions_list()) {
    _this->_impl_.available_sessions_list_ = new ::CMsgAvailablePrivateCoachingSessionList(*from._impl_.available_sessions_list_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
}

inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.available_sessions_list_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::~CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.available_sessions_list_;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.available_sessions_list_ != nullptr);
    _impl_.available_sessions_list_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_available_sessions_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::available_sessions_list(this),
        _Internal::available_sessions_list(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.available_sessions_list_);
    }

    // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_available_sessions_list()->::CMsgAvailablePrivateCoachingSessionList::MergeFrom(
          from._internal_available_sessions_list());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _impl_.result_)
      + sizeof(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _impl_.available_sessions_list_)>(
          reinterpret_cast<char*>(&_impl_.available_sessions_list_),
          reinterpret_cast<char*>(&other->_impl_.available_sessions_list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[26]);
}

// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::_Internal {
 public:
};

CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[27]);
}

// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAvailablePrivateCoachingSessionSummary& coaching_session_summary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* msg);
  static void set_has_coaching_session_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAvailablePrivateCoachingSessionSummary&
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_Internal::coaching_session_summary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* msg) {
  return *msg->_impl_.coaching_session_summary_;
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_summary_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session_summary()) {
    _this->_impl_.coaching_session_summary_ = new ::CMsgAvailablePrivateCoachingSessionSummary(*from._impl_.coaching_session_summary_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
}

inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coaching_session_summary_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.coaching_session_summary_;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.coaching_session_summary_ != nullptr);
    _impl_.coaching_session_summary_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session_summary(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::coaching_session_summary(this),
        _Internal::coaching_session_summary(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.coaching_session_summary_);
    }

    // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_coaching_session_summary()->::CMsgAvailablePrivateCoachingSessionSummary::MergeFrom(
          from._internal_coaching_session_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _impl_.result_)
      + sizeof(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _impl_.coaching_session_summary_)>(
          reinterpret_cast<char*>(&_impl_.coaching_session_summary_),
          reinterpret_cast<char*>(&other->_impl_.coaching_session_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[28]);
}

// ===================================================================

class CMsgClientToGCJoinPrivateCoachingSessionLobby::_Internal {
 public:
};

CMsgClientToGCJoinPrivateCoachingSessionLobby::CMsgClientToGCJoinPrivateCoachingSessionLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobby)
}
CMsgClientToGCJoinPrivateCoachingSessionLobby::CMsgClientToGCJoinPrivateCoachingSessionLobby(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCJoinPrivateCoachingSessionLobby* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobby)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCJoinPrivateCoachingSessionLobby::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCJoinPrivateCoachingSessionLobby::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinPrivateCoachingSessionLobby::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[29]);
}

// ===================================================================

class CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
}
CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
}

inline void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::~CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  return target;
}

size_t CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CopyFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::InternalSwap(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[30]);
}

// ===================================================================

class CMsgClientToGCCoachFriend::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCoachFriend>()._impl_._has_bits_);
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCoachFriend::CMsgClientToGCCoachFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCoachFriend)
}
CMsgClientToGCCoachFriend::CMsgClientToGCCoachFriend(const CMsgClientToGCCoachFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCoachFriend* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCoachFriend)
}

inline void CMsgClientToGCCoachFriend::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_account_id_){0u}
  };
}

CMsgClientToGCCoachFriend::~CMsgClientToGCCoachFriend() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCoachFriend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCoachFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCoachFriend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCoachFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCoachFriend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCoachFriend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 target_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCoachFriend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCoachFriend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 target_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCoachFriend)
  return target;
}

size_t CMsgClientToGCCoachFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCoachFriend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 target_account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCoachFriend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCoachFriend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCoachFriend::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCoachFriend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCoachFriend*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCoachFriend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCoachFriend)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_target_account_id()) {
    _this->_internal_set_target_account_id(from._internal_target_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCoachFriend::CopyFrom(const CMsgClientToGCCoachFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCoachFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCoachFriend::IsInitialized() const {
  return true;
}

void CMsgClientToGCCoachFriend::InternalSwap(CMsgClientToGCCoachFriend* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.target_account_id_, other->_impl_.target_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCoachFriend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[31]);
}

// ===================================================================

class CMsgClientToGCCoachFriendResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCoachFriendResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCoachFriendResponse::CMsgClientToGCCoachFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCoachFriendResponse)
}
CMsgClientToGCCoachFriendResponse::CMsgClientToGCCoachFriendResponse(const CMsgClientToGCCoachFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCoachFriendResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCoachFriendResponse)
}

inline void CMsgClientToGCCoachFriendResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCCoachFriendResponse::~CMsgClientToGCCoachFriendResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCoachFriendResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCoachFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCoachFriendResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCoachFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCoachFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCoachFriendResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCoachFriendResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCoachFriendResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCoachFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCoachFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCoachFriendResponse)
  return target;
}

size_t CMsgClientToGCCoachFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCoachFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCoachFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCoachFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCoachFriendResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCoachFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCoachFriendResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCoachFriendResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCoachFriendResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCoachFriendResponse::CopyFrom(const CMsgClientToGCCoachFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCoachFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCoachFriendResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCoachFriendResponse::InternalSwap(CMsgClientToGCCoachFriendResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCoachFriendResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[32]);
}

// ===================================================================

class CMsgClientToGCRespondToCoachFriendRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRespondToCoachFriendRequest>()._impl_._has_bits_);
  static void set_has_coach_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRespondToCoachFriendRequest::CMsgClientToGCRespondToCoachFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRespondToCoachFriendRequest)
}
CMsgClientToGCRespondToCoachFriendRequest::CMsgClientToGCRespondToCoachFriendRequest(const CMsgClientToGCRespondToCoachFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRespondToCoachFriendRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_account_id_){}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.coach_account_id_, &from._impl_.coach_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.response_) -
    reinterpret_cast<char*>(&_impl_.coach_account_id_)) + sizeof(_impl_.response_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRespondToCoachFriendRequest)
}

inline void CMsgClientToGCRespondToCoachFriendRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.coach_account_id_){0u}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCRespondToCoachFriendRequest::~CMsgClientToGCRespondToCoachFriendRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRespondToCoachFriendRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRespondToCoachFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRespondToCoachFriendRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRespondToCoachFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRespondToCoachFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.coach_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.response_) -
        reinterpret_cast<char*>(&_impl_.coach_account_id_)) + sizeof(_impl_.response_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRespondToCoachFriendRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 coach_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_coach_account_id(&has_bits);
          _impl_.coach_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ELobbyMemberCoachRequestState_IsValid(val))) {
            _internal_set_response(static_cast<::ELobbyMemberCoachRequestState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRespondToCoachFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRespondToCoachFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 coach_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coach_account_id(), target);
  }

  // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRespondToCoachFriendRequest)
  return target;
}

size_t CMsgClientToGCRespondToCoachFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRespondToCoachFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 coach_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_coach_account_id());
    }

    // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRespondToCoachFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRespondToCoachFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRespondToCoachFriendRequest::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRespondToCoachFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRespondToCoachFriendRequest*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRespondToCoachFriendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRespondToCoachFriendRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.coach_account_id_ = from._impl_.coach_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRespondToCoachFriendRequest::CopyFrom(const CMsgClientToGCRespondToCoachFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRespondToCoachFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRespondToCoachFriendRequest::IsInitialized() const {
  return true;
}

void CMsgClientToGCRespondToCoachFriendRequest::InternalSwap(CMsgClientToGCRespondToCoachFriendRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRespondToCoachFriendRequest, _impl_.response_)
      + sizeof(CMsgClientToGCRespondToCoachFriendRequest::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRespondToCoachFriendRequest, _impl_.coach_account_id_)>(
          reinterpret_cast<char*>(&_impl_.coach_account_id_),
          reinterpret_cast<char*>(&other->_impl_.coach_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRespondToCoachFriendRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[33]);
}

// ===================================================================

class CMsgClientToGCRespondToCoachFriendRequestResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRespondToCoachFriendRequestResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRespondToCoachFriendRequestResponse::CMsgClientToGCRespondToCoachFriendRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRespondToCoachFriendRequestResponse)
}
CMsgClientToGCRespondToCoachFriendRequestResponse::CMsgClientToGCRespondToCoachFriendRequestResponse(const CMsgClientToGCRespondToCoachFriendRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRespondToCoachFriendRequestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRespondToCoachFriendRequestResponse)
}

inline void CMsgClientToGCRespondToCoachFriendRequestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRespondToCoachFriendRequestResponse::~CMsgClientToGCRespondToCoachFriendRequestResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRespondToCoachFriendRequestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRespondToCoachFriendRequestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRespondToCoachFriendRequestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRespondToCoachFriendRequestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRespondToCoachFriendRequestResponse)
  return target;
}

size_t CMsgClientToGCRespondToCoachFriendRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRespondToCoachFriendRequestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRespondToCoachFriendRequestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRespondToCoachFriendRequestResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRespondToCoachFriendRequestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRespondToCoachFriendRequestResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRespondToCoachFriendRequestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::CopyFrom(const CMsgClientToGCRespondToCoachFriendRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRespondToCoachFriendRequestResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::InternalSwap(CMsgClientToGCRespondToCoachFriendRequestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRespondToCoachFriendRequestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_getter, &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once,
      file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[34]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgPlayerCoachMatch*
Arena::CreateMaybeMessage< ::CMsgPlayerCoachMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPlayerCoachMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPrivateCoachingSessionMember*
Arena::CreateMaybeMessage< ::CMsgPrivateCoachingSessionMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPrivateCoachingSessionMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPrivateCoachingSession*
Arena::CreateMaybeMessage< ::CMsgPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPrivateCoachingSessionStatus*
Arena::CreateMaybeMessage< ::CMsgPrivateCoachingSessionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPrivateCoachingSessionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAvailablePrivateCoachingSession*
Arena::CreateMaybeMessage< ::CMsgAvailablePrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAvailablePrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAvailablePrivateCoachingSessionList*
Arena::CreateMaybeMessage< ::CMsgAvailablePrivateCoachingSessionList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAvailablePrivateCoachingSessionList >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAvailablePrivateCoachingSessionSummary*
Arena::CreateMaybeMessage< ::CMsgAvailablePrivateCoachingSessionSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAvailablePrivateCoachingSessionSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatches*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatches >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatches >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatchesResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatchesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatchesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatch*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatchResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitCoachTeammateRating*
Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitCoachTeammateRating >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitCoachTeammateRating >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitCoachTeammateRatingResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitCoachTeammateRatingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitCoachTeammateRatingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientCoachTeammateRatingsChanged*
Arena::CreateMaybeMessage< ::CMsgGCToClientCoachTeammateRatingsChanged >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientCoachTeammateRatingsChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPrivateCoachingSession*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPrivateCoachingSessionResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptPrivateCoachingSession*
Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptPrivateCoachingSessionResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeavePrivateCoachingSession*
Arena::CreateMaybeMessage< ::CMsgClientToGCLeavePrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeavePrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeavePrivateCoachingSessionResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCLeavePrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeavePrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetCurrentPrivateCoachingSession*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetCurrentPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetCurrentPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientPrivateCoachingSessionUpdated*
Arena::CreateMaybeMessage< ::CMsgGCToClientPrivateCoachingSessionUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientPrivateCoachingSessionUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitPrivateCoachingSessionRating*
Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitPrivateCoachingSessionRating >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitPrivateCoachingSessionRating >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessions*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessions >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinPrivateCoachingSessionLobby*
Arena::CreateMaybeMessage< ::CMsgClientToGCJoinPrivateCoachingSessionLobby >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinPrivateCoachingSessionLobby >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCoachFriend*
Arena::CreateMaybeMessage< ::CMsgClientToGCCoachFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCoachFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCoachFriendResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCCoachFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCoachFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRespondToCoachFriendRequest*
Arena::CreateMaybeMessage< ::CMsgClientToGCRespondToCoachFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRespondToCoachFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRespondToCoachFriendRequestResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRespondToCoachFriendRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRespondToCoachFriendRequestResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
