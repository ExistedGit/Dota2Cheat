// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums_clientserver.proto

#include "enums_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

static const ::_pb::EnumDescriptor* file_level_enum_descriptors_enums_5fclientserver_2eproto[4];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_enums_5fclientserver_2eproto = nullptr;
const uint32_t TableStruct_enums_5fclientserver_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enums_5fclientserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030enums_clientserver.proto*\366\235\003\n\004EMsg\022\021\n\r"
  "k_EMsgInvalid\020\000\022\017\n\013k_EMsgMulti\020\001\022\031\n\025k_EM"
  "sgProtobufWrapped\020\002\022\025\n\021k_EMsgBaseGeneral"
  "\020d\022\026\n\022k_EMsgGenericReply\020d\022\027\n\023k_EMsgDest"
  "JobFailed\020q\022\017\n\013k_EMsgAlert\020s\022\025\n\021k_EMsgSC"
  "IDRequest\020x\022\026\n\022k_EMsgSCIDResponse\020y\022\026\n\022k"
  "_EMsgJobHeartbeat\020{\022\024\n\020k_EMsgHubConnect\020"
  "|\022\023\n\017k_EMsgSubscribe\020~\022\024\n\020k_EMRouteMessa"
  "ge\020\177\022\024\n\017k_EMsgWGRequest\020\202\001\022\025\n\020k_EMsgWGRe"
  "sponse\020\203\001\022\024\n\017k_EMsgKeepAlive\020\204\001\022\033\n\026k_EMs"
  "gWebAPIJobRequest\020\205\001\022\034\n\027k_EMsgWebAPIJobR"
  "esponse\020\206\001\022\035\n\030k_EMsgClientSessionStart\020\207"
  "\001\022\033\n\026k_EMsgClientSessionEnd\020\210\001\022\036\n\031k_EMsg"
  "ClientSessionUpdate\020\211\001\022\032\n\025k_EMsgStatsDep"
  "recated\020\212\001\022\017\n\nk_EMsgPing\020\213\001\022\027\n\022k_EMsgPin"
  "gResponse\020\214\001\022\020\n\013k_EMsgStats\020\215\001\022 \n\033k_EMsg"
  "RequestFullStatsBlock\020\216\001\022\033\n\026k_EMsgLoadDB"
  "OCacheItem\020\217\001\022#\n\036k_EMsgLoadDBOCacheItemR"
  "esponse\020\220\001\022\"\n\035k_EMsgInvalidateDBOCacheIt"
  "ems\020\221\001\022\030\n\023k_EMsgServiceMethod\020\222\001\022 \n\033k_EM"
  "sgServiceMethodResponse\020\223\001\022 \n\033k_EMsgClie"
  "ntPackageVersions\020\224\001\022\033\n\026k_EMsgTimestampR"
  "equest\020\225\001\022\034\n\027k_EMsgTimestampResponse\020\226\001\022"
  "&\n!k_EMsgServiceMethodCallFromClient\020\227\001\022"
  "$\n\037k_EMsgServiceMethodSendToClient\020\230\001\022\024\n"
  "\017k_EMsgBaseShell\020\310\001\022\026\n\021k_EMsgAssignSysID"
  "\020\310\001\022\017\n\nk_EMsgExit\020\311\001\022\025\n\020k_EMsgDirRequest"
  "\020\312\001\022\026\n\021k_EMsgDirResponse\020\313\001\022\025\n\020k_EMsgZip"
  "Request\020\314\001\022\026\n\021k_EMsgZipResponse\020\315\001\022\037\n\032k_"
  "EMsgUpdateRecordResponse\020\327\001\022\"\n\035k_EMsgUpd"
  "ateCreditCardRequest\020\335\001\022 \n\033k_EMsgUpdateU"
  "serBanResponse\020\341\001\022\030\n\023k_EMsgPrepareToExit"
  "\020\342\001\022#\n\036k_EMsgContentDescriptionUpdate\020\343\001"
  "\022\032\n\025k_EMsgTestResetServer\020\344\001\022\032\n\025k_EMsgUn"
  "iverseChanged\020\345\001\022 \n\033k_EMsgShellConfigInf"
  "oUpdate\020\346\001\022(\n#k_EMsgRequestWindowsEventL"
  "ogEntries\020\351\001\022(\n#k_EMsgProvideWindowsEven"
  "tLogEntries\020\352\001\022\032\n\025k_EMsgShellSearchLogs\020"
  "\353\001\022\"\n\035k_EMsgShellSearchLogsResponse\020\354\001\022#"
  "\n\036k_EMsgShellCheckWindowsUpdates\020\355\001\022+\n&k"
  "_EMsgShellCheckWindowsUpdatesResponse\020\356\001"
  "\022\036\n\031k_EMsgTestFlushDelayedSQL\020\360\001\022&\n!k_EM"
  "sgTestFlushDelayedSQLResponse\020\361\001\022*\n%k_EM"
  "sgEnsureExecuteScheduledTask_TEST\020\362\001\0222\n-"
  "k_EMsgEnsureExecuteScheduledTaskResponse"
  "_TEST\020\363\001\022.\n)k_EMsgUpdateScheduledTaskEna"
  "bleState_TEST\020\364\001\0226\n1k_EMsgUpdateSchedule"
  "dTaskEnableStateResponse_TEST\020\365\001\022(\n#k_EM"
  "sgContentDescriptionDeltaUpdate\020\366\001\022)\n$k_"
  "EMsgGMShellAndServerAddressUpdates\020\367\001\022\021\n"
  "\014k_EMsgBaseGM\020\254\002\022\024\n\017k_EMsgHeartbeat\020\254\002\022\026"
  "\n\021k_EMsgShellFailed\020\255\002\022\025\n\020k_EMsgExitShel"
  "ls\020\263\002\022\024\n\017k_EMsgExitShell\020\264\002\022\034\n\027k_EMsgGra"
  "cefulExitShell\020\265\002\022$\n\037k_EMsgLicenseProces"
  "singComplete\020\274\002\022\026\n\021k_EMsgSetTestFlag\020\275\002\022"
  "\037\n\032k_EMsgQueuedEmailsComplete\020\276\002\022\033\n\026k_EM"
  "sgGMReportPHPError\020\277\002\022\024\n\017k_EMsgGMDRMSync"
  "\020\300\002\022\037\n\032k_EMsgPhysicalBoxInventory\020\301\002\022\033\n\026"
  "k_EMsgUpdateConfigFile\020\302\002\022\025\n\020k_EMsgTestI"
  "nitDB\020\303\002\022\035\n\030k_EMsgGMWriteConfigToSQL\020\304\002\022"
  " \n\033k_EMsgGMLoadActivationCodes\020\305\002\022\030\n\023k_E"
  "MsgGMQueueForFBS\020\306\002\022$\n\037k_EMsgGMSchemaCon"
  "versionResults\020\307\002\022#\n\036k_EMsgGMWriteShellF"
  "ailureToSQL\020\311\002\022\034\n\027k_EMsgGMWriteStatsToSO"
  "S\020\312\002\022$\n\037k_EMsgGMGetServiceMethodRouting\020"
  "\313\002\022,\n\'k_EMsgGMGetServiceMethodRoutingRes"
  "ponse\020\314\002\022*\n%k_EMsgGMTestNextBuildSchemaC"
  "onversion\020\316\002\0222\n-k_EMsgGMTestNextBuildSch"
  "emaConversionResponse\020\317\002\022\035\n\030k_EMsgExpect"
  "ShellRestart\020\320\002\022\031\n\024k_EMsgHotFixProgress\020"
  "\321\002\022+\n&k_EMsgGMStatsForwardToAdminConnect"
  "ions\020\322\002\022\022\n\rk_EMsgBaseAIS\020\220\003\022\'\n\"k_EMsgAIS"
  "RequestContentDescription\020\222\003\022\033\n\026k_EMsgAI"
  "SUpdateAppInfo\020\223\003\022$\n\037k_EMsgAISGetPackage"
  "ChangeNumber\020\225\003\022,\n\'k_EMsgAISGetPackageCh"
  "angeNumberResponse\020\226\003\022\032\n\025k_EMsgAIGetAppG"
  "CFlags\020\247\003\022\"\n\035k_EMsgAIGetAppGCFlagsRespon"
  "se\020\250\003\022\027\n\022k_EMsgAIGetAppList\020\251\003\022\037\n\032k_EMsg"
  "AIGetAppListResponse\020\252\003\022!\n\034k_EMsgAISGetC"
  "ouponDefinition\020\255\003\022)\n$k_EMsgAISGetCoupon"
  "DefinitionResponse\020\256\003\0221\n,k_EMsgAISUpdate"
  "SubordinateContentDescription\020\257\003\0229\n4k_EM"
  "sgAISUpdateSubordinateContentDescription"
  "Response\020\260\003\022\032\n\025k_EMsgAISTestEnableGC\020\261\003\022"
  "\021\n\014k_EMsgBaseAM\020\364\003\022!\n\034k_EMsgAMUpdateUser"
  "BanRequest\020\370\003\022\027\n\022k_EMsgAMAddLicense\020\371\003\022\037"
  "\n\032k_EMsgAMSendSystemIMToUser\020\374\003\022\032\n\025k_EMs"
  "gAMExtendLicense\020\375\003\022 \n\033k_EMsgAMAddMinute"
  "sToLicense\020\376\003\022\032\n\025k_EMsgAMCancelLicense\020\377"
  "\003\022\031\n\024k_EMsgAMInitPurchase\020\200\004\022\035\n\030k_EMsgAM"
  "PurchaseResponse\020\201\004\022\032\n\025k_EMsgAMGetFinalP"
  "rice\020\202\004\022\"\n\035k_EMsgAMGetFinalPriceResponse"
  "\020\203\004\022\035\n\030k_EMsgAMGetLegacyGameKey\020\204\004\022%\n k_"
  "EMsgAMGetLegacyGameKeyResponse\020\205\004\022!\n\034k_E"
  "MsgAMFindHungTransactions\020\206\004\022%\n k_EMsgAM"
  "SetAccountTrustedRequest\020\207\004\022\033\n\026k_EMsgAMC"
  "ancelPurchase\020\212\004\022\031\n\024k_EMsgAMNewChallenge"
  "\020\213\004\022\033\n\026k_EMsgAMLoadOEMTickets\020\214\004\022\037\n\032k_EM"
  "sgAMFixPendingPurchase\020\215\004\022\'\n\"k_EMsgAMFix"
  "PendingPurchaseResponse\020\216\004\022\031\n\024k_EMsgAMIs"
  "UserBanned\020\217\004\022\030\n\023k_EMsgAMRegisterKey\020\220\004\022"
  " \n\033k_EMsgAMLoadActivationCodes\020\221\004\022(\n#k_E"
  "MsgAMLoadActivationCodesResponse\020\222\004\022\036\n\031k"
  "_EMsgAMLookupKeyResponse\020\223\004\022\026\n\021k_EMsgAML"
  "ookupKey\020\224\004\022\030\n\023k_EMsgAMChatCleanup\020\225\004\022\030\n"
  "\023k_EMsgAMClanCleanup\020\226\004\022\035\n\030k_EMsgAMFixPe"
  "ndingRefund\020\227\004\022\036\n\031k_EMsgAMReverseChargeb"
  "ack\020\230\004\022&\n!k_EMsgAMReverseChargebackRespo"
  "nse\020\231\004\022\034\n\027k_EMsgAMClanCleanupList\020\232\004\022\030\n\023"
  "k_EMsgAMGetLicenses\020\233\004\022 \n\033k_EMsgAMGetLic"
  "ensesResponse\020\234\004\022\037\n\032k_EMsgAMSendCartRepu"
  "rchase\020\235\004\022\'\n\"k_EMsgAMSendCartRepurchaseR"
  "esponse\020\236\004\022\037\n\032k_EMsgAllowUserToPlayQuery"
  "\020\246\004\022\"\n\035k_EMsgAllowUserToPlayResponse\020\247\004\022"
  "\027\n\022k_EMsgAMVerfiyUser\020\250\004\022\035\n\030k_EMsgAMClie"
  "ntNotPlaying\020\251\004\022$\n\037k_EMsgAMClientRequest"
  "Friendship\020\252\004\022\037\n\032k_EMsgAMRelayPublishSta"
  "tus\020\253\004\022!\n\034k_EMsgAMInitPurchaseResponse\020\260"
  "\004\022#\n\036k_EMsgAMRevokePurchaseResponse\020\261\004\022\037"
  "\n\032k_EMsgAMRefreshGuestPasses\020\263\004\022\035\n\030k_EMs"
  "gAMGrantGuestPasses\020\266\004\022\034\n\027k_EMsgAMClanDa"
  "taUpdated\020\267\004\022\032\n\025k_EMsgAMReloadAccount\020\270\004"
  "\022\037\n\032k_EMsgAMClientChatMsgRelay\020\271\004\022\026\n\021k_E"
  "MsgAMChatMulti\020\272\004\022\"\n\035k_EMsgAMClientChatI"
  "nviteRelay\020\273\004\022\027\n\022k_EMsgAMChatInvite\020\274\004\022 "
  "\n\033k_EMsgAMClientJoinChatRelay\020\275\004\022&\n!k_EM"
  "sgAMClientChatMemberInfoRelay\020\276\004\022\"\n\035k_EM"
  "sgAMPublishChatMemberInfo\020\277\004\022%\n k_EMsgAM"
  "ClientAcceptFriendInvite\020\300\004\022\026\n\021k_EMsgAMC"
  "hatEnter\020\301\004\022+\n&k_EMsgAMClientPublishRemo"
  "valFromSource\020\302\004\022\035\n\030k_EMsgAMChatActionRe"
  "sult\020\303\004\022\031\n\024k_EMsgAMFindAccounts\020\304\004\022!\n\034k_"
  "EMsgAMFindAccountsResponse\020\305\004\022\037\n\032k_EMsgA"
  "MIsAccountNameInUse\020\306\004\022\'\n\"k_EMsgAMIsAcco"
  "untNameInUseResponse\020\307\004\022\034\n\027k_EMsgAMSetAc"
  "countFlags\020\310\004\022\027\n\022k_EMsgAMCreateClan\020\312\004\022\037"
  "\n\032k_EMsgAMCreateClanResponse\020\313\004\022\033\n\026k_EMs"
  "gAMGetClanDetails\020\314\004\022#\n\036k_EMsgAMGetClanD"
  "etailsResponse\020\315\004\022\033\n\026k_EMsgAMSetPersonaN"
  "ame\020\316\004\022\026\n\021k_EMsgAMSetAvatar\020\317\004\022\035\n\030k_EMsg"
  "AMAuthenticateUser\020\320\004\022%\n k_EMsgAMAuthent"
  "icateUserResponse\020\321\004\022!\n\034k_EMsgAMP2PIntro"
  "ducerMessage\020\324\004\022\033\n\026k_EMsgClientChatActio"
  "n\020\325\004\022\"\n\035k_EMsgAMClientChatActionRelay\020\326\004"
  "\022\021\n\014k_EMsgBaseVS\020\330\004\022\027\n\022k_EMsgReqChalleng"
  "e\020\330\004\022\026\n\021k_EMsgVACResponse\020\331\004\022\033\n\026k_EMsgRe"
  "qChallengeTest\020\332\004\022\026\n\021k_EMsgVSMarkCheat\020\334"
  "\004\022\025\n\020k_EMsgVSAddCheat\020\335\004\022\033\n\026k_EMsgVSPurg"
  "eCodeModDB\020\336\004\022 \n\033k_EMsgVSGetChallengeRes"
  "ults\020\337\004\022 \n\033k_EMsgVSChallengeResultText\020\340"
  "\004\022\033\n\026k_EMsgVSReportLingerer\020\341\004\022$\n\037k_EMsg"
  "VSRequestManagedChallenge\020\342\004\022\033\n\026k_EMsgVS"
  "LoadDBFinished\020\343\004\022\023\n\016k_EMsgBaseDRMS\020\361\004\022\036"
  "\n\031k_EMsgDRMBuildBlobRequest\020\364\004\022\037\n\032k_EMsg"
  "DRMBuildBlobResponse\020\365\004\022 \n\033k_EMsgDRMReso"
  "lveGuidRequest\020\366\004\022!\n\034k_EMsgDRMResolveGui"
  "dResponse\020\367\004\022\037\n\032k_EMsgDRMVariabilityRepo"
  "rt\020\371\004\022\'\n\"k_EMsgDRMVariabilityReportRespo"
  "nse\020\372\004\022\035\n\030k_EMsgDRMStabilityReport\020\373\004\022%\n"
  " k_EMsgDRMStabilityReportResponse\020\374\004\022\"\n\035"
  "k_EMsgDRMDetailsReportRequest\020\375\004\022#\n\036k_EM"
  "sgDRMDetailsReportResponse\020\376\004\022\031\n\024k_EMsgD"
  "RMProcessFile\020\377\004\022\031\n\024k_EMsgDRMAdminUpdate"
  "\020\200\005\022!\n\034k_EMsgDRMAdminUpdateResponse\020\201\005\022\022"
  "\n\rk_EMsgDRMSync\020\202\005\022\032\n\025k_EMsgDRMSyncRespo"
  "nse\020\203\005\022!\n\034k_EMsgDRMProcessFileResponse\020\204"
  "\005\022\034\n\027k_EMsgDRMEmptyGuidCache\020\205\005\022$\n\037k_EMs"
  "gDRMEmptyGuidCacheResponse\020\206\005\022\021\n\014k_EMsgB"
  "aseCS\020\212\005\022\025\n\020k_EMsgBaseClient\020\274\005\022!\n\034k_EMs"
  "gClientLogOn_Deprecated\020\275\005\022%\n k_EMsgClie"
  "ntAnonLogOn_Deprecated\020\276\005\022\032\n\025k_EMsgClien"
  "tHeartBeat\020\277\005\022\034\n\027k_EMsgClientVACResponse"
  "\020\300\005\022%\n k_EMsgClientGamesPlayed_obsolete\020"
  "\301\005\022\027\n\022k_EMsgClientLogOff\020\302\005\022\"\n\035k_EMsgCli"
  "entNoUDPConnectivity\020\303\005\022 \n\033k_EMsgClientC"
  "onnectionStats\020\306\005\022\035\n\030k_EMsgClientPingRes"
  "ponse\020\310\005\022\035\n\030k_EMsgClientRemoveFriend\020\312\005\022"
  "&\n!k_EMsgClientGamesPlayedNoDataBlob\020\313\005\022"
  "\035\n\030k_EMsgClientChangeStatus\020\314\005\022\"\n\035k_EMsg"
  "ClientVacStatusResponse\020\315\005\022\032\n\025k_EMsgClie"
  "ntFriendMsg\020\316\005\022%\n k_EMsgClientGameConnec"
  "t_obsolete\020\317\005\022&\n!k_EMsgClientGamesPlayed"
  "2_obsolete\020\320\005\022#\n\036k_EMsgClientGameEnded_o"
  "bsolete\020\321\005\022\031\n\024k_EMsgClientSystemIM\020\326\005\022\034\n"
  "\027k_EMsgClientSystemIMAck\020\327\005\022\034\n\027k_EMsgCli"
  "entGetLicenses\020\330\005\022!\n\034k_EMsgClientGetLega"
  "cyGameKey\020\332\005\022.\n)k_EMsgClientContentServe"
  "rLogOn_Deprecated\020\333\005\022\033\n\026k_EMsgClientAckV"
  "ACBan2\020\334\005\022$\n\037k_EMsgClientGetPurchaseRece"
  "ipts\020\340\005\022&\n!k_EMsgClientGamesPlayed3_obso"
  "lete\020\342\005\022\035\n\030k_EMsgClientAckGuestPass\020\344\005\022 "
  "\n\033k_EMsgClientRedeemGuestPass\020\345\005\022\034\n\027k_EM"
  "sgClientGamesPlayed\020\346\005\022\034\n\027k_EMsgClientRe"
  "gisterKey\020\347\005\022!\n\034k_EMsgClientInviteUserTo"
  "Clan\020\350\005\022&\n!k_EMsgClientAcknowledgeClanIn"
  "vite\020\351\005\022&\n!k_EMsgClientPurchaseWithMachi"
  "neID\020\352\005\022\036\n\031k_EMsgClientAppUsageEvent\020\353\005\022"
  "\036\n\031k_EMsgClientLogOnResponse\020\357\005\022!\n\034k_EMs"
  "gClientSetHeartbeatRate\020\363\005\022&\n!k_EMsgClie"
  "ntNotLoggedOnDeprecated\020\364\005\022\032\n\025k_EMsgClie"
  "ntLoggedOff\020\365\005\022\024\n\017k_EMsgGSApprove\020\366\005\022\021\n\014"
  "k_EMsgGSDeny\020\367\005\022\021\n\014k_EMsgGSKick\020\370\005\022!\n\034k_"
  "EMsgClientPurchaseResponse\020\373\005\022\025\n\020k_EMsgC"
  "lientPing\020\374\005\022\024\n\017k_EMsgClientNOP\020\375\005\022\035\n\030k_"
  "EMsgClientPersonaState\020\376\005\022\034\n\027k_EMsgClien"
  "tFriendsList\020\377\005\022\034\n\027k_EMsgClientAccountIn"
  "fo\020\200\006\022\033\n\026k_EMsgClientNewsUpdate\020\203\006\022 \n\033k_"
  "EMsgClientGameConnectDeny\020\205\006\022\030\n\023k_EMsgGS"
  "StatusReply\020\206\006\022\"\n\035k_EMsgClientGameConnec"
  "tTokens\020\213\006\022\034\n\027k_EMsgClientLicenseList\020\214\006"
  "\022\035\n\030k_EMsgClientVACBanStatus\020\216\006\022\027\n\022k_EMs"
  "gClientCMList\020\217\006\022\033\n\026k_EMsgClientEncryptP"
  "ct\020\220\006\022)\n$k_EMsgClientGetLegacyGameKeyRes"
  "ponse\020\221\006\022\032\n\025k_EMsgClientAddFriend\020\227\006\022\"\n\035"
  "k_EMsgClientAddFriendResponse\020\230\006\022%\n k_EM"
  "sgClientAckGuestPassResponse\020\234\006\022(\n#k_EMs"
  "gClientRedeemGuestPassResponse\020\235\006\022&\n!k_E"
  "MsgClientUpdateGuestPassesList\020\236\006\022\030\n\023k_E"
  "MsgClientChatMsg\020\237\006\022\033\n\026k_EMsgClientChatI"
  "nvite\020\240\006\022\031\n\024k_EMsgClientJoinChat\020\241\006\022\037\n\032k"
  "_EMsgClientChatMemberInfo\020\242\006\0220\n+k_EMsgCl"
  "ientLogOnWithCredentials_Deprecated\020\243\006\022\'"
  "\n\"k_EMsgClientPasswordChangeResponse\020\245\006\022"
  "\032\n\025k_EMsgClientChatEnter\020\247\006\022(\n#k_EMsgCli"
  "entFriendRemovedFromSource\020\250\006\022\033\n\026k_EMsgC"
  "lientCreateChat\020\251\006\022#\n\036k_EMsgClientCreate"
  "ChatResponse\020\252\006\022%\n k_EMsgClientP2PIntrod"
  "ucerMessage\020\255\006\022!\n\034k_EMsgClientChatAction"
  "Result\020\256\006\022\"\n\035k_EMsgClientRequestFriendDa"
  "ta\020\257\006\022\035\n\030k_EMsgClientGetUserStats\020\262\006\022%\n "
  "k_EMsgClientGetUserStatsResponse\020\263\006\022\037\n\032k"
  "_EMsgClientStoreUserStats\020\264\006\022\'\n\"k_EMsgCl"
  "ientStoreUserStatsResponse\020\265\006\022\032\n\025k_EMsgC"
  "lientClanState\020\266\006\022\036\n\031k_EMsgClientService"
  "Module\020\276\006\022\034\n\027k_EMsgClientServiceCall\020\277\006\022"
  "$\n\037k_EMsgClientServiceCallResponse\020\300\006\022&\n"
  "!k_EMsgClientNatTraversalStatEvent\020\307\006\022 \n"
  "\033k_EMsgClientSteamUsageEvent\020\312\006\022\036\n\031k_EMs"
  "gClientCheckPassword\020\315\006\022\036\n\031k_EMsgClientR"
  "esetPassword\020\316\006\022&\n!k_EMsgClientCheckPass"
  "wordResponse\020\320\006\022&\n!k_EMsgClientResetPass"
  "wordResponse\020\321\006\022\035\n\030k_EMsgClientSessionTo"
  "ken\020\322\006\022!\n\034k_EMsgClientDRMProblemReport\020\323"
  "\006\022 \n\033k_EMsgClientSetIgnoreFriend\020\327\006\022(\n#k"
  "_EMsgClientSetIgnoreFriendResponse\020\330\006\022&\n"
  "!k_EMsgClientGetAppOwnershipTicket\020\331\006\022.\n"
  ")k_EMsgClientGetAppOwnershipTicketRespon"
  "se\020\332\006\022%\n k_EMsgClientGetLobbyListRespons"
  "e\020\334\006\022\033\n\026k_EMsgClientServerList\020\360\006\022\037\n\032k_E"
  "MsgClientDRMBlobRequest\020\200\007\022 \n\033k_EMsgClie"
  "ntDRMBlobResponse\020\201\007\022\031\n\024k_EMsgBaseGameSe"
  "rver\020\204\007\022\035\n\030k_EMsgGSDisconnectNotice\020\205\007\022\023"
  "\n\016k_EMsgGSStatus\020\207\007\022\030\n\023k_EMsgGSUserPlayi"
  "ng\020\211\007\022\024\n\017k_EMsgGSStatus2\020\212\007\022 \n\033k_EMsgGSS"
  "tatusUpdate_Unused\020\213\007\022\027\n\022k_EMsgGSServerT"
  "ype\020\214\007\022\027\n\022k_EMsgGSPlayerList\020\215\007\022%\n k_EMs"
  "gGSGetUserAchievementStatus\020\216\007\022-\n(k_EMsg"
  "GSGetUserAchievementStatusResponse\020\217\007\022\031\n"
  "\024k_EMsgGSGetPlayStats\020\226\007\022!\n\034k_EMsgGSGetP"
  "layStatsResponse\020\227\007\022\037\n\032k_EMsgGSGetUserGr"
  "oupStatus\020\230\007\022\037\n\032k_EMsgAMGetUserGroupStat"
  "us\020\231\007\022\'\n\"k_EMsgAMGetUserGroupStatusRespo"
  "nse\020\232\007\022\'\n\"k_EMsgGSGetUserGroupStatusResp"
  "onse\020\233\007\022\032\n\025k_EMsgGSGetReputation\020\250\007\022\"\n\035k"
  "_EMsgGSGetReputationResponse\020\251\007\022\036\n\031k_EMs"
  "gGSAssociateWithClan\020\252\007\022&\n!k_EMsgGSAssoc"
  "iateWithClanResponse\020\253\007\022*\n%k_EMsgGSCompu"
  "teNewPlayerCompatibility\020\254\007\0222\n-k_EMsgGSC"
  "omputeNewPlayerCompatibilityResponse\020\255\007\022"
  "\024\n\017k_EMsgBaseAdmin\020\350\007\022\023\n\016k_EMsgAdminCmd\020"
  "\350\007\022\033\n\026k_EMsgAdminCmdResponse\020\354\007\022 \n\033k_EMs"
  "gAdminLogListenRequest\020\355\007\022\030\n\023k_EMsgAdmin"
  "LogEvent\020\356\007\022\027\n\022k_EMsgUniverseData\020\362\007\022\024\n\017"
  "k_EMsgAdminSpew\020\373\007\022\034\n\027k_EMsgAdminConsole"
  "Title\020\374\007\022\026\n\021k_EMsgAdminGCSpew\020\377\007\022\031\n\024k_EM"
  "sgAdminGCCommand\020\200\010\022 \n\033k_EMsgAdminGCGetC"
  "ommandList\020\201\010\022(\n#k_EMsgAdminGCGetCommand"
  "ListResponse\020\202\010\022\034\n\027k_EMsgFBSConnectionDa"
  "ta\020\203\010\022\027\n\022k_EMsgAdminMsgSpew\020\204\010\022\022\n\rk_EMsg"
  "BaseFBS\020\314\010\022\030\n\023k_EMsgFBSReqVersion\020\314\010\022\031\n\024"
  "k_EMsgFBSVersionInfo\020\315\010\022\032\n\025k_EMsgFBSForc"
  "eRefresh\020\316\010\022\031\n\024k_EMsgFBSForceBounce\020\317\010\022\033"
  "\n\026k_EMsgFBSDeployPackage\020\320\010\022\034\n\027k_EMsgFBS"
  "DeployResponse\020\321\010\022 \n\033k_EMsgFBSUpdateBoot"
  "strapper\020\322\010\022\026\n\021k_EMsgFBSSetState\020\323\010\022\034\n\027k"
  "_EMsgFBSApplyOSUpdates\020\324\010\022\032\n\025k_EMsgFBSRu"
  "nCMDScript\020\325\010\022\027\n\022k_EMsgFBSRebootBox\020\326\010\022\037"
  "\n\032k_EMsgFBSSetBigBrotherMode\020\327\010\022\034\n\027k_EMs"
  "gFBSMinidumpServer\020\330\010\022!\n\034k_EMsgFBSDeploy"
  "HotFixPackage\020\332\010\022\"\n\035k_EMsgFBSDeployHotFi"
  "xResponse\020\333\010\022\034\n\027k_EMsgFBSDownloadHotFix\020"
  "\334\010\022$\n\037k_EMsgFBSDownloadHotFixResponse\020\335\010"
  "\022$\n\037k_EMsgFBSUpdateTargetConfigFile\020\336\010\022\036"
  "\n\031k_EMsgFBSApplyAccountCred\020\337\010\022&\n!k_EMsg"
  "FBSApplyAccountCredResponse\020\340\010\022\033\n\026k_EMsg"
  "FBSSetShellCount\020\341\010\022\034\n\027k_EMsgFBSTerminat"
  "eShell\020\342\010\022\037\n\032k_EMsgFBSQueryGMForRequest\020"
  "\343\010\022\035\n\030k_EMsgFBSQueryGMResponse\020\344\010\022\036\n\031k_E"
  "MsgFBSTerminateZombies\020\345\010\022\"\n\035k_EMsgFBSIn"
  "foFromBootstrapper\020\346\010\022\037\n\032k_EMsgFBSReboot"
  "BoxResponse\020\347\010\022(\n#k_EMsgFBSBootstrapperP"
  "ackageRequest\020\350\010\022)\n$k_EMsgFBSBootstrappe"
  "rPackageResponse\020\351\010\022)\n$k_EMsgFBSBootstra"
  "pperGetPackageChunk\020\352\010\0221\n,k_EMsgFBSBoots"
  "trapperGetPackageChunkResponse\020\353\010\0221\n,k_E"
  "MsgFBSBootstrapperPackageTransferProgres"
  "s\020\354\010\022!\n\034k_EMsgFBSRestartBootstrapper\020\355\010\022"
  "\036\n\031k_EMsgFBSPauseFrozenDumps\020\356\010\022\027\n\022k_EMs"
  "gBaseFileXfer\020\260\t\022\032\n\025k_EMsgFileXferReques"
  "t\020\260\t\022\033\n\026k_EMsgFileXferResponse\020\261\t\022\027\n\022k_E"
  "MsgFileXferData\020\262\t\022\026\n\021k_EMsgFileXferEnd\020"
  "\263\t\022\032\n\025k_EMsgFileXferDataAck\020\264\t\022\032\n\025k_EMsg"
  "BaseChannelAuth\020\224\n\022\037\n\032k_EMsgChannelAuthC"
  "hallenge\020\224\n\022\036\n\031k_EMsgChannelAuthResponse"
  "\020\225\n\022\034\n\027k_EMsgChannelAuthResult\020\226\n\022 \n\033k_E"
  "MsgChannelEncryptRequest\020\227\n\022!\n\034k_EMsgCha"
  "nnelEncryptResponse\020\230\n\022\037\n\032k_EMsgChannelE"
  "ncryptResult\020\231\n\022\021\n\014k_EMsgBaseBS\020\370\n\022\032\n\025k_"
  "EMsgBSPurchaseStart\020\371\n\022\035\n\030k_EMsgBSPurcha"
  "seResponse\020\372\n\022 \n\033k_EMsgBSAuthenticateCCT"
  "rans\020\373\n\022(\n#k_EMsgBSAuthenticateCCTransRe"
  "sponse\020\374\n\022\033\n\026k_EMsgBSSettleComplete\020\376\n\022\032"
  "\n\025k_EMsgBSInitPayPalTxn\020\200\013\022\"\n\035k_EMsgBSIn"
  "itPayPalTxnResponse\020\201\013\022\036\n\031k_EMsgBSGetPay"
  "PalUserInfo\020\202\013\022&\n!k_EMsgBSGetPayPalUserI"
  "nfoResponse\020\203\013\022\034\n\027k_EMsgBSPaymentInstrBa"
  "n\020\211\013\022$\n\037k_EMsgBSPaymentInstrBanResponse\020"
  "\212\013\022\036\n\031k_EMsgBSInitGCBankXferTxn\020\215\013\022&\n!k_"
  "EMsgBSInitGCBankXferTxnResponse\020\216\013\022\030\n\023k_"
  "EMsgBSCommitGCTxn\020\221\013\022#\n\036k_EMsgBSQueryTra"
  "nsactionStatus\020\222\013\022+\n&k_EMsgBSQueryTransa"
  "ctionStatusResponse\020\223\013\022!\n\034k_EMsgBSQueryT"
  "xnExtendedInfo\020\231\013\022)\n$k_EMsgBSQueryTxnExt"
  "endedInfoResponse\020\232\013\022\"\n\035k_EMsgBSUpdateCo"
  "nversionRates\020\233\013\022#\n\036k_EMsgBSPurchaseRunF"
  "raudChecks\020\235\013\022+\n&k_EMsgBSPurchaseRunFrau"
  "dChecksResponse\020\236\013\022!\n\034k_EMsgBSQueryBankI"
  "nformation\020\240\013\022)\n$k_EMsgBSQueryBankInform"
  "ationResponse\020\241\013\022$\n\037k_EMsgBSValidateXsol"
  "laSignature\020\245\013\022,\n\'k_EMsgBSValidateXsolla"
  "SignatureResponse\020\246\013\022\036\n\031k_EMsgBSQiwiWall"
  "etInvoice\020\250\013\022&\n!k_EMsgBSQiwiWalletInvoic"
  "eResponse\020\251\013\022\'\n\"k_EMsgBSUpdateInventoryF"
  "romProPack\020\252\013\022/\n*k_EMsgBSUpdateInventory"
  "FromProPackResponse\020\253\013\022 \n\033k_EMsgBSSendSh"
  "ippingRequest\020\254\013\022(\n#k_EMsgBSSendShipping"
  "RequestResponse\020\255\013\022\"\n\035k_EMsgBSGetProPack"
  "OrderStatus\020\256\013\022*\n%k_EMsgBSGetProPackOrde"
  "rStatusResponse\020\257\013\022\034\n\027k_EMsgBSCheckJobRu"
  "nning\020\260\013\022$\n\037k_EMsgBSCheckJobRunningRespo"
  "nse\020\261\013\022*\n%k_EMsgBSResetPackagePurchaseRa"
  "teLimit\020\262\013\0222\n-k_EMsgBSResetPackagePurcha"
  "seRateLimitResponse\020\263\013\022\036\n\031k_EMsgBSUpdate"
  "PaymentData\020\264\013\022&\n!k_EMsgBSUpdatePaymentD"
  "ataResponse\020\265\013\022\036\n\031k_EMsgBSGetBillingAddr"
  "ess\020\266\013\022&\n!k_EMsgBSGetBillingAddressRespo"
  "nse\020\267\013\022\036\n\031k_EMsgBSGetCreditCardInfo\020\270\013\022&"
  "\n!k_EMsgBSGetCreditCardInfoResponse\020\271\013\022%"
  "\n k_EMsgBSRemoveExpiredPaymentData\020\274\013\022-\n"
  "(k_EMsgBSRemoveExpiredPaymentDataRespons"
  "e\020\275\013\022!\n\034k_EMsgBSConvertToCurrentKeys\020\276\013\022"
  ")\n$k_EMsgBSConvertToCurrentKeysResponse\020"
  "\277\013\022\031\n\024k_EMsgBSInitPurchase\020\300\013\022!\n\034k_EMsgB"
  "SInitPurchaseResponse\020\301\013\022\035\n\030k_EMsgBSComp"
  "letePurchase\020\302\013\022%\n k_EMsgBSCompletePurch"
  "aseResponse\020\303\013\022 \n\033k_EMsgBSPruneCardUsage"
  "Stats\020\304\013\022(\n#k_EMsgBSPruneCardUsageStatsR"
  "esponse\020\305\013\022!\n\034k_EMsgBSStoreBankInformati"
  "on\020\306\013\022)\n$k_EMsgBSStoreBankInformationRes"
  "ponse\020\307\013\022\032\n\025k_EMsgBSVerifyPOSAKey\020\310\013\022\"\n\035"
  "k_EMsgBSVerifyPOSAKeyResponse\020\311\013\022!\n\034k_EM"
  "sgBSReverseRedeemPOSAKey\020\312\013\022)\n$k_EMsgBSR"
  "everseRedeemPOSAKeyResponse\020\313\013\022 \n\033k_EMsg"
  "BSQueryFindCreditCard\020\314\013\022(\n#k_EMsgBSQuer"
  "yFindCreditCardResponse\020\315\013\022!\n\034k_EMsgBSSt"
  "atusInquiryPOSAKey\020\316\013\022)\n$k_EMsgBSStatusI"
  "nquiryPOSAKeyResponse\020\317\013\022,\n\'k_EMsgBSBoaC"
  "ompraConfirmProductDelivery\020\326\013\0224\n/k_EMsg"
  "BSBoaCompraConfirmProductDeliveryRespons"
  "e\020\327\013\022!\n\034k_EMsgBSGenerateBoaCompraMD5\020\330\013\022"
  ")\n$k_EMsgBSGenerateBoaCompraMD5Response\020"
  "\331\013\022\030\n\023k_EMsgBSCommitWPTxn\020\332\013\022\033\n\026k_EMsgBS"
  "CommitAdyenTxn\020\333\013\022\022\n\rk_EMsgBaseATS\020\334\013\022\035\n"
  "\030k_EMsgATSStartStressTest\020\335\013\022\034\n\027k_EMsgAT"
  "SStopStressTest\020\336\013\022\037\n\032k_EMsgATSRunFailSe"
  "rverTest\020\337\013\022\035\n\030k_EMsgATSUFSPerfTestTask\020"
  "\340\013\022!\n\034k_EMsgATSUFSPerfTestResponse\020\341\013\022\026\n"
  "\021k_EMsgATSCycleTCM\020\342\013\022 \n\033k_EMsgATSInitDR"
  "MSStressTest\020\343\013\022\026\n\021k_EMsgATSCallTest\020\344\013\022"
  "\033\n\026k_EMsgATSCallTestReply\020\345\013\022!\n\034k_EMsgAT"
  "SStartExternalStress\020\346\013\022$\n\037k_EMsgATSExte"
  "rnalStressJobStart\020\347\013\022%\n k_EMsgATSExtern"
  "alStressJobQueued\020\350\013\022&\n!k_EMsgATSExterna"
  "lStressJobRunning\020\351\013\022&\n!k_EMsgATSExterna"
  "lStressJobStopped\020\352\013\022&\n!k_EMsgATSExterna"
  "lStressJobStopAll\020\353\013\022(\n#k_EMsgATSExterna"
  "lStressActionResult\020\354\013\022\025\n\020k_EMsgATSStart"
  "ed\020\355\013\022\034\n\027k_EMsgATSCSPerfTestTask\020\356\013\022 \n\033k"
  "_EMsgATSCSPerfTestResponse\020\357\013\022\021\n\014k_EMsgB"
  "aseDP\020\300\014\022\037\n\032k_EMsgDPSetPublishingState\020\301"
  "\014\022\036\n\031k_EMsgDPUniquePlayersStat\020\303\014\022\'\n\"k_E"
  "MsgDPStreamingUniquePlayersStat\020\304\014\022\032\n\025k_"
  "EMsgDPBlockingStats\020\307\014\022\036\n\031k_EMsgDPNatTra"
  "versalStats\020\310\014\022\027\n\022k_EMsgDPCloudStats\020\314\014\022"
  "\033\n\026k_EMsgDPGetPlayerCount\020\317\014\022#\n\036k_EMsgDP"
  "GetPlayerCountResponse\020\320\014\022$\n\037k_EMsgDPGam"
  "eServersPlayersStats\020\321\014\022%\n k_EMsgClientD"
  "PCheckSpecialSurvey\020\324\014\022-\n(k_EMsgClientDP"
  "CheckSpecialSurveyResponse\020\325\014\022,\n\'k_EMsgC"
  "lientDPSendSpecialSurveyResponse\020\326\014\0221\n,k"
  "_EMsgClientDPSendSpecialSurveyResponseRe"
  "ply\020\327\014\022 \n\033k_EMsgDPStoreSaleStatistics\020\330\014"
  "\022%\n k_EMsgClientDPUpdateAppJobReport\020\331\014\022"
  "(\n#k_EMsgClientDPUnsignedInstallScript\020\333"
  "\014\022\035\n\030k_EMsgDPPartnerMicroTxns\020\334\014\022%\n k_EM"
  "sgDPPartnerMicroTxnsResponse\020\335\014\022%\n k_EMs"
  "gClientDPContentStatsReport\020\336\014\022 \n\033k_EMsg"
  "DPVRUniquePlayersStat\020\337\014\022\021\n\014k_EMsgBaseCM"
  "\020\244\r\022\032\n\025k_EMsgCMSetAllowState\020\245\r\022\033\n\026k_EMs"
  "gCMSpewAllowState\020\246\r\022\034\n\027k_EMsgCMSessionR"
  "ejected\020\247\r\022\027\n\022k_EMsgCMSetSecrets\020\250\r\022\027\n\022k"
  "_EMsgCMGetSecrets\020\251\r\022\021\n\014k_EMsgBaseGC\020\230\021\022"
  "\026\n\021k_EMsgGCCmdRevive\020\233\021\022\024\n\017k_EMsgGCCmdDo"
  "wn\020\236\021\022\026\n\021k_EMsgGCCmdDeploy\020\237\021\022\036\n\031k_EMsgG"
  "CCmdDeployResponse\020\240\021\022\026\n\021k_EMsgGCCmdSwit"
  "ch\020\241\021\022\034\n\027k_EMsgAMRefreshSessions\020\242\021\022\037\n\032k"
  "_EMsgGCAchievementAwarded\020\244\021\022\032\n\025k_EMsgGC"
  "SystemMessage\020\245\021\022\026\n\021k_EMsgGCCmdStatus\020\250\021"
  "\022-\n(k_EMsgGCRegisterWebInterfaces_Deprec"
  "ated\020\251\021\022)\n$k_EMsgGCGetAccountDetails_DEP"
  "RECATED\020\252\021\022\034\n\027k_EMsgGCInterAppMessage\020\253\021"
  "\022\035\n\030k_EMsgGCGetEmailTemplate\020\254\021\022%\n k_EMs"
  "gGCGetEmailTemplateResponse\020\255\021\022\023\n\016k_EMsg"
  "GCHRelay\020\256\021\022\033\n\026k_EMsgGCHRelayToClient\020\257\021"
  "\022\033\n\026k_EMsgGCHUpdateSession\020\260\021\022\"\n\035k_EMsgG"
  "CHRequestUpdateSession\020\261\021\022\033\n\026k_EMsgGCHRe"
  "questStatus\020\262\021\022#\n\036k_EMsgGCHRequestStatus"
  "Response\020\263\021\022$\n\037k_EMsgGCHAccountVacStatus"
  "Change\020\264\021\022\025\n\020k_EMsgGCHSpawnGC\020\265\021\022\035\n\030k_EM"
  "sgGCHSpawnGCResponse\020\266\021\022\024\n\017k_EMsgGCHKill"
  "GC\020\267\021\022\034\n\027k_EMsgGCHKillGCResponse\020\270\021\022)\n$k"
  "_EMsgGCHAccountTradeBanStatusChange\020\271\021\022%"
  "\n k_EMsgGCHAccountLockStatusChange\020\272\021\022#\n"
  "\036k_EMsgGCHVacVerificationChange\020\273\021\022&\n!k_"
  "EMsgGCHAccountPhoneNumberChange\020\274\021\022$\n\037k_"
  "EMsgGCHAccountTwoFactorChange\020\275\021\022\037\n\032k_EM"
  "sgGCHInviteUserToLobby\020\276\021\022$\n\037k_EMsgGCHUp"
  "dateMultipleSessions\020\277\021\022*\n%k_EMsgGCHMark"
  "AppSessionsAuthoritative\020\300\021\022/\n*k_EMsgGCH"
  "RecurringSubscriptionStatusChange\020\301\021\022\037\n\032"
  "k_EMsgGCHAppCheersReceived\020\302\021\022&\n!k_EMsgG"
  "CHAppCheersGetAllowedTypes\020\303\021\022.\n)k_EMsgG"
  "CHAppCheersGetAllowedTypesResponse\020\304\021\022\022\n"
  "\rk_EMsgBaseP2P\020\304\023\022\037\n\032k_EMsgP2PIntroducer"
  "Message\020\306\023\022\021\n\014k_EMsgBaseSM\020\324\026\022\034\n\027k_EMsgS"
  "MExpensiveReport\020\326\026\022\031\n\024k_EMsgSMHourlyRep"
  "ort\020\327\026\022\035\n\030k_EMsgSMPartitionRenames\020\331\026\022\031\n"
  "\024k_EMsgSMMonitorSpace\020\332\026\022*\n%k_EMsgSMTest"
  "NextBuildSchemaConversion\020\333\026\0222\n-k_EMsgSM"
  "TestNextBuildSchemaConversionResponse\020\334\026"
  "\022\023\n\016k_EMsgBaseTest\020\270\027\022\025\n\020k_EMsgFailServe"
  "r\020\270\027\022\033\n\026k_EMsgJobHeartbeatTest\020\271\027\022#\n\036k_E"
  "MsgJobHeartbeatTestResponse\020\272\027\022\027\n\022k_EMsg"
  "BaseFTSRange\020\234\030\022\027\n\022k_EMsgBaseCCSRange\020\316\030"
  "\022\'\n\"k_EMsgCCSDeleteAllCommentsByAuthor\020\331"
  "\030\022/\n*k_EMsgCCSDeleteAllCommentsByAuthorR"
  "esponse\020\332\030\022\027\n\022k_EMsgBaseLBSRange\020\200\031\022\026\n\021k"
  "_EMsgLBSSetScore\020\201\031\022\036\n\031k_EMsgLBSSetScore"
  "Response\020\202\031\022\034\n\027k_EMsgLBSFindOrCreateLB\020\203"
  "\031\022$\n\037k_EMsgLBSFindOrCreateLBResponse\020\204\031\022"
  "\032\n\025k_EMsgLBSGetLBEntries\020\205\031\022\"\n\035k_EMsgLBS"
  "GetLBEntriesResponse\020\206\031\022\027\n\022k_EMsgLBSGetL"
  "BList\020\207\031\022\037\n\032k_EMsgLBSGetLBListResponse\020\210"
  "\031\022\032\n\025k_EMsgLBSSetLBDetails\020\211\031\022\026\n\021k_EMsgL"
  "BSDeleteLB\020\212\031\022\033\n\026k_EMsgLBSDeleteLBEntry\020"
  "\213\031\022\025\n\020k_EMsgLBSResetLB\020\214\031\022\035\n\030k_EMsgLBSRe"
  "setLBResponse\020\215\031\022\036\n\031k_EMsgLBSDeleteLBRes"
  "ponse\020\216\031\022\022\n\rk_EMsgBaseOGS\020\310\032\022\032\n\025k_EMsgOG"
  "SBeginSession\020\311\032\022\"\n\035k_EMsgOGSBeginSessio"
  "nResponse\020\312\032\022\030\n\023k_EMsgOGSEndSession\020\313\032\022 "
  "\n\033k_EMsgOGSEndSessionResponse\020\314\032\022 \n\033k_EM"
  "sgOGSWriteAppSessionRow\020\316\032\022\022\n\rk_EMsgBase"
  "BRP\020\220\034\022 \n\033k_EMsgBRPPostTransactionTax\020\255\034"
  "\022(\n#k_EMsgBRPPostTransactionTaxResponse\020"
  "\256\034\022\027\n\022k_EMsgBaseAMRange2\020\240\037\022\027\n\022k_EMsgAMC"
  "reateChat\020\241\037\022\037\n\032k_EMsgAMCreateChatRespon"
  "se\020\242\037\022\032\n\025k_EMsgAMSetProfileURL\020\245\037\022#\n\036k_E"
  "MsgAMGetAccountEmailAddress\020\246\037\022+\n&k_EMsg"
  "AMGetAccountEmailAddressResponse\020\247\037\022\034\n\027k"
  "_EMsgAMRequestClanData\020\250\037\022\033\n\026k_EMsgAMRou"
  "teToClients\020\251\037\022\026\n\021k_EMsgAMLeaveClan\020\252\037\022\034"
  "\n\027k_EMsgAMClanPermissions\020\253\037\022$\n\037k_EMsgAM"
  "ClanPermissionsResponse\020\254\037\0220\n+k_EMsgAMCr"
  "eateClanEventDummyForRateLimiting\020\255\037\0220\n+"
  "k_EMsgAMUpdateClanEventDummyForRateLimit"
  "ing\020\257\037\022&\n!k_EMsgAMSetClanPermissionSetti"
  "ngs\020\265\037\022.\n)k_EMsgAMSetClanPermissionSetti"
  "ngsResponse\020\266\037\022&\n!k_EMsgAMGetClanPermiss"
  "ionSettings\020\267\037\022.\n)k_EMsgAMGetClanPermiss"
  "ionSettingsResponse\020\270\037\022 \n\033k_EMsgAMPublis"
  "hChatRoomInfo\020\271\037\022\035\n\030k_EMsgClientChatRoom"
  "Info\020\272\037\022\033\n\026k_EMsgAMGetClanHistory\020\307\037\022#\n\036"
  "k_EMsgAMGetClanHistoryResponse\020\310\037\022\"\n\035k_E"
  "MsgAMGetClanPermissionBits\020\311\037\022*\n%k_EMsgA"
  "MGetClanPermissionBitsResponse\020\312\037\022\"\n\035k_E"
  "MsgAMSetClanPermissionBits\020\313\037\022*\n%k_EMsgA"
  "MSetClanPermissionBitsResponse\020\314\037\022\037\n\032k_E"
  "MsgAMSessionInfoRequest\020\315\037\022 \n\033k_EMsgAMSe"
  "ssionInfoResponse\020\316\037\022\034\n\027k_EMsgAMValidate"
  "WGToken\020\317\037\022\030\n\023k_EMsgAMGetClanRank\020\322\037\022 \n\033"
  "k_EMsgAMGetClanRankResponse\020\323\037\022\030\n\023k_EMsg"
  "AMSetClanRank\020\324\037\022 \n\033k_EMsgAMSetClanRankR"
  "esponse\020\325\037\022\030\n\023k_EMsgAMGetClanPOTW\020\326\037\022 \n\033"
  "k_EMsgAMGetClanPOTWResponse\020\327\037\022\030\n\023k_EMsg"
  "AMSetClanPOTW\020\330\037\022 \n\033k_EMsgAMSetClanPOTWR"
  "esponse\020\331\037\022\025\n\020k_EMsgAMDumpUser\020\333\037\022\035\n\030k_E"
  "MsgAMKickUserFromClan\020\334\037\022\035\n\030k_EMsgAMAddF"
  "ounderToClan\020\335\037\022$\n\037k_EMsgAMValidateWGTok"
  "enResponse\020\336\037\022\036\n\031k_EMsgAMSetAccountDetai"
  "ls\020\340\037\022\033\n\026k_EMsgAMGetChatBanList\020\341\037\022#\n\036k_"
  "EMsgAMGetChatBanListResponse\020\342\037\022\032\n\025k_EMs"
  "gAMUnBanFromChat\020\343\037\022\033\n\026k_EMsgAMSetClanDe"
  "tails\020\344\037\022\036\n\031k_EMsgUGSGetUserGameStats\020\351\037"
  "\022&\n!k_EMsgUGSGetUserGameStatsResponse\020\352\037"
  "\022 \n\033k_EMsgAMCheckClanMembership\020\353\037\022\033\n\026k_"
  "EMsgAMGetClanMembers\020\354\037\022#\n\036k_EMsgAMGetCl"
  "anMembersResponse\020\355\037\022#\n\036k_EMsgAMNotifyCh"
  "atOfClanChange\020\357\037\022\035\n\030k_EMsgAMResubmitPur"
  "chase\020\360\037\022\026\n\021k_EMsgAMAddFriend\020\361\037\022\036\n\031k_EM"
  "sgAMAddFriendResponse\020\362\037\022\031\n\024k_EMsgAMRemo"
  "veFriend\020\363\037\022\025\n\020k_EMsgAMDumpClan\020\364\037\022\034\n\027k_"
  "EMsgAMChangeClanOwner\020\365\037\022\036\n\031k_EMsgAMCanc"
  "elEasyCollect\020\366\037\022&\n!k_EMsgAMCancelEasyCo"
  "llectResponse\020\367\037\022\032\n\025k_EMsgAMClansInCommo"
  "n\020\372\037\022\"\n\035k_EMsgAMClansInCommonResponse\020\373\037"
  "\022\035\n\030k_EMsgAMIsValidAccountID\020\374\037\022\034\n\027k_EMs"
  "gAMWipeFriendsList\020\377\037\022\027\n\022k_EMsgAMSetIgno"
  "red\020\200 \022\'\n\"k_EMsgAMClansInCommonCountResp"
  "onse\020\201 \022\030\n\023k_EMsgAMFriendsList\020\202 \022 \n\033k_E"
  "MsgAMFriendsListResponse\020\203 \022\034\n\027k_EMsgAMF"
  "riendsInCommon\020\204 \022$\n\037k_EMsgAMFriendsInCo"
  "mmonResponse\020\205 \022)\n$k_EMsgAMFriendsInComm"
  "onCountResponse\020\206 \022\037\n\032k_EMsgAMClansInCom"
  "monCount\020\207 \022\035\n\030k_EMsgAMChallengeVerdict\020"
  "\210 \022\"\n\035k_EMsgAMChallengeNotification\020\211 \022\027"
  "\n\022k_EMsgAMFindGSByIP\020\212 \022\030\n\023k_EMsgAMFound"
  "GSByIP\020\213 \022\030\n\023k_EMsgAMGiftRevoked\020\214 \022\031\n\024k"
  "_EMsgAMUserClanList\020\216 \022!\n\034k_EMsgAMUserCl"
  "anListResponse\020\217 \022\037\n\032k_EMsgAMGetAccountD"
  "etails2\020\220 \022\'\n\"k_EMsgAMGetAccountDetailsR"
  "esponse2\020\221 \022(\n#k_EMsgAMSetCommunityProfi"
  "leSettings\020\222 \0220\n+k_EMsgAMSetCommunityPro"
  "fileSettingsResponse\020\223 \022%\n k_EMsgAMGetCo"
  "mmunityPrivacyState\020\224 \022-\n(k_EMsgAMGetCom"
  "munityPrivacyStateResponse\020\225 \022(\n#k_EMsgA"
  "MCheckClanInviteRateLimiting\020\226 \022&\n!k_EMs"
  "gUGSGetUserAchievementStatus\020\227 \022\027\n\022k_EMs"
  "gAMGetIgnored\020\230 \022\037\n\032k_EMsgAMGetIgnoredRe"
  "sponse\020\231 \022\037\n\032k_EMsgAMSetIgnoredResponse\020"
  "\232 \022&\n!k_EMsgAMSetFriendRelationshipNone\020"
  "\233 \022\"\n\035k_EMsgAMGetFriendRelationship\020\234 \022*"
  "\n%k_EMsgAMGetFriendRelationshipResponse\020"
  "\235 \022 \n\033k_EMsgAMServiceModulesCache\020\236 \022\037\n\032"
  "k_EMsgAMServiceModulesCall\020\237 \022\'\n\"k_EMsgA"
  "MServiceModulesCallResponse\020\240 \022!\n\034k_EMsg"
  "CommunityAddFriendNews\020\254 \022\031\n\024k_EMsgAMFin"
  "dClanUser\020\257 \022!\n\034k_EMsgAMFindClanUserResp"
  "onse\020\260 \022\030\n\023k_EMsgAMBanFromChat\020\261 \022%\n k_E"
  "MsgAMGetUserNewsSubscriptions\020\263 \022-\n(k_EM"
  "sgAMGetUserNewsSubscriptionsResponse\020\264 \022"
  "%\n k_EMsgAMSetUserNewsSubscriptions\020\265 \022\035"
  "\n\030k_EMsgAMSendQueuedEmails\020\270 \022\034\n\027k_EMsgA"
  "MSetLicenseFlags\020\271 \022\"\n\035k_EMsgCommunityDe"
  "leteUserNews\020\273 \022\"\n\035k_EMsgAMAllowUserFile"
  "sRequest\020\274 \022#\n\036k_EMsgAMAllowUserFilesRes"
  "ponse\020\275 \022\035\n\030k_EMsgAMGetAccountStatus\020\276 \022"
  "%\n k_EMsgAMGetAccountStatusResponse\020\277 \022\032"
  "\n\025k_EMsgAMEditBanReason\020\300 \022(\n#k_EMsgAMCh"
  "eckClanMembershipResponse\020\301 \022$\n\037k_EMsgAM"
  "ProbeClanMembershipList\020\302 \022,\n\'k_EMsgAMPr"
  "obeClanMembershipListResponse\020\303 \022.\n)k_EM"
  "sgUGSGetUserAchievementStatusResponse\020\304 "
  "\022\036\n\031k_EMsgAMGetFriendsLobbies\020\305 \022&\n!k_EM"
  "sgAMGetFriendsLobbiesResponse\020\306 \022&\n!k_EM"
  "sgAMGetUserFriendNewsResponse\020\314 \022%\n k_EM"
  "sgCommunityGetUserFriendNews\020\315 \022%\n k_EMs"
  "gAMGetUserClansNewsResponse\020\316 \022\035\n\030k_EMsg"
  "AMGetUserClansNews\020\317 \022!\n\034k_EMsgAMGetPrev"
  "iousCBAccount\020\330 \022)\n$k_EMsgAMGetPreviousC"
  "BAccountResponse\020\331 \022\"\n\035k_EMsgAMGetUserLi"
  "censeHistory\020\336 \022*\n%k_EMsgAMGetUserLicens"
  "eHistoryResponse\020\337 \022\"\n\035k_EMsgAMSupportCh"
  "angePassword\020\342 \022\037\n\032k_EMsgAMSupportChange"
  "Email\020\343 \022(\n#k_EMsgAMResetUserVerificatio"
  "nGSByIP\020\345 \022\036\n\031k_EMsgAMUpdateGSPlayStats\020"
  "\346 \022#\n\036k_EMsgAMSupportEnableOrDisable\020\347 \022"
  "\036\n\031k_EMsgAMGetPurchaseStatus\020\356 \022$\n\037k_EMs"
  "gAMSupportIsAccountEnabled\020\361 \022,\n\'k_EMsgA"
  "MSupportIsAccountEnabledResponse\020\362 \022\032\n\025k"
  "_EMsgUGSGetUserStats\020\363 \022\025\n\020k_EMsgAMGSSea"
  "rch\020\365 \022!\n\034k_EMsgMarketingMessageUpdate\020\370"
  " \022#\n\036k_EMsgChatServerRouteFriendMsg\020\373 \022("
  "\n#k_EMsgAMTicketAuthRequestOrResponse\020\374 "
  "\022\033\n\026k_EMsgAMAddFreeLicense\020\200!\022\036\n\031k_EMsgA"
  "MValidateEmailLink\020\207!\022&\n!k_EMsgAMValidat"
  "eEmailLinkResponse\020\210!\022\034\n\027k_EMsgUGSStoreU"
  "serStats\020\214!\022\035\n\030k_EMsgAMDeleteStoredCard\020"
  "\221!\022!\n\034k_EMsgAMRevokeLegacyGameKeys\020\222!\022\035\n"
  "\030k_EMsgAMGetWalletDetails\020\224!\022%\n k_EMsgAM"
  "GetWalletDetailsResponse\020\225!\022$\n\037k_EMsgAMD"
  "eleteStoredPaymentInfo\020\226!\022$\n\037k_EMsgAMGet"
  "StoredPaymentSummary\020\227!\022,\n\'k_EMsgAMGetSt"
  "oredPaymentSummaryResponse\020\230!\022$\n\037k_EMsgA"
  "MGetWalletConversionRate\020\231!\022,\n\'k_EMsgAMG"
  "etWalletConversionRateResponse\020\232!\022\032\n\025k_E"
  "MsgAMConvertWallet\020\233!\022\"\n\035k_EMsgAMConvert"
  "WalletResponse\020\234!\022\033\n\026k_EMsgAMSetPreAppro"
  "val\020\237!\022#\n\036k_EMsgAMSetPreApprovalResponse"
  "\020\240!\022\031\n\024k_EMsgAMCreateRefund\020\242!\022\035\n\030k_EMsg"
  "AMCreateChargeback\020\244!\022\032\n\025k_EMsgAMCreateD"
  "ispute\020\246!\022\031\n\024k_EMsgAMClearDispute\020\250!\022&\n!"
  "k_EMsgAMCreateFinancialAdjustment\020\251!\022\037\n\032"
  "k_EMsgAMPlayerNicknameList\020\252!\022\'\n\"k_EMsgA"
  "MPlayerNicknameListResponse\020\253!\022\035\n\030k_EMsg"
  "AMSetDRMTestConfig\020\254!\022#\n\036k_EMsgAMGetUser"
  "CurrentGameInfo\020\255!\022+\n&k_EMsgAMGetUserCur"
  "rentGameInfoResponse\020\256!\022\034\n\027k_EMsgAMGetGS"
  "PlayerList\020\257!\022$\n\037k_EMsgAMGetGSPlayerList"
  "Response\020\260!\022\"\n\035k_EMsgAMGetSteamIDForMicr"
  "oTxn\020\266!\022*\n%k_EMsgAMGetSteamIDForMicroTxn"
  "Response\020\267!\022\035\n\030k_EMsgAMSetPartnerMember\020"
  "\270!\022 \n\033k_EMsgAMRemovePublisherUser\020\271!\022\037\n\032"
  "k_EMsgAMGetUserLicenseList\020\272!\022\'\n\"k_EMsgA"
  "MGetUserLicenseListResponse\020\273!\022\"\n\035k_EMsg"
  "AMReloadGameGroupPolicy\020\274!\022#\n\036k_EMsgAMAd"
  "dFreeLicenseResponse\020\275!\022\034\n\027k_EMsgAMVACSt"
  "atusUpdate\020\276!\022\036\n\031k_EMsgAMGetAccountDetai"
  "ls\020\277!\022&\n!k_EMsgAMGetAccountDetailsRespon"
  "se\020\300!\022!\n\034k_EMsgAMGetPlayerLinkDetails\020\301!"
  "\022)\n$k_EMsgAMGetPlayerLinkDetailsResponse"
  "\020\302!\022)\n$k_EMsgAMGetAccountFlagsForWGSpoof"
  "ing\020\306!\0221\n,k_EMsgAMGetAccountFlagsForWGSp"
  "oofingResponse\020\307!\022\034\n\027k_EMsgAMGetClanOffi"
  "cers\020\312!\022$\n\037k_EMsgAMGetClanOfficersRespon"
  "se\020\313!\022\027\n\022k_EMsgAMNameChange\020\314!\022\033\n\026k_EMsg"
  "AMGetNameHistory\020\315!\022#\n\036k_EMsgAMGetNameHi"
  "storyResponse\020\316!\022!\n\034k_EMsgAMUpdateProvid"
  "erStatus\020\321!\022)\n$k_EMsgAMSupportRemoveAcco"
  "untSecurity\020\323!\022*\n%k_EMsgAMIsAccountInCap"
  "tchaGracePeriod\020\324!\0222\n-k_EMsgAMIsAccountI"
  "nCaptchaGracePeriodResponse\020\325!\022\035\n\030k_EMsg"
  "AMAccountPS3Unlink\020\326!\022%\n k_EMsgAMAccount"
  "PS3UnlinkResponse\020\327!\022$\n\037k_EMsgUGSStoreUs"
  "erStatsResponse\020\330!\022\036\n\031k_EMsgAMGetAccount"
  "PSNInfo\020\331!\022&\n!k_EMsgAMGetAccountPSNInfoR"
  "esponse\020\332!\022$\n\037k_EMsgAMAuthenticatedPlaye"
  "rList\020\333!\022\031\n\024k_EMsgAMGetUserGifts\020\334!\022!\n\034k"
  "_EMsgAMGetUserGiftsResponse\020\335!\022 \n\033k_EMsg"
  "AMTransferLockedGifts\020\340!\022(\n#k_EMsgAMTran"
  "sferLockedGiftsResponse\020\341!\022%\n k_EMsgAMPl"
  "ayerHostedOnGameServer\020\342!\022\036\n\031k_EMsgAMGet"
  "AccountBanInfo\020\343!\022&\n!k_EMsgAMGetAccountB"
  "anInfoResponse\020\344!\022!\n\034k_EMsgAMRecordBanEn"
  "forcement\020\345!\022!\n\034k_EMsgAMRollbackGiftTran"
  "sfer\020\346!\022)\n$k_EMsgAMRollbackGiftTransferR"
  "esponse\020\347!\022%\n k_EMsgAMHandlePendingTrans"
  "action\020\350!\022\037\n\032k_EMsgAMRequestClanDetails\020"
  "\351!\022(\n#k_EMsgAMDeleteStoredPaypalAgreemen"
  "t\020\352!\022\035\n\030k_EMsgAMGameServerUpdate\020\353!\022\035\n\030k"
  "_EMsgAMGameServerRemove\020\354!\022 \n\033k_EMsgAMGe"
  "tPaypalAgreements\020\355!\022(\n#k_EMsgAMGetPaypa"
  "lAgreementsResponse\020\356!\022/\n*k_EMsgAMGameSe"
  "rverPlayerCompatibilityCheck\020\357!\0227\n2k_EMs"
  "gAMGameServerPlayerCompatibilityCheckRes"
  "ponse\020\360!\022\031\n\024k_EMsgAMRenewLicense\020\361!\022\'\n\"k"
  "_EMsgAMGetAccountCommunityBanInfo\020\362!\022/\n*"
  "k_EMsgAMGetAccountCommunityBanInfoRespon"
  "se\020\363!\022,\n\'k_EMsgAMGameServerAccountChange"
  "Password\020\364!\022+\n&k_EMsgAMGameServerAccount"
  "DeleteAccount\020\365!\022\033\n\026k_EMsgAMRenewAgreeme"
  "nt\020\366!\022\032\n\025k_EMsgAMXsollaPayment\020\370!\022\"\n\035k_E"
  "MsgAMXsollaPaymentResponse\020\371!\022\"\n\035k_EMsgA"
  "MAcctAllowedToPurchase\020\372!\022*\n%k_EMsgAMAcc"
  "tAllowedToPurchaseResponse\020\373!\022\035\n\030k_EMsgA"
  "MSwapKioskDeposit\020\374!\022%\n k_EMsgAMSwapKios"
  "kDepositResponse\020\375!\022\037\n\032k_EMsgAMSetUserGi"
  "ftUnowned\020\376!\022\'\n\"k_EMsgAMSetUserGiftUnown"
  "edResponse\020\377!\022!\n\034k_EMsgAMClaimUnownedUse"
  "rGift\020\200\"\022)\n$k_EMsgAMClaimUnownedUserGift"
  "Response\020\201\"\022\030\n\023k_EMsgAMSetClanName\020\202\"\022 \n"
  "\033k_EMsgAMSetClanNameResponse\020\203\"\022\030\n\023k_EMs"
  "gAMGrantCoupon\020\204\"\022 \n\033k_EMsgAMGrantCoupon"
  "Response\020\205\"\022-\n(k_EMsgAMIsPackageRestrict"
  "edInUserCountry\020\206\"\0225\n0k_EMsgAMIsPackageR"
  "estrictedInUserCountryResponse\020\207\"\022-\n(k_E"
  "MsgAMHandlePendingTransactionResponse\020\210\""
  "\022\036\n\031k_EMsgAMGrantGuestPasses2\020\211\"\022&\n!k_EM"
  "sgAMGrantGuestPasses2Response\020\212\"\022 \n\033k_EM"
  "sgAMGetPlayerBanDetails\020\215\"\022(\n#k_EMsgAMGe"
  "tPlayerBanDetailsResponse\020\216\"\022\035\n\030k_EMsgAM"
  "FinalizePurchase\020\217\"\022%\n k_EMsgAMFinalizeP"
  "urchaseResponse\020\220\"\022\"\n\035k_EMsgAMPersonaCha"
  "ngeResponse\020\224\"\022+\n&k_EMsgAMGetClanDetails"
  "ForForumCreation\020\225\"\0223\n.k_EMsgAMGetClanDe"
  "tailsForForumCreationResponse\020\226\"\022(\n#k_EM"
  "sgAMGetPendingNotificationCount\020\227\"\0220\n+k_"
  "EMsgAMGetPendingNotificationCountRespons"
  "e\020\230\"\022 \n\033k_EMsgAMPasswordHashUpgrade\020\231\"\022\035"
  "\n\030k_EMsgAMBoaCompraPayment\020\234\"\022%\n k_EMsgA"
  "MBoaCompraPaymentResponse\020\235\"\022%\n k_EMsgAM"
  "CompleteExternalPurchase\020\237\"\022-\n(k_EMsgAMC"
  "ompleteExternalPurchaseResponse\020\240\"\022)\n$k_"
  "EMsgAMResolveNegativeWalletCredits\020\241\"\0221\n"
  ",k_EMsgAMResolveNegativeWalletCreditsRes"
  "ponse\020\242\"\022&\n!k_EMsgAMPlayerGetClanBasicDe"
  "tails\020\245\"\022.\n)k_EMsgAMPlayerGetClanBasicDe"
  "tailsResponse\020\246\"\022\027\n\022k_EMsgAMMOLPayment\020\247"
  "\"\022\037\n\032k_EMsgAMMOLPaymentResponse\020\250\"\022\033\n\026k_"
  "EMsgGetUserIPCountry\020\251\"\022#\n\036k_EMsgGetUser"
  "IPCountryResponse\020\252\"\022+\n&k_EMsgNotificati"
  "onOfSuspiciousActivity\020\253\"\022\032\n\025k_EMsgAMDeg"
  "icaPayment\020\254\"\022\"\n\035k_EMsgAMDegicaPaymentRe"
  "sponse\020\255\"\022\031\n\024k_EMsgAMEClubPayment\020\256\"\022!\n\034"
  "k_EMsgAMEClubPaymentResponse\020\257\"\022%\n k_EMs"
  "gAMPayPalPaymentsHubPayment\020\260\"\022-\n(k_EMsg"
  "AMPayPalPaymentsHubPaymentResponse\020\261\"\0221\n"
  ",k_EMsgAMTwoFactorRecoverAuthenticatorRe"
  "quest\020\262\"\0222\n-k_EMsgAMTwoFactorRecoverAuth"
  "enticatorResponse\020\263\"\022\035\n\030k_EMsgAMSmart2Pa"
  "yPayment\020\264\"\022%\n k_EMsgAMSmart2PayPaymentR"
  "esponse\020\265\"\0227\n2k_EMsgAMValidatePasswordRe"
  "setCodeAndSendSmsRequest\020\266\"\0228\n3k_EMsgAMV"
  "alidatePasswordResetCodeAndSendSmsRespon"
  "se\020\267\"\022*\n%k_EMsgAMGetAccountResetDetailsR"
  "equest\020\270\"\022+\n&k_EMsgAMGetAccountResetDeta"
  "ilsResponse\020\271\"\022\032\n\025k_EMsgAMBitPayPayment\020"
  "\272\"\022\"\n\035k_EMsgAMBitPayPaymentResponse\020\273\"\022\""
  "\n\035k_EMsgAMSendAccountInfoUpdate\020\274\"\022\036\n\031k_"
  "EMsgAMSendScheduledGift\020\275\"\022\032\n\025k_EMsgAMNo"
  "dwinPayment\020\276\"\022\"\n\035k_EMsgAMNodwinPaymentR"
  "esponse\020\277\"\022 \n\033k_EMsgAMResolveWalletRevok"
  "e\020\300\"\022\'\n\"k_EMsgAMResolveWalletReverseRevo"
  "ke\020\301\"\022\032\n\025k_EMsgAMFundedPayment\020\302\"\022\"\n\035k_E"
  "MsgAMFundedPaymentResponse\020\303\"\022.\n)k_EMsgA"
  "MRequestPersonaUpdateForChatServer\020\304\"\022 \n"
  "\033k_EMsgAMPerfectWorldPayment\020\305\"\022(\n#k_EMs"
  "gAMPerfectWorldPaymentResponse\020\306\"\022\034\n\027k_E"
  "MsgAMECommPayPayment\020\307\"\022$\n\037k_EMsgAMEComm"
  "PayPaymentResponse\020\310\"\022\026\n\021k_EMsgBasePSRan"
  "ge\020\210\'\022\037\n\032k_EMsgPSCreateShoppingCart\020\211\'\022\'"
  "\n\"k_EMsgPSCreateShoppingCartResponse\020\212\'\022"
  " \n\033k_EMsgPSIsValidShoppingCart\020\213\'\022(\n#k_E"
  "MsgPSIsValidShoppingCartResponse\020\214\'\022+\n&k"
  "_EMsgPSRemoveLineItemFromShoppingCart\020\217\'"
  "\0223\n.k_EMsgPSRemoveLineItemFromShoppingCa"
  "rtResponse\020\220\'\022$\n\037k_EMsgPSGetShoppingCart"
  "Contents\020\221\'\022,\n\'k_EMsgPSGetShoppingCartCo"
  "ntentsResponse\020\222\'\022*\n%k_EMsgPSAddWalletCr"
  "editToShoppingCart\020\223\'\0222\n-k_EMsgPSAddWall"
  "etCreditToShoppingCartResponse\020\224\'\022\027\n\022k_E"
  "MsgBaseUFSRange\020\320(\022%\n k_EMsgClientUFSUpl"
  "oadFileRequest\020\322(\022&\n!k_EMsgClientUFSUplo"
  "adFileResponse\020\323(\022#\n\036k_EMsgClientUFSUplo"
  "adFileChunk\020\324(\022&\n!k_EMsgClientUFSUploadF"
  "ileFinished\020\325(\022%\n k_EMsgClientUFSGetFile"
  "ListForApp\020\326(\022-\n(k_EMsgClientUFSGetFileL"
  "istForAppResponse\020\327(\022#\n\036k_EMsgClientUFSD"
  "ownloadRequest\020\332(\022$\n\037k_EMsgClientUFSDown"
  "loadResponse\020\333(\022!\n\034k_EMsgClientUFSDownlo"
  "adChunk\020\334(\022 \n\033k_EMsgClientUFSLoginReques"
  "t\020\335(\022!\n\034k_EMsgClientUFSLoginResponse\020\336(\022"
  "!\n\034k_EMsgUFSReloadPartitionInfo\020\337(\022%\n k_"
  "EMsgClientUFSTransferHeartbeat\020\340(\022\035\n\030k_E"
  "MsgUFSSynchronizeFile\020\341(\022%\n k_EMsgUFSSyn"
  "chronizeFileResponse\020\342(\022%\n k_EMsgClientU"
  "FSDeleteFileRequest\020\343(\022&\n!k_EMsgClientUF"
  "SDeleteFileResponse\020\344(\022!\n\034k_EMsgClientUF"
  "SGetUGCDetails\020\352(\022)\n$k_EMsgClientUFSGetU"
  "GCDetailsResponse\020\353(\022\035\n\030k_EMsgUFSUpdateF"
  "ileFlags\020\354(\022%\n k_EMsgUFSUpdateFileFlagsR"
  "esponse\020\355(\022%\n k_EMsgClientUFSGetSingleFi"
  "leInfo\020\356(\022-\n(k_EMsgClientUFSGetSingleFil"
  "eInfoResponse\020\357(\022\035\n\030k_EMsgClientUFSShare"
  "File\020\360(\022%\n k_EMsgClientUFSShareFileRespo"
  "nse\020\361(\022\033\n\026k_EMsgUFSReloadAccount\020\362(\022#\n\036k"
  "_EMsgUFSReloadAccountResponse\020\363(\022!\n\034k_EM"
  "sgUFSUpdateRecordBatched\020\364(\022)\n$k_EMsgUFS"
  "UpdateRecordBatchedResponse\020\365(\022\031\n\024k_EMsg"
  "UFSMigrateFile\020\366(\022!\n\034k_EMsgUFSMigrateFil"
  "eResponse\020\367(\022\030\n\023k_EMsgUFSGetUGCURLs\020\370(\022 "
  "\n\033k_EMsgUFSGetUGCURLsResponse\020\371(\022)\n$k_EM"
  "sgUFSHttpUploadFileFinishRequest\020\372(\022*\n%k"
  "_EMsgUFSHttpUploadFileFinishResponse\020\373(\022"
  "\"\n\035k_EMsgUFSDownloadStartRequest\020\374(\022#\n\036k"
  "_EMsgUFSDownloadStartResponse\020\375(\022\"\n\035k_EM"
  "sgUFSDownloadChunkRequest\020\376(\022#\n\036k_EMsgUF"
  "SDownloadChunkResponse\020\377(\022#\n\036k_EMsgUFSDo"
  "wnloadFinishRequest\020\200)\022$\n\037k_EMsgUFSDownl"
  "oadFinishResponse\020\201)\022\033\n\026k_EMsgUFSFlushUR"
  "LCache\020\202)\022 \n\033k_EMsgClientUFSUploadCommit"
  "\020\203)\022(\n#k_EMsgClientUFSUploadCommitRespon"
  "se\020\204)\022\036\n\031k_EMsgUFSMigrateFileAppID\020\205)\022&\n"
  "!k_EMsgUFSMigrateFileAppIDResponse\020\206)\022\026\n"
  "\021k_EMsgBaseClient2\020\230*\022.\n)k_EMsgClientReq"
  "uestForgottenPasswordEmail\020\231*\0226\n1k_EMsgC"
  "lientRequestForgottenPasswordEmailRespon"
  "se\020\232*\022&\n!k_EMsgClientCreateAccountRespon"
  "se\020\233*\022\'\n\"k_EMsgClientResetForgottenPassw"
  "ord\020\234*\022/\n*k_EMsgClientResetForgottenPass"
  "wordResponse\020\235*\022/\n*k_EMsgClientInformOfR"
  "esetForgottenPassword\020\237*\0227\n2k_EMsgClient"
  "InformOfResetForgottenPasswordResponse\020\240"
  "*\022)\n$k_EMsgClientAnonUserLogOn_Deprecate"
  "d\020\241*\022(\n#k_EMsgClientGamesPlayedWithDataB"
  "lob\020\242*\022#\n\036k_EMsgClientUpdateUserGameInfo"
  "\020\243*\022\037\n\032k_EMsgClientFileToDownload\020\244*\022\'\n\""
  "k_EMsgClientFileToDownloadResponse\020\245*\022\034\n"
  "\027k_EMsgClientLBSSetScore\020\246*\022$\n\037k_EMsgCli"
  "entLBSSetScoreResponse\020\247*\022\"\n\035k_EMsgClien"
  "tLBSFindOrCreateLB\020\250*\022*\n%k_EMsgClientLBS"
  "FindOrCreateLBResponse\020\251*\022 \n\033k_EMsgClien"
  "tLBSGetLBEntries\020\252*\022(\n#k_EMsgClientLBSGe"
  "tLBEntriesResponse\020\253*\022\035\n\030k_EMsgClientCha"
  "tDeclined\020\262*\022\"\n\035k_EMsgClientFriendMsgInc"
  "oming\020\263*\022$\n\037k_EMsgClientAuthList_Depreca"
  "ted\020\264*\022#\n\036k_EMsgClientTicketAuthComplete"
  "\020\265*\022!\n\034k_EMsgClientIsLimitedAccount\020\266*\022 "
  "\n\033k_EMsgClientRequestAuthList\020\267*\022\031\n\024k_EM"
  "sgClientAuthList\020\270*\022\025\n\020k_EMsgClientStat\020"
  "\271*\022\"\n\035k_EMsgClientP2PConnectionInfo\020\272*\022&"
  "\n!k_EMsgClientP2PConnectionFailInfo\020\273*\022&"
  "\n!k_EMsgClientGetDepotDecryptionKey\020\276*\022."
  "\n)k_EMsgClientGetDepotDecryptionKeyRespo"
  "nse\020\277*\022\"\n\035k_EMsgGSPerformHardwareSurvey\020"
  "\300*\022\"\n\035k_EMsgClientEnableTestLicense\020\303*\022*"
  "\n%k_EMsgClientEnableTestLicenseResponse\020"
  "\304*\022#\n\036k_EMsgClientDisableTestLicense\020\305*\022"
  "+\n&k_EMsgClientDisableTestLicenseRespons"
  "e\020\306*\022&\n!k_EMsgClientRequestValidationMai"
  "l\020\310*\022.\n)k_EMsgClientRequestValidationMai"
  "lResponse\020\311*\022%\n k_EMsgClientCheckAppBeta"
  "Password\020\312*\022-\n(k_EMsgClientCheckAppBetaP"
  "asswordResponse\020\313*\022\025\n\020k_EMsgClientToGC\020\314"
  "*\022\027\n\022k_EMsgClientFromGC\020\315*\022\036\n\031k_EMsgClie"
  "ntEmailAddrInfo\020\320*\022 \n\033k_EMsgClientPasswo"
  "rdChange3\020\321*\022\035\n\030k_EMsgClientEmailChange3"
  "\020\322*\022\"\n\035k_EMsgClientPersonalQAChange3\020\323*\022"
  "(\n#k_EMsgClientResetForgottenPassword3\020\324"
  "*\022/\n*k_EMsgClientRequestForgottenPasswor"
  "dEmail3\020\325*\022\034\n\027k_EMsgClientNewLoginKey\020\327*"
  "\022$\n\037k_EMsgClientNewLoginKeyAccepted\020\330*\022)"
  "\n$k_EMsgClientLogOnWithHash_Deprecated\020\331"
  "*\022 \n\033k_EMsgClientStoreUserStats2\020\332*\022\035\n\030k"
  "_EMsgClientStatsUpdated\020\333*\022#\n\036k_EMsgClie"
  "ntActivateOEMLicense\020\334*\022#\n\036k_EMsgClientR"
  "egisterOEMMachine\020\335*\022+\n&k_EMsgClientRegi"
  "sterOEMMachineResponse\020\336*\022%\n k_EMsgClien"
  "tRequestedClientStats\020\350*\022\033\n\026k_EMsgClient"
  "Stat2Int32\020\351*\022\026\n\021k_EMsgClientStat2\020\352*\022\037\n"
  "\032k_EMsgClientVerifyPassword\020\353*\022\'\n\"k_EMsg"
  "ClientVerifyPasswordResponse\020\354*\022#\n\036k_EMs"
  "gClientDRMDownloadRequest\020\355*\022$\n\037k_EMsgCl"
  "ientDRMDownloadResponse\020\356*\022\037\n\032k_EMsgClie"
  "ntDRMFinalResult\020\357*\022&\n!k_EMsgClientGetFr"
  "iendsWhoPlayGame\020\360*\022.\n)k_EMsgClientGetFr"
  "iendsWhoPlayGameResponse\020\361*\022 \n\033k_EMsgCli"
  "entOGSBeginSession\020\362*\022(\n#k_EMsgClientOGS"
  "BeginSessionResponse\020\363*\022\036\n\031k_EMsgClientO"
  "GSEndSession\020\364*\022&\n!k_EMsgClientOGSEndSes"
  "sionResponse\020\365*\022\034\n\027k_EMsgClientOGSWriteR"
  "ow\020\366*\022\030\n\023k_EMsgClientDRMTest\020\367*\022\036\n\031k_EMs"
  "gClientDRMTestResult\020\370*\022\"\n\035k_EMsgClientS"
  "erverUnavailable\020\374*\022!\n\034k_EMsgClientServe"
  "rsAvailable\020\375*\022)\n$k_EMsgClientRegisterAu"
  "thTicketWithCM\020\376*\022\034\n\027k_EMsgClientGCMsgFa"
  "iled\020\377*\022$\n\037k_EMsgClientMicroTxnAuthReque"
  "st\020\200+\022\"\n\035k_EMsgClientMicroTxnAuthorize\020\201"
  "+\022*\n%k_EMsgClientMicroTxnAuthorizeRespon"
  "se\020\202+\022 \n\033k_EMsgClientGetMicroTxnInfo\020\204+\022"
  "(\n#k_EMsgClientGetMicroTxnInfoResponse\020\205"
  "+\022(\n#k_EMsgClientMarketingMessageUpdate2"
  "\020\206+\022%\n k_EMsgClientDeregisterWithServer\020"
  "\207+\022\'\n\"k_EMsgClientSubscribeToPersonaFeed"
  "\020\210+\022\026\n\021k_EMsgClientLogon\020\212+\022!\n\034k_EMsgCli"
  "entGetClientDetails\020\213+\022)\n$k_EMsgClientGe"
  "tClientDetailsResponse\020\214+\022+\n&k_EMsgClien"
  "tReportOverlayDetourFailure\020\215+\022!\n\034k_EMsg"
  "ClientGetClientAppList\020\216+\022)\n$k_EMsgClien"
  "tGetClientAppListResponse\020\217+\022!\n\034k_EMsgCl"
  "ientInstallClientApp\020\220+\022)\n$k_EMsgClientI"
  "nstallClientAppResponse\020\221+\022#\n\036k_EMsgClie"
  "ntUninstallClientApp\020\222+\022+\n&k_EMsgClientU"
  "ninstallClientAppResponse\020\223+\022(\n#k_EMsgCl"
  "ientSetClientAppUpdateState\020\224+\0220\n+k_EMsg"
  "ClientSetClientAppUpdateStateResponse\020\225+"
  "\022*\n%k_EMsgClientRequestEncryptedAppTicke"
  "t\020\226+\0222\n-k_EMsgClientRequestEncryptedAppT"
  "icketResponse\020\227+\022!\n\034k_EMsgClientWalletIn"
  "foUpdate\020\230+\022\032\n\025k_EMsgClientLBSSetUGC\020\231+\022"
  "\"\n\035k_EMsgClientLBSSetUGCResponse\020\232+\022\"\n\035k"
  "_EMsgClientAMGetClanOfficers\020\233+\022*\n%k_EMs"
  "gClientAMGetClanOfficersResponse\020\234+\022\"\n\035k"
  "_EMsgClientFriendProfileInfo\020\237+\022*\n%k_EMs"
  "gClientFriendProfileInfoResponse\020\240+\022\"\n\035k"
  "_EMsgClientUpdateMachineAuth\020\241+\022*\n%k_EMs"
  "gClientUpdateMachineAuthResponse\020\242+\022 \n\033k"
  "_EMsgClientReadMachineAuth\020\243+\022(\n#k_EMsgC"
  "lientReadMachineAuthResponse\020\244+\022#\n\036k_EMs"
  "gClientRequestMachineAuth\020\245+\022+\n&k_EMsgCl"
  "ientRequestMachineAuthResponse\020\246+\022#\n\036k_E"
  "MsgClientScreenshotsChanged\020\247+\022 \n\033k_EMsg"
  "ClientGetCDNAuthToken\020\252+\022(\n#k_EMsgClient"
  "GetCDNAuthTokenResponse\020\253+\022\'\n\"k_EMsgClie"
  "ntDownloadRateStatistics\020\254+\022#\n\036k_EMsgCli"
  "entRequestAccountData\020\255+\022+\n&k_EMsgClient"
  "RequestAccountDataResponse\020\256+\022(\n#k_EMsgC"
  "lientResetForgottenPassword4\020\257+\022\033\n\026k_EMs"
  "gClientHideFriend\020\260+\022\"\n\035k_EMsgClientFrie"
  "ndsGroupsList\020\261+\022&\n!k_EMsgClientGetClanA"
  "ctivityCounts\020\262+\022.\n)k_EMsgClientGetClanA"
  "ctivityCountsResponse\020\263+\022 \n\033k_EMsgClient"
  "OGSReportString\020\264+\022\035\n\030k_EMsgClientOGSRep"
  "ortBug\020\265+\022\031\n\024k_EMsgClientSentLogs\020\266+\022 \n\033"
  "k_EMsgClientLogonGameServer\020\267+\022%\n k_EMsg"
  "AMClientCreateFriendsGroup\020\270+\022-\n(k_EMsgA"
  "MClientCreateFriendsGroupResponse\020\271+\022%\n "
  "k_EMsgAMClientDeleteFriendsGroup\020\272+\022-\n(k"
  "_EMsgAMClientDeleteFriendsGroupResponse\020"
  "\273+\022%\n k_EMsgAMClientManageFriendsGroup\020\274"
  "+\022-\n(k_EMsgAMClientManageFriendsGroupRes"
  "ponse\020\275+\022#\n\036k_EMsgAMClientAddFriendToGro"
  "up\020\276+\022+\n&k_EMsgAMClientAddFriendToGroupR"
  "esponse\020\277+\022(\n#k_EMsgAMClientRemoveFriend"
  "FromGroup\020\300+\0220\n+k_EMsgAMClientRemoveFrie"
  "ndFromGroupResponse\020\301+\022(\n#k_EMsgClientAM"
  "GetPersonaNameHistory\020\302+\0220\n+k_EMsgClient"
  "AMGetPersonaNameHistoryResponse\020\303+\022#\n\036k_"
  "EMsgClientRequestFreeLicense\020\304+\022+\n&k_EMs"
  "gClientRequestFreeLicenseResponse\020\305+\0220\n+"
  "k_EMsgClientDRMDownloadRequestWithCrashD"
  "ata\020\306+\022\034\n\027k_EMsgClientAuthListAck\020\307+\022\"\n\035"
  "k_EMsgClientItemAnnouncements\020\310+\022)\n$k_EM"
  "sgClientRequestItemAnnouncements\020\311+\022&\n!k"
  "_EMsgClientFriendMsgEchoToSender\020\312+\022%\n k"
  "_EMsgClientCommentNotifications\020\316+\022,\n\'k_"
  "EMsgClientRequestCommentNotifications\020\317+"
  "\022&\n!k_EMsgClientPersonaChangeResponse\020\320+"
  "\0223\n.k_EMsgClientRequestWebAPIAuthenticat"
  "eUserNonce\020\321+\022;\n6k_EMsgClientRequestWebA"
  "PIAuthenticateUserNonceResponse\020\322+\022#\n\036k_"
  "EMsgClientPlayerNicknameList\020\323+\022$\n\037k_EMs"
  "gAMClientSetPlayerNickname\020\324+\022,\n\'k_EMsgA"
  "MClientSetPlayerNicknameResponse\020\325+\022,\n\'k"
  "_EMsgClientGetNumberOfCurrentPlayersDP\020\330"
  "+\0224\n/k_EMsgClientGetNumberOfCurrentPlaye"
  "rsDPResponse\020\331+\022$\n\037k_EMsgClientServiceMe"
  "thodLegacy\020\332+\022,\n\'k_EMsgClientServiceMeth"
  "odLegacyResponse\020\333+\022*\n%k_EMsgClientFrien"
  "dUserStatusPublished\020\334+\022\036\n\031k_EMsgClientC"
  "urrentUIMode\020\335+\022-\n(k_EMsgClientVanityURL"
  "ChangedNotification\020\336+\022\"\n\035k_EMsgClientUs"
  "erNotifications\020\337+\022\022\n\rk_EMsgBaseDFS\020\340+\022\025"
  "\n\020k_EMsgDFSGetFile\020\341+\022\036\n\031k_EMsgDFSInstal"
  "lLocalFile\020\342+\022\030\n\023k_EMsgDFSConnection\020\343+\022"
  "\035\n\030k_EMsgDFSConnectionReply\020\344+\022\'\n\"k_EMsg"
  "ClientDFSAuthenticateRequest\020\345+\022(\n#k_EMs"
  "gClientDFSAuthenticateResponse\020\346+\022\036\n\031k_E"
  "MsgClientDFSEndSession\020\347+\022\027\n\022k_EMsgDFSPu"
  "rgeFile\020\350+\022\027\n\022k_EMsgDFSRouteFile\020\351+\022\037\n\032k"
  "_EMsgDFSGetFileFromServer\020\352+\022\036\n\031k_EMsgDF"
  "SAcceptedResponse\020\353+\022\035\n\030k_EMsgDFSRequest"
  "Pingback\020\354+\022\036\n\031k_EMsgDFSRecvTransmitFile"
  "\020\355+\022\036\n\031k_EMsgDFSSendTransmitFile\020\356+\022\036\n\031k"
  "_EMsgDFSRequestPingback2\020\357+\022\037\n\032k_EMsgDFS"
  "ResponsePingback2\020\360+\022\"\n\035k_EMsgClientDFSD"
  "ownloadStatus\020\361+\022\033\n\026k_EMsgDFSStartTransf"
  "er\020\362+\022\036\n\031k_EMsgDFSTransferComplete\020\363+\022\037\n"
  "\032k_EMsgDFSRouteFileResponse\020\364+\022&\n!k_EMsg"
  "ClientNetworkingCertRequest\020\365+\022.\n)k_EMsg"
  "ClientNetworkingCertRequestResponse\020\366+\022!"
  "\n\034k_EMsgClientChallengeRequest\020\367+\022\"\n\035k_E"
  "MsgClientChallengeResponse\020\370+\022#\n\036k_EMsgB"
  "adgeCraftedNotification\020\371+\022,\n\'k_EMsgClie"
  "ntNetworkingMobileCertRequest\020\372+\0224\n/k_EM"
  "sgClientNetworkingMobileCertRequestRespo"
  "nse\020\373+\022\022\n\rk_EMsgBaseMDS\020\250-\022#\n\036k_EMsgMDSG"
  "etDepotDecryptionKey\020\264-\022+\n&k_EMsgMDSGetD"
  "epotDecryptionKeyResponse\020\265-\022(\n#k_EMsgMD"
  "SContentServerConfigRequest\020\303-\022!\n\034k_EMsg"
  "MDSContentServerConfig\020\304-\022\036\n\031k_EMsgMDSGe"
  "tDepotManifest\020\305-\022&\n!k_EMsgMDSGetDepotMa"
  "nifestResponse\020\306-\022#\n\036k_EMsgMDSGetDepotMa"
  "nifestChunk\020\307-\022\033\n\026k_EMsgMDSGetDepotChunk"
  "\020\310-\022#\n\036k_EMsgMDSGetDepotChunkResponse\020\311-"
  "\022 \n\033k_EMsgMDSGetDepotChunkChunk\020\312-\022\034\n\027k_"
  "EMsgMDSToCSFlushChunk\020\324-\022\032\n\025k_EMsgMDSMig"
  "rateChunk\020\327-\022\"\n\035k_EMsgMDSMigrateChunkRes"
  "ponse\020\330-\022\037\n\032k_EMsgMDSToCSFlushManifest\020\331"
  "-\022\021\n\014k_EMsgCSBase\020\2700\022\021\n\014k_EMsgCSPing\020\2710\022"
  "\031\n\024k_EMsgCSPingResponse\020\2720\022\022\n\rk_EMsgGMSB"
  "ase\020\2002\022!\n\034k_EMsgGMSGameServerReplicate\020\201"
  "2\022\037\n\032k_EMsgClientGMSServerQuery\020\2032\022\'\n\"k_"
  "EMsgGMSClientServerQueryResponse\020\2042\022 \n\033k"
  "_EMsgAMGMSGameServerUpdate\020\2052\022 \n\033k_EMsgA"
  "MGMSGameServerRemove\020\2062\022\036\n\031k_EMsgGameSer"
  "verOutOfDate\020\2072\022\"\n\035k_EMsgDeviceAuthoriza"
  "tionBase\020\3442\022,\n\'k_EMsgClientAuthorizeLoca"
  "lDeviceRequest\020\3452\022-\n(k_EMsgClientAuthori"
  "zeLocalDeviceResponse\020\3462\022)\n$k_EMsgClient"
  "DeauthorizeDeviceRequest\020\3472\022\"\n\035k_EMsgCli"
  "entDeauthorizeDevice\020\3502\022-\n(k_EMsgClientU"
  "seLocalDeviceAuthorizations\020\3512\022%\n k_EMsg"
  "ClientGetAuthorizedDevices\020\3522\022-\n(k_EMsgC"
  "lientGetAuthorizedDevicesResponse\020\3532\022*\n%"
  "k_EMsgAMNotifySessionDeviceAuthorized\020\3542"
  "\0221\n,k_EMsgClientAuthorizeLocalDeviceNoti"
  "fication\020\3552\022\022\n\rk_EMsgMMSBase\020\3103\022\037\n\032k_EMs"
  "gClientMMSCreateLobby\020\3113\022\'\n\"k_EMsgClient"
  "MMSCreateLobbyResponse\020\3123\022\035\n\030k_EMsgClien"
  "tMMSJoinLobby\020\3133\022%\n k_EMsgClientMMSJoinL"
  "obbyResponse\020\3143\022\036\n\031k_EMsgClientMMSLeaveL"
  "obby\020\3153\022&\n!k_EMsgClientMMSLeaveLobbyResp"
  "onse\020\3163\022 \n\033k_EMsgClientMMSGetLobbyList\020\317"
  "3\022(\n#k_EMsgClientMMSGetLobbyListResponse"
  "\020\3203\022 \n\033k_EMsgClientMMSSetLobbyData\020\3213\022(\n"
  "#k_EMsgClientMMSSetLobbyDataResponse\020\3223\022"
  " \n\033k_EMsgClientMMSGetLobbyData\020\3233\022\035\n\030k_E"
  "MsgClientMMSLobbyData\020\3243\022$\n\037k_EMsgClient"
  "MMSSendLobbyChatMsg\020\3253\022 \n\033k_EMsgClientMM"
  "SLobbyChatMsg\020\3263\022!\n\034k_EMsgClientMMSSetLo"
  "bbyOwner\020\3273\022)\n$k_EMsgClientMMSSetLobbyOw"
  "nerResponse\020\3303\022&\n!k_EMsgClientMMSSetLobb"
  "yGameServer\020\3313\022&\n!k_EMsgClientMMSLobbyGa"
  "meServerSet\020\3323\022#\n\036k_EMsgClientMMSUserJoi"
  "nedLobby\020\3333\022!\n\034k_EMsgClientMMSUserLeftLo"
  "bby\020\3343\022!\n\034k_EMsgClientMMSInviteToLobby\020\335"
  "3\022)\n$k_EMsgClientMMSFlushFrenemyListCach"
  "e\020\3363\0221\n,k_EMsgClientMMSFlushFrenemyListC"
  "acheResponse\020\3373\022\"\n\035k_EMsgClientMMSSetLob"
  "byLinked\020\3403\022.\n)k_EMsgClientMMSSetRatelim"
  "itPolicyOnClient\020\3413\022\"\n\035k_EMsgClientMMSGe"
  "tLobbyStatus\020\3423\022*\n%k_EMsgClientMMSGetLob"
  "byStatusResponse\020\3433\022\032\n\025k_EMsgMMSGetLobby"
  "List\020\3443\022\"\n\035k_EMsgMMSGetLobbyListResponse"
  "\020\3453\022\030\n\023k_EMsgNonStdMsgBase\020\2205\022\035\n\030k_EMsgN"
  "onStdMsgMemcached\020\2215\022\036\n\031k_EMsgNonStdMsgH"
  "TTPServer\020\2225\022\036\n\031k_EMsgNonStdMsgHTTPClien"
  "t\020\2235\022\036\n\031k_EMsgNonStdMsgWGResponse\020\2245\022 \n\033"
  "k_EMsgNonStdMsgPHPSimulator\020\2255\022\031\n\024k_EMsg"
  "NonStdMsgChase\020\2265\022\037\n\032k_EMsgNonStdMsgDFST"
  "ransfer\020\2275\022\031\n\024k_EMsgNonStdMsgTests\020\2305\022\037\n"
  "\032k_EMsgNonStdMsgUMQpipeAAPL\020\2315\022\032\n\025k_EMSg"
  "NonStdMsgSyslog\020\2325\022\033\n\026k_EMsgNonStdMsgLog"
  "sink\020\2335\022\"\n\035k_EMsgNonStdMsgSteam2Emulator"
  "\020\2345\022\036\n\031k_EMsgNonStdMsgRTMPServer\020\2355\022\035\n\030k"
  "_EMsgNonStdMsgWebSocket\020\2365\022\031\n\024k_EMsgNonS"
  "tdMsgRedis\020\2375\022\022\n\rk_EMsgUDSBase\020\3306\022%\n k_E"
  "MsgClientUDSP2PSessionStarted\020\3316\022#\n\036k_EM"
  "sgClientUDSP2PSessionEnded\020\3326\022\034\n\027k_EMsgU"
  "DSRenderUserAuth\020\3336\022$\n\037k_EMsgUDSRenderUs"
  "erAuthResponse\020\3346\022\035\n\030k_EMsgClientInviteT"
  "oGame\020\3356\022\030\n\023k_EMsgUDSHasSession\020\3366\022 \n\033k_"
  "EMsgUDSHasSessionResponse\020\3376\022\023\n\016k_EMsgMP"
  "ASBase\020\2747\022\032\n\025k_EMsgMPASVacBanReset\020\2757\022\022\n"
  "\rk_EMsgKGSBase\020\2408\022\022\n\rk_EMsgUCMBase\020\2049\022!\n"
  "\034k_EMsgClientUCMAddScreenshot\020\2059\022)\n$k_EM"
  "sgClientUCMAddScreenshotResponse\020\2069\022#\n\036k"
  "_EMsgUCMResetCommunityContent\020\2139\022+\n&k_EM"
  "sgUCMResetCommunityContentResponse\020\2149\022$\n"
  "\037k_EMsgClientUCMDeleteScreenshot\020\2159\022,\n\'k"
  "_EMsgClientUCMDeleteScreenshotResponse\020\216"
  "9\022\037\n\032k_EMsgClientUCMPublishFile\020\2179\022\'\n\"k_"
  "EMsgClientUCMPublishFileResponse\020\2209\022\'\n\"k"
  "_EMsgClientUCMDeletePublishedFile\020\2239\022/\n*"
  "k_EMsgClientUCMDeletePublishedFileRespon"
  "se\020\2249\022\'\n\"k_EMsgClientUCMUpdatePublishedF"
  "ile\020\2359\022/\n*k_EMsgClientUCMUpdatePublished"
  "FileResponse\020\2369\022!\n\034k_EMsgUCMUpdatePublis"
  "hedFile\020\2379\022)\n$k_EMsgUCMUpdatePublishedFi"
  "leResponse\020\2409\022!\n\034k_EMsgUCMDeletePublishe"
  "dFile\020\2419\022)\n$k_EMsgUCMDeletePublishedFile"
  "Response\020\2429\022%\n k_EMsgUCMUpdatePublishedF"
  "ileStat\020\2439\022!\n\034k_EMsgUCMReloadPublishedFi"
  "le\020\2519\022&\n!k_EMsgUCMReloadUserFileListCach"
  "es\020\2529\022#\n\036k_EMsgUCMPublishedFileReported\020"
  "\2539\022%\n k_EMsgUCMPublishedFilePreviewAdd\020\255"
  "9\022-\n(k_EMsgUCMPublishedFilePreviewAddRes"
  "ponse\020\2569\022(\n#k_EMsgUCMPublishedFilePrevie"
  "wRemove\020\2579\0220\n+k_EMsgUCMPublishedFilePrev"
  "iewRemoveResponse\020\2609\022%\n k_EMsgUCMPublish"
  "edFileSubscribed\020\2659\022\'\n\"k_EMsgUCMPublishe"
  "dFileUnsubscribed\020\2669\022\031\n\024k_EMsgUCMPublish"
  "File\020\2679\022!\n\034k_EMsgUCMPublishFileResponse\020"
  "\2709\022#\n\036k_EMsgUCMPublishedFileChildAdd\020\2719\022"
  "+\n&k_EMsgUCMPublishedFileChildAddRespons"
  "e\020\2729\022&\n!k_EMsgUCMPublishedFileChildRemov"
  "e\020\2739\022.\n)k_EMsgUCMPublishedFileChildRemov"
  "eResponse\020\2749\022(\n#k_EMsgUCMPublishedFilePa"
  "rentChanged\020\2779\022.\n)k_EMsgClientUCMSetUser"
  "PublishedFileAction\020\3049\0226\n1k_EMsgClientUC"
  "MSetUserPublishedFileActionResponse\020\3059\0227"
  "\n2k_EMsgClientUCMEnumeratePublishedFiles"
  "ByUserAction\020\3069\022\?\n:k_EMsgClientUCMEnumer"
  "atePublishedFilesByUserActionResponse\020\3079"
  "\022$\n\037k_EMsgUCMGetUserSubscribedFiles\020\3119\022,"
  "\n\'k_EMsgUCMGetUserSubscribedFilesRespons"
  "e\020\3129\022#\n\036k_EMsgUCMFixStatsPublishedFile\020\313"
  "9\022;\n6k_EMsgClientUCMEnumerateUserSubscri"
  "bedFilesWithUpdates\020\3229\022C\n>k_EMsgClientUC"
  "MEnumerateUserSubscribedFilesWithUpdates"
  "Response\020\3239\022)\n$k_EMsgUCMPublishedFileCon"
  "tentUpdated\020\3249\022(\n#k_EMsgClientUCMPublish"
  "edFileUpdated\020\3259\022+\n&k_EMsgClientWorkshop"
  "ItemChangesRequest\020\3269\022,\n\'k_EMsgClientWor"
  "kshopItemChangesResponse\020\3279\022\021\n\014k_EMsgFSB"
  "ase\020\314:\022#\n\036k_EMsgClientRichPresenceUpload"
  "\020\315:\022$\n\037k_EMsgClientRichPresenceRequest\020\316"
  ":\022!\n\034k_EMsgClientRichPresenceInfo\020\317:\022 \n\033"
  "k_EMsgFSRichPresenceRequest\020\320:\022!\n\034k_EMsg"
  "FSRichPresenceResponse\020\321:\022\037\n\032k_EMsgFSCom"
  "puteFrenematrix\020\322:\022\'\n\"k_EMsgFSComputeFre"
  "nematrixResponse\020\323:\022#\n\036k_EMsgFSPlayStatu"
  "sNotification\020\324:\022 \n\033k_EMsgFSAddOrRemoveF"
  "ollower\020\326:\022(\n#k_EMsgFSAddOrRemoveFollowe"
  "rResponse\020\327:\022 \n\033k_EMsgFSUpdateFollowingL"
  "ist\020\330:\022 \n\033k_EMsgFSCommentNotification\020\331:"
  "\022&\n!k_EMsgFSCommentNotificationViewed\020\332:"
  "\022#\n\036k_EMsgClientFSGetFollowerCount\020\333:\022+\n"
  "&k_EMsgClientFSGetFollowerCountResponse\020"
  "\334:\022!\n\034k_EMsgClientFSGetIsFollowing\020\335:\022)\n"
  "$k_EMsgClientFSGetIsFollowingResponse\020\336:"
  "\022)\n$k_EMsgClientFSEnumerateFollowingList"
  "\020\337:\0221\n,k_EMsgClientFSEnumerateFollowingL"
  "istResponse\020\340:\022(\n#k_EMsgFSGetPendingNoti"
  "ficationCount\020\341:\0220\n+k_EMsgFSGetPendingNo"
  "tificationCountResponse\020\342:\022/\n*k_EMsgClie"
  "ntChatOfflineMessageNotification\020\343:\022/\n*k"
  "_EMsgClientChatRequestOfflineMessageCoun"
  "t\020\344:\022,\n\'k_EMsgClientChatGetFriendMessage"
  "History\020\345:\0224\n/k_EMsgClientChatGetFriendM"
  "essageHistoryResponse\020\346:\022>\n9k_EMsgClient"
  "ChatGetFriendMessageHistoryForOfflineMes"
  "sages\020\347:\022(\n#k_EMsgClientFSGetFriendsStea"
  "mLevels\020\350:\0220\n+k_EMsgClientFSGetFriendsSt"
  "eamLevelsResponse\020\351:\022\036\n\031k_EMsgAMRequestF"
  "riendData\020\352:\022\024\n\017k_EMsgDRMRange2\020\260;\022,\n\'k_"
  "EMsgCEGVersionSetEnableDisableRequest\020\260;"
  "\022-\n(k_EMsgCEGVersionSetEnableDisableResp"
  "onse\020\261;\022#\n\036k_EMsgCEGPropStatusDRMSReques"
  "t\020\262;\022$\n\037k_EMsgCEGPropStatusDRMSResponse\020"
  "\263;\022\'\n\"k_EMsgCEGWhackFailureReportRequest"
  "\020\264;\022(\n#k_EMsgCEGWhackFailureReportRespon"
  "se\020\265;\022\036\n\031k_EMsgDRMSFetchVersionSet\020\266;\022&\n"
  "!k_EMsgDRMSFetchVersionSetResponse\020\267;\022\023\n"
  "\016k_EMsgEconBase\020\224<\022+\n&k_EMsgEconTrading_"
  "InitiateTradeRequest\020\225<\022,\n\'k_EMsgEconTra"
  "ding_InitiateTradeProposed\020\226<\022,\n\'k_EMsgE"
  "conTrading_InitiateTradeResponse\020\227<\022*\n%k"
  "_EMsgEconTrading_InitiateTradeResult\020\230<\022"
  "#\n\036k_EMsgEconTrading_StartSession\020\231<\022)\n$"
  "k_EMsgEconTrading_CancelTradeRequest\020\232<\022"
  "\"\n\035k_EMsgEconFlushInventoryCache\020\233<\022*\n%k"
  "_EMsgEconFlushInventoryCacheResponse\020\234<\022"
  "&\n!k_EMsgEconCDKeyProcessTransaction\020\237<\022"
  ".\n)k_EMsgEconCDKeyProcessTransactionResp"
  "onse\020\240<\022\033\n\026k_EMsgEconGetErrorLogs\020\241<\022#\n\036"
  "k_EMsgEconGetErrorLogsResponse\020\242<\022\022\n\rk_E"
  "MsgRMRange\020\370<\022\034\n\027k_EMsgRMTestVerisignOTP"
  "\020\370<\022$\n\037k_EMsgRMTestVerisignOTPResponse\020\371"
  "<\022 \n\033k_EMsgRMDeleteMemcachedKeys\020\373<\022\031\n\024k"
  "_EMsgRMRemoteInvoke\020\374<\022\031\n\024k_EMsgBadLogin"
  "IPList\020\375<\022\037\n\032k_EMsgRMMsgTraceAddTrigger\020"
  "\376<\022\"\n\035k_EMsgRMMsgTraceRemoveTrigger\020\377<\022\032"
  "\n\025k_EMsgRMMsgTraceEvent\020\200=\022\022\n\rk_EMsgUGSB"
  "ase\020\334=\022\037\n\032k_EMsgUGSUpdateGlobalStats\020\334=\022"
  "\"\n\035k_EMsgClientUGSGetGlobalStats\020\335=\022*\n%k"
  "_EMsgClientUGSGetGlobalStatsResponse\020\336=\022"
  "\024\n\017k_EMsgStoreBase\020\300>\022\022\n\rk_EMsgUMQBase\020\244"
  "\?\022\032\n\025k_EMsgUMQLogonRequest\020\244\?\022\033\n\026k_EMsgU"
  "MQLogonResponse\020\245\?\022\033\n\026k_EMsgUMQLogoffReq"
  "uest\020\246\?\022\034\n\027k_EMsgUMQLogoffResponse\020\247\?\022\035\n"
  "\030k_EMsgUMQSendChatMessage\020\250\?\022!\n\034k_EMsgUM"
  "QIncomingChatMessage\020\251\?\022\022\n\rk_EMsgUMQPoll"
  "\020\252\?\022\031\n\024k_EMsgUMQPollResults\020\253\?\022 \n\033k_EMsg"
  "UMQ2AM_ClientMsgBatch\020\254\?\022\027\n\022k_EMsgWorksh"
  "opBase\020\210@\022\025\n\020k_EMsgWebAPIBase\020\354@\022$\n\037k_EM"
  "sgWebAPIValidateOAuth2Token\020\354@\022,\n\'k_EMsg"
  "WebAPIValidateOAuth2TokenResponse\020\355@\022%\n "
  "k_EMsgWebAPIRegisterGCInterfaces\020\357@\022+\n&k"
  "_EMsgWebAPIInvalidateOAuthClientCache\020\360@"
  "\022*\n%k_EMsgWebAPIInvalidateOAuthTokenCach"
  "e\020\361@\022\033\n\026k_EMsgWebAPISetSecrets\020\362@\022\027\n\022k_E"
  "MsgBackpackBase\020\320A\022 \n\033k_EMsgBackpackAddT"
  "oCurrency\020\321A\022(\n#k_EMsgBackpackAddToCurre"
  "ncyResponse\020\322A\022\022\n\rk_EMsgCREBase\020\264B\022\035\n\030k_"
  "EMsgCREItemVoteSummary\020\267B\022%\n k_EMsgCREIt"
  "emVoteSummaryResponse\020\270B\022)\n$k_EMsgCREUpd"
  "ateUserPublishedItemVote\020\273B\0221\n,k_EMsgCRE"
  "UpdateUserPublishedItemVoteResponse\020\274B\022-"
  "\n(k_EMsgCREGetUserPublishedItemVoteDetai"
  "ls\020\275B\0225\n0k_EMsgCREGetUserPublishedItemVo"
  "teDetailsResponse\020\276B\022\026\n\021k_EMsgSecretsBas"
  "e\020\230C\022\'\n\"k_EMsgSecretsRequestCredentialPa"
  "ir\020\230C\022(\n#k_EMsgSecretsCredentialPairResp"
  "onse\020\231C\022\031\n\024k_EMsgBoxMonitorBase\020\374C\022\"\n\035k_"
  "EMsgBoxMonitorReportRequest\020\374C\022#\n\036k_EMsg"
  "BoxMonitorReportResponse\020\375C\022\026\n\021k_EMsgLog"
  "sinkBase\020\340D\022\035\n\030k_EMsgLogsinkWriteReport\020"
  "\340D\022\023\n\016k_EMsgPICSBase\020\304E\022(\n#k_EMsgClientP"
  "ICSChangesSinceRequest\020\305E\022)\n$k_EMsgClien"
  "tPICSChangesSinceResponse\020\306E\022\'\n\"k_EMsgCl"
  "ientPICSProductInfoRequest\020\307E\022(\n#k_EMsgC"
  "lientPICSProductInfoResponse\020\310E\022\'\n\"k_EMs"
  "gClientPICSAccessTokenRequest\020\311E\022(\n#k_EM"
  "sgClientPICSAccessTokenResponse\020\312E\022\030\n\023k_"
  "EMsgWorkerProcess\020\250F\022#\n\036k_EMsgWorkerProc"
  "essPingRequest\020\250F\022$\n\037k_EMsgWorkerProcess"
  "PingResponse\020\251F\022 \n\033k_EMsgWorkerProcessSh"
  "utdown\020\252F\022\033\n\026k_EMsgDRMWorkerProcess\020\214G\022%"
  "\n k_EMsgDRMWorkerProcessDRMAndSign\020\214G\022-\n"
  "(k_EMsgDRMWorkerProcessDRMAndSignRespons"
  "e\020\215G\0220\n+k_EMsgDRMWorkerProcessSteamworks"
  "InfoRequest\020\216G\0221\n,k_EMsgDRMWorkerProcess"
  "SteamworksInfoResponse\020\217G\022/\n*k_EMsgDRMWo"
  "rkerProcessInstallDRMDLLRequest\020\220G\0220\n+k_"
  "EMsgDRMWorkerProcessInstallDRMDLLRespons"
  "e\020\221G\0220\n+k_EMsgDRMWorkerProcessSecretIdSt"
  "ringRequest\020\222G\0221\n,k_EMsgDRMWorkerProcess"
  "SecretIdStringResponse\020\223G\0227\n2k_EMsgDRMWo"
  "rkerProcessInstallProcessedFilesRequest\020"
  "\226G\0228\n3k_EMsgDRMWorkerProcessInstallProce"
  "ssedFilesResponse\020\227G\022-\n(k_EMsgDRMWorkerP"
  "rocessExamineBlobRequest\020\230G\022.\n)k_EMsgDRM"
  "WorkerProcessExamineBlobResponse\020\231G\0220\n+k"
  "_EMsgDRMWorkerProcessDescribeSecretReque"
  "st\020\232G\0221\n,k_EMsgDRMWorkerProcessDescribeS"
  "ecretResponse\020\233G\0222\n-k_EMsgDRMWorkerProce"
  "ssBackfillOriginalRequest\020\234G\0223\n.k_EMsgDR"
  "MWorkerProcessBackfillOriginalResponse\020\235"
  "G\0220\n+k_EMsgDRMWorkerProcessValidateDRMDL"
  "LRequest\020\236G\0221\n,k_EMsgDRMWorkerProcessVal"
  "idateDRMDLLResponse\020\237G\022.\n)k_EMsgDRMWorke"
  "rProcessValidateFileRequest\020\240G\022/\n*k_EMsg"
  "DRMWorkerProcessValidateFileResponse\020\241G\022"
  "1\n,k_EMsgDRMWorkerProcessSplitAndInstall"
  "Request\020\242G\0222\n-k_EMsgDRMWorkerProcessSpli"
  "tAndInstallResponse\020\243G\022)\n$k_EMsgDRMWorke"
  "rProcessGetBlobRequest\020\244G\022*\n%k_EMsgDRMWo"
  "rkerProcessGetBlobResponse\020\245G\022/\n*k_EMsgD"
  "RMWorkerProcessEvaluateCrashRequest\020\246G\0220"
  "\n+k_EMsgDRMWorkerProcessEvaluateCrashRes"
  "ponse\020\247G\022-\n(k_EMsgDRMWorkerProcessAnalyz"
  "eFileRequest\020\250G\022.\n)k_EMsgDRMWorkerProces"
  "sAnalyzeFileResponse\020\251G\022,\n\'k_EMsgDRMWork"
  "erProcessUnpackBlobRequest\020\252G\022-\n(k_EMsgD"
  "RMWorkerProcessUnpackBlobResponse\020\253G\022,\n\'"
  "k_EMsgDRMWorkerProcessInstallAllRequest\020"
  "\254G\022-\n(k_EMsgDRMWorkerProcessInstallAllRe"
  "sponse\020\255G\022\034\n\027k_EMsgTestWorkerProcess\020\360G\022"
  "3\n.k_EMsgTestWorkerProcessLoadUnloadModu"
  "leRequest\020\360G\0224\n/k_EMsgTestWorkerProcessL"
  "oadUnloadModuleResponse\020\361G\0224\n/k_EMsgTest"
  "WorkerProcessServiceModuleCallRequest\020\362G"
  "\0225\n0k_EMsgTestWorkerProcessServiceModule"
  "CallResponse\020\363G\022\032\n\025k_EMsgQuestServerBase"
  "\020\324H\022 \n\033k_EMsgClientGetEmoticonList\020\362H\022\035\n"
  "\030k_EMsgClientEmoticonList\020\363H\022\022\n\rk_EMsgSL"
  "CBase\020\270I\022\037\n\032k_EMsgSLCUserSessionStatus\020\270"
  "I\022&\n!k_EMsgSLCRequestUserSessionStatus\020\271"
  "I\022&\n!k_EMsgSLCSharedLicensesLockStatus\020\272"
  "I\022(\n#k_EMsgClientSharedLibraryLockStatus"
  "\020\275I\022)\n$k_EMsgClientSharedLibraryStopPlay"
  "ing\020\276I\022!\n\034k_EMsgSLCOwnerLibraryChanged\020\277"
  "I\022\"\n\035k_EMsgSLCSharedLibraryChanged\020\300I\022\033\n"
  "\026k_EMsgRemoteClientBase\020\234J\022$\n\037k_EMsgRemo"
  "teClientAuth_OBSOLETE\020\234J\022,\n\'k_EMsgRemote"
  "ClientAuthResponse_OBSOLETE\020\235J\022 \n\033k_EMsg"
  "RemoteClientAppStatus\020\236J\022\"\n\035k_EMsgRemote"
  "ClientStartStream\020\237J\022*\n%k_EMsgRemoteClie"
  "ntStartStreamResponse\020\240J\022\033\n\026k_EMsgRemote"
  "ClientPing\020\241J\022#\n\036k_EMsgRemoteClientPingR"
  "esponse\020\242J\022 \n\033k_EMsgClientUnlockStreamin"
  "g\020\243J\022(\n#k_EMsgClientUnlockStreamingRespo"
  "nse\020\244J\022!\n\034k_EMsgRemoteClientAcceptEULA\020\245"
  "J\022*\n%k_EMsgRemoteClientGetControllerConf"
  "ig\020\246J\0222\n-k_EMsgRemoteClientGetController"
  "ConfigResponse\020\247J\022\'\n\"k_EMsgRemoteClientS"
  "treamingEnabled\020\250J\022\033\n\026k_EMsgClientUnlock"
  "HEVC\020\251J\022#\n\036k_EMsgClientUnlockHEVCRespons"
  "e\020\252J\022$\n\037k_EMsgRemoteClientStatusRequest\020"
  "\253J\022%\n k_EMsgRemoteClientStatusResponse\020\254"
  "J\022\'\n\"k_EMsgClientConcurrentSessionsBase\020"
  "\200K\022$\n\037k_EMsgClientPlayingSessionState\020\200K"
  "\022#\n\036k_EMsgClientKickPlayingSession\020\201K\022\036\n"
  "\031k_EMsgClientBroadcastBase\020\344K\022\036\n\031k_EMsgC"
  "lientBroadcastInit\020\344K\022 \n\033k_EMsgClientBro"
  "adcastFrames\020\345K\022$\n\037k_EMsgClientBroadcast"
  "Disconnect\020\346K\022$\n\037k_EMsgClientBroadcastSc"
  "reenshot\020\347K\022&\n!k_EMsgClientBroadcastUplo"
  "adConfig\020\350K\022\026\n\021k_EMsgBaseClient3\020\310L\022&\n!k"
  "_EMsgClientVoiceCallPreAuthorize\020\310L\022.\n)k"
  "_EMsgClientVoiceCallPreAuthorizeResponse"
  "\020\311L\022\'\n\"k_EMsgClientServerTimestampReques"
  "t\020\312L\022(\n#k_EMsgClientServerTimestampRespo"
  "nse\020\313L\022/\n*k_EMsgServiceMethodCallFromCli"
  "entNonAuthed\020\314L\022\026\n\021k_EMsgClientHello\020\315L\022"
  "\033\n\026k_EMsgClientLANP2PBase\020\254M\022#\n\036k_EMsgCl"
  "ientLANP2PRequestChunk\020\254M\022+\n&k_EMsgClien"
  "tLANP2PRequestChunkResponse\020\255M\022\032\n\025k_EMsg"
  "ClientLANP2PMax\020\217N\022\035\n\030k_EMsgBaseWatchdog"
  "Server\020\220N\022\031\n\024k_EMsgNotifyWatchdog\020\220N\022 \n\033"
  "k_EMsgClientSiteLicenseBase\020\364N\0220\n+k_EMsg"
  "ClientSiteLicenseSiteInfoNotification\020\364N"
  "\022$\n\037k_EMsgClientSiteLicenseCheckout\020\365N\022,"
  "\n\'k_EMsgClientSiteLicenseCheckoutRespons"
  "e\020\366N\022-\n(k_EMsgClientSiteLicenseGetAvaila"
  "bleSeats\020\367N\0225\n0k_EMsgClientSiteLicenseGe"
  "tAvailableSeatsResponse\020\370N\022/\n*k_EMsgClie"
  "ntSiteLicenseGetContentCacheInfo\020\371N\0227\n2k"
  "_EMsgClientSiteLicenseGetContentCacheInf"
  "oResponse\020\372N\022\031\n\024k_EMsgBaseChatServer\020\340]\022"
  "0\n+k_EMsgChatServerGetPendingNotificatio"
  "nCount\020\340]\0228\n3k_EMsgChatServerGetPendingN"
  "otificationCountResponse\020\341]\022\033\n\026k_EMsgBas"
  "eSecretServer\020\304^\022\036\n\031k_EMsgServerSecretCh"
  "anged\020\304^\032\002\020\001*\317\004\n\027EClientPersonaStateFlag"
  "\022#\n\037k_EClientPersonaStateFlagStatus\020\001\022\'\n"
  "#k_EClientPersonaStateFlagPlayerName\020\002\022&"
  "\n\"k_EClientPersonaStateFlagQueryPort\020\004\022%"
  "\n!k_EClientPersonaStateFlagSourceID\020\010\022%\n"
  "!k_EClientPersonaStateFlagPresence\020\020\022%\n!"
  "k_EClientPersonaStateFlagLastSeen\020@\022*\n%k"
  "_EClientPersonaStateFlagUserClanRank\020\200\001\022"
  "\'\n\"k_EClientPersonaStateGameExtraInfo\020\200\002"
  "\022&\n!k_EClientPersonaStateGameDataBlob\020\200\004"
  "\022&\n!k_EClientPersonaStateFlagClanData\020\200\010"
  "\022&\n!k_EClientPersonaStateFlagFacebook\020\200\020"
  "\022*\n%k_EClientPersonaStateFlagRichPresenc"
  "e\020\200 \022\'\n\"k_EClientPersonaStateFlagBroadca"
  "st\020\200@\022\'\n!k_EClientPersonaStateFlagWatchi"
  "ng\020\200\200\001*\271\001\n\024EMsgClanAccountFlags\022\037\n\033k_EMs"
  "gClanAccountFlagPublic\020\001\022\036\n\032k_EMsgClanAc"
  "countFlagLarge\020\002\022\037\n\033k_EMsgClanAccountFla"
  "gLocked\020\004\022!\n\035k_EMsgClanAccountFlagDisabl"
  "ed\020\010\022\034\n\030k_EMsgClanAccountFlagOGG\020\020*\220\003\n\021E"
  "SteamReviewScore\022.\n*k_ESteamReviewScore_"
  "OverwhelminglyPositive\020\t\022$\n k_ESteamRevi"
  "ewScore_VeryPositive\020\010\022 \n\034k_ESteamReview"
  "Score_Positive\020\007\022&\n\"k_ESteamReviewScore_"
  "MostlyPositive\020\006\022\035\n\031k_ESteamReviewScore_"
  "Mixed\020\005\022&\n\"k_ESteamReviewScore_MostlyNeg"
  "ative\020\004\022 \n\034k_ESteamReviewScore_Negative\020"
  "\003\022$\n k_ESteamReviewScore_VeryNegative\020\002\022"
  ".\n*k_ESteamReviewScore_OverwhelminglyNeg"
  "ative\020\001\022\034\n\030k_ESteamReviewScore_None\020\000B\005H"
  "\001\200\001\000"
  ;
static ::_pbi::once_flag descriptor_table_enums_5fclientserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_enums_5fclientserver_2eproto = {
    false, false, 54204, descriptor_table_protodef_enums_5fclientserver_2eproto,
    "enums_clientserver.proto",
    &descriptor_table_enums_5fclientserver_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_enums_5fclientserver_2eproto::offsets,
    nullptr, file_level_enum_descriptors_enums_5fclientserver_2eproto,
    file_level_service_descriptors_enums_5fclientserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_enums_5fclientserver_2eproto_getter() {
  return &descriptor_table_enums_5fclientserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_enums_5fclientserver_2eproto(&descriptor_table_enums_5fclientserver_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[0];
}
bool EMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 113:
    case 115:
    case 120:
    case 121:
    case 123:
    case 124:
    case 126:
    case 127:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 215:
    case 221:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 300:
    case 301:
    case 307:
    case 308:
    case 309:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 329:
    case 330:
    case 331:
    case 332:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 400:
    case 402:
    case 403:
    case 405:
    case 406:
    case 423:
    case 424:
    case 425:
    case 426:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 500:
    case 504:
    case 505:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
    case 541:
    case 542:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 560:
    case 561:
    case 563:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 596:
    case 597:
    case 598:
    case 600:
    case 601:
    case 602:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 625:
    case 628:
    case 629:
    case 630:
    case 631:
    case 633:
    case 634:
    case 635:
    case 636:
    case 637:
    case 638:
    case 639:
    case 640:
    case 641:
    case 642:
    case 643:
    case 644:
    case 645:
    case 646:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 710:
    case 712:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 719:
    case 720:
    case 721:
    case 726:
    case 727:
    case 728:
    case 730:
    case 731:
    case 732:
    case 736:
    case 738:
    case 740:
    case 741:
    case 742:
    case 743:
    case 744:
    case 745:
    case 746:
    case 747:
    case 751:
    case 755:
    case 756:
    case 757:
    case 758:
    case 759:
    case 760:
    case 763:
    case 764:
    case 765:
    case 766:
    case 767:
    case 768:
    case 771:
    case 773:
    case 774:
    case 779:
    case 780:
    case 782:
    case 783:
    case 784:
    case 785:
    case 791:
    case 792:
    case 796:
    case 797:
    case 798:
    case 799:
    case 800:
    case 801:
    case 802:
    case 803:
    case 805:
    case 807:
    case 808:
    case 809:
    case 810:
    case 813:
    case 814:
    case 815:
    case 818:
    case 819:
    case 820:
    case 821:
    case 822:
    case 830:
    case 831:
    case 832:
    case 839:
    case 842:
    case 845:
    case 846:
    case 848:
    case 849:
    case 850:
    case 851:
    case 855:
    case 856:
    case 857:
    case 858:
    case 860:
    case 880:
    case 896:
    case 897:
    case 900:
    case 901:
    case 903:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 1000:
    case 1004:
    case 1005:
    case 1006:
    case 1010:
    case 1019:
    case 1020:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1406:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1417:
    case 1418:
    case 1421:
    case 1422:
    case 1425:
    case 1426:
    case 1427:
    case 1433:
    case 1434:
    case 1435:
    case 1437:
    case 1438:
    case 1440:
    case 1441:
    case 1445:
    case 1446:
    case 1448:
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1494:
    case 1495:
    case 1496:
    case 1497:
    case 1498:
    case 1499:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1514:
    case 1515:
    case 1516:
    case 1517:
    case 1518:
    case 1519:
    case 1600:
    case 1601:
    case 1603:
    case 1604:
    case 1607:
    case 1608:
    case 1612:
    case 1615:
    case 1616:
    case 1617:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1625:
    case 1627:
    case 1628:
    case 1629:
    case 1630:
    case 1631:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 2200:
    case 2203:
    case 2206:
    case 2207:
    case 2208:
    case 2209:
    case 2210:
    case 2212:
    case 2213:
    case 2216:
    case 2217:
    case 2218:
    case 2219:
    case 2220:
    case 2221:
    case 2222:
    case 2223:
    case 2224:
    case 2225:
    case 2226:
    case 2227:
    case 2228:
    case 2229:
    case 2230:
    case 2231:
    case 2232:
    case 2233:
    case 2234:
    case 2235:
    case 2236:
    case 2237:
    case 2238:
    case 2239:
    case 2240:
    case 2241:
    case 2242:
    case 2243:
    case 2244:
    case 2500:
    case 2502:
    case 2900:
    case 2902:
    case 2903:
    case 2905:
    case 2906:
    case 2907:
    case 2908:
    case 3000:
    case 3001:
    case 3002:
    case 3100:
    case 3150:
    case 3161:
    case 3162:
    case 3200:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3207:
    case 3208:
    case 3209:
    case 3210:
    case 3211:
    case 3212:
    case 3213:
    case 3214:
    case 3400:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3406:
    case 3600:
    case 3629:
    case 3630:
    case 4000:
    case 4001:
    case 4002:
    case 4005:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4015:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4079:
    case 4080:
    case 4081:
    case 4082:
    case 4083:
    case 4084:
    case 4085:
    case 4086:
    case 4087:
    case 4090:
    case 4091:
    case 4092:
    case 4095:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4102:
    case 4103:
    case 4104:
    case 4105:
    case 4106:
    case 4107:
    case 4108:
    case 4110:
    case 4111:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4116:
    case 4117:
    case 4118:
    case 4119:
    case 4120:
    case 4121:
    case 4122:
    case 4123:
    case 4124:
    case 4125:
    case 4126:
    case 4127:
    case 4128:
    case 4140:
    case 4143:
    case 4144:
    case 4145:
    case 4147:
    case 4148:
    case 4149:
    case 4152:
    case 4153:
    case 4155:
    case 4156:
    case 4157:
    case 4158:
    case 4159:
    case 4160:
    case 4161:
    case 4162:
    case 4163:
    case 4164:
    case 4165:
    case 4166:
    case 4172:
    case 4173:
    case 4174:
    case 4175:
    case 4184:
    case 4185:
    case 4190:
    case 4191:
    case 4194:
    case 4195:
    case 4197:
    case 4198:
    case 4199:
    case 4206:
    case 4209:
    case 4210:
    case 4211:
    case 4213:
    case 4216:
    case 4219:
    case 4220:
    case 4224:
    case 4231:
    case 4232:
    case 4236:
    case 4241:
    case 4242:
    case 4244:
    case 4245:
    case 4246:
    case 4247:
    case 4248:
    case 4249:
    case 4250:
    case 4251:
    case 4252:
    case 4255:
    case 4256:
    case 4258:
    case 4260:
    case 4262:
    case 4264:
    case 4265:
    case 4266:
    case 4267:
    case 4268:
    case 4269:
    case 4270:
    case 4271:
    case 4272:
    case 4278:
    case 4279:
    case 4280:
    case 4281:
    case 4282:
    case 4283:
    case 4284:
    case 4285:
    case 4286:
    case 4287:
    case 4288:
    case 4289:
    case 4290:
    case 4294:
    case 4295:
    case 4298:
    case 4299:
    case 4300:
    case 4301:
    case 4302:
    case 4305:
    case 4307:
    case 4308:
    case 4309:
    case 4310:
    case 4311:
    case 4312:
    case 4313:
    case 4314:
    case 4315:
    case 4316:
    case 4317:
    case 4320:
    case 4321:
    case 4322:
    case 4323:
    case 4324:
    case 4325:
    case 4326:
    case 4327:
    case 4328:
    case 4329:
    case 4330:
    case 4331:
    case 4332:
    case 4333:
    case 4334:
    case 4335:
    case 4336:
    case 4337:
    case 4338:
    case 4339:
    case 4340:
    case 4341:
    case 4342:
    case 4344:
    case 4345:
    case 4346:
    case 4347:
    case 4348:
    case 4349:
    case 4350:
    case 4351:
    case 4352:
    case 4353:
    case 4354:
    case 4355:
    case 4356:
    case 4357:
    case 4358:
    case 4359:
    case 4360:
    case 4361:
    case 4362:
    case 4365:
    case 4366:
    case 4367:
    case 4368:
    case 4372:
    case 4373:
    case 4374:
    case 4375:
    case 4376:
    case 4377:
    case 4380:
    case 4381:
    case 4383:
    case 4384:
    case 4385:
    case 4386:
    case 4389:
    case 4390:
    case 4391:
    case 4392:
    case 4393:
    case 4394:
    case 4395:
    case 4396:
    case 4397:
    case 4398:
    case 4399:
    case 4400:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 4423:
    case 4424:
    case 5000:
    case 5001:
    case 5002:
    case 5003:
    case 5004:
    case 5007:
    case 5008:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5200:
    case 5202:
    case 5203:
    case 5204:
    case 5205:
    case 5206:
    case 5207:
    case 5210:
    case 5211:
    case 5212:
    case 5213:
    case 5214:
    case 5215:
    case 5216:
    case 5217:
    case 5218:
    case 5219:
    case 5220:
    case 5226:
    case 5227:
    case 5228:
    case 5229:
    case 5230:
    case 5231:
    case 5232:
    case 5233:
    case 5234:
    case 5235:
    case 5236:
    case 5237:
    case 5238:
    case 5239:
    case 5240:
    case 5241:
    case 5242:
    case 5243:
    case 5244:
    case 5245:
    case 5246:
    case 5247:
    case 5248:
    case 5249:
    case 5250:
    case 5251:
    case 5252:
    case 5253:
    case 5254:
    case 5400:
    case 5401:
    case 5402:
    case 5403:
    case 5404:
    case 5405:
    case 5407:
    case 5408:
    case 5409:
    case 5410:
    case 5411:
    case 5412:
    case 5413:
    case 5414:
    case 5415:
    case 5416:
    case 5417:
    case 5418:
    case 5419:
    case 5426:
    case 5427:
    case 5428:
    case 5429:
    case 5430:
    case 5431:
    case 5432:
    case 5433:
    case 5434:
    case 5435:
    case 5438:
    case 5439:
    case 5440:
    case 5443:
    case 5444:
    case 5445:
    case 5446:
    case 5448:
    case 5449:
    case 5450:
    case 5451:
    case 5452:
    case 5453:
    case 5456:
    case 5457:
    case 5458:
    case 5459:
    case 5460:
    case 5461:
    case 5463:
    case 5464:
    case 5465:
    case 5466:
    case 5467:
    case 5468:
    case 5469:
    case 5470:
    case 5480:
    case 5481:
    case 5482:
    case 5483:
    case 5484:
    case 5485:
    case 5486:
    case 5487:
    case 5488:
    case 5489:
    case 5490:
    case 5491:
    case 5492:
    case 5493:
    case 5494:
    case 5495:
    case 5496:
    case 5500:
    case 5501:
    case 5502:
    case 5503:
    case 5504:
    case 5505:
    case 5506:
    case 5508:
    case 5509:
    case 5510:
    case 5511:
    case 5512:
    case 5514:
    case 5515:
    case 5516:
    case 5517:
    case 5518:
    case 5519:
    case 5520:
    case 5521:
    case 5522:
    case 5523:
    case 5524:
    case 5525:
    case 5526:
    case 5527:
    case 5528:
    case 5529:
    case 5530:
    case 5531:
    case 5532:
    case 5535:
    case 5536:
    case 5537:
    case 5538:
    case 5539:
    case 5540:
    case 5541:
    case 5542:
    case 5543:
    case 5546:
    case 5547:
    case 5548:
    case 5549:
    case 5550:
    case 5551:
    case 5552:
    case 5553:
    case 5554:
    case 5555:
    case 5556:
    case 5557:
    case 5558:
    case 5559:
    case 5560:
    case 5561:
    case 5562:
    case 5563:
    case 5564:
    case 5565:
    case 5566:
    case 5567:
    case 5568:
    case 5569:
    case 5570:
    case 5571:
    case 5572:
    case 5573:
    case 5574:
    case 5575:
    case 5576:
    case 5577:
    case 5578:
    case 5582:
    case 5583:
    case 5584:
    case 5585:
    case 5586:
    case 5587:
    case 5588:
    case 5589:
    case 5592:
    case 5593:
    case 5594:
    case 5595:
    case 5596:
    case 5597:
    case 5598:
    case 5599:
    case 5600:
    case 5601:
    case 5602:
    case 5603:
    case 5604:
    case 5605:
    case 5606:
    case 5607:
    case 5608:
    case 5609:
    case 5610:
    case 5611:
    case 5612:
    case 5613:
    case 5614:
    case 5615:
    case 5616:
    case 5617:
    case 5618:
    case 5619:
    case 5620:
    case 5621:
    case 5622:
    case 5623:
    case 5624:
    case 5625:
    case 5626:
    case 5627:
    case 5800:
    case 5812:
    case 5813:
    case 5827:
    case 5828:
    case 5829:
    case 5830:
    case 5831:
    case 5832:
    case 5833:
    case 5834:
    case 5844:
    case 5847:
    case 5848:
    case 5849:
    case 6200:
    case 6201:
    case 6202:
    case 6400:
    case 6401:
    case 6403:
    case 6404:
    case 6405:
    case 6406:
    case 6407:
    case 6500:
    case 6501:
    case 6502:
    case 6503:
    case 6504:
    case 6505:
    case 6506:
    case 6507:
    case 6508:
    case 6509:
    case 6600:
    case 6601:
    case 6602:
    case 6603:
    case 6604:
    case 6605:
    case 6606:
    case 6607:
    case 6608:
    case 6609:
    case 6610:
    case 6611:
    case 6612:
    case 6613:
    case 6614:
    case 6615:
    case 6616:
    case 6617:
    case 6618:
    case 6619:
    case 6620:
    case 6621:
    case 6622:
    case 6623:
    case 6624:
    case 6625:
    case 6626:
    case 6627:
    case 6628:
    case 6629:
    case 6800:
    case 6801:
    case 6802:
    case 6803:
    case 6804:
    case 6805:
    case 6806:
    case 6807:
    case 6808:
    case 6809:
    case 6810:
    case 6811:
    case 6812:
    case 6813:
    case 6814:
    case 6815:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7100:
    case 7101:
    case 7200:
    case 7300:
    case 7301:
    case 7302:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7311:
    case 7312:
    case 7315:
    case 7316:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7329:
    case 7330:
    case 7331:
    case 7337:
    case 7338:
    case 7339:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7359:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7369:
    case 7370:
    case 7371:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7383:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7700:
    case 7701:
    case 7702:
    case 7703:
    case 7704:
    case 7705:
    case 7706:
    case 7707:
    case 7708:
    case 7711:
    case 7712:
    case 7713:
    case 7714:
    case 7800:
    case 7801:
    case 7803:
    case 7804:
    case 7805:
    case 7806:
    case 7807:
    case 7808:
    case 7900:
    case 7901:
    case 7902:
    case 8000:
    case 8100:
    case 8101:
    case 8102:
    case 8103:
    case 8104:
    case 8105:
    case 8106:
    case 8107:
    case 8108:
    case 8200:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8400:
    case 8401:
    case 8402:
    case 8500:
    case 8503:
    case 8504:
    case 8507:
    case 8508:
    case 8509:
    case 8510:
    case 8600:
    case 8601:
    case 8700:
    case 8701:
    case 8800:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 9000:
    case 9001:
    case 9002:
    case 9100:
    case 9101:
    case 9102:
    case 9103:
    case 9104:
    case 9105:
    case 9106:
    case 9107:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9114:
    case 9115:
    case 9116:
    case 9117:
    case 9118:
    case 9119:
    case 9120:
    case 9121:
    case 9122:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9300:
    case 9330:
    case 9331:
    case 9400:
    case 9401:
    case 9402:
    case 9405:
    case 9406:
    case 9407:
    case 9408:
    case 9500:
    case 9501:
    case 9502:
    case 9503:
    case 9504:
    case 9505:
    case 9506:
    case 9507:
    case 9508:
    case 9509:
    case 9510:
    case 9511:
    case 9512:
    case 9513:
    case 9514:
    case 9515:
    case 9516:
    case 9600:
    case 9601:
    case 9700:
    case 9701:
    case 9702:
    case 9703:
    case 9704:
    case 9800:
    case 9801:
    case 9802:
    case 9803:
    case 9804:
    case 9805:
    case 9900:
    case 9901:
    case 9999:
    case 10000:
    case 10100:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 12000:
    case 12001:
    case 12100:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EClientPersonaStateFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[1];
}
bool EClientPersonaStateFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgClanAccountFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[2];
}
bool EMsgClanAccountFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESteamReviewScore_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[3];
}
bool ESteamReviewScore_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
