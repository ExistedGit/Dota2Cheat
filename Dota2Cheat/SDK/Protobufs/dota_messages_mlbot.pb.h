// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_messages_mlbot.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fmessages_5fmlbot_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fmessages_5fmlbot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dota_gcmessages_common_bot_script.pb.h"
#include "dota_commonmessages.pb.h"
#include "dota_shared_enums.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fmessages_5fmlbot_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fmessages_5fmlbot_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fmessages_5fmlbot_2eproto;
class CMsgMLBotMatchMetadata;
struct CMsgMLBotMatchMetadataDefaultTypeInternal;
extern CMsgMLBotMatchMetadataDefaultTypeInternal _CMsgMLBotMatchMetadata_default_instance_;
class CMsgMLBotMatchMetadata_Player;
struct CMsgMLBotMatchMetadata_PlayerDefaultTypeInternal;
extern CMsgMLBotMatchMetadata_PlayerDefaultTypeInternal _CMsgMLBotMatchMetadata_Player_default_instance_;
class CMsgMLBotTickBoundary;
struct CMsgMLBotTickBoundaryDefaultTypeInternal;
extern CMsgMLBotTickBoundaryDefaultTypeInternal _CMsgMLBotTickBoundary_default_instance_;
class CMsgMLBot_PlayerOrder;
struct CMsgMLBot_PlayerOrderDefaultTypeInternal;
extern CMsgMLBot_PlayerOrderDefaultTypeInternal _CMsgMLBot_PlayerOrder_default_instance_;
class CMsgMLBot_TeamInference;
struct CMsgMLBot_TeamInferenceDefaultTypeInternal;
extern CMsgMLBot_TeamInferenceDefaultTypeInternal _CMsgMLBot_TeamInference_default_instance_;
class CMsgMLBot_TeamInferenceList;
struct CMsgMLBot_TeamInferenceListDefaultTypeInternal;
extern CMsgMLBot_TeamInferenceListDefaultTypeInternal _CMsgMLBot_TeamInferenceList_default_instance_;
class CMsgMLBot_TeamInferenceResponse;
struct CMsgMLBot_TeamInferenceResponseDefaultTypeInternal;
extern CMsgMLBot_TeamInferenceResponseDefaultTypeInternal _CMsgMLBot_TeamInferenceResponse_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgMLBotMatchMetadata* Arena::CreateMaybeMessage<::CMsgMLBotMatchMetadata>(Arena*);
template<> ::CMsgMLBotMatchMetadata_Player* Arena::CreateMaybeMessage<::CMsgMLBotMatchMetadata_Player>(Arena*);
template<> ::CMsgMLBotTickBoundary* Arena::CreateMaybeMessage<::CMsgMLBotTickBoundary>(Arena*);
template<> ::CMsgMLBot_PlayerOrder* Arena::CreateMaybeMessage<::CMsgMLBot_PlayerOrder>(Arena*);
template<> ::CMsgMLBot_TeamInference* Arena::CreateMaybeMessage<::CMsgMLBot_TeamInference>(Arena*);
template<> ::CMsgMLBot_TeamInferenceList* Arena::CreateMaybeMessage<::CMsgMLBot_TeamInferenceList>(Arena*);
template<> ::CMsgMLBot_TeamInferenceResponse* Arena::CreateMaybeMessage<::CMsgMLBot_TeamInferenceResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum MLBot_MessageId : int {
  mlbot_MatchMetadata = 1,
  mlbot_TickBoundary = 2,
  mlbot_TeamState_Radiant = 3,
  mlbot_TeamState_Radiant_Delta = 4,
  mlbot_TeamState_Dire = 5,
  mlbot_TeamState_Dire_Delta = 6,
  mlbot_PlayerCommand = 7,
  mlbot_PlayerOrder = 8
};
bool MLBot_MessageId_IsValid(int value);
constexpr MLBot_MessageId MLBot_MessageId_MIN = mlbot_MatchMetadata;
constexpr MLBot_MessageId MLBot_MessageId_MAX = mlbot_PlayerOrder;
constexpr int MLBot_MessageId_ARRAYSIZE = MLBot_MessageId_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MLBot_MessageId_descriptor();
template<typename T>
inline const std::string& MLBot_MessageId_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MLBot_MessageId>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MLBot_MessageId_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MLBot_MessageId_descriptor(), enum_t_value);
}
inline bool MLBot_MessageId_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MLBot_MessageId* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MLBot_MessageId>(
    MLBot_MessageId_descriptor(), name, value);
}
// ===================================================================

class CMsgMLBotMatchMetadata_Player final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBotMatchMetadata.Player) */ {
 public:
  inline CMsgMLBotMatchMetadata_Player() : CMsgMLBotMatchMetadata_Player(nullptr) {}
  ~CMsgMLBotMatchMetadata_Player() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBotMatchMetadata_Player(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBotMatchMetadata_Player(const CMsgMLBotMatchMetadata_Player& from);
  CMsgMLBotMatchMetadata_Player(CMsgMLBotMatchMetadata_Player&& from) noexcept
    : CMsgMLBotMatchMetadata_Player() {
    *this = ::std::move(from);
  }

  inline CMsgMLBotMatchMetadata_Player& operator=(const CMsgMLBotMatchMetadata_Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBotMatchMetadata_Player& operator=(CMsgMLBotMatchMetadata_Player&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBotMatchMetadata_Player& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBotMatchMetadata_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBotMatchMetadata_Player*>(
               &_CMsgMLBotMatchMetadata_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgMLBotMatchMetadata_Player& a, CMsgMLBotMatchMetadata_Player& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBotMatchMetadata_Player* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBotMatchMetadata_Player* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBotMatchMetadata_Player* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBotMatchMetadata_Player>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBotMatchMetadata_Player& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBotMatchMetadata_Player& from) {
    CMsgMLBotMatchMetadata_Player::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBotMatchMetadata_Player* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBotMatchMetadata.Player";
  }
  protected:
  explicit CMsgMLBotMatchMetadata_Player(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 2,
    kHeroIdFieldNumber = 3,
    kRankFieldNumber = 4,
    kPlayerIdFieldNumber = 1,
  };
  // optional int32 team_id = 2;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  int32_t team_id() const;
  void set_team_id(int32_t value);
  private:
  int32_t _internal_team_id() const;
  void _internal_set_team_id(int32_t value);
  public:

  // optional int32 hero_id = 3;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  int32_t hero_id() const;
  void set_hero_id(int32_t value);
  private:
  int32_t _internal_hero_id() const;
  void _internal_set_hero_id(int32_t value);
  public:

  // optional int32 rank = 4;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // optional int32 player_id = 1 [default = -1];
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMLBotMatchMetadata.Player)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t team_id_;
    int32_t hero_id_;
    int32_t rank_;
    int32_t player_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// -------------------------------------------------------------------

class CMsgMLBotMatchMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBotMatchMetadata) */ {
 public:
  inline CMsgMLBotMatchMetadata() : CMsgMLBotMatchMetadata(nullptr) {}
  ~CMsgMLBotMatchMetadata() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBotMatchMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBotMatchMetadata(const CMsgMLBotMatchMetadata& from);
  CMsgMLBotMatchMetadata(CMsgMLBotMatchMetadata&& from) noexcept
    : CMsgMLBotMatchMetadata() {
    *this = ::std::move(from);
  }

  inline CMsgMLBotMatchMetadata& operator=(const CMsgMLBotMatchMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBotMatchMetadata& operator=(CMsgMLBotMatchMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBotMatchMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBotMatchMetadata* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBotMatchMetadata*>(
               &_CMsgMLBotMatchMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgMLBotMatchMetadata& a, CMsgMLBotMatchMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBotMatchMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBotMatchMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBotMatchMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBotMatchMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBotMatchMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBotMatchMetadata& from) {
    CMsgMLBotMatchMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBotMatchMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBotMatchMetadata";
  }
  protected:
  explicit CMsgMLBotMatchMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgMLBotMatchMetadata_Player Player;

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 5,
    kMatchIdFieldNumber = 1,
    kLobbyIdFieldNumber = 2,
    kGameModeFieldNumber = 4,
    kLobbyTypeFieldNumber = 3,
  };
  // repeated .CMsgMLBotMatchMetadata.Player players = 5;
  int players_size() const;
  private:
  int _internal_players_size() const;
  public:
  void clear_players();
  ::CMsgMLBotMatchMetadata_Player* mutable_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBotMatchMetadata_Player >*
      mutable_players();
  private:
  const ::CMsgMLBotMatchMetadata_Player& _internal_players(int index) const;
  ::CMsgMLBotMatchMetadata_Player* _internal_add_players();
  public:
  const ::CMsgMLBotMatchMetadata_Player& players(int index) const;
  ::CMsgMLBotMatchMetadata_Player* add_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBotMatchMetadata_Player >&
      players() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint64 lobby_id = 2;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // optional uint32 game_mode = 4;
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  uint32_t game_mode() const;
  void set_game_mode(uint32_t value);
  private:
  uint32_t _internal_game_mode() const;
  void _internal_set_game_mode(uint32_t value);
  public:

  // optional int32 lobby_type = 3 [default = -1];
  bool has_lobby_type() const;
  private:
  bool _internal_has_lobby_type() const;
  public:
  void clear_lobby_type();
  int32_t lobby_type() const;
  void set_lobby_type(int32_t value);
  private:
  int32_t _internal_lobby_type() const;
  void _internal_set_lobby_type(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMLBotMatchMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBotMatchMetadata_Player > players_;
    uint64_t match_id_;
    uint64_t lobby_id_;
    uint32_t game_mode_;
    int32_t lobby_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// -------------------------------------------------------------------

class CMsgMLBotTickBoundary final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBotTickBoundary) */ {
 public:
  inline CMsgMLBotTickBoundary() : CMsgMLBotTickBoundary(nullptr) {}
  ~CMsgMLBotTickBoundary() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBotTickBoundary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBotTickBoundary(const CMsgMLBotTickBoundary& from);
  CMsgMLBotTickBoundary(CMsgMLBotTickBoundary&& from) noexcept
    : CMsgMLBotTickBoundary() {
    *this = ::std::move(from);
  }

  inline CMsgMLBotTickBoundary& operator=(const CMsgMLBotTickBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBotTickBoundary& operator=(CMsgMLBotTickBoundary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBotTickBoundary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBotTickBoundary* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBotTickBoundary*>(
               &_CMsgMLBotTickBoundary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgMLBotTickBoundary& a, CMsgMLBotTickBoundary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBotTickBoundary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBotTickBoundary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBotTickBoundary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBotTickBoundary>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBotTickBoundary& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBotTickBoundary& from) {
    CMsgMLBotTickBoundary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBotTickBoundary* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBotTickBoundary";
  }
  protected:
  explicit CMsgMLBotTickBoundary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTickNumberFieldNumber = 1,
  };
  // optional uint32 tick_number = 1;
  bool has_tick_number() const;
  private:
  bool _internal_has_tick_number() const;
  public:
  void clear_tick_number();
  uint32_t tick_number() const;
  void set_tick_number(uint32_t value);
  private:
  uint32_t _internal_tick_number() const;
  void _internal_set_tick_number(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMLBotTickBoundary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t tick_number_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// -------------------------------------------------------------------

class CMsgMLBot_PlayerOrder final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBot_PlayerOrder) */ {
 public:
  inline CMsgMLBot_PlayerOrder() : CMsgMLBot_PlayerOrder(nullptr) {}
  ~CMsgMLBot_PlayerOrder() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBot_PlayerOrder(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBot_PlayerOrder(const CMsgMLBot_PlayerOrder& from);
  CMsgMLBot_PlayerOrder(CMsgMLBot_PlayerOrder&& from) noexcept
    : CMsgMLBot_PlayerOrder() {
    *this = ::std::move(from);
  }

  inline CMsgMLBot_PlayerOrder& operator=(const CMsgMLBot_PlayerOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBot_PlayerOrder& operator=(CMsgMLBot_PlayerOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBot_PlayerOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBot_PlayerOrder* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBot_PlayerOrder*>(
               &_CMsgMLBot_PlayerOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgMLBot_PlayerOrder& a, CMsgMLBot_PlayerOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBot_PlayerOrder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBot_PlayerOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBot_PlayerOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBot_PlayerOrder>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBot_PlayerOrder& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBot_PlayerOrder& from) {
    CMsgMLBot_PlayerOrder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBot_PlayerOrder* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBot_PlayerOrder";
  }
  protected:
  explicit CMsgMLBot_PlayerOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelectedUnitHandlesFieldNumber = 4,
    kTeamIdFieldNumber = 2,
    kOrderTypeFieldNumber = 3,
    kPosXFieldNumber = 9,
    kPosYFieldNumber = 10,
    kPosZFieldNumber = 11,
    kQueueFieldNumber = 12,
    kAbilityHandleFieldNumber = 8,
    kPlayerIdFieldNumber = 1,
    kTargetIndexFieldNumber = 5,
    kTargetHandleFieldNumber = 6,
    kAbilityIndexFieldNumber = 7,
  };
  // repeated uint32 selected_unit_handles = 4;
  int selected_unit_handles_size() const;
  private:
  int _internal_selected_unit_handles_size() const;
  public:
  void clear_selected_unit_handles();
  private:
  uint32_t _internal_selected_unit_handles(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_selected_unit_handles() const;
  void _internal_add_selected_unit_handles(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_selected_unit_handles();
  public:
  uint32_t selected_unit_handles(int index) const;
  void set_selected_unit_handles(int index, uint32_t value);
  void add_selected_unit_handles(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      selected_unit_handles() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_selected_unit_handles();

  // optional int32 team_id = 2;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  int32_t team_id() const;
  void set_team_id(int32_t value);
  private:
  int32_t _internal_team_id() const;
  void _internal_set_team_id(int32_t value);
  public:

  // optional int32 order_type = 3;
  bool has_order_type() const;
  private:
  bool _internal_has_order_type() const;
  public:
  void clear_order_type();
  int32_t order_type() const;
  void set_order_type(int32_t value);
  private:
  int32_t _internal_order_type() const;
  void _internal_set_order_type(int32_t value);
  public:

  // optional float pos_x = 9;
  bool has_pos_x() const;
  private:
  bool _internal_has_pos_x() const;
  public:
  void clear_pos_x();
  float pos_x() const;
  void set_pos_x(float value);
  private:
  float _internal_pos_x() const;
  void _internal_set_pos_x(float value);
  public:

  // optional float pos_y = 10;
  bool has_pos_y() const;
  private:
  bool _internal_has_pos_y() const;
  public:
  void clear_pos_y();
  float pos_y() const;
  void set_pos_y(float value);
  private:
  float _internal_pos_y() const;
  void _internal_set_pos_y(float value);
  public:

  // optional float pos_z = 11;
  bool has_pos_z() const;
  private:
  bool _internal_has_pos_z() const;
  public:
  void clear_pos_z();
  float pos_z() const;
  void set_pos_z(float value);
  private:
  float _internal_pos_z() const;
  void _internal_set_pos_z(float value);
  public:

  // optional bool queue = 12;
  bool has_queue() const;
  private:
  bool _internal_has_queue() const;
  public:
  void clear_queue();
  bool queue() const;
  void set_queue(bool value);
  private:
  bool _internal_queue() const;
  void _internal_set_queue(bool value);
  public:

  // optional uint32 ability_handle = 8 [default = 4294967295];
  bool has_ability_handle() const;
  private:
  bool _internal_has_ability_handle() const;
  public:
  void clear_ability_handle();
  uint32_t ability_handle() const;
  void set_ability_handle(uint32_t value);
  private:
  uint32_t _internal_ability_handle() const;
  void _internal_set_ability_handle(uint32_t value);
  public:

  // optional int32 player_id = 1 [default = -1];
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // optional int32 target_index = 5 [default = -1];
  bool has_target_index() const;
  private:
  bool _internal_has_target_index() const;
  public:
  void clear_target_index();
  int32_t target_index() const;
  void set_target_index(int32_t value);
  private:
  int32_t _internal_target_index() const;
  void _internal_set_target_index(int32_t value);
  public:

  // optional uint32 target_handle = 6 [default = 4294967295];
  bool has_target_handle() const;
  private:
  bool _internal_has_target_handle() const;
  public:
  void clear_target_handle();
  uint32_t target_handle() const;
  void set_target_handle(uint32_t value);
  private:
  uint32_t _internal_target_handle() const;
  void _internal_set_target_handle(uint32_t value);
  public:

  // optional int32 ability_index = 7 [default = -1];
  bool has_ability_index() const;
  private:
  bool _internal_has_ability_index() const;
  public:
  void clear_ability_index();
  int32_t ability_index() const;
  void set_ability_index(int32_t value);
  private:
  int32_t _internal_ability_index() const;
  void _internal_set_ability_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMLBot_PlayerOrder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > selected_unit_handles_;
    int32_t team_id_;
    int32_t order_type_;
    float pos_x_;
    float pos_y_;
    float pos_z_;
    bool queue_;
    uint32_t ability_handle_;
    int32_t player_id_;
    int32_t target_index_;
    uint32_t target_handle_;
    int32_t ability_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// -------------------------------------------------------------------

class CMsgMLBot_TeamInference final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBot_TeamInference) */ {
 public:
  inline CMsgMLBot_TeamInference() : CMsgMLBot_TeamInference(nullptr) {}
  ~CMsgMLBot_TeamInference() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBot_TeamInference(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBot_TeamInference(const CMsgMLBot_TeamInference& from);
  CMsgMLBot_TeamInference(CMsgMLBot_TeamInference&& from) noexcept
    : CMsgMLBot_TeamInference() {
    *this = ::std::move(from);
  }

  inline CMsgMLBot_TeamInference& operator=(const CMsgMLBot_TeamInference& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBot_TeamInference& operator=(CMsgMLBot_TeamInference&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBot_TeamInference& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBot_TeamInference* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBot_TeamInference*>(
               &_CMsgMLBot_TeamInference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgMLBot_TeamInference& a, CMsgMLBot_TeamInference& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBot_TeamInference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBot_TeamInference* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBot_TeamInference* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBot_TeamInference>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBot_TeamInference& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBot_TeamInference& from) {
    CMsgMLBot_TeamInference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBot_TeamInference* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBot_TeamInference";
  }
  protected:
  explicit CMsgMLBot_TeamInference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBotPlayerIdsFieldNumber = 2,
    kWorldStateFieldNumber = 3,
    kTeamIdFieldNumber = 1,
  };
  // repeated int32 bot_player_ids = 2;
  int bot_player_ids_size() const;
  private:
  int _internal_bot_player_ids_size() const;
  public:
  void clear_bot_player_ids();
  private:
  int32_t _internal_bot_player_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_bot_player_ids() const;
  void _internal_add_bot_player_ids(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_bot_player_ids();
  public:
  int32_t bot_player_ids(int index) const;
  void set_bot_player_ids(int index, int32_t value);
  void add_bot_player_ids(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      bot_player_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_bot_player_ids();

  // optional .CMsgBotWorldState world_state = 3;
  bool has_world_state() const;
  private:
  bool _internal_has_world_state() const;
  public:
  void clear_world_state();
  const ::CMsgBotWorldState& world_state() const;
  PROTOBUF_NODISCARD ::CMsgBotWorldState* release_world_state();
  ::CMsgBotWorldState* mutable_world_state();
  void set_allocated_world_state(::CMsgBotWorldState* world_state);
  private:
  const ::CMsgBotWorldState& _internal_world_state() const;
  ::CMsgBotWorldState* _internal_mutable_world_state();
  public:
  void unsafe_arena_set_allocated_world_state(
      ::CMsgBotWorldState* world_state);
  ::CMsgBotWorldState* unsafe_arena_release_world_state();

  // optional int32 team_id = 1;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  int32_t team_id() const;
  void set_team_id(int32_t value);
  private:
  int32_t _internal_team_id() const;
  void _internal_set_team_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMLBot_TeamInference)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > bot_player_ids_;
    ::CMsgBotWorldState* world_state_;
    int32_t team_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// -------------------------------------------------------------------

class CMsgMLBot_TeamInferenceResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBot_TeamInferenceResponse) */ {
 public:
  inline CMsgMLBot_TeamInferenceResponse() : CMsgMLBot_TeamInferenceResponse(nullptr) {}
  ~CMsgMLBot_TeamInferenceResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBot_TeamInferenceResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBot_TeamInferenceResponse(const CMsgMLBot_TeamInferenceResponse& from);
  CMsgMLBot_TeamInferenceResponse(CMsgMLBot_TeamInferenceResponse&& from) noexcept
    : CMsgMLBot_TeamInferenceResponse() {
    *this = ::std::move(from);
  }

  inline CMsgMLBot_TeamInferenceResponse& operator=(const CMsgMLBot_TeamInferenceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBot_TeamInferenceResponse& operator=(CMsgMLBot_TeamInferenceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBot_TeamInferenceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBot_TeamInferenceResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBot_TeamInferenceResponse*>(
               &_CMsgMLBot_TeamInferenceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgMLBot_TeamInferenceResponse& a, CMsgMLBot_TeamInferenceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBot_TeamInferenceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBot_TeamInferenceResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBot_TeamInferenceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBot_TeamInferenceResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBot_TeamInferenceResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBot_TeamInferenceResponse& from) {
    CMsgMLBot_TeamInferenceResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBot_TeamInferenceResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBot_TeamInferenceResponse";
  }
  protected:
  explicit CMsgMLBot_TeamInferenceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrdersFieldNumber = 1,
  };
  // repeated .CMsgMLBot_PlayerOrder orders = 1;
  int orders_size() const;
  private:
  int _internal_orders_size() const;
  public:
  void clear_orders();
  ::CMsgMLBot_PlayerOrder* mutable_orders(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_PlayerOrder >*
      mutable_orders();
  private:
  const ::CMsgMLBot_PlayerOrder& _internal_orders(int index) const;
  ::CMsgMLBot_PlayerOrder* _internal_add_orders();
  public:
  const ::CMsgMLBot_PlayerOrder& orders(int index) const;
  ::CMsgMLBot_PlayerOrder* add_orders();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_PlayerOrder >&
      orders() const;

  // @@protoc_insertion_point(class_scope:CMsgMLBot_TeamInferenceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_PlayerOrder > orders_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// -------------------------------------------------------------------

class CMsgMLBot_TeamInferenceList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMLBot_TeamInferenceList) */ {
 public:
  inline CMsgMLBot_TeamInferenceList() : CMsgMLBot_TeamInferenceList(nullptr) {}
  ~CMsgMLBot_TeamInferenceList() override;
  explicit PROTOBUF_CONSTEXPR CMsgMLBot_TeamInferenceList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMLBot_TeamInferenceList(const CMsgMLBot_TeamInferenceList& from);
  CMsgMLBot_TeamInferenceList(CMsgMLBot_TeamInferenceList&& from) noexcept
    : CMsgMLBot_TeamInferenceList() {
    *this = ::std::move(from);
  }

  inline CMsgMLBot_TeamInferenceList& operator=(const CMsgMLBot_TeamInferenceList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMLBot_TeamInferenceList& operator=(CMsgMLBot_TeamInferenceList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMLBot_TeamInferenceList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMLBot_TeamInferenceList* internal_default_instance() {
    return reinterpret_cast<const CMsgMLBot_TeamInferenceList*>(
               &_CMsgMLBot_TeamInferenceList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgMLBot_TeamInferenceList& a, CMsgMLBot_TeamInferenceList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMLBot_TeamInferenceList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMLBot_TeamInferenceList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMLBot_TeamInferenceList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgMLBot_TeamInferenceList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMLBot_TeamInferenceList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMLBot_TeamInferenceList& from) {
    CMsgMLBot_TeamInferenceList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMLBot_TeamInferenceList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMLBot_TeamInferenceList";
  }
  protected:
  explicit CMsgMLBot_TeamInferenceList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .CMsgMLBot_TeamInference messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::CMsgMLBot_TeamInference* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_TeamInference >*
      mutable_messages();
  private:
  const ::CMsgMLBot_TeamInference& _internal_messages(int index) const;
  ::CMsgMLBot_TeamInference* _internal_add_messages();
  public:
  const ::CMsgMLBot_TeamInference& messages(int index) const;
  ::CMsgMLBot_TeamInference* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_TeamInference >&
      messages() const;

  // @@protoc_insertion_point(class_scope:CMsgMLBot_TeamInferenceList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_TeamInference > messages_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fmessages_5fmlbot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgMLBotMatchMetadata_Player

// optional int32 player_id = 1 [default = -1];
inline bool CMsgMLBotMatchMetadata_Player::_internal_has_player_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata_Player::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgMLBotMatchMetadata_Player::clear_player_id() {
  _impl_.player_id_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgMLBotMatchMetadata_Player::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t CMsgMLBotMatchMetadata_Player::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.Player.player_id)
  return _internal_player_id();
}
inline void CMsgMLBotMatchMetadata_Player::_internal_set_player_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.player_id_ = value;
}
inline void CMsgMLBotMatchMetadata_Player::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.Player.player_id)
}

// optional int32 team_id = 2;
inline bool CMsgMLBotMatchMetadata_Player::_internal_has_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata_Player::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgMLBotMatchMetadata_Player::clear_team_id() {
  _impl_.team_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CMsgMLBotMatchMetadata_Player::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int32_t CMsgMLBotMatchMetadata_Player::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.Player.team_id)
  return _internal_team_id();
}
inline void CMsgMLBotMatchMetadata_Player::_internal_set_team_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.team_id_ = value;
}
inline void CMsgMLBotMatchMetadata_Player::set_team_id(int32_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.Player.team_id)
}

// optional int32 hero_id = 3;
inline bool CMsgMLBotMatchMetadata_Player::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata_Player::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgMLBotMatchMetadata_Player::clear_hero_id() {
  _impl_.hero_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgMLBotMatchMetadata_Player::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline int32_t CMsgMLBotMatchMetadata_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.Player.hero_id)
  return _internal_hero_id();
}
inline void CMsgMLBotMatchMetadata_Player::_internal_set_hero_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_id_ = value;
}
inline void CMsgMLBotMatchMetadata_Player::set_hero_id(int32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.Player.hero_id)
}

// optional int32 rank = 4;
inline bool CMsgMLBotMatchMetadata_Player::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata_Player::has_rank() const {
  return _internal_has_rank();
}
inline void CMsgMLBotMatchMetadata_Player::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CMsgMLBotMatchMetadata_Player::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t CMsgMLBotMatchMetadata_Player::rank() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.Player.rank)
  return _internal_rank();
}
inline void CMsgMLBotMatchMetadata_Player::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.rank_ = value;
}
inline void CMsgMLBotMatchMetadata_Player::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.Player.rank)
}

// -------------------------------------------------------------------

// CMsgMLBotMatchMetadata

// optional uint64 match_id = 1;
inline bool CMsgMLBotMatchMetadata::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgMLBotMatchMetadata::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgMLBotMatchMetadata::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgMLBotMatchMetadata::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.match_id)
  return _internal_match_id();
}
inline void CMsgMLBotMatchMetadata::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgMLBotMatchMetadata::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.match_id)
}

// optional uint64 lobby_id = 2;
inline bool CMsgMLBotMatchMetadata::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgMLBotMatchMetadata::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgMLBotMatchMetadata::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgMLBotMatchMetadata::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgMLBotMatchMetadata::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.lobby_id_ = value;
}
inline void CMsgMLBotMatchMetadata::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.lobby_id)
}

// optional int32 lobby_type = 3 [default = -1];
inline bool CMsgMLBotMatchMetadata::_internal_has_lobby_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata::has_lobby_type() const {
  return _internal_has_lobby_type();
}
inline void CMsgMLBotMatchMetadata::clear_lobby_type() {
  _impl_.lobby_type_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgMLBotMatchMetadata::_internal_lobby_type() const {
  return _impl_.lobby_type_;
}
inline int32_t CMsgMLBotMatchMetadata::lobby_type() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.lobby_type)
  return _internal_lobby_type();
}
inline void CMsgMLBotMatchMetadata::_internal_set_lobby_type(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.lobby_type_ = value;
}
inline void CMsgMLBotMatchMetadata::set_lobby_type(int32_t value) {
  _internal_set_lobby_type(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.lobby_type)
}

// optional uint32 game_mode = 4;
inline bool CMsgMLBotMatchMetadata::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMLBotMatchMetadata::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgMLBotMatchMetadata::clear_game_mode() {
  _impl_.game_mode_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMLBotMatchMetadata::_internal_game_mode() const {
  return _impl_.game_mode_;
}
inline uint32_t CMsgMLBotMatchMetadata::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.game_mode)
  return _internal_game_mode();
}
inline void CMsgMLBotMatchMetadata::_internal_set_game_mode(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.game_mode_ = value;
}
inline void CMsgMLBotMatchMetadata::set_game_mode(uint32_t value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotMatchMetadata.game_mode)
}

// repeated .CMsgMLBotMatchMetadata.Player players = 5;
inline int CMsgMLBotMatchMetadata::_internal_players_size() const {
  return _impl_.players_.size();
}
inline int CMsgMLBotMatchMetadata::players_size() const {
  return _internal_players_size();
}
inline void CMsgMLBotMatchMetadata::clear_players() {
  _impl_.players_.Clear();
}
inline ::CMsgMLBotMatchMetadata_Player* CMsgMLBotMatchMetadata::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMLBotMatchMetadata.players)
  return _impl_.players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBotMatchMetadata_Player >*
CMsgMLBotMatchMetadata::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMLBotMatchMetadata.players)
  return &_impl_.players_;
}
inline const ::CMsgMLBotMatchMetadata_Player& CMsgMLBotMatchMetadata::_internal_players(int index) const {
  return _impl_.players_.Get(index);
}
inline const ::CMsgMLBotMatchMetadata_Player& CMsgMLBotMatchMetadata::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMLBotMatchMetadata.players)
  return _internal_players(index);
}
inline ::CMsgMLBotMatchMetadata_Player* CMsgMLBotMatchMetadata::_internal_add_players() {
  return _impl_.players_.Add();
}
inline ::CMsgMLBotMatchMetadata_Player* CMsgMLBotMatchMetadata::add_players() {
  ::CMsgMLBotMatchMetadata_Player* _add = _internal_add_players();
  // @@protoc_insertion_point(field_add:CMsgMLBotMatchMetadata.players)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBotMatchMetadata_Player >&
CMsgMLBotMatchMetadata::players() const {
  // @@protoc_insertion_point(field_list:CMsgMLBotMatchMetadata.players)
  return _impl_.players_;
}

// -------------------------------------------------------------------

// CMsgMLBotTickBoundary

// optional uint32 tick_number = 1;
inline bool CMsgMLBotTickBoundary::_internal_has_tick_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMLBotTickBoundary::has_tick_number() const {
  return _internal_has_tick_number();
}
inline void CMsgMLBotTickBoundary::clear_tick_number() {
  _impl_.tick_number_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMLBotTickBoundary::_internal_tick_number() const {
  return _impl_.tick_number_;
}
inline uint32_t CMsgMLBotTickBoundary::tick_number() const {
  // @@protoc_insertion_point(field_get:CMsgMLBotTickBoundary.tick_number)
  return _internal_tick_number();
}
inline void CMsgMLBotTickBoundary::_internal_set_tick_number(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tick_number_ = value;
}
inline void CMsgMLBotTickBoundary::set_tick_number(uint32_t value) {
  _internal_set_tick_number(value);
  // @@protoc_insertion_point(field_set:CMsgMLBotTickBoundary.tick_number)
}

// -------------------------------------------------------------------

// CMsgMLBot_PlayerOrder

// optional int32 player_id = 1 [default = -1];
inline bool CMsgMLBot_PlayerOrder::_internal_has_player_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgMLBot_PlayerOrder::clear_player_id() {
  _impl_.player_id_ = -1;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline int32_t CMsgMLBot_PlayerOrder::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t CMsgMLBot_PlayerOrder::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.player_id)
  return _internal_player_id();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_player_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.player_id_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.player_id)
}

// optional int32 team_id = 2;
inline bool CMsgMLBot_PlayerOrder::_internal_has_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgMLBot_PlayerOrder::clear_team_id() {
  _impl_.team_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CMsgMLBot_PlayerOrder::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int32_t CMsgMLBot_PlayerOrder::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.team_id)
  return _internal_team_id();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_team_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.team_id_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_team_id(int32_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.team_id)
}

// optional int32 order_type = 3;
inline bool CMsgMLBot_PlayerOrder::_internal_has_order_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_order_type() const {
  return _internal_has_order_type();
}
inline void CMsgMLBot_PlayerOrder::clear_order_type() {
  _impl_.order_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgMLBot_PlayerOrder::_internal_order_type() const {
  return _impl_.order_type_;
}
inline int32_t CMsgMLBot_PlayerOrder::order_type() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.order_type)
  return _internal_order_type();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_order_type(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.order_type_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_order_type(int32_t value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.order_type)
}

// repeated uint32 selected_unit_handles = 4;
inline int CMsgMLBot_PlayerOrder::_internal_selected_unit_handles_size() const {
  return _impl_.selected_unit_handles_.size();
}
inline int CMsgMLBot_PlayerOrder::selected_unit_handles_size() const {
  return _internal_selected_unit_handles_size();
}
inline void CMsgMLBot_PlayerOrder::clear_selected_unit_handles() {
  _impl_.selected_unit_handles_.Clear();
}
inline uint32_t CMsgMLBot_PlayerOrder::_internal_selected_unit_handles(int index) const {
  return _impl_.selected_unit_handles_.Get(index);
}
inline uint32_t CMsgMLBot_PlayerOrder::selected_unit_handles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.selected_unit_handles)
  return _internal_selected_unit_handles(index);
}
inline void CMsgMLBot_PlayerOrder::set_selected_unit_handles(int index, uint32_t value) {
  _impl_.selected_unit_handles_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.selected_unit_handles)
}
inline void CMsgMLBot_PlayerOrder::_internal_add_selected_unit_handles(uint32_t value) {
  _impl_.selected_unit_handles_.Add(value);
}
inline void CMsgMLBot_PlayerOrder::add_selected_unit_handles(uint32_t value) {
  _internal_add_selected_unit_handles(value);
  // @@protoc_insertion_point(field_add:CMsgMLBot_PlayerOrder.selected_unit_handles)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMLBot_PlayerOrder::_internal_selected_unit_handles() const {
  return _impl_.selected_unit_handles_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMLBot_PlayerOrder::selected_unit_handles() const {
  // @@protoc_insertion_point(field_list:CMsgMLBot_PlayerOrder.selected_unit_handles)
  return _internal_selected_unit_handles();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMLBot_PlayerOrder::_internal_mutable_selected_unit_handles() {
  return &_impl_.selected_unit_handles_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMLBot_PlayerOrder::mutable_selected_unit_handles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMLBot_PlayerOrder.selected_unit_handles)
  return _internal_mutable_selected_unit_handles();
}

// optional int32 target_index = 5 [default = -1];
inline bool CMsgMLBot_PlayerOrder::_internal_has_target_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_target_index() const {
  return _internal_has_target_index();
}
inline void CMsgMLBot_PlayerOrder::clear_target_index() {
  _impl_.target_index_ = -1;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline int32_t CMsgMLBot_PlayerOrder::_internal_target_index() const {
  return _impl_.target_index_;
}
inline int32_t CMsgMLBot_PlayerOrder::target_index() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.target_index)
  return _internal_target_index();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_target_index(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.target_index_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_target_index(int32_t value) {
  _internal_set_target_index(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.target_index)
}

// optional uint32 target_handle = 6 [default = 4294967295];
inline bool CMsgMLBot_PlayerOrder::_internal_has_target_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_target_handle() const {
  return _internal_has_target_handle();
}
inline void CMsgMLBot_PlayerOrder::clear_target_handle() {
  _impl_.target_handle_ = 4294967295u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CMsgMLBot_PlayerOrder::_internal_target_handle() const {
  return _impl_.target_handle_;
}
inline uint32_t CMsgMLBot_PlayerOrder::target_handle() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.target_handle)
  return _internal_target_handle();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_target_handle(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.target_handle_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_target_handle(uint32_t value) {
  _internal_set_target_handle(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.target_handle)
}

// optional int32 ability_index = 7 [default = -1];
inline bool CMsgMLBot_PlayerOrder::_internal_has_ability_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_ability_index() const {
  return _internal_has_ability_index();
}
inline void CMsgMLBot_PlayerOrder::clear_ability_index() {
  _impl_.ability_index_ = -1;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline int32_t CMsgMLBot_PlayerOrder::_internal_ability_index() const {
  return _impl_.ability_index_;
}
inline int32_t CMsgMLBot_PlayerOrder::ability_index() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.ability_index)
  return _internal_ability_index();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_ability_index(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.ability_index_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_ability_index(int32_t value) {
  _internal_set_ability_index(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.ability_index)
}

// optional uint32 ability_handle = 8 [default = 4294967295];
inline bool CMsgMLBot_PlayerOrder::_internal_has_ability_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_ability_handle() const {
  return _internal_has_ability_handle();
}
inline void CMsgMLBot_PlayerOrder::clear_ability_handle() {
  _impl_.ability_handle_ = 4294967295u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgMLBot_PlayerOrder::_internal_ability_handle() const {
  return _impl_.ability_handle_;
}
inline uint32_t CMsgMLBot_PlayerOrder::ability_handle() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.ability_handle)
  return _internal_ability_handle();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_ability_handle(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.ability_handle_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_ability_handle(uint32_t value) {
  _internal_set_ability_handle(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.ability_handle)
}

// optional float pos_x = 9;
inline bool CMsgMLBot_PlayerOrder::_internal_has_pos_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_pos_x() const {
  return _internal_has_pos_x();
}
inline void CMsgMLBot_PlayerOrder::clear_pos_x() {
  _impl_.pos_x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgMLBot_PlayerOrder::_internal_pos_x() const {
  return _impl_.pos_x_;
}
inline float CMsgMLBot_PlayerOrder::pos_x() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.pos_x)
  return _internal_pos_x();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_pos_x(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pos_x_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_pos_x(float value) {
  _internal_set_pos_x(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.pos_x)
}

// optional float pos_y = 10;
inline bool CMsgMLBot_PlayerOrder::_internal_has_pos_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_pos_y() const {
  return _internal_has_pos_y();
}
inline void CMsgMLBot_PlayerOrder::clear_pos_y() {
  _impl_.pos_y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgMLBot_PlayerOrder::_internal_pos_y() const {
  return _impl_.pos_y_;
}
inline float CMsgMLBot_PlayerOrder::pos_y() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.pos_y)
  return _internal_pos_y();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_pos_y(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.pos_y_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_pos_y(float value) {
  _internal_set_pos_y(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.pos_y)
}

// optional float pos_z = 11;
inline bool CMsgMLBot_PlayerOrder::_internal_has_pos_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_pos_z() const {
  return _internal_has_pos_z();
}
inline void CMsgMLBot_PlayerOrder::clear_pos_z() {
  _impl_.pos_z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CMsgMLBot_PlayerOrder::_internal_pos_z() const {
  return _impl_.pos_z_;
}
inline float CMsgMLBot_PlayerOrder::pos_z() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.pos_z)
  return _internal_pos_z();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_pos_z(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.pos_z_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_pos_z(float value) {
  _internal_set_pos_z(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.pos_z)
}

// optional bool queue = 12;
inline bool CMsgMLBot_PlayerOrder::_internal_has_queue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMLBot_PlayerOrder::has_queue() const {
  return _internal_has_queue();
}
inline void CMsgMLBot_PlayerOrder::clear_queue() {
  _impl_.queue_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgMLBot_PlayerOrder::_internal_queue() const {
  return _impl_.queue_;
}
inline bool CMsgMLBot_PlayerOrder::queue() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_PlayerOrder.queue)
  return _internal_queue();
}
inline void CMsgMLBot_PlayerOrder::_internal_set_queue(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.queue_ = value;
}
inline void CMsgMLBot_PlayerOrder::set_queue(bool value) {
  _internal_set_queue(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_PlayerOrder.queue)
}

// -------------------------------------------------------------------

// CMsgMLBot_TeamInference

// optional int32 team_id = 1;
inline bool CMsgMLBot_TeamInference::_internal_has_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMLBot_TeamInference::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgMLBot_TeamInference::clear_team_id() {
  _impl_.team_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgMLBot_TeamInference::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int32_t CMsgMLBot_TeamInference::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_TeamInference.team_id)
  return _internal_team_id();
}
inline void CMsgMLBot_TeamInference::_internal_set_team_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.team_id_ = value;
}
inline void CMsgMLBot_TeamInference::set_team_id(int32_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_TeamInference.team_id)
}

// repeated int32 bot_player_ids = 2;
inline int CMsgMLBot_TeamInference::_internal_bot_player_ids_size() const {
  return _impl_.bot_player_ids_.size();
}
inline int CMsgMLBot_TeamInference::bot_player_ids_size() const {
  return _internal_bot_player_ids_size();
}
inline void CMsgMLBot_TeamInference::clear_bot_player_ids() {
  _impl_.bot_player_ids_.Clear();
}
inline int32_t CMsgMLBot_TeamInference::_internal_bot_player_ids(int index) const {
  return _impl_.bot_player_ids_.Get(index);
}
inline int32_t CMsgMLBot_TeamInference::bot_player_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_TeamInference.bot_player_ids)
  return _internal_bot_player_ids(index);
}
inline void CMsgMLBot_TeamInference::set_bot_player_ids(int index, int32_t value) {
  _impl_.bot_player_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMLBot_TeamInference.bot_player_ids)
}
inline void CMsgMLBot_TeamInference::_internal_add_bot_player_ids(int32_t value) {
  _impl_.bot_player_ids_.Add(value);
}
inline void CMsgMLBot_TeamInference::add_bot_player_ids(int32_t value) {
  _internal_add_bot_player_ids(value);
  // @@protoc_insertion_point(field_add:CMsgMLBot_TeamInference.bot_player_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CMsgMLBot_TeamInference::_internal_bot_player_ids() const {
  return _impl_.bot_player_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CMsgMLBot_TeamInference::bot_player_ids() const {
  // @@protoc_insertion_point(field_list:CMsgMLBot_TeamInference.bot_player_ids)
  return _internal_bot_player_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CMsgMLBot_TeamInference::_internal_mutable_bot_player_ids() {
  return &_impl_.bot_player_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CMsgMLBot_TeamInference::mutable_bot_player_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMLBot_TeamInference.bot_player_ids)
  return _internal_mutable_bot_player_ids();
}

// optional .CMsgBotWorldState world_state = 3;
inline bool CMsgMLBot_TeamInference::_internal_has_world_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.world_state_ != nullptr);
  return value;
}
inline bool CMsgMLBot_TeamInference::has_world_state() const {
  return _internal_has_world_state();
}
inline const ::CMsgBotWorldState& CMsgMLBot_TeamInference::_internal_world_state() const {
  const ::CMsgBotWorldState* p = _impl_.world_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState&>(
      ::_CMsgBotWorldState_default_instance_);
}
inline const ::CMsgBotWorldState& CMsgMLBot_TeamInference::world_state() const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_TeamInference.world_state)
  return _internal_world_state();
}
inline void CMsgMLBot_TeamInference::unsafe_arena_set_allocated_world_state(
    ::CMsgBotWorldState* world_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.world_state_);
  }
  _impl_.world_state_ = world_state;
  if (world_state) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMLBot_TeamInference.world_state)
}
inline ::CMsgBotWorldState* CMsgMLBot_TeamInference::release_world_state() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState* temp = _impl_.world_state_;
  _impl_.world_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgBotWorldState* CMsgMLBot_TeamInference::unsafe_arena_release_world_state() {
  // @@protoc_insertion_point(field_release:CMsgMLBot_TeamInference.world_state)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState* temp = _impl_.world_state_;
  _impl_.world_state_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState* CMsgMLBot_TeamInference::_internal_mutable_world_state() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.world_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState>(GetArenaForAllocation());
    _impl_.world_state_ = p;
  }
  return _impl_.world_state_;
}
inline ::CMsgBotWorldState* CMsgMLBot_TeamInference::mutable_world_state() {
  ::CMsgBotWorldState* _msg = _internal_mutable_world_state();
  // @@protoc_insertion_point(field_mutable:CMsgMLBot_TeamInference.world_state)
  return _msg;
}
inline void CMsgMLBot_TeamInference::set_allocated_world_state(::CMsgBotWorldState* world_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.world_state_);
  }
  if (world_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(world_state));
    if (message_arena != submessage_arena) {
      world_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, world_state, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.world_state_ = world_state;
  // @@protoc_insertion_point(field_set_allocated:CMsgMLBot_TeamInference.world_state)
}

// -------------------------------------------------------------------

// CMsgMLBot_TeamInferenceResponse

// repeated .CMsgMLBot_PlayerOrder orders = 1;
inline int CMsgMLBot_TeamInferenceResponse::_internal_orders_size() const {
  return _impl_.orders_.size();
}
inline int CMsgMLBot_TeamInferenceResponse::orders_size() const {
  return _internal_orders_size();
}
inline void CMsgMLBot_TeamInferenceResponse::clear_orders() {
  _impl_.orders_.Clear();
}
inline ::CMsgMLBot_PlayerOrder* CMsgMLBot_TeamInferenceResponse::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMLBot_TeamInferenceResponse.orders)
  return _impl_.orders_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_PlayerOrder >*
CMsgMLBot_TeamInferenceResponse::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMLBot_TeamInferenceResponse.orders)
  return &_impl_.orders_;
}
inline const ::CMsgMLBot_PlayerOrder& CMsgMLBot_TeamInferenceResponse::_internal_orders(int index) const {
  return _impl_.orders_.Get(index);
}
inline const ::CMsgMLBot_PlayerOrder& CMsgMLBot_TeamInferenceResponse::orders(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_TeamInferenceResponse.orders)
  return _internal_orders(index);
}
inline ::CMsgMLBot_PlayerOrder* CMsgMLBot_TeamInferenceResponse::_internal_add_orders() {
  return _impl_.orders_.Add();
}
inline ::CMsgMLBot_PlayerOrder* CMsgMLBot_TeamInferenceResponse::add_orders() {
  ::CMsgMLBot_PlayerOrder* _add = _internal_add_orders();
  // @@protoc_insertion_point(field_add:CMsgMLBot_TeamInferenceResponse.orders)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_PlayerOrder >&
CMsgMLBot_TeamInferenceResponse::orders() const {
  // @@protoc_insertion_point(field_list:CMsgMLBot_TeamInferenceResponse.orders)
  return _impl_.orders_;
}

// -------------------------------------------------------------------

// CMsgMLBot_TeamInferenceList

// repeated .CMsgMLBot_TeamInference messages = 1;
inline int CMsgMLBot_TeamInferenceList::_internal_messages_size() const {
  return _impl_.messages_.size();
}
inline int CMsgMLBot_TeamInferenceList::messages_size() const {
  return _internal_messages_size();
}
inline void CMsgMLBot_TeamInferenceList::clear_messages() {
  _impl_.messages_.Clear();
}
inline ::CMsgMLBot_TeamInference* CMsgMLBot_TeamInferenceList::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMLBot_TeamInferenceList.messages)
  return _impl_.messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_TeamInference >*
CMsgMLBot_TeamInferenceList::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMLBot_TeamInferenceList.messages)
  return &_impl_.messages_;
}
inline const ::CMsgMLBot_TeamInference& CMsgMLBot_TeamInferenceList::_internal_messages(int index) const {
  return _impl_.messages_.Get(index);
}
inline const ::CMsgMLBot_TeamInference& CMsgMLBot_TeamInferenceList::messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMLBot_TeamInferenceList.messages)
  return _internal_messages(index);
}
inline ::CMsgMLBot_TeamInference* CMsgMLBot_TeamInferenceList::_internal_add_messages() {
  return _impl_.messages_.Add();
}
inline ::CMsgMLBot_TeamInference* CMsgMLBot_TeamInferenceList::add_messages() {
  ::CMsgMLBot_TeamInference* _add = _internal_add_messages();
  // @@protoc_insertion_point(field_add:CMsgMLBot_TeamInferenceList.messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMLBot_TeamInference >&
CMsgMLBot_TeamInferenceList::messages() const {
  // @@protoc_insertion_point(field_list:CMsgMLBot_TeamInferenceList.messages)
  return _impl_.messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::MLBot_MessageId> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MLBot_MessageId>() {
  return ::MLBot_MessageId_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fmessages_5fmlbot_2eproto
