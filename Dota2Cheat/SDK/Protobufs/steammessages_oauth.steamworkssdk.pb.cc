// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_oauth.steamworkssdk.proto

#include "steammessages_oauth.steamworkssdk.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.clientid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal() {}
  union {
    COAuthToken_ImplicitGrantNoPrompt_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal _COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_;
PROTOBUF_CONSTEXPR COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.access_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.redirect_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal() {}
  union {
    COAuthToken_ImplicitGrantNoPrompt_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal _COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_;
static ::_pb::Metadata file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto = nullptr;

const uint32_t TableStruct_steammessages_5foauth_2esteamworkssdk_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Request, _impl_.clientid_),
  0,
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, _impl_.access_token_),
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, _impl_.redirect_uri_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::COAuthToken_ImplicitGrantNoPrompt_Request)},
  { 8, 16, -1, sizeof(::COAuthToken_ImplicitGrantNoPrompt_Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_._instance,
  &::_COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_._instance,
};

const char descriptor_table_protodef_steammessages_5foauth_2esteamworkssdk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'steammessages_oauth.steamworkssdk.prot"
  "o\032.steammessages_unified_base.steamworks"
  "sdk.proto\"{\n)COAuthToken_ImplicitGrantNo"
  "Prompt_Request\022N\n\010clientid\030\001 \001(\tB<\202\265\0308Cl"
  "ient ID for which to count the number of"
  " issued tokens\"\267\001\n*COAuthToken_ImplicitG"
  "rantNoPrompt_Response\0229\n\014access_token\030\001 "
  "\001(\tB#\202\265\030\037OAuth Token, granted on success"
  "\022N\n\014redirect_uri\030\002 \001(\tB8\202\265\0304Redirection "
  "URI provided during client registration."
  "2\261\002\n\nOAuthToken\022\353\001\n\025ImplicitGrantNoPromp"
  "t\022*.COAuthToken_ImplicitGrantNoPrompt_Re"
  "quest\032+.COAuthToken_ImplicitGrantNoPromp"
  "t_Response\"y\202\265\030uGrants an implicit OAuth"
  " token (grant type \'token\') for the spec"
  "ified client ID on behalf of a user with"
  "out prompting\0325\202\265\0301Service containing me"
  "thods to manage OAuth tokens"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_deps[1] = {
  &::descriptor_table_steammessages_5funified_5fbase_2esteamworkssdk_2eproto,
};
static ::_pbi::once_flag descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto = {
    false, false, 708, descriptor_table_protodef_steammessages_5foauth_2esteamworkssdk_2eproto,
    "steammessages_oauth.steamworkssdk.proto",
    &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_once, descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_steammessages_5foauth_2esteamworkssdk_2eproto::offsets,
    file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto, file_level_enum_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto,
    file_level_service_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_getter() {
  return &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_steammessages_5foauth_2esteamworkssdk_2eproto(&descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto);

// ===================================================================

class COAuthToken_ImplicitGrantNoPrompt_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<COAuthToken_ImplicitGrantNoPrompt_Request>()._impl_._has_bits_);
  static void set_has_clientid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:COAuthToken_ImplicitGrantNoPrompt_Request)
}
COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(const COAuthToken_ImplicitGrantNoPrompt_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  COAuthToken_ImplicitGrantNoPrompt_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.clientid_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.clientid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.clientid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_clientid()) {
    _this->_impl_.clientid_.Set(from._internal_clientid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:COAuthToken_ImplicitGrantNoPrompt_Request)
}

inline void COAuthToken_ImplicitGrantNoPrompt_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.clientid_){}
  };
  _impl_.clientid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.clientid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

COAuthToken_ImplicitGrantNoPrompt_Request::~COAuthToken_ImplicitGrantNoPrompt_Request() {
  // @@protoc_insertion_point(destructor:COAuthToken_ImplicitGrantNoPrompt_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void COAuthToken_ImplicitGrantNoPrompt_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.clientid_.Destroy();
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void COAuthToken_ImplicitGrantNoPrompt_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.clientid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* COAuthToken_ImplicitGrantNoPrompt_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string clientid = 1 [(.description) = "Client ID for which to count the number of issued tokens"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_clientid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* COAuthToken_ImplicitGrantNoPrompt_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string clientid = 1 [(.description) = "Client ID for which to count the number of issued tokens"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_clientid().data(), static_cast<int>(this->_internal_clientid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_clientid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COAuthToken_ImplicitGrantNoPrompt_Request)
  return target;
}

size_t COAuthToken_ImplicitGrantNoPrompt_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string clientid = 1 [(.description) = "Client ID for which to count the number of issued tokens"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData COAuthToken_ImplicitGrantNoPrompt_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    COAuthToken_ImplicitGrantNoPrompt_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*COAuthToken_ImplicitGrantNoPrompt_Request::GetClassData() const { return &_class_data_; }


void COAuthToken_ImplicitGrantNoPrompt_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<COAuthToken_ImplicitGrantNoPrompt_Request*>(&to_msg);
  auto& from = static_cast<const COAuthToken_ImplicitGrantNoPrompt_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_clientid()) {
    _this->_internal_set_clientid(from._internal_clientid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Request::IsInitialized() const {
  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::InternalSwap(COAuthToken_ImplicitGrantNoPrompt_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.clientid_, lhs_arena,
      &other->_impl_.clientid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata COAuthToken_ImplicitGrantNoPrompt_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_getter, &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_once,
      file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[0]);
}

// ===================================================================

class COAuthToken_ImplicitGrantNoPrompt_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<COAuthToken_ImplicitGrantNoPrompt_Response>()._impl_._has_bits_);
  static void set_has_access_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_redirect_uri(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:COAuthToken_ImplicitGrantNoPrompt_Response)
}
COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(const COAuthToken_ImplicitGrantNoPrompt_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  COAuthToken_ImplicitGrantNoPrompt_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.access_token_){}
    , decltype(_impl_.redirect_uri_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_access_token()) {
    _this->_impl_.access_token_.Set(from._internal_access_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_redirect_uri()) {
    _this->_impl_.redirect_uri_.Set(from._internal_redirect_uri(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:COAuthToken_ImplicitGrantNoPrompt_Response)
}

inline void COAuthToken_ImplicitGrantNoPrompt_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.access_token_){}
    , decltype(_impl_.redirect_uri_){}
  };
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

COAuthToken_ImplicitGrantNoPrompt_Response::~COAuthToken_ImplicitGrantNoPrompt_Response() {
  // @@protoc_insertion_point(destructor:COAuthToken_ImplicitGrantNoPrompt_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void COAuthToken_ImplicitGrantNoPrompt_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.access_token_.Destroy();
  _impl_.redirect_uri_.Destroy();
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void COAuthToken_ImplicitGrantNoPrompt_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.access_token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.redirect_uri_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* COAuthToken_ImplicitGrantNoPrompt_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string access_token = 1 [(.description) = "OAuth Token, granted on success"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_access_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string redirect_uri = 2 [(.description) = "Redirection URI provided during client registration."];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_redirect_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* COAuthToken_ImplicitGrantNoPrompt_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string access_token = 1 [(.description) = "OAuth Token, granted on success"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_access_token().data(), static_cast<int>(this->_internal_access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_access_token(), target);
  }

  // optional string redirect_uri = 2 [(.description) = "Redirection URI provided during client registration."];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_redirect_uri().data(), static_cast<int>(this->_internal_redirect_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_redirect_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COAuthToken_ImplicitGrantNoPrompt_Response)
  return target;
}

size_t COAuthToken_ImplicitGrantNoPrompt_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string access_token = 1 [(.description) = "OAuth Token, granted on success"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_access_token());
    }

    // optional string redirect_uri = 2 [(.description) = "Redirection URI provided during client registration."];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_redirect_uri());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData COAuthToken_ImplicitGrantNoPrompt_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    COAuthToken_ImplicitGrantNoPrompt_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*COAuthToken_ImplicitGrantNoPrompt_Response::GetClassData() const { return &_class_data_; }


void COAuthToken_ImplicitGrantNoPrompt_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<COAuthToken_ImplicitGrantNoPrompt_Response*>(&to_msg);
  auto& from = static_cast<const COAuthToken_ImplicitGrantNoPrompt_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_access_token(from._internal_access_token());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_redirect_uri(from._internal_redirect_uri());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Response::IsInitialized() const {
  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::InternalSwap(COAuthToken_ImplicitGrantNoPrompt_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.access_token_, lhs_arena,
      &other->_impl_.access_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.redirect_uri_, lhs_arena,
      &other->_impl_.redirect_uri_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata COAuthToken_ImplicitGrantNoPrompt_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_getter, &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_once,
      file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::COAuthToken_ImplicitGrantNoPrompt_Request*
Arena::CreateMaybeMessage< ::COAuthToken_ImplicitGrantNoPrompt_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::COAuthToken_ImplicitGrantNoPrompt_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::COAuthToken_ImplicitGrantNoPrompt_Response*
Arena::CreateMaybeMessage< ::COAuthToken_ImplicitGrantNoPrompt_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::COAuthToken_ImplicitGrantNoPrompt_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
