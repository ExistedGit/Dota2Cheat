// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_econ_5fgcmessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_econ_5fgcmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "econ_shared_enums.pb.h"
#include "gcsdk_gcmessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_econ_5fgcmessages_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_econ_5fgcmessages_2eproto;
class CAttribute_ItemDynamicRecipeComponent;
struct CAttribute_ItemDynamicRecipeComponentDefaultTypeInternal;
extern CAttribute_ItemDynamicRecipeComponentDefaultTypeInternal _CAttribute_ItemDynamicRecipeComponent_default_instance_;
class CAttribute_String;
struct CAttribute_StringDefaultTypeInternal;
extern CAttribute_StringDefaultTypeInternal _CAttribute_String_default_instance_;
class CGCStoreRechargeRedirect_LineItem;
struct CGCStoreRechargeRedirect_LineItemDefaultTypeInternal;
extern CGCStoreRechargeRedirect_LineItemDefaultTypeInternal _CGCStoreRechargeRedirect_LineItem_default_instance_;
class CMsgAdjustItemEquippedState;
struct CMsgAdjustItemEquippedStateDefaultTypeInternal;
extern CMsgAdjustItemEquippedStateDefaultTypeInternal _CMsgAdjustItemEquippedState_default_instance_;
class CMsgApplyAutograph;
struct CMsgApplyAutographDefaultTypeInternal;
extern CMsgApplyAutographDefaultTypeInternal _CMsgApplyAutograph_default_instance_;
class CMsgBannedWordList;
struct CMsgBannedWordListDefaultTypeInternal;
extern CMsgBannedWordListDefaultTypeInternal _CMsgBannedWordList_default_instance_;
class CMsgClientToGCCreateStaticRecipe;
struct CMsgClientToGCCreateStaticRecipeDefaultTypeInternal;
extern CMsgClientToGCCreateStaticRecipeDefaultTypeInternal _CMsgClientToGCCreateStaticRecipe_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse;
struct CMsgClientToGCCreateStaticRecipeResponseDefaultTypeInternal;
extern CMsgClientToGCCreateStaticRecipeResponseDefaultTypeInternal _CMsgClientToGCCreateStaticRecipeResponse_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput;
struct CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutputDefaultTypeInternal;
extern CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutputDefaultTypeInternal _CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_InputError;
struct CMsgClientToGCCreateStaticRecipeResponse_InputErrorDefaultTypeInternal;
extern CMsgClientToGCCreateStaticRecipeResponse_InputErrorDefaultTypeInternal _CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_OutputItem;
struct CMsgClientToGCCreateStaticRecipeResponse_OutputItemDefaultTypeInternal;
extern CMsgClientToGCCreateStaticRecipeResponse_OutputItemDefaultTypeInternal _CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_;
class CMsgClientToGCCreateStaticRecipe_Item;
struct CMsgClientToGCCreateStaticRecipe_ItemDefaultTypeInternal;
extern CMsgClientToGCCreateStaticRecipe_ItemDefaultTypeInternal _CMsgClientToGCCreateStaticRecipe_Item_default_instance_;
class CMsgClientToGCEquipItems;
struct CMsgClientToGCEquipItemsDefaultTypeInternal;
extern CMsgClientToGCEquipItemsDefaultTypeInternal _CMsgClientToGCEquipItems_default_instance_;
class CMsgClientToGCEquipItemsResponse;
struct CMsgClientToGCEquipItemsResponseDefaultTypeInternal;
extern CMsgClientToGCEquipItemsResponseDefaultTypeInternal _CMsgClientToGCEquipItemsResponse_default_instance_;
class CMsgClientToGCGetGiftPermissions;
struct CMsgClientToGCGetGiftPermissionsDefaultTypeInternal;
extern CMsgClientToGCGetGiftPermissionsDefaultTypeInternal _CMsgClientToGCGetGiftPermissions_default_instance_;
class CMsgClientToGCGetGiftPermissionsResponse;
struct CMsgClientToGCGetGiftPermissionsResponseDefaultTypeInternal;
extern CMsgClientToGCGetGiftPermissionsResponseDefaultTypeInternal _CMsgClientToGCGetGiftPermissionsResponse_default_instance_;
class CMsgClientToGCGetGiftPermissionsResponse_FriendPermission;
struct CMsgClientToGCGetGiftPermissionsResponse_FriendPermissionDefaultTypeInternal;
extern CMsgClientToGCGetGiftPermissionsResponse_FriendPermissionDefaultTypeInternal _CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_;
class CMsgClientToGCGetLimitedItemPurchaseQuantity;
struct CMsgClientToGCGetLimitedItemPurchaseQuantityDefaultTypeInternal;
extern CMsgClientToGCGetLimitedItemPurchaseQuantityDefaultTypeInternal _CMsgClientToGCGetLimitedItemPurchaseQuantity_default_instance_;
class CMsgClientToGCGetLimitedItemPurchaseQuantityResponse;
struct CMsgClientToGCGetLimitedItemPurchaseQuantityResponseDefaultTypeInternal;
extern CMsgClientToGCGetLimitedItemPurchaseQuantityResponseDefaultTypeInternal _CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_default_instance_;
class CMsgClientToGCLookupAccountName;
struct CMsgClientToGCLookupAccountNameDefaultTypeInternal;
extern CMsgClientToGCLookupAccountNameDefaultTypeInternal _CMsgClientToGCLookupAccountName_default_instance_;
class CMsgClientToGCLookupAccountNameResponse;
struct CMsgClientToGCLookupAccountNameResponseDefaultTypeInternal;
extern CMsgClientToGCLookupAccountNameResponseDefaultTypeInternal _CMsgClientToGCLookupAccountNameResponse_default_instance_;
class CMsgClientToGCNameItem;
struct CMsgClientToGCNameItemDefaultTypeInternal;
extern CMsgClientToGCNameItemDefaultTypeInternal _CMsgClientToGCNameItem_default_instance_;
class CMsgClientToGCNameItemResponse;
struct CMsgClientToGCNameItemResponseDefaultTypeInternal;
extern CMsgClientToGCNameItemResponseDefaultTypeInternal _CMsgClientToGCNameItemResponse_default_instance_;
class CMsgClientToGCPackBundle;
struct CMsgClientToGCPackBundleDefaultTypeInternal;
extern CMsgClientToGCPackBundleDefaultTypeInternal _CMsgClientToGCPackBundle_default_instance_;
class CMsgClientToGCPackBundleResponse;
struct CMsgClientToGCPackBundleResponseDefaultTypeInternal;
extern CMsgClientToGCPackBundleResponseDefaultTypeInternal _CMsgClientToGCPackBundleResponse_default_instance_;
class CMsgClientToGCRemoveItemAttribute;
struct CMsgClientToGCRemoveItemAttributeDefaultTypeInternal;
extern CMsgClientToGCRemoveItemAttributeDefaultTypeInternal _CMsgClientToGCRemoveItemAttribute_default_instance_;
class CMsgClientToGCRemoveItemAttributeResponse;
struct CMsgClientToGCRemoveItemAttributeResponseDefaultTypeInternal;
extern CMsgClientToGCRemoveItemAttributeResponseDefaultTypeInternal _CMsgClientToGCRemoveItemAttributeResponse_default_instance_;
class CMsgClientToGCSetItemInventoryCategory;
struct CMsgClientToGCSetItemInventoryCategoryDefaultTypeInternal;
extern CMsgClientToGCSetItemInventoryCategoryDefaultTypeInternal _CMsgClientToGCSetItemInventoryCategory_default_instance_;
class CMsgClientToGCSetItemStyle;
struct CMsgClientToGCSetItemStyleDefaultTypeInternal;
extern CMsgClientToGCSetItemStyleDefaultTypeInternal _CMsgClientToGCSetItemStyle_default_instance_;
class CMsgClientToGCSetItemStyleResponse;
struct CMsgClientToGCSetItemStyleResponseDefaultTypeInternal;
extern CMsgClientToGCSetItemStyleResponseDefaultTypeInternal _CMsgClientToGCSetItemStyleResponse_default_instance_;
class CMsgClientToGCUnlockCrate;
struct CMsgClientToGCUnlockCrateDefaultTypeInternal;
extern CMsgClientToGCUnlockCrateDefaultTypeInternal _CMsgClientToGCUnlockCrate_default_instance_;
class CMsgClientToGCUnlockCrateResponse;
struct CMsgClientToGCUnlockCrateResponseDefaultTypeInternal;
extern CMsgClientToGCUnlockCrateResponseDefaultTypeInternal _CMsgClientToGCUnlockCrateResponse_default_instance_;
class CMsgClientToGCUnlockCrateResponse_Item;
struct CMsgClientToGCUnlockCrateResponse_ItemDefaultTypeInternal;
extern CMsgClientToGCUnlockCrateResponse_ItemDefaultTypeInternal _CMsgClientToGCUnlockCrateResponse_Item_default_instance_;
class CMsgClientToGCUnlockItemStyle;
struct CMsgClientToGCUnlockItemStyleDefaultTypeInternal;
extern CMsgClientToGCUnlockItemStyleDefaultTypeInternal _CMsgClientToGCUnlockItemStyle_default_instance_;
class CMsgClientToGCUnlockItemStyleResponse;
struct CMsgClientToGCUnlockItemStyleResponseDefaultTypeInternal;
extern CMsgClientToGCUnlockItemStyleResponseDefaultTypeInternal _CMsgClientToGCUnlockItemStyleResponse_default_instance_;
class CMsgClientToGCUnpackBundle;
struct CMsgClientToGCUnpackBundleDefaultTypeInternal;
extern CMsgClientToGCUnpackBundleDefaultTypeInternal _CMsgClientToGCUnpackBundle_default_instance_;
class CMsgClientToGCUnpackBundleResponse;
struct CMsgClientToGCUnpackBundleResponseDefaultTypeInternal;
extern CMsgClientToGCUnpackBundleResponseDefaultTypeInternal _CMsgClientToGCUnpackBundleResponse_default_instance_;
class CMsgClientToGCUnwrapGift;
struct CMsgClientToGCUnwrapGiftDefaultTypeInternal;
extern CMsgClientToGCUnwrapGiftDefaultTypeInternal _CMsgClientToGCUnwrapGift_default_instance_;
class CMsgClientToGCWrapAndDeliverGift;
struct CMsgClientToGCWrapAndDeliverGiftDefaultTypeInternal;
extern CMsgClientToGCWrapAndDeliverGiftDefaultTypeInternal _CMsgClientToGCWrapAndDeliverGift_default_instance_;
class CMsgClientToGCWrapAndDeliverGiftResponse;
struct CMsgClientToGCWrapAndDeliverGiftResponseDefaultTypeInternal;
extern CMsgClientToGCWrapAndDeliverGiftResponseDefaultTypeInternal _CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_;
class CMsgCraftStatue;
struct CMsgCraftStatueDefaultTypeInternal;
extern CMsgCraftStatueDefaultTypeInternal _CMsgCraftStatue_default_instance_;
class CMsgCraftingResponse;
struct CMsgCraftingResponseDefaultTypeInternal;
extern CMsgCraftingResponseDefaultTypeInternal _CMsgCraftingResponse_default_instance_;
class CMsgDevNewItemRequest;
struct CMsgDevNewItemRequestDefaultTypeInternal;
extern CMsgDevNewItemRequestDefaultTypeInternal _CMsgDevNewItemRequest_default_instance_;
class CMsgDevNewItemRequestResponse;
struct CMsgDevNewItemRequestResponseDefaultTypeInternal;
extern CMsgDevNewItemRequestResponseDefaultTypeInternal _CMsgDevNewItemRequestResponse_default_instance_;
class CMsgDevUnlockAllItemStyles;
struct CMsgDevUnlockAllItemStylesDefaultTypeInternal;
extern CMsgDevUnlockAllItemStylesDefaultTypeInternal _CMsgDevUnlockAllItemStyles_default_instance_;
class CMsgDevUnlockAllItemStylesResponse;
struct CMsgDevUnlockAllItemStylesResponseDefaultTypeInternal;
extern CMsgDevUnlockAllItemStylesResponseDefaultTypeInternal _CMsgDevUnlockAllItemStylesResponse_default_instance_;
class CMsgEconPlayerStrangeCountAdjustment;
struct CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal;
extern CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal _CMsgEconPlayerStrangeCountAdjustment_default_instance_;
class CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment;
struct CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal;
extern CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal _CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_;
class CMsgGCAddGiftItem;
struct CMsgGCAddGiftItemDefaultTypeInternal;
extern CMsgGCAddGiftItemDefaultTypeInternal _CMsgGCAddGiftItem_default_instance_;
class CMsgGCEconSQLWorkItemEmbeddedRollbackData;
struct CMsgGCEconSQLWorkItemEmbeddedRollbackDataDefaultTypeInternal;
extern CMsgGCEconSQLWorkItemEmbeddedRollbackDataDefaultTypeInternal _CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_;
class CMsgGCGetAccountSubscriptionItem;
struct CMsgGCGetAccountSubscriptionItemDefaultTypeInternal;
extern CMsgGCGetAccountSubscriptionItemDefaultTypeInternal _CMsgGCGetAccountSubscriptionItem_default_instance_;
class CMsgGCGetAccountSubscriptionItemResponse;
struct CMsgGCGetAccountSubscriptionItemResponseDefaultTypeInternal;
extern CMsgGCGetAccountSubscriptionItemResponseDefaultTypeInternal _CMsgGCGetAccountSubscriptionItemResponse_default_instance_;
class CMsgGCRequestStoreSalesData;
struct CMsgGCRequestStoreSalesDataDefaultTypeInternal;
extern CMsgGCRequestStoreSalesDataDefaultTypeInternal _CMsgGCRequestStoreSalesData_default_instance_;
class CMsgGCRequestStoreSalesDataResponse;
struct CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal;
extern CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal _CMsgGCRequestStoreSalesDataResponse_default_instance_;
class CMsgGCRequestStoreSalesDataResponse_Price;
struct CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal;
extern CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal _CMsgGCRequestStoreSalesDataResponse_Price_default_instance_;
class CMsgGCRequestStoreSalesDataUpToDateResponse;
struct CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal;
extern CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal _CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_;
class CMsgGCSetItemPosition;
struct CMsgGCSetItemPositionDefaultTypeInternal;
extern CMsgGCSetItemPositionDefaultTypeInternal _CMsgGCSetItemPosition_default_instance_;
class CMsgGCToClientCurrencyPricePoints;
struct CMsgGCToClientCurrencyPricePointsDefaultTypeInternal;
extern CMsgGCToClientCurrencyPricePointsDefaultTypeInternal _CMsgGCToClientCurrencyPricePoints_default_instance_;
class CMsgGCToClientCurrencyPricePoints_Currency;
struct CMsgGCToClientCurrencyPricePoints_CurrencyDefaultTypeInternal;
extern CMsgGCToClientCurrencyPricePoints_CurrencyDefaultTypeInternal _CMsgGCToClientCurrencyPricePoints_Currency_default_instance_;
class CMsgGCToClientStoreTransactionCompleted;
struct CMsgGCToClientStoreTransactionCompletedDefaultTypeInternal;
extern CMsgGCToClientStoreTransactionCompletedDefaultTypeInternal _CMsgGCToClientStoreTransactionCompleted_default_instance_;
class CMsgGCToGCAddSubscriptionTime;
struct CMsgGCToGCAddSubscriptionTimeDefaultTypeInternal;
extern CMsgGCToGCAddSubscriptionTimeDefaultTypeInternal _CMsgGCToGCAddSubscriptionTime_default_instance_;
class CMsgGCToGCBetaDeleteItems;
struct CMsgGCToGCBetaDeleteItemsDefaultTypeInternal;
extern CMsgGCToGCBetaDeleteItemsDefaultTypeInternal _CMsgGCToGCBetaDeleteItems_default_instance_;
class CMsgGCToGCBroadcastConsoleCommand;
struct CMsgGCToGCBroadcastConsoleCommandDefaultTypeInternal;
extern CMsgGCToGCBroadcastConsoleCommandDefaultTypeInternal _CMsgGCToGCBroadcastConsoleCommand_default_instance_;
class CMsgGCToGCBroadcastMessageFromSub;
struct CMsgGCToGCBroadcastMessageFromSubDefaultTypeInternal;
extern CMsgGCToGCBroadcastMessageFromSubDefaultTypeInternal _CMsgGCToGCBroadcastMessageFromSub_default_instance_;
class CMsgGCToGCCanUseDropRateBonus;
struct CMsgGCToGCCanUseDropRateBonusDefaultTypeInternal;
extern CMsgGCToGCCanUseDropRateBonusDefaultTypeInternal _CMsgGCToGCCanUseDropRateBonus_default_instance_;
class CMsgGCToGCClientServerVersionsUpdated;
struct CMsgGCToGCClientServerVersionsUpdatedDefaultTypeInternal;
extern CMsgGCToGCClientServerVersionsUpdatedDefaultTypeInternal _CMsgGCToGCClientServerVersionsUpdated_default_instance_;
class CMsgGCToGCConsoleOutput;
struct CMsgGCToGCConsoleOutputDefaultTypeInternal;
extern CMsgGCToGCConsoleOutputDefaultTypeInternal _CMsgGCToGCConsoleOutput_default_instance_;
class CMsgGCToGCConsoleOutput_OutputLine;
struct CMsgGCToGCConsoleOutput_OutputLineDefaultTypeInternal;
extern CMsgGCToGCConsoleOutput_OutputLineDefaultTypeInternal _CMsgGCToGCConsoleOutput_OutputLine_default_instance_;
class CMsgGCToGCFlushSteamInventoryCache;
struct CMsgGCToGCFlushSteamInventoryCacheDefaultTypeInternal;
extern CMsgGCToGCFlushSteamInventoryCacheDefaultTypeInternal _CMsgGCToGCFlushSteamInventoryCache_default_instance_;
class CMsgGCToGCFlushSteamInventoryCache_Key;
struct CMsgGCToGCFlushSteamInventoryCache_KeyDefaultTypeInternal;
extern CMsgGCToGCFlushSteamInventoryCache_KeyDefaultTypeInternal _CMsgGCToGCFlushSteamInventoryCache_Key_default_instance_;
class CMsgGCToGCGetInfuxIntervalStats;
struct CMsgGCToGCGetInfuxIntervalStatsDefaultTypeInternal;
extern CMsgGCToGCGetInfuxIntervalStatsDefaultTypeInternal _CMsgGCToGCGetInfuxIntervalStats_default_instance_;
class CMsgGCToGCGetInfuxIntervalStatsResponse;
struct CMsgGCToGCGetInfuxIntervalStatsResponseDefaultTypeInternal;
extern CMsgGCToGCGetInfuxIntervalStatsResponseDefaultTypeInternal _CMsgGCToGCGetInfuxIntervalStatsResponse_default_instance_;
class CMsgGCToGCGetUserServerMembers;
struct CMsgGCToGCGetUserServerMembersDefaultTypeInternal;
extern CMsgGCToGCGetUserServerMembersDefaultTypeInternal _CMsgGCToGCGetUserServerMembers_default_instance_;
class CMsgGCToGCGetUserServerMembersResponse;
struct CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal;
extern CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal _CMsgGCToGCGetUserServerMembersResponse_default_instance_;
class CMsgGCToGCGetUserSessionServer;
struct CMsgGCToGCGetUserSessionServerDefaultTypeInternal;
extern CMsgGCToGCGetUserSessionServerDefaultTypeInternal _CMsgGCToGCGetUserSessionServer_default_instance_;
class CMsgGCToGCGetUserSessionServerResponse;
struct CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal;
extern CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal _CMsgGCToGCGetUserSessionServerResponse_default_instance_;
class CMsgGCToGCGrantAccountRolledItems;
struct CMsgGCToGCGrantAccountRolledItemsDefaultTypeInternal;
extern CMsgGCToGCGrantAccountRolledItemsDefaultTypeInternal _CMsgGCToGCGrantAccountRolledItems_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item;
struct CMsgGCToGCGrantAccountRolledItems_ItemDefaultTypeInternal;
extern CMsgGCToGCGrantAccountRolledItems_ItemDefaultTypeInternal _CMsgGCToGCGrantAccountRolledItems_Item_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry;
struct CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntryDefaultTypeInternal;
extern CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntryDefaultTypeInternal _CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute;
struct CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttributeDefaultTypeInternal;
extern CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttributeDefaultTypeInternal _CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_;
class CMsgGCToGCGrantSelfMadeItemToAccount;
struct CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal;
extern CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal _CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_;
class CMsgGCToGCInternalTestMsg;
struct CMsgGCToGCInternalTestMsgDefaultTypeInternal;
extern CMsgGCToGCInternalTestMsgDefaultTypeInternal _CMsgGCToGCInternalTestMsg_default_instance_;
class CMsgGCToGCPingRequest;
struct CMsgGCToGCPingRequestDefaultTypeInternal;
extern CMsgGCToGCPingRequestDefaultTypeInternal _CMsgGCToGCPingRequest_default_instance_;
class CMsgGCToGCPingResponse;
struct CMsgGCToGCPingResponseDefaultTypeInternal;
extern CMsgGCToGCPingResponseDefaultTypeInternal _CMsgGCToGCPingResponse_default_instance_;
class CMsgGCToGCPurchaseSucceeded;
struct CMsgGCToGCPurchaseSucceededDefaultTypeInternal;
extern CMsgGCToGCPurchaseSucceededDefaultTypeInternal _CMsgGCToGCPurchaseSucceeded_default_instance_;
class CMsgGCToGCRefreshSOCache;
struct CMsgGCToGCRefreshSOCacheDefaultTypeInternal;
extern CMsgGCToGCRefreshSOCacheDefaultTypeInternal _CMsgGCToGCRefreshSOCache_default_instance_;
class CMsgGCToGCSelfPing;
struct CMsgGCToGCSelfPingDefaultTypeInternal;
extern CMsgGCToGCSelfPingDefaultTypeInternal _CMsgGCToGCSelfPing_default_instance_;
class CMsgGCToGCStoreProcessCDKeyTransaction;
struct CMsgGCToGCStoreProcessCDKeyTransactionDefaultTypeInternal;
extern CMsgGCToGCStoreProcessCDKeyTransactionDefaultTypeInternal _CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_;
class CMsgGCToGCStoreProcessCDKeyTransactionResponse;
struct CMsgGCToGCStoreProcessCDKeyTransactionResponseDefaultTypeInternal;
extern CMsgGCToGCStoreProcessCDKeyTransactionResponseDefaultTypeInternal _CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_;
class CMsgGCToGCStoreProcessSettlement;
struct CMsgGCToGCStoreProcessSettlementDefaultTypeInternal;
extern CMsgGCToGCStoreProcessSettlementDefaultTypeInternal _CMsgGCToGCStoreProcessSettlement_default_instance_;
class CMsgGCToGCStoreProcessSettlementResponse;
struct CMsgGCToGCStoreProcessSettlementResponseDefaultTypeInternal;
extern CMsgGCToGCStoreProcessSettlementResponseDefaultTypeInternal _CMsgGCToGCStoreProcessSettlementResponse_default_instance_;
class CMsgGCToGCUpdateSubscriptionItems;
struct CMsgGCToGCUpdateSubscriptionItemsDefaultTypeInternal;
extern CMsgGCToGCUpdateSubscriptionItemsDefaultTypeInternal _CMsgGCToGCUpdateSubscriptionItems_default_instance_;
class CMsgGCToGCUpdateWelcomeMsg;
struct CMsgGCToGCUpdateWelcomeMsgDefaultTypeInternal;
extern CMsgGCToGCUpdateWelcomeMsgDefaultTypeInternal _CMsgGCToGCUpdateWelcomeMsg_default_instance_;
class CMsgItemAges;
struct CMsgItemAgesDefaultTypeInternal;
extern CMsgItemAgesDefaultTypeInternal _CMsgItemAges_default_instance_;
class CMsgItemAges_MaxItemIDTimestamp;
struct CMsgItemAges_MaxItemIDTimestampDefaultTypeInternal;
extern CMsgItemAges_MaxItemIDTimestampDefaultTypeInternal _CMsgItemAges_MaxItemIDTimestamp_default_instance_;
class CMsgLookupMultipleAccountNames;
struct CMsgLookupMultipleAccountNamesDefaultTypeInternal;
extern CMsgLookupMultipleAccountNamesDefaultTypeInternal _CMsgLookupMultipleAccountNames_default_instance_;
class CMsgLookupMultipleAccountNamesResponse;
struct CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal;
extern CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal _CMsgLookupMultipleAccountNamesResponse_default_instance_;
class CMsgLookupMultipleAccountNamesResponse_Account;
struct CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal;
extern CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal _CMsgLookupMultipleAccountNamesResponse_Account_default_instance_;
class CMsgProcessTransactionOrder;
struct CMsgProcessTransactionOrderDefaultTypeInternal;
extern CMsgProcessTransactionOrderDefaultTypeInternal _CMsgProcessTransactionOrder_default_instance_;
class CMsgProcessTransactionOrder_Item;
struct CMsgProcessTransactionOrder_ItemDefaultTypeInternal;
extern CMsgProcessTransactionOrder_ItemDefaultTypeInternal _CMsgProcessTransactionOrder_Item_default_instance_;
class CMsgRedeemCode;
struct CMsgRedeemCodeDefaultTypeInternal;
extern CMsgRedeemCodeDefaultTypeInternal _CMsgRedeemCode_default_instance_;
class CMsgRedeemCodeResponse;
struct CMsgRedeemCodeResponseDefaultTypeInternal;
extern CMsgRedeemCodeResponseDefaultTypeInternal _CMsgRedeemCodeResponse_default_instance_;
class CMsgRequestCrateEscalationLevel;
struct CMsgRequestCrateEscalationLevelDefaultTypeInternal;
extern CMsgRequestCrateEscalationLevelDefaultTypeInternal _CMsgRequestCrateEscalationLevel_default_instance_;
class CMsgRequestCrateEscalationLevelResponse;
struct CMsgRequestCrateEscalationLevelResponseDefaultTypeInternal;
extern CMsgRequestCrateEscalationLevelResponseDefaultTypeInternal _CMsgRequestCrateEscalationLevelResponse_default_instance_;
class CMsgRequestCrateItems;
struct CMsgRequestCrateItemsDefaultTypeInternal;
extern CMsgRequestCrateItemsDefaultTypeInternal _CMsgRequestCrateItems_default_instance_;
class CMsgRequestCrateItemsResponse;
struct CMsgRequestCrateItemsResponseDefaultTypeInternal;
extern CMsgRequestCrateItemsResponseDefaultTypeInternal _CMsgRequestCrateItemsResponse_default_instance_;
class CMsgSQLAddDropRateBonus;
struct CMsgSQLAddDropRateBonusDefaultTypeInternal;
extern CMsgSQLAddDropRateBonusDefaultTypeInternal _CMsgSQLAddDropRateBonus_default_instance_;
class CMsgSQLGCToGCGrantBackpackSlots;
struct CMsgSQLGCToGCGrantBackpackSlotsDefaultTypeInternal;
extern CMsgSQLGCToGCGrantBackpackSlotsDefaultTypeInternal _CMsgSQLGCToGCGrantBackpackSlots_default_instance_;
class CMsgSQLUpgradeBattleBooster;
struct CMsgSQLUpgradeBattleBoosterDefaultTypeInternal;
extern CMsgSQLUpgradeBattleBoosterDefaultTypeInternal _CMsgSQLUpgradeBattleBooster_default_instance_;
class CMsgServerUseItem;
struct CMsgServerUseItemDefaultTypeInternal;
extern CMsgServerUseItemDefaultTypeInternal _CMsgServerUseItem_default_instance_;
class CMsgUseItem;
struct CMsgUseItemDefaultTypeInternal;
extern CMsgUseItemDefaultTypeInternal _CMsgUseItem_default_instance_;
class CMsgUseMultipleItems;
struct CMsgUseMultipleItemsDefaultTypeInternal;
extern CMsgUseMultipleItemsDefaultTypeInternal _CMsgUseMultipleItems_default_instance_;
class CProtoItemSocket;
struct CProtoItemSocketDefaultTypeInternal;
extern CProtoItemSocketDefaultTypeInternal _CProtoItemSocket_default_instance_;
class CProtoItemSocket_AssetModifier;
struct CProtoItemSocket_AssetModifierDefaultTypeInternal;
extern CProtoItemSocket_AssetModifierDefaultTypeInternal _CProtoItemSocket_AssetModifier_default_instance_;
class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY;
struct CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYDefaultTypeInternal;
extern CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYDefaultTypeInternal _CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_;
class CProtoItemSocket_Autograph;
struct CProtoItemSocket_AutographDefaultTypeInternal;
extern CProtoItemSocket_AutographDefaultTypeInternal _CProtoItemSocket_Autograph_default_instance_;
class CProtoItemSocket_Color;
struct CProtoItemSocket_ColorDefaultTypeInternal;
extern CProtoItemSocket_ColorDefaultTypeInternal _CProtoItemSocket_Color_default_instance_;
class CProtoItemSocket_Effect;
struct CProtoItemSocket_EffectDefaultTypeInternal;
extern CProtoItemSocket_EffectDefaultTypeInternal _CProtoItemSocket_Effect_default_instance_;
class CProtoItemSocket_Empty;
struct CProtoItemSocket_EmptyDefaultTypeInternal;
extern CProtoItemSocket_EmptyDefaultTypeInternal _CProtoItemSocket_Empty_default_instance_;
class CProtoItemSocket_Spectator;
struct CProtoItemSocket_SpectatorDefaultTypeInternal;
extern CProtoItemSocket_SpectatorDefaultTypeInternal _CProtoItemSocket_Spectator_default_instance_;
class CProtoItemSocket_StaticVisuals;
struct CProtoItemSocket_StaticVisualsDefaultTypeInternal;
extern CProtoItemSocket_StaticVisualsDefaultTypeInternal _CProtoItemSocket_StaticVisuals_default_instance_;
class CProtoItemSocket_Strange;
struct CProtoItemSocket_StrangeDefaultTypeInternal;
extern CProtoItemSocket_StrangeDefaultTypeInternal _CProtoItemSocket_Strange_default_instance_;
class CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY;
struct CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLYDefaultTypeInternal;
extern CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLYDefaultTypeInternal _CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY_default_instance_;
class CWorkshop_GetItemDailyRevenue_Request;
struct CWorkshop_GetItemDailyRevenue_RequestDefaultTypeInternal;
extern CWorkshop_GetItemDailyRevenue_RequestDefaultTypeInternal _CWorkshop_GetItemDailyRevenue_Request_default_instance_;
class CWorkshop_GetItemDailyRevenue_Response;
struct CWorkshop_GetItemDailyRevenue_ResponseDefaultTypeInternal;
extern CWorkshop_GetItemDailyRevenue_ResponseDefaultTypeInternal _CWorkshop_GetItemDailyRevenue_Response_default_instance_;
class CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue;
struct CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal;
extern CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal _CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_;
class CWorkshop_GetPackageDailyRevenue_Request;
struct CWorkshop_GetPackageDailyRevenue_RequestDefaultTypeInternal;
extern CWorkshop_GetPackageDailyRevenue_RequestDefaultTypeInternal _CWorkshop_GetPackageDailyRevenue_Request_default_instance_;
class CWorkshop_GetPackageDailyRevenue_Response;
struct CWorkshop_GetPackageDailyRevenue_ResponseDefaultTypeInternal;
extern CWorkshop_GetPackageDailyRevenue_ResponseDefaultTypeInternal _CWorkshop_GetPackageDailyRevenue_Response_default_instance_;
class CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue;
struct CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal;
extern CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal _CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CAttribute_ItemDynamicRecipeComponent* Arena::CreateMaybeMessage<::CAttribute_ItemDynamicRecipeComponent>(Arena*);
template<> ::CAttribute_String* Arena::CreateMaybeMessage<::CAttribute_String>(Arena*);
template<> ::CGCStoreRechargeRedirect_LineItem* Arena::CreateMaybeMessage<::CGCStoreRechargeRedirect_LineItem>(Arena*);
template<> ::CMsgAdjustItemEquippedState* Arena::CreateMaybeMessage<::CMsgAdjustItemEquippedState>(Arena*);
template<> ::CMsgApplyAutograph* Arena::CreateMaybeMessage<::CMsgApplyAutograph>(Arena*);
template<> ::CMsgBannedWordList* Arena::CreateMaybeMessage<::CMsgBannedWordList>(Arena*);
template<> ::CMsgClientToGCCreateStaticRecipe* Arena::CreateMaybeMessage<::CMsgClientToGCCreateStaticRecipe>(Arena*);
template<> ::CMsgClientToGCCreateStaticRecipeResponse* Arena::CreateMaybeMessage<::CMsgClientToGCCreateStaticRecipeResponse>(Arena*);
template<> ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* Arena::CreateMaybeMessage<::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput>(Arena*);
template<> ::CMsgClientToGCCreateStaticRecipeResponse_InputError* Arena::CreateMaybeMessage<::CMsgClientToGCCreateStaticRecipeResponse_InputError>(Arena*);
template<> ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* Arena::CreateMaybeMessage<::CMsgClientToGCCreateStaticRecipeResponse_OutputItem>(Arena*);
template<> ::CMsgClientToGCCreateStaticRecipe_Item* Arena::CreateMaybeMessage<::CMsgClientToGCCreateStaticRecipe_Item>(Arena*);
template<> ::CMsgClientToGCEquipItems* Arena::CreateMaybeMessage<::CMsgClientToGCEquipItems>(Arena*);
template<> ::CMsgClientToGCEquipItemsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCEquipItemsResponse>(Arena*);
template<> ::CMsgClientToGCGetGiftPermissions* Arena::CreateMaybeMessage<::CMsgClientToGCGetGiftPermissions>(Arena*);
template<> ::CMsgClientToGCGetGiftPermissionsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetGiftPermissionsResponse>(Arena*);
template<> ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* Arena::CreateMaybeMessage<::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission>(Arena*);
template<> ::CMsgClientToGCGetLimitedItemPurchaseQuantity* Arena::CreateMaybeMessage<::CMsgClientToGCGetLimitedItemPurchaseQuantity>(Arena*);
template<> ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse>(Arena*);
template<> ::CMsgClientToGCLookupAccountName* Arena::CreateMaybeMessage<::CMsgClientToGCLookupAccountName>(Arena*);
template<> ::CMsgClientToGCLookupAccountNameResponse* Arena::CreateMaybeMessage<::CMsgClientToGCLookupAccountNameResponse>(Arena*);
template<> ::CMsgClientToGCNameItem* Arena::CreateMaybeMessage<::CMsgClientToGCNameItem>(Arena*);
template<> ::CMsgClientToGCNameItemResponse* Arena::CreateMaybeMessage<::CMsgClientToGCNameItemResponse>(Arena*);
template<> ::CMsgClientToGCPackBundle* Arena::CreateMaybeMessage<::CMsgClientToGCPackBundle>(Arena*);
template<> ::CMsgClientToGCPackBundleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPackBundleResponse>(Arena*);
template<> ::CMsgClientToGCRemoveItemAttribute* Arena::CreateMaybeMessage<::CMsgClientToGCRemoveItemAttribute>(Arena*);
template<> ::CMsgClientToGCRemoveItemAttributeResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRemoveItemAttributeResponse>(Arena*);
template<> ::CMsgClientToGCSetItemInventoryCategory* Arena::CreateMaybeMessage<::CMsgClientToGCSetItemInventoryCategory>(Arena*);
template<> ::CMsgClientToGCSetItemStyle* Arena::CreateMaybeMessage<::CMsgClientToGCSetItemStyle>(Arena*);
template<> ::CMsgClientToGCSetItemStyleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetItemStyleResponse>(Arena*);
template<> ::CMsgClientToGCUnlockCrate* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockCrate>(Arena*);
template<> ::CMsgClientToGCUnlockCrateResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockCrateResponse>(Arena*);
template<> ::CMsgClientToGCUnlockCrateResponse_Item* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockCrateResponse_Item>(Arena*);
template<> ::CMsgClientToGCUnlockItemStyle* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockItemStyle>(Arena*);
template<> ::CMsgClientToGCUnlockItemStyleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockItemStyleResponse>(Arena*);
template<> ::CMsgClientToGCUnpackBundle* Arena::CreateMaybeMessage<::CMsgClientToGCUnpackBundle>(Arena*);
template<> ::CMsgClientToGCUnpackBundleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUnpackBundleResponse>(Arena*);
template<> ::CMsgClientToGCUnwrapGift* Arena::CreateMaybeMessage<::CMsgClientToGCUnwrapGift>(Arena*);
template<> ::CMsgClientToGCWrapAndDeliverGift* Arena::CreateMaybeMessage<::CMsgClientToGCWrapAndDeliverGift>(Arena*);
template<> ::CMsgClientToGCWrapAndDeliverGiftResponse* Arena::CreateMaybeMessage<::CMsgClientToGCWrapAndDeliverGiftResponse>(Arena*);
template<> ::CMsgCraftStatue* Arena::CreateMaybeMessage<::CMsgCraftStatue>(Arena*);
template<> ::CMsgCraftingResponse* Arena::CreateMaybeMessage<::CMsgCraftingResponse>(Arena*);
template<> ::CMsgDevNewItemRequest* Arena::CreateMaybeMessage<::CMsgDevNewItemRequest>(Arena*);
template<> ::CMsgDevNewItemRequestResponse* Arena::CreateMaybeMessage<::CMsgDevNewItemRequestResponse>(Arena*);
template<> ::CMsgDevUnlockAllItemStyles* Arena::CreateMaybeMessage<::CMsgDevUnlockAllItemStyles>(Arena*);
template<> ::CMsgDevUnlockAllItemStylesResponse* Arena::CreateMaybeMessage<::CMsgDevUnlockAllItemStylesResponse>(Arena*);
template<> ::CMsgEconPlayerStrangeCountAdjustment* Arena::CreateMaybeMessage<::CMsgEconPlayerStrangeCountAdjustment>(Arena*);
template<> ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* Arena::CreateMaybeMessage<::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment>(Arena*);
template<> ::CMsgGCAddGiftItem* Arena::CreateMaybeMessage<::CMsgGCAddGiftItem>(Arena*);
template<> ::CMsgGCEconSQLWorkItemEmbeddedRollbackData* Arena::CreateMaybeMessage<::CMsgGCEconSQLWorkItemEmbeddedRollbackData>(Arena*);
template<> ::CMsgGCGetAccountSubscriptionItem* Arena::CreateMaybeMessage<::CMsgGCGetAccountSubscriptionItem>(Arena*);
template<> ::CMsgGCGetAccountSubscriptionItemResponse* Arena::CreateMaybeMessage<::CMsgGCGetAccountSubscriptionItemResponse>(Arena*);
template<> ::CMsgGCRequestStoreSalesData* Arena::CreateMaybeMessage<::CMsgGCRequestStoreSalesData>(Arena*);
template<> ::CMsgGCRequestStoreSalesDataResponse* Arena::CreateMaybeMessage<::CMsgGCRequestStoreSalesDataResponse>(Arena*);
template<> ::CMsgGCRequestStoreSalesDataResponse_Price* Arena::CreateMaybeMessage<::CMsgGCRequestStoreSalesDataResponse_Price>(Arena*);
template<> ::CMsgGCRequestStoreSalesDataUpToDateResponse* Arena::CreateMaybeMessage<::CMsgGCRequestStoreSalesDataUpToDateResponse>(Arena*);
template<> ::CMsgGCSetItemPosition* Arena::CreateMaybeMessage<::CMsgGCSetItemPosition>(Arena*);
template<> ::CMsgGCToClientCurrencyPricePoints* Arena::CreateMaybeMessage<::CMsgGCToClientCurrencyPricePoints>(Arena*);
template<> ::CMsgGCToClientCurrencyPricePoints_Currency* Arena::CreateMaybeMessage<::CMsgGCToClientCurrencyPricePoints_Currency>(Arena*);
template<> ::CMsgGCToClientStoreTransactionCompleted* Arena::CreateMaybeMessage<::CMsgGCToClientStoreTransactionCompleted>(Arena*);
template<> ::CMsgGCToGCAddSubscriptionTime* Arena::CreateMaybeMessage<::CMsgGCToGCAddSubscriptionTime>(Arena*);
template<> ::CMsgGCToGCBetaDeleteItems* Arena::CreateMaybeMessage<::CMsgGCToGCBetaDeleteItems>(Arena*);
template<> ::CMsgGCToGCBroadcastConsoleCommand* Arena::CreateMaybeMessage<::CMsgGCToGCBroadcastConsoleCommand>(Arena*);
template<> ::CMsgGCToGCBroadcastMessageFromSub* Arena::CreateMaybeMessage<::CMsgGCToGCBroadcastMessageFromSub>(Arena*);
template<> ::CMsgGCToGCCanUseDropRateBonus* Arena::CreateMaybeMessage<::CMsgGCToGCCanUseDropRateBonus>(Arena*);
template<> ::CMsgGCToGCClientServerVersionsUpdated* Arena::CreateMaybeMessage<::CMsgGCToGCClientServerVersionsUpdated>(Arena*);
template<> ::CMsgGCToGCConsoleOutput* Arena::CreateMaybeMessage<::CMsgGCToGCConsoleOutput>(Arena*);
template<> ::CMsgGCToGCConsoleOutput_OutputLine* Arena::CreateMaybeMessage<::CMsgGCToGCConsoleOutput_OutputLine>(Arena*);
template<> ::CMsgGCToGCFlushSteamInventoryCache* Arena::CreateMaybeMessage<::CMsgGCToGCFlushSteamInventoryCache>(Arena*);
template<> ::CMsgGCToGCFlushSteamInventoryCache_Key* Arena::CreateMaybeMessage<::CMsgGCToGCFlushSteamInventoryCache_Key>(Arena*);
template<> ::CMsgGCToGCGetInfuxIntervalStats* Arena::CreateMaybeMessage<::CMsgGCToGCGetInfuxIntervalStats>(Arena*);
template<> ::CMsgGCToGCGetInfuxIntervalStatsResponse* Arena::CreateMaybeMessage<::CMsgGCToGCGetInfuxIntervalStatsResponse>(Arena*);
template<> ::CMsgGCToGCGetUserServerMembers* Arena::CreateMaybeMessage<::CMsgGCToGCGetUserServerMembers>(Arena*);
template<> ::CMsgGCToGCGetUserServerMembersResponse* Arena::CreateMaybeMessage<::CMsgGCToGCGetUserServerMembersResponse>(Arena*);
template<> ::CMsgGCToGCGetUserSessionServer* Arena::CreateMaybeMessage<::CMsgGCToGCGetUserSessionServer>(Arena*);
template<> ::CMsgGCToGCGetUserSessionServerResponse* Arena::CreateMaybeMessage<::CMsgGCToGCGetUserSessionServerResponse>(Arena*);
template<> ::CMsgGCToGCGrantAccountRolledItems* Arena::CreateMaybeMessage<::CMsgGCToGCGrantAccountRolledItems>(Arena*);
template<> ::CMsgGCToGCGrantAccountRolledItems_Item* Arena::CreateMaybeMessage<::CMsgGCToGCGrantAccountRolledItems_Item>(Arena*);
template<> ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* Arena::CreateMaybeMessage<::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry>(Arena*);
template<> ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* Arena::CreateMaybeMessage<::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute>(Arena*);
template<> ::CMsgGCToGCGrantSelfMadeItemToAccount* Arena::CreateMaybeMessage<::CMsgGCToGCGrantSelfMadeItemToAccount>(Arena*);
template<> ::CMsgGCToGCInternalTestMsg* Arena::CreateMaybeMessage<::CMsgGCToGCInternalTestMsg>(Arena*);
template<> ::CMsgGCToGCPingRequest* Arena::CreateMaybeMessage<::CMsgGCToGCPingRequest>(Arena*);
template<> ::CMsgGCToGCPingResponse* Arena::CreateMaybeMessage<::CMsgGCToGCPingResponse>(Arena*);
template<> ::CMsgGCToGCPurchaseSucceeded* Arena::CreateMaybeMessage<::CMsgGCToGCPurchaseSucceeded>(Arena*);
template<> ::CMsgGCToGCRefreshSOCache* Arena::CreateMaybeMessage<::CMsgGCToGCRefreshSOCache>(Arena*);
template<> ::CMsgGCToGCSelfPing* Arena::CreateMaybeMessage<::CMsgGCToGCSelfPing>(Arena*);
template<> ::CMsgGCToGCStoreProcessCDKeyTransaction* Arena::CreateMaybeMessage<::CMsgGCToGCStoreProcessCDKeyTransaction>(Arena*);
template<> ::CMsgGCToGCStoreProcessCDKeyTransactionResponse* Arena::CreateMaybeMessage<::CMsgGCToGCStoreProcessCDKeyTransactionResponse>(Arena*);
template<> ::CMsgGCToGCStoreProcessSettlement* Arena::CreateMaybeMessage<::CMsgGCToGCStoreProcessSettlement>(Arena*);
template<> ::CMsgGCToGCStoreProcessSettlementResponse* Arena::CreateMaybeMessage<::CMsgGCToGCStoreProcessSettlementResponse>(Arena*);
template<> ::CMsgGCToGCUpdateSubscriptionItems* Arena::CreateMaybeMessage<::CMsgGCToGCUpdateSubscriptionItems>(Arena*);
template<> ::CMsgGCToGCUpdateWelcomeMsg* Arena::CreateMaybeMessage<::CMsgGCToGCUpdateWelcomeMsg>(Arena*);
template<> ::CMsgItemAges* Arena::CreateMaybeMessage<::CMsgItemAges>(Arena*);
template<> ::CMsgItemAges_MaxItemIDTimestamp* Arena::CreateMaybeMessage<::CMsgItemAges_MaxItemIDTimestamp>(Arena*);
template<> ::CMsgLookupMultipleAccountNames* Arena::CreateMaybeMessage<::CMsgLookupMultipleAccountNames>(Arena*);
template<> ::CMsgLookupMultipleAccountNamesResponse* Arena::CreateMaybeMessage<::CMsgLookupMultipleAccountNamesResponse>(Arena*);
template<> ::CMsgLookupMultipleAccountNamesResponse_Account* Arena::CreateMaybeMessage<::CMsgLookupMultipleAccountNamesResponse_Account>(Arena*);
template<> ::CMsgProcessTransactionOrder* Arena::CreateMaybeMessage<::CMsgProcessTransactionOrder>(Arena*);
template<> ::CMsgProcessTransactionOrder_Item* Arena::CreateMaybeMessage<::CMsgProcessTransactionOrder_Item>(Arena*);
template<> ::CMsgRedeemCode* Arena::CreateMaybeMessage<::CMsgRedeemCode>(Arena*);
template<> ::CMsgRedeemCodeResponse* Arena::CreateMaybeMessage<::CMsgRedeemCodeResponse>(Arena*);
template<> ::CMsgRequestCrateEscalationLevel* Arena::CreateMaybeMessage<::CMsgRequestCrateEscalationLevel>(Arena*);
template<> ::CMsgRequestCrateEscalationLevelResponse* Arena::CreateMaybeMessage<::CMsgRequestCrateEscalationLevelResponse>(Arena*);
template<> ::CMsgRequestCrateItems* Arena::CreateMaybeMessage<::CMsgRequestCrateItems>(Arena*);
template<> ::CMsgRequestCrateItemsResponse* Arena::CreateMaybeMessage<::CMsgRequestCrateItemsResponse>(Arena*);
template<> ::CMsgSQLAddDropRateBonus* Arena::CreateMaybeMessage<::CMsgSQLAddDropRateBonus>(Arena*);
template<> ::CMsgSQLGCToGCGrantBackpackSlots* Arena::CreateMaybeMessage<::CMsgSQLGCToGCGrantBackpackSlots>(Arena*);
template<> ::CMsgSQLUpgradeBattleBooster* Arena::CreateMaybeMessage<::CMsgSQLUpgradeBattleBooster>(Arena*);
template<> ::CMsgServerUseItem* Arena::CreateMaybeMessage<::CMsgServerUseItem>(Arena*);
template<> ::CMsgUseItem* Arena::CreateMaybeMessage<::CMsgUseItem>(Arena*);
template<> ::CMsgUseMultipleItems* Arena::CreateMaybeMessage<::CMsgUseMultipleItems>(Arena*);
template<> ::CProtoItemSocket* Arena::CreateMaybeMessage<::CProtoItemSocket>(Arena*);
template<> ::CProtoItemSocket_AssetModifier* Arena::CreateMaybeMessage<::CProtoItemSocket_AssetModifier>(Arena*);
template<> ::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* Arena::CreateMaybeMessage<::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>(Arena*);
template<> ::CProtoItemSocket_Autograph* Arena::CreateMaybeMessage<::CProtoItemSocket_Autograph>(Arena*);
template<> ::CProtoItemSocket_Color* Arena::CreateMaybeMessage<::CProtoItemSocket_Color>(Arena*);
template<> ::CProtoItemSocket_Effect* Arena::CreateMaybeMessage<::CProtoItemSocket_Effect>(Arena*);
template<> ::CProtoItemSocket_Empty* Arena::CreateMaybeMessage<::CProtoItemSocket_Empty>(Arena*);
template<> ::CProtoItemSocket_Spectator* Arena::CreateMaybeMessage<::CProtoItemSocket_Spectator>(Arena*);
template<> ::CProtoItemSocket_StaticVisuals* Arena::CreateMaybeMessage<::CProtoItemSocket_StaticVisuals>(Arena*);
template<> ::CProtoItemSocket_Strange* Arena::CreateMaybeMessage<::CProtoItemSocket_Strange>(Arena*);
template<> ::CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY* Arena::CreateMaybeMessage<::CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY>(Arena*);
template<> ::CWorkshop_GetItemDailyRevenue_Request* Arena::CreateMaybeMessage<::CWorkshop_GetItemDailyRevenue_Request>(Arena*);
template<> ::CWorkshop_GetItemDailyRevenue_Response* Arena::CreateMaybeMessage<::CWorkshop_GetItemDailyRevenue_Response>(Arena*);
template<> ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* Arena::CreateMaybeMessage<::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue>(Arena*);
template<> ::CWorkshop_GetPackageDailyRevenue_Request* Arena::CreateMaybeMessage<::CWorkshop_GetPackageDailyRevenue_Request>(Arena*);
template<> ::CWorkshop_GetPackageDailyRevenue_Response* Arena::CreateMaybeMessage<::CWorkshop_GetPackageDailyRevenue_Response>(Arena*);
template<> ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* Arena::CreateMaybeMessage<::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CMsgRequestCrateItemsResponse_EResult : int {
  CMsgRequestCrateItemsResponse_EResult_k_Succeeded = 0,
  CMsgRequestCrateItemsResponse_EResult_k_Failed = 1
};
bool CMsgRequestCrateItemsResponse_EResult_IsValid(int value);
constexpr CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse_EResult_EResult_MIN = CMsgRequestCrateItemsResponse_EResult_k_Succeeded;
constexpr CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse_EResult_EResult_MAX = CMsgRequestCrateItemsResponse_EResult_k_Failed;
constexpr int CMsgRequestCrateItemsResponse_EResult_EResult_ARRAYSIZE = CMsgRequestCrateItemsResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgRequestCrateItemsResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgRequestCrateItemsResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgRequestCrateItemsResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgRequestCrateItemsResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgRequestCrateItemsResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgRequestCrateItemsResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgRequestCrateItemsResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgRequestCrateItemsResponse_EResult>(
    CMsgRequestCrateItemsResponse_EResult_descriptor(), name, value);
}
enum CMsgRequestCrateEscalationLevelResponse_EResult : int {
  CMsgRequestCrateEscalationLevelResponse_EResult_k_Succeeded = 0,
  CMsgRequestCrateEscalationLevelResponse_EResult_k_Failed = 1
};
bool CMsgRequestCrateEscalationLevelResponse_EResult_IsValid(int value);
constexpr CMsgRequestCrateEscalationLevelResponse_EResult CMsgRequestCrateEscalationLevelResponse_EResult_EResult_MIN = CMsgRequestCrateEscalationLevelResponse_EResult_k_Succeeded;
constexpr CMsgRequestCrateEscalationLevelResponse_EResult CMsgRequestCrateEscalationLevelResponse_EResult_EResult_MAX = CMsgRequestCrateEscalationLevelResponse_EResult_k_Failed;
constexpr int CMsgRequestCrateEscalationLevelResponse_EResult_EResult_ARRAYSIZE = CMsgRequestCrateEscalationLevelResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgRequestCrateEscalationLevelResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgRequestCrateEscalationLevelResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgRequestCrateEscalationLevelResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgRequestCrateEscalationLevelResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgRequestCrateEscalationLevelResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgRequestCrateEscalationLevelResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgRequestCrateEscalationLevelResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgRequestCrateEscalationLevelResponse_EResult>(
    CMsgRequestCrateEscalationLevelResponse_EResult_descriptor(), name, value);
}
enum CMsgRedeemCodeResponse_EResultCode : int {
  CMsgRedeemCodeResponse_EResultCode_k_Succeeded = 0,
  CMsgRedeemCodeResponse_EResultCode_k_Failed_CodeNotFound = 1,
  CMsgRedeemCodeResponse_EResultCode_k_Failed_CodeAlreadyUsed = 2,
  CMsgRedeemCodeResponse_EResultCode_k_Failed_OtherError = 3
};
bool CMsgRedeemCodeResponse_EResultCode_IsValid(int value);
constexpr CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse_EResultCode_EResultCode_MIN = CMsgRedeemCodeResponse_EResultCode_k_Succeeded;
constexpr CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse_EResultCode_EResultCode_MAX = CMsgRedeemCodeResponse_EResultCode_k_Failed_OtherError;
constexpr int CMsgRedeemCodeResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgRedeemCodeResponse_EResultCode_EResultCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgRedeemCodeResponse_EResultCode_descriptor();
template<typename T>
inline const std::string& CMsgRedeemCodeResponse_EResultCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgRedeemCodeResponse_EResultCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgRedeemCodeResponse_EResultCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgRedeemCodeResponse_EResultCode_descriptor(), enum_t_value);
}
inline bool CMsgRedeemCodeResponse_EResultCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgRedeemCodeResponse_EResultCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgRedeemCodeResponse_EResultCode>(
    CMsgRedeemCodeResponse_EResultCode_descriptor(), name, value);
}
enum CMsgClientToGCUnpackBundleResponse_EUnpackBundle : int {
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Succeeded = 0,
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_ItemIsNotBundle = 1,
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_UnableToCreateContainedItem = 2,
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_SOCacheError = 3,
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_ItemIsInvalid = 4,
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_BadItemQuantity = 5,
  CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_UnableToDeleteItem = 6
};
bool CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(int value);
constexpr CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_MIN = CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Succeeded;
constexpr CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_MAX = CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_UnableToDeleteItem;
constexpr int CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_ARRAYSIZE = CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUnpackBundleResponse_EUnpackBundle_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUnpackBundleResponse_EUnpackBundle>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUnpackBundleResponse_EUnpackBundle_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUnpackBundleResponse_EUnpackBundle_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUnpackBundleResponse_EUnpackBundle* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUnpackBundleResponse_EUnpackBundle>(
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor(), name, value);
}
enum CMsgClientToGCPackBundleResponse_EPackBundle : int {
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Succeeded = 0,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_InternalError = 1,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsNotBundle = 2,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_SOCacheError = 3,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsInvalid = 4,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_BadItemQuantity = 5,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_UnableToDeleteItem = 6,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_BundleCannotBePacked = 7,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsUntradeable = 8,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsEquipped = 9,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemHasGems = 10,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemMixedQuality = 11,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemInvalidQuality = 12,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsNonEconomy = 13,
  CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_Disabled = 14
};
bool CMsgClientToGCPackBundleResponse_EPackBundle_IsValid(int value);
constexpr CMsgClientToGCPackBundleResponse_EPackBundle CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_MIN = CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Succeeded;
constexpr CMsgClientToGCPackBundleResponse_EPackBundle CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_MAX = CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_Disabled;
constexpr int CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_ARRAYSIZE = CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPackBundleResponse_EPackBundle_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPackBundleResponse_EPackBundle_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPackBundleResponse_EPackBundle>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPackBundleResponse_EPackBundle_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPackBundleResponse_EPackBundle_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPackBundleResponse_EPackBundle_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPackBundleResponse_EPackBundle* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPackBundleResponse_EPackBundle>(
    CMsgClientToGCPackBundleResponse_EPackBundle_descriptor(), name, value);
}
enum CMsgClientToGCSetItemStyleResponse_ESetStyle : int {
  CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Succeeded = 0,
  CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Failed = 1,
  CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Failed_StyleIsLocked = 2
};
bool CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(int value);
constexpr CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_MIN = CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Succeeded;
constexpr CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_MAX = CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Failed_StyleIsLocked;
constexpr int CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_ARRAYSIZE = CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSetItemStyleResponse_ESetStyle_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSetItemStyleResponse_ESetStyle>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSetItemStyleResponse_ESetStyle_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSetItemStyleResponse_ESetStyle_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSetItemStyleResponse_ESetStyle* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSetItemStyleResponse_ESetStyle>(
    CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor(), name, value);
}
enum CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle : int {
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Succeeded = 0,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_PreReq = 1,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantAfford = 2,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantCommit = 3,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantLockCache = 4,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantAffordAttrib = 5,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantAffordGem = 6,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_NoCompendiumLevel = 7,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_AlreadyUnlocked = 8,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_OtherError = 9,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_ItemIsInvalid = 10,
  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_ToolIsInvalid = 11
};
bool CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(int value);
constexpr CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_MIN = CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Succeeded;
constexpr CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_MAX = CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_ToolIsInvalid;
constexpr int CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_ARRAYSIZE = CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle>(
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor(), name, value);
}
enum CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute : int {
  CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Succeeded = 0,
  CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed = 1,
  CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_ItemIsInvalid = 2,
  CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved = 3,
  CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_AttributeDoesntExist = 4
};
bool CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(int value);
constexpr CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_MIN = CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Succeeded;
constexpr CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_MAX = CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_AttributeDoesntExist;
constexpr int CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_ARRAYSIZE = CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute>(
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor(), name, value);
}
enum CMsgClientToGCNameItemResponse_ENameItem : int {
  CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Succeeded = 0,
  CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed = 1,
  CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_ToolIsInvalid = 2,
  CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_ItemIsInvalid = 3,
  CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_NameIsInvalid = 4
};
bool CMsgClientToGCNameItemResponse_ENameItem_IsValid(int value);
constexpr CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse_ENameItem_ENameItem_MIN = CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Succeeded;
constexpr CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse_ENameItem_ENameItem_MAX = CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_NameIsInvalid;
constexpr int CMsgClientToGCNameItemResponse_ENameItem_ENameItem_ARRAYSIZE = CMsgClientToGCNameItemResponse_ENameItem_ENameItem_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCNameItemResponse_ENameItem_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCNameItemResponse_ENameItem_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCNameItemResponse_ENameItem>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCNameItemResponse_ENameItem_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCNameItemResponse_ENameItem_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCNameItemResponse_ENameItem_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCNameItemResponse_ENameItem* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCNameItemResponse_ENameItem>(
    CMsgClientToGCNameItemResponse_ENameItem_descriptor(), name, value);
}
enum CMsgClientToGCCreateStaticRecipeResponse_EResponse : int {
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_Success = 0,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_OfferingDisabled = 1,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InvalidItems = 2,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InternalError = 3,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingLeague = 4,
  CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingEvent = 5
};
bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MIN = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_Success;
constexpr CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MAX = CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingEvent;
constexpr int CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCCreateStaticRecipeResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCCreateStaticRecipeResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCCreateStaticRecipeResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCCreateStaticRecipeResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCCreateStaticRecipeResponse_EResponse>(
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse : int {
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eInvalidItemDef = 5,
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eItemDefNotLimited = 6
};
bool CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_MIN = CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_MAX = CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eItemDefNotLimited;
constexpr int CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse>(
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_descriptor(), name, value);
}
enum EGCItemMsg : int {
  k_EMsgGCBase = 1000,
  k_EMsgGCSetItemPosition = 1001,
  k_EMsgClientToGCPackBundle = 1002,
  k_EMsgClientToGCPackBundleResponse = 1003,
  k_EMsgGCDelete = 1004,
  k_EMsgGCVerifyCacheSubscription = 1005,
  k_EMsgClientToGCNameItem = 1006,
  k_EMsgGCPaintItem = 1009,
  k_EMsgGCPaintItemResponse = 1010,
  k_EMsgGCNameBaseItem = 1019,
  k_EMsgGCNameBaseItemResponse = 1020,
  k_EMsgGCUseItemRequest = 1025,
  k_EMsgGCUseItemResponse = 1026,
  k_EMsgGCGiftedItems = 1027,
  k_EMsgGCUnwrapGiftRequest = 1037,
  k_EMsgGCUnwrapGiftResponse = 1038,
  k_EMsgGCSortItems = 1041,
  k_EMsgGCBackpackSortFinished = 1058,
  k_EMsgGCAdjustItemEquippedState = 1059,
  k_EMsgGCItemAcknowledged = 1062,
  k_EMsgClientToGCNameItemResponse = 1068,
  k_EMsgGCApplyStrangePart = 1073,
  k_EMsgGCApplyPennantUpgrade = 1076,
  k_EMsgGCSetItemPositions = 1077,
  k_EMsgGCApplyEggEssence = 1078,
  k_EMsgGCNameEggEssenceResponse = 1079,
  k_EMsgGCExtractGems = 1086,
  k_EMsgGCAddSocket = 1087,
  k_EMsgGCAddItemToSocket = 1088,
  k_EMsgGCAddItemToSocketResponse = 1089,
  k_EMsgGCAddSocketResponse = 1090,
  k_EMsgGCResetStrangeGemCount = 1091,
  k_EMsgGCRequestCrateItems = 1092,
  k_EMsgGCRequestCrateItemsResponse = 1093,
  k_EMsgGCExtractGemsResponse = 1094,
  k_EMsgGCResetStrangeGemCountResponse = 1095,
  k_EMsgGCServerUseItemRequest = 1103,
  k_EMsgGCAddGiftItem = 1104,
  k_EMsgClientToGCRemoveItemGifterAttributes = 1109,
  k_EMsgClientToGCRemoveItemName = 1110,
  k_EMsgClientToGCRemoveItemDescription = 1111,
  k_EMsgClientToGCRemoveItemAttributeResponse = 1112,
  k_EMsgGCDev_NewItemRequest = 2001,
  k_EMsgGCDev_NewItemRequestResponse = 2002,
  k_EMsgGCDev_UnlockAllItemStylesRequest = 2003,
  k_EMsgGCDev_UnlockAllItemStylesResponse = 2004,
  k_EMsgGCStorePurchaseFinalize = 2504,
  k_EMsgGCStorePurchaseFinalizeResponse = 2505,
  k_EMsgGCStorePurchaseCancel = 2506,
  k_EMsgGCStorePurchaseCancelResponse = 2507,
  k_EMsgGCStorePurchaseInit = 2510,
  k_EMsgGCStorePurchaseInitResponse = 2511,
  k_EMsgGCToGCBannedWordListUpdated = 2515,
  k_EMsgGCToGCDirtySDOCache = 2516,
  k_EMsgGCToGCUpdateSQLKeyValue = 2518,
  k_EMsgGCToGCBroadcastConsoleCommand = 2521,
  k_EMsgGCServerVersionUpdated = 2522,
  k_EMsgGCApplyAutograph = 2523,
  k_EMsgGCToGCWebAPIAccountChanged = 2524,
  k_EMsgGCClientVersionUpdated = 2528,
  k_EMsgGCToGCUpdateWelcomeMsg = 2529,
  k_EMsgGCToGCPlayerStrangeCountAdjustments = 2535,
  k_EMsgGCRequestStoreSalesData = 2536,
  k_EMsgGCRequestStoreSalesDataResponse = 2537,
  k_EMsgGCRequestStoreSalesDataUpToDateResponse = 2538,
  k_EMsgGCToGCPingRequest = 2539,
  k_EMsgGCToGCPingResponse = 2540,
  k_EMsgGCToGCGetUserSessionServer = 2541,
  k_EMsgGCToGCGetUserSessionServerResponse = 2542,
  k_EMsgGCToGCGetUserServerMembers = 2543,
  k_EMsgGCToGCGetUserServerMembersResponse = 2544,
  k_EMsgGCToGCCanUseDropRateBonus = 2547,
  k_EMsgSQLAddDropRateBonus = 2548,
  k_EMsgGCToGCRefreshSOCache = 2549,
  k_EMsgGCToGCGrantAccountRolledItems = 2554,
  k_EMsgGCToGCGrantSelfMadeItemToAccount = 2555,
  k_EMsgGCStatueCraft = 2561,
  k_EMsgGCRedeemCode = 2562,
  k_EMsgGCRedeemCodeResponse = 2563,
  k_EMsgGCToGCItemConsumptionRollback = 2564,
  k_EMsgClientToGCWrapAndDeliverGift = 2565,
  k_EMsgClientToGCWrapAndDeliverGiftResponse = 2566,
  k_EMsgClientToGCUnpackBundleResponse = 2567,
  k_EMsgGCToClientStoreTransactionCompleted = 2568,
  k_EMsgClientToGCEquipItems = 2569,
  k_EMsgClientToGCEquipItemsResponse = 2570,
  k_EMsgClientToGCUnlockItemStyle = 2571,
  k_EMsgClientToGCUnlockItemStyleResponse = 2572,
  k_EMsgClientToGCSetItemInventoryCategory = 2573,
  k_EMsgClientToGCUnlockCrate = 2574,
  k_EMsgClientToGCUnlockCrateResponse = 2575,
  k_EMsgClientToGCUnpackBundle = 2576,
  k_EMsgClientToGCSetItemStyle = 2577,
  k_EMsgClientToGCSetItemStyleResponse = 2578,
  k_EMsgSQLGCToGCGrantBackpackSlots = 2580,
  k_EMsgClientToGCLookupAccountName = 2581,
  k_EMsgClientToGCLookupAccountNameResponse = 2582,
  k_EMsgClientToGCCreateStaticRecipe = 2584,
  k_EMsgClientToGCCreateStaticRecipeResponse = 2585,
  k_EMsgGCToGCStoreProcessCDKeyTransaction = 2586,
  k_EMsgGCToGCStoreProcessCDKeyTransactionResponse = 2587,
  k_EMsgGCToGCStoreProcessSettlement = 2588,
  k_EMsgGCToGCStoreProcessSettlementResponse = 2589,
  k_EMsgGCToGCConsoleOutput = 2590,
  k_EMsgGCToClientItemAges = 2591,
  k_EMsgGCToGCInternalTestMsg = 2592,
  k_EMsgGCToGCClientServerVersionsUpdated = 2593,
  k_EMsgGCUseMultipleItemsRequest = 2594,
  k_EMsgGCGetAccountSubscriptionItem = 2595,
  k_EMsgGCGetAccountSubscriptionItemResponse = 2596,
  k_EMsgGCToGCBroadcastMessageFromSub = 2598,
  k_EMsgGCToClientCurrencyPricePoints = 2599,
  k_EMsgGCToGCAddSubscriptionTime = 2600,
  k_EMsgGCToGCFlushSteamInventoryCache = 2601,
  k_EMsgGCRequestCrateEscalationLevel = 2602,
  k_EMsgGCRequestCrateEscalationLevelResponse = 2603,
  k_EMsgGCToGCUpdateSubscriptionItems = 2604,
  k_EMsgGCToGCSelfPing = 2605,
  k_EMsgGCToGCGetInfuxIntervalStats = 2606,
  k_EMsgGCToGCGetInfuxIntervalStatsResponse = 2607,
  k_EMsgGCToGCPurchaseSucceeded = 2608,
  k_EMsgClientToGCGetLimitedItemPurchaseQuantity = 2609,
  k_EMsgClientToGCGetLimitedItemPurchaseQuantityResponse = 2610,
  k_EMsgGCToGCBetaDeleteItems = 2611
};
bool EGCItemMsg_IsValid(int value);
constexpr EGCItemMsg EGCItemMsg_MIN = k_EMsgGCBase;
constexpr EGCItemMsg EGCItemMsg_MAX = k_EMsgGCToGCBetaDeleteItems;
constexpr int EGCItemMsg_ARRAYSIZE = EGCItemMsg_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCItemMsg_descriptor();
template<typename T>
inline const std::string& EGCItemMsg_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCItemMsg>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCItemMsg_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCItemMsg_descriptor(), enum_t_value);
}
inline bool EGCItemMsg_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCItemMsg* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCItemMsg>(
    EGCItemMsg_descriptor(), name, value);
}
enum EGCMsgInitiateTradeResponse : int {
  k_EGCMsgInitiateTradeResponse_Accepted = 0,
  k_EGCMsgInitiateTradeResponse_Declined = 1,
  k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator = 2,
  k_EGCMsgInitiateTradeResponse_VAC_Banned_Target = 3,
  k_EGCMsgInitiateTradeResponse_Target_Already_Trading = 4,
  k_EGCMsgInitiateTradeResponse_Disabled = 5,
  k_EGCMsgInitiateTradeResponse_NotLoggedIn = 6,
  k_EGCMsgInitiateTradeResponse_Cancel = 7,
  k_EGCMsgInitiateTradeResponse_TooSoon = 8,
  k_EGCMsgInitiateTradeResponse_TooSoonPenalty = 9,
  k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator = 10,
  k_EGCMsgInitiateTradeResponse_Trade_Banned_Target = 11,
  k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED = 12,
  k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator = 13,
  k_EGCMsgInitiateTradeResponse_Service_Unavailable = 14,
  k_EGCMsgInitiateTradeResponse_Target_Blocked = 15,
  k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail = 16,
  k_EGCMsgInitiateTradeResponse_NeedSteamGuard = 17,
  k_EGCMsgInitiateTradeResponse_SteamGuardDuration = 18,
  k_EGCMsgInitiateTradeResponse_TheyCannotTrade = 19,
  k_EGCMsgInitiateTradeResponse_Recent_Password_Reset = 20,
  k_EGCMsgInitiateTradeResponse_Using_New_Device = 21,
  k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie = 22,
  k_EGCMsgInitiateTradeResponse_TooRecentFriend = 23,
  k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted = 24
};
bool EGCMsgInitiateTradeResponse_IsValid(int value);
constexpr EGCMsgInitiateTradeResponse EGCMsgInitiateTradeResponse_MIN = k_EGCMsgInitiateTradeResponse_Accepted;
constexpr EGCMsgInitiateTradeResponse EGCMsgInitiateTradeResponse_MAX = k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted;
constexpr int EGCMsgInitiateTradeResponse_ARRAYSIZE = EGCMsgInitiateTradeResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor();
template<typename T>
inline const std::string& EGCMsgInitiateTradeResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCMsgInitiateTradeResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCMsgInitiateTradeResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCMsgInitiateTradeResponse_descriptor(), enum_t_value);
}
inline bool EGCMsgInitiateTradeResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCMsgInitiateTradeResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCMsgInitiateTradeResponse>(
    EGCMsgInitiateTradeResponse_descriptor(), name, value);
}
// ===================================================================

class CMsgApplyAutograph final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgApplyAutograph) */ {
 public:
  inline CMsgApplyAutograph() : CMsgApplyAutograph(nullptr) {}
  ~CMsgApplyAutograph() override;
  explicit PROTOBUF_CONSTEXPR CMsgApplyAutograph(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgApplyAutograph(const CMsgApplyAutograph& from);
  CMsgApplyAutograph(CMsgApplyAutograph&& from) noexcept
    : CMsgApplyAutograph() {
    *this = ::std::move(from);
  }

  inline CMsgApplyAutograph& operator=(const CMsgApplyAutograph& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgApplyAutograph& operator=(CMsgApplyAutograph&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgApplyAutograph& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgApplyAutograph* internal_default_instance() {
    return reinterpret_cast<const CMsgApplyAutograph*>(
               &_CMsgApplyAutograph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgApplyAutograph& a, CMsgApplyAutograph& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgApplyAutograph* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgApplyAutograph* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgApplyAutograph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgApplyAutograph>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgApplyAutograph& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgApplyAutograph& from) {
    CMsgApplyAutograph::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgApplyAutograph* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgApplyAutograph";
  }
  protected:
  explicit CMsgApplyAutograph(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutographItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
  };
  // optional uint64 autograph_item_id = 1;
  bool has_autograph_item_id() const;
  private:
  bool _internal_has_autograph_item_id() const;
  public:
  void clear_autograph_item_id();
  uint64_t autograph_item_id() const;
  void set_autograph_item_id(uint64_t value);
  private:
  uint64_t _internal_autograph_item_id() const;
  void _internal_set_autograph_item_id(uint64_t value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgApplyAutograph)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t autograph_item_id_;
    uint64_t item_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAdjustItemEquippedState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAdjustItemEquippedState) */ {
 public:
  inline CMsgAdjustItemEquippedState() : CMsgAdjustItemEquippedState(nullptr) {}
  ~CMsgAdjustItemEquippedState() override;
  explicit PROTOBUF_CONSTEXPR CMsgAdjustItemEquippedState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from);
  CMsgAdjustItemEquippedState(CMsgAdjustItemEquippedState&& from) noexcept
    : CMsgAdjustItemEquippedState() {
    *this = ::std::move(from);
  }

  inline CMsgAdjustItemEquippedState& operator=(const CMsgAdjustItemEquippedState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAdjustItemEquippedState& operator=(CMsgAdjustItemEquippedState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAdjustItemEquippedState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAdjustItemEquippedState* internal_default_instance() {
    return reinterpret_cast<const CMsgAdjustItemEquippedState*>(
               &_CMsgAdjustItemEquippedState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgAdjustItemEquippedState& a, CMsgAdjustItemEquippedState& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAdjustItemEquippedState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAdjustItemEquippedState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAdjustItemEquippedState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAdjustItemEquippedState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAdjustItemEquippedState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAdjustItemEquippedState& from) {
    CMsgAdjustItemEquippedState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAdjustItemEquippedState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAdjustItemEquippedState";
  }
  protected:
  explicit CMsgAdjustItemEquippedState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kNewClassFieldNumber = 2,
    kNewSlotFieldNumber = 3,
    kStyleIndexFieldNumber = 4,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 new_class = 2;
  bool has_new_class() const;
  private:
  bool _internal_has_new_class() const;
  public:
  void clear_new_class();
  uint32_t new_class() const;
  void set_new_class(uint32_t value);
  private:
  uint32_t _internal_new_class() const;
  void _internal_set_new_class(uint32_t value);
  public:

  // optional uint32 new_slot = 3;
  bool has_new_slot() const;
  private:
  bool _internal_has_new_slot() const;
  public:
  void clear_new_slot();
  uint32_t new_slot() const;
  void set_new_slot(uint32_t value);
  private:
  uint32_t _internal_new_slot() const;
  void _internal_set_new_slot(uint32_t value);
  public:

  // optional uint32 style_index = 4 [default = 255];
  bool has_style_index() const;
  private:
  bool _internal_has_style_index() const;
  public:
  void clear_style_index();
  uint32_t style_index() const;
  void set_style_index(uint32_t value);
  private:
  uint32_t _internal_style_index() const;
  void _internal_set_style_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAdjustItemEquippedState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t new_class_;
    uint32_t new_slot_;
    uint32_t style_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment) */ {
 public:
  inline CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() : CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(nullptr) {}
  ~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() override;
  explicit PROTOBUF_CONSTEXPR CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from);
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment&& from) noexcept
    : CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() {
    *this = ::std::move(from);
  }

  inline CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& operator=(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& operator=(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* internal_default_instance() {
    return reinterpret_cast<const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment*>(
               &_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& a, CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
    CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment";
  }
  protected:
  explicit CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kEventTypeFieldNumber = 1,
    kAdjustmentFieldNumber = 3,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 event_type = 1;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  uint32_t event_type() const;
  void set_event_type(uint32_t value);
  private:
  uint32_t _internal_event_type() const;
  void _internal_set_event_type(uint32_t value);
  public:

  // optional uint32 adjustment = 3;
  bool has_adjustment() const;
  private:
  bool _internal_has_adjustment() const;
  public:
  void clear_adjustment();
  uint32_t adjustment() const;
  void set_adjustment(uint32_t value);
  private:
  uint32_t _internal_adjustment() const;
  void _internal_set_adjustment(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t event_type_;
    uint32_t adjustment_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgEconPlayerStrangeCountAdjustment final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgEconPlayerStrangeCountAdjustment) */ {
 public:
  inline CMsgEconPlayerStrangeCountAdjustment() : CMsgEconPlayerStrangeCountAdjustment(nullptr) {}
  ~CMsgEconPlayerStrangeCountAdjustment() override;
  explicit PROTOBUF_CONSTEXPR CMsgEconPlayerStrangeCountAdjustment(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgEconPlayerStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment& from);
  CMsgEconPlayerStrangeCountAdjustment(CMsgEconPlayerStrangeCountAdjustment&& from) noexcept
    : CMsgEconPlayerStrangeCountAdjustment() {
    *this = ::std::move(from);
  }

  inline CMsgEconPlayerStrangeCountAdjustment& operator=(const CMsgEconPlayerStrangeCountAdjustment& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgEconPlayerStrangeCountAdjustment& operator=(CMsgEconPlayerStrangeCountAdjustment&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgEconPlayerStrangeCountAdjustment& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgEconPlayerStrangeCountAdjustment* internal_default_instance() {
    return reinterpret_cast<const CMsgEconPlayerStrangeCountAdjustment*>(
               &_CMsgEconPlayerStrangeCountAdjustment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgEconPlayerStrangeCountAdjustment& a, CMsgEconPlayerStrangeCountAdjustment& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgEconPlayerStrangeCountAdjustment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgEconPlayerStrangeCountAdjustment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgEconPlayerStrangeCountAdjustment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgEconPlayerStrangeCountAdjustment>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgEconPlayerStrangeCountAdjustment& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgEconPlayerStrangeCountAdjustment& from) {
    CMsgEconPlayerStrangeCountAdjustment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEconPlayerStrangeCountAdjustment* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgEconPlayerStrangeCountAdjustment";
  }
  protected:
  explicit CMsgEconPlayerStrangeCountAdjustment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment CStrangeCountAdjustment;

  // accessors -------------------------------------------------------

  enum : int {
    kStrangeCountAdjustmentsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kTurboModeFieldNumber = 3,
  };
  // repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  int strange_count_adjustments_size() const;
  private:
  int _internal_strange_count_adjustments_size() const;
  public:
  void clear_strange_count_adjustments();
  ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* mutable_strange_count_adjustments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >*
      mutable_strange_count_adjustments();
  private:
  const ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& _internal_strange_count_adjustments(int index) const;
  ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* _internal_add_strange_count_adjustments();
  public:
  const ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& strange_count_adjustments(int index) const;
  ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* add_strange_count_adjustments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >&
      strange_count_adjustments() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional bool turbo_mode = 3;
  bool has_turbo_mode() const;
  private:
  bool _internal_has_turbo_mode() const;
  public:
  void clear_turbo_mode();
  bool turbo_mode() const;
  void set_turbo_mode(bool value);
  private:
  bool _internal_turbo_mode() const;
  void _internal_set_turbo_mode(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgEconPlayerStrangeCountAdjustment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment > strange_count_adjustments_;
    uint32_t account_id_;
    bool turbo_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgCraftingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCraftingResponse) */ {
 public:
  inline CMsgCraftingResponse() : CMsgCraftingResponse(nullptr) {}
  ~CMsgCraftingResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgCraftingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCraftingResponse(const CMsgCraftingResponse& from);
  CMsgCraftingResponse(CMsgCraftingResponse&& from) noexcept
    : CMsgCraftingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgCraftingResponse& operator=(const CMsgCraftingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCraftingResponse& operator=(CMsgCraftingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCraftingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCraftingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgCraftingResponse*>(
               &_CMsgCraftingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgCraftingResponse& a, CMsgCraftingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCraftingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCraftingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCraftingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCraftingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCraftingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCraftingResponse& from) {
    CMsgCraftingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCraftingResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCraftingResponse";
  }
  protected:
  explicit CMsgCraftingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 1,
  };
  // repeated uint64 item_ids = 1;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // @@protoc_insertion_point(class_scope:CMsgCraftingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestStoreSalesData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestStoreSalesData) */ {
 public:
  inline CMsgGCRequestStoreSalesData() : CMsgGCRequestStoreSalesData(nullptr) {}
  ~CMsgGCRequestStoreSalesData() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCRequestStoreSalesData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRequestStoreSalesData(const CMsgGCRequestStoreSalesData& from);
  CMsgGCRequestStoreSalesData(CMsgGCRequestStoreSalesData&& from) noexcept
    : CMsgGCRequestStoreSalesData() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestStoreSalesData& operator=(const CMsgGCRequestStoreSalesData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRequestStoreSalesData& operator=(CMsgGCRequestStoreSalesData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRequestStoreSalesData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRequestStoreSalesData* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestStoreSalesData*>(
               &_CMsgGCRequestStoreSalesData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgGCRequestStoreSalesData& a, CMsgGCRequestStoreSalesData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRequestStoreSalesData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRequestStoreSalesData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCRequestStoreSalesData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCRequestStoreSalesData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCRequestStoreSalesData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCRequestStoreSalesData& from) {
    CMsgGCRequestStoreSalesData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestStoreSalesData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRequestStoreSalesData";
  }
  protected:
  explicit CMsgGCRequestStoreSalesData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kCurrencyFieldNumber = 2,
  };
  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // optional uint32 currency = 2;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  uint32_t currency() const;
  void set_currency(uint32_t value);
  private:
  uint32_t _internal_currency() const;
  void _internal_set_currency(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRequestStoreSalesData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t version_;
    uint32_t currency_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestStoreSalesDataResponse_Price final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestStoreSalesDataResponse.Price) */ {
 public:
  inline CMsgGCRequestStoreSalesDataResponse_Price() : CMsgGCRequestStoreSalesDataResponse_Price(nullptr) {}
  ~CMsgGCRequestStoreSalesDataResponse_Price() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCRequestStoreSalesDataResponse_Price(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRequestStoreSalesDataResponse_Price(const CMsgGCRequestStoreSalesDataResponse_Price& from);
  CMsgGCRequestStoreSalesDataResponse_Price(CMsgGCRequestStoreSalesDataResponse_Price&& from) noexcept
    : CMsgGCRequestStoreSalesDataResponse_Price() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestStoreSalesDataResponse_Price& operator=(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRequestStoreSalesDataResponse_Price& operator=(CMsgGCRequestStoreSalesDataResponse_Price&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRequestStoreSalesDataResponse_Price& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRequestStoreSalesDataResponse_Price* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestStoreSalesDataResponse_Price*>(
               &_CMsgGCRequestStoreSalesDataResponse_Price_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgGCRequestStoreSalesDataResponse_Price& a, CMsgGCRequestStoreSalesDataResponse_Price& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCRequestStoreSalesDataResponse_Price* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCRequestStoreSalesDataResponse_Price>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCRequestStoreSalesDataResponse_Price& from) {
    CMsgGCRequestStoreSalesDataResponse_Price::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestStoreSalesDataResponse_Price* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRequestStoreSalesDataResponse.Price";
  }
  protected:
  explicit CMsgGCRequestStoreSalesDataResponse_Price(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefFieldNumber = 1,
    kPriceFieldNumber = 2,
  };
  // optional uint32 item_def = 1;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  uint32_t item_def() const;
  void set_item_def(uint32_t value);
  private:
  uint32_t _internal_item_def() const;
  void _internal_set_item_def(uint32_t value);
  public:

  // optional uint32 price = 2;
  bool has_price() const;
  private:
  bool _internal_has_price() const;
  public:
  void clear_price();
  uint32_t price() const;
  void set_price(uint32_t value);
  private:
  uint32_t _internal_price() const;
  void _internal_set_price(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRequestStoreSalesDataResponse.Price)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t item_def_;
    uint32_t price_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestStoreSalesDataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestStoreSalesDataResponse) */ {
 public:
  inline CMsgGCRequestStoreSalesDataResponse() : CMsgGCRequestStoreSalesDataResponse(nullptr) {}
  ~CMsgGCRequestStoreSalesDataResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCRequestStoreSalesDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRequestStoreSalesDataResponse(const CMsgGCRequestStoreSalesDataResponse& from);
  CMsgGCRequestStoreSalesDataResponse(CMsgGCRequestStoreSalesDataResponse&& from) noexcept
    : CMsgGCRequestStoreSalesDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestStoreSalesDataResponse& operator=(const CMsgGCRequestStoreSalesDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRequestStoreSalesDataResponse& operator=(CMsgGCRequestStoreSalesDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRequestStoreSalesDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRequestStoreSalesDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestStoreSalesDataResponse*>(
               &_CMsgGCRequestStoreSalesDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgGCRequestStoreSalesDataResponse& a, CMsgGCRequestStoreSalesDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRequestStoreSalesDataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRequestStoreSalesDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCRequestStoreSalesDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCRequestStoreSalesDataResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCRequestStoreSalesDataResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCRequestStoreSalesDataResponse& from) {
    CMsgGCRequestStoreSalesDataResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestStoreSalesDataResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRequestStoreSalesDataResponse";
  }
  protected:
  explicit CMsgGCRequestStoreSalesDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCRequestStoreSalesDataResponse_Price Price;

  // accessors -------------------------------------------------------

  enum : int {
    kSalePriceFieldNumber = 1,
    kVersionFieldNumber = 2,
    kExpirationTimeFieldNumber = 3,
  };
  // repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  int sale_price_size() const;
  private:
  int _internal_sale_price_size() const;
  public:
  void clear_sale_price();
  ::CMsgGCRequestStoreSalesDataResponse_Price* mutable_sale_price(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCRequestStoreSalesDataResponse_Price >*
      mutable_sale_price();
  private:
  const ::CMsgGCRequestStoreSalesDataResponse_Price& _internal_sale_price(int index) const;
  ::CMsgGCRequestStoreSalesDataResponse_Price* _internal_add_sale_price();
  public:
  const ::CMsgGCRequestStoreSalesDataResponse_Price& sale_price(int index) const;
  ::CMsgGCRequestStoreSalesDataResponse_Price* add_sale_price();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCRequestStoreSalesDataResponse_Price >&
      sale_price() const;

  // optional uint32 version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // optional uint32 expiration_time = 3;
  bool has_expiration_time() const;
  private:
  bool _internal_has_expiration_time() const;
  public:
  void clear_expiration_time();
  uint32_t expiration_time() const;
  void set_expiration_time(uint32_t value);
  private:
  uint32_t _internal_expiration_time() const;
  void _internal_set_expiration_time(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRequestStoreSalesDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCRequestStoreSalesDataResponse_Price > sale_price_;
    uint32_t version_;
    uint32_t expiration_time_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestStoreSalesDataUpToDateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestStoreSalesDataUpToDateResponse) */ {
 public:
  inline CMsgGCRequestStoreSalesDataUpToDateResponse() : CMsgGCRequestStoreSalesDataUpToDateResponse(nullptr) {}
  ~CMsgGCRequestStoreSalesDataUpToDateResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCRequestStoreSalesDataUpToDateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRequestStoreSalesDataUpToDateResponse(const CMsgGCRequestStoreSalesDataUpToDateResponse& from);
  CMsgGCRequestStoreSalesDataUpToDateResponse(CMsgGCRequestStoreSalesDataUpToDateResponse&& from) noexcept
    : CMsgGCRequestStoreSalesDataUpToDateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestStoreSalesDataUpToDateResponse& operator=(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRequestStoreSalesDataUpToDateResponse& operator=(CMsgGCRequestStoreSalesDataUpToDateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCRequestStoreSalesDataUpToDateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRequestStoreSalesDataUpToDateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestStoreSalesDataUpToDateResponse*>(
               &_CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgGCRequestStoreSalesDataUpToDateResponse& a, CMsgGCRequestStoreSalesDataUpToDateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCRequestStoreSalesDataUpToDateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCRequestStoreSalesDataUpToDateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
    CMsgGCRequestStoreSalesDataUpToDateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestStoreSalesDataUpToDateResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRequestStoreSalesDataUpToDateResponse";
  }
  protected:
  explicit CMsgGCRequestStoreSalesDataUpToDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kExpirationTimeFieldNumber = 2,
  };
  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // optional uint32 expiration_time = 2;
  bool has_expiration_time() const;
  private:
  bool _internal_has_expiration_time() const;
  public:
  void clear_expiration_time();
  uint32_t expiration_time() const;
  void set_expiration_time(uint32_t value);
  private:
  uint32_t _internal_expiration_time() const;
  void _internal_set_expiration_time(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRequestStoreSalesDataUpToDateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t version_;
    uint32_t expiration_time_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCPingRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgGCToGCPingRequest) */ {
 public:
  inline CMsgGCToGCPingRequest() : CMsgGCToGCPingRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCPingRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCPingRequest(const CMsgGCToGCPingRequest& from);
  CMsgGCToGCPingRequest(CMsgGCToGCPingRequest&& from) noexcept
    : CMsgGCToGCPingRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCPingRequest& operator=(const CMsgGCToGCPingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCPingRequest& operator=(CMsgGCToGCPingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCPingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCPingRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCPingRequest*>(
               &_CMsgGCToGCPingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgGCToGCPingRequest& a, CMsgGCToGCPingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCPingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCPingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCPingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCPingRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgGCToGCPingRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgGCToGCPingRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCPingRequest";
  }
  protected:
  explicit CMsgGCToGCPingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCPingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCPingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgGCToGCPingResponse) */ {
 public:
  inline CMsgGCToGCPingResponse() : CMsgGCToGCPingResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCPingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCPingResponse(const CMsgGCToGCPingResponse& from);
  CMsgGCToGCPingResponse(CMsgGCToGCPingResponse&& from) noexcept
    : CMsgGCToGCPingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCPingResponse& operator=(const CMsgGCToGCPingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCPingResponse& operator=(CMsgGCToGCPingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCPingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCPingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCPingResponse*>(
               &_CMsgGCToGCPingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgGCToGCPingResponse& a, CMsgGCToGCPingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCPingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCPingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCPingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCPingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgGCToGCPingResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgGCToGCPingResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCPingResponse";
  }
  protected:
  explicit CMsgGCToGCPingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCPingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGetUserSessionServer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGetUserSessionServer) */ {
 public:
  inline CMsgGCToGCGetUserSessionServer() : CMsgGCToGCGetUserSessionServer(nullptr) {}
  ~CMsgGCToGCGetUserSessionServer() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGetUserSessionServer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGetUserSessionServer(const CMsgGCToGCGetUserSessionServer& from);
  CMsgGCToGCGetUserSessionServer(CMsgGCToGCGetUserSessionServer&& from) noexcept
    : CMsgGCToGCGetUserSessionServer() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGetUserSessionServer& operator=(const CMsgGCToGCGetUserSessionServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGetUserSessionServer& operator=(CMsgGCToGCGetUserSessionServer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGetUserSessionServer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGetUserSessionServer* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGetUserSessionServer*>(
               &_CMsgGCToGCGetUserSessionServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgGCToGCGetUserSessionServer& a, CMsgGCToGCGetUserSessionServer& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGetUserSessionServer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGetUserSessionServer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGetUserSessionServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGetUserSessionServer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGetUserSessionServer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGetUserSessionServer& from) {
    CMsgGCToGCGetUserSessionServer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGetUserSessionServer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGetUserSessionServer";
  }
  protected:
  explicit CMsgGCToGCGetUserSessionServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGetUserSessionServer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGetUserSessionServerResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGetUserSessionServerResponse) */ {
 public:
  inline CMsgGCToGCGetUserSessionServerResponse() : CMsgGCToGCGetUserSessionServerResponse(nullptr) {}
  ~CMsgGCToGCGetUserSessionServerResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGetUserSessionServerResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGetUserSessionServerResponse(const CMsgGCToGCGetUserSessionServerResponse& from);
  CMsgGCToGCGetUserSessionServerResponse(CMsgGCToGCGetUserSessionServerResponse&& from) noexcept
    : CMsgGCToGCGetUserSessionServerResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGetUserSessionServerResponse& operator=(const CMsgGCToGCGetUserSessionServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGetUserSessionServerResponse& operator=(CMsgGCToGCGetUserSessionServerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGetUserSessionServerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGetUserSessionServerResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGetUserSessionServerResponse*>(
               &_CMsgGCToGCGetUserSessionServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgGCToGCGetUserSessionServerResponse& a, CMsgGCToGCGetUserSessionServerResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGetUserSessionServerResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGetUserSessionServerResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGetUserSessionServerResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGetUserSessionServerResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGetUserSessionServerResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGetUserSessionServerResponse& from) {
    CMsgGCToGCGetUserSessionServerResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGetUserSessionServerResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGetUserSessionServerResponse";
  }
  protected:
  explicit CMsgGCToGCGetUserSessionServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerSteamIdFieldNumber = 1,
    kIsOnlineFieldNumber = 2,
  };
  // optional fixed64 server_steam_id = 1;
  bool has_server_steam_id() const;
  private:
  bool _internal_has_server_steam_id() const;
  public:
  void clear_server_steam_id();
  uint64_t server_steam_id() const;
  void set_server_steam_id(uint64_t value);
  private:
  uint64_t _internal_server_steam_id() const;
  void _internal_set_server_steam_id(uint64_t value);
  public:

  // optional bool is_online = 2;
  bool has_is_online() const;
  private:
  bool _internal_has_is_online() const;
  public:
  void clear_is_online();
  bool is_online() const;
  void set_is_online(bool value);
  private:
  bool _internal_is_online() const;
  void _internal_set_is_online(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGetUserSessionServerResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t server_steam_id_;
    bool is_online_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGetUserServerMembers final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGetUserServerMembers) */ {
 public:
  inline CMsgGCToGCGetUserServerMembers() : CMsgGCToGCGetUserServerMembers(nullptr) {}
  ~CMsgGCToGCGetUserServerMembers() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGetUserServerMembers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGetUserServerMembers(const CMsgGCToGCGetUserServerMembers& from);
  CMsgGCToGCGetUserServerMembers(CMsgGCToGCGetUserServerMembers&& from) noexcept
    : CMsgGCToGCGetUserServerMembers() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGetUserServerMembers& operator=(const CMsgGCToGCGetUserServerMembers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGetUserServerMembers& operator=(CMsgGCToGCGetUserServerMembers&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGetUserServerMembers& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGetUserServerMembers* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGetUserServerMembers*>(
               &_CMsgGCToGCGetUserServerMembers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgGCToGCGetUserServerMembers& a, CMsgGCToGCGetUserServerMembers& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGetUserServerMembers* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGetUserServerMembers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGetUserServerMembers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGetUserServerMembers>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGetUserServerMembers& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGetUserServerMembers& from) {
    CMsgGCToGCGetUserServerMembers::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGetUserServerMembers* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGetUserServerMembers";
  }
  protected:
  explicit CMsgGCToGCGetUserServerMembers(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kMaxSpectatorsFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 max_spectators = 2;
  bool has_max_spectators() const;
  private:
  bool _internal_has_max_spectators() const;
  public:
  void clear_max_spectators();
  uint32_t max_spectators() const;
  void set_max_spectators(uint32_t value);
  private:
  uint32_t _internal_max_spectators() const;
  void _internal_set_max_spectators(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGetUserServerMembers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t max_spectators_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGetUserServerMembersResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGetUserServerMembersResponse) */ {
 public:
  inline CMsgGCToGCGetUserServerMembersResponse() : CMsgGCToGCGetUserServerMembersResponse(nullptr) {}
  ~CMsgGCToGCGetUserServerMembersResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGetUserServerMembersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGetUserServerMembersResponse(const CMsgGCToGCGetUserServerMembersResponse& from);
  CMsgGCToGCGetUserServerMembersResponse(CMsgGCToGCGetUserServerMembersResponse&& from) noexcept
    : CMsgGCToGCGetUserServerMembersResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGetUserServerMembersResponse& operator=(const CMsgGCToGCGetUserServerMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGetUserServerMembersResponse& operator=(CMsgGCToGCGetUserServerMembersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGetUserServerMembersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGetUserServerMembersResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGetUserServerMembersResponse*>(
               &_CMsgGCToGCGetUserServerMembersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgGCToGCGetUserServerMembersResponse& a, CMsgGCToGCGetUserServerMembersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGetUserServerMembersResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGetUserServerMembersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGetUserServerMembersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGetUserServerMembersResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGetUserServerMembersResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGetUserServerMembersResponse& from) {
    CMsgGCToGCGetUserServerMembersResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGetUserServerMembersResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGetUserServerMembersResponse";
  }
  protected:
  explicit CMsgGCToGCGetUserServerMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberAccountIdFieldNumber = 1,
  };
  // repeated uint32 member_account_id = 1;
  int member_account_id_size() const;
  private:
  int _internal_member_account_id_size() const;
  public:
  void clear_member_account_id();
  private:
  uint32_t _internal_member_account_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_member_account_id() const;
  void _internal_add_member_account_id(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_member_account_id();
  public:
  uint32_t member_account_id(int index) const;
  void set_member_account_id(int index, uint32_t value);
  void add_member_account_id(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      member_account_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_member_account_id();

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGetUserServerMembersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > member_account_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgLookupMultipleAccountNames final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgLookupMultipleAccountNames) */ {
 public:
  inline CMsgLookupMultipleAccountNames() : CMsgLookupMultipleAccountNames(nullptr) {}
  ~CMsgLookupMultipleAccountNames() override;
  explicit PROTOBUF_CONSTEXPR CMsgLookupMultipleAccountNames(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLookupMultipleAccountNames(const CMsgLookupMultipleAccountNames& from);
  CMsgLookupMultipleAccountNames(CMsgLookupMultipleAccountNames&& from) noexcept
    : CMsgLookupMultipleAccountNames() {
    *this = ::std::move(from);
  }

  inline CMsgLookupMultipleAccountNames& operator=(const CMsgLookupMultipleAccountNames& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLookupMultipleAccountNames& operator=(CMsgLookupMultipleAccountNames&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLookupMultipleAccountNames& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLookupMultipleAccountNames* internal_default_instance() {
    return reinterpret_cast<const CMsgLookupMultipleAccountNames*>(
               &_CMsgLookupMultipleAccountNames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgLookupMultipleAccountNames& a, CMsgLookupMultipleAccountNames& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLookupMultipleAccountNames* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLookupMultipleAccountNames* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgLookupMultipleAccountNames* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgLookupMultipleAccountNames>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgLookupMultipleAccountNames& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgLookupMultipleAccountNames& from) {
    CMsgLookupMultipleAccountNames::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLookupMultipleAccountNames* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLookupMultipleAccountNames";
  }
  protected:
  explicit CMsgLookupMultipleAccountNames(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidsFieldNumber = 1,
  };
  // repeated uint32 accountids = 1 [packed = true];
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;
  public:
  void clear_accountids();
  private:
  uint32_t _internal_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_accountids() const;
  void _internal_add_accountids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_accountids();
  public:
  uint32_t accountids(int index) const;
  void set_accountids(int index, uint32_t value);
  void add_accountids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_accountids();

  // @@protoc_insertion_point(class_scope:CMsgLookupMultipleAccountNames)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > accountids_;
    mutable std::atomic<int> _accountids_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgLookupMultipleAccountNamesResponse_Account final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgLookupMultipleAccountNamesResponse.Account) */ {
 public:
  inline CMsgLookupMultipleAccountNamesResponse_Account() : CMsgLookupMultipleAccountNamesResponse_Account(nullptr) {}
  ~CMsgLookupMultipleAccountNamesResponse_Account() override;
  explicit PROTOBUF_CONSTEXPR CMsgLookupMultipleAccountNamesResponse_Account(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLookupMultipleAccountNamesResponse_Account(const CMsgLookupMultipleAccountNamesResponse_Account& from);
  CMsgLookupMultipleAccountNamesResponse_Account(CMsgLookupMultipleAccountNamesResponse_Account&& from) noexcept
    : CMsgLookupMultipleAccountNamesResponse_Account() {
    *this = ::std::move(from);
  }

  inline CMsgLookupMultipleAccountNamesResponse_Account& operator=(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLookupMultipleAccountNamesResponse_Account& operator=(CMsgLookupMultipleAccountNamesResponse_Account&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLookupMultipleAccountNamesResponse_Account& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLookupMultipleAccountNamesResponse_Account* internal_default_instance() {
    return reinterpret_cast<const CMsgLookupMultipleAccountNamesResponse_Account*>(
               &_CMsgLookupMultipleAccountNamesResponse_Account_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgLookupMultipleAccountNamesResponse_Account& a, CMsgLookupMultipleAccountNamesResponse_Account& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgLookupMultipleAccountNamesResponse_Account* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgLookupMultipleAccountNamesResponse_Account>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgLookupMultipleAccountNamesResponse_Account& from) {
    CMsgLookupMultipleAccountNamesResponse_Account::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLookupMultipleAccountNamesResponse_Account* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLookupMultipleAccountNamesResponse.Account";
  }
  protected:
  explicit CMsgLookupMultipleAccountNamesResponse_Account(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // optional string persona = 2;
  bool has_persona() const;
  private:
  bool _internal_has_persona() const;
  public:
  void clear_persona();
  const std::string& persona() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_persona(ArgT0&& arg0, ArgT... args);
  std::string* mutable_persona();
  PROTOBUF_NODISCARD std::string* release_persona();
  void set_allocated_persona(std::string* persona);
  private:
  const std::string& _internal_persona() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_persona(const std::string& value);
  std::string* _internal_mutable_persona();
  public:

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgLookupMultipleAccountNamesResponse.Account)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr persona_;
    uint32_t accountid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgLookupMultipleAccountNamesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgLookupMultipleAccountNamesResponse) */ {
 public:
  inline CMsgLookupMultipleAccountNamesResponse() : CMsgLookupMultipleAccountNamesResponse(nullptr) {}
  ~CMsgLookupMultipleAccountNamesResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgLookupMultipleAccountNamesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgLookupMultipleAccountNamesResponse(const CMsgLookupMultipleAccountNamesResponse& from);
  CMsgLookupMultipleAccountNamesResponse(CMsgLookupMultipleAccountNamesResponse&& from) noexcept
    : CMsgLookupMultipleAccountNamesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgLookupMultipleAccountNamesResponse& operator=(const CMsgLookupMultipleAccountNamesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgLookupMultipleAccountNamesResponse& operator=(CMsgLookupMultipleAccountNamesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgLookupMultipleAccountNamesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgLookupMultipleAccountNamesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgLookupMultipleAccountNamesResponse*>(
               &_CMsgLookupMultipleAccountNamesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgLookupMultipleAccountNamesResponse& a, CMsgLookupMultipleAccountNamesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgLookupMultipleAccountNamesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgLookupMultipleAccountNamesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgLookupMultipleAccountNamesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgLookupMultipleAccountNamesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgLookupMultipleAccountNamesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgLookupMultipleAccountNamesResponse& from) {
    CMsgLookupMultipleAccountNamesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLookupMultipleAccountNamesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgLookupMultipleAccountNamesResponse";
  }
  protected:
  explicit CMsgLookupMultipleAccountNamesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgLookupMultipleAccountNamesResponse_Account Account;

  // accessors -------------------------------------------------------

  enum : int {
    kAccountsFieldNumber = 1,
  };
  // repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;
  public:
  void clear_accounts();
  ::CMsgLookupMultipleAccountNamesResponse_Account* mutable_accounts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgLookupMultipleAccountNamesResponse_Account >*
      mutable_accounts();
  private:
  const ::CMsgLookupMultipleAccountNamesResponse_Account& _internal_accounts(int index) const;
  ::CMsgLookupMultipleAccountNamesResponse_Account* _internal_add_accounts();
  public:
  const ::CMsgLookupMultipleAccountNamesResponse_Account& accounts(int index) const;
  ::CMsgLookupMultipleAccountNamesResponse_Account* add_accounts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgLookupMultipleAccountNamesResponse_Account >&
      accounts() const;

  // @@protoc_insertion_point(class_scope:CMsgLookupMultipleAccountNamesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgLookupMultipleAccountNamesResponse_Account > accounts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestCrateItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRequestCrateItems) */ {
 public:
  inline CMsgRequestCrateItems() : CMsgRequestCrateItems(nullptr) {}
  ~CMsgRequestCrateItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgRequestCrateItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRequestCrateItems(const CMsgRequestCrateItems& from);
  CMsgRequestCrateItems(CMsgRequestCrateItems&& from) noexcept
    : CMsgRequestCrateItems() {
    *this = ::std::move(from);
  }

  inline CMsgRequestCrateItems& operator=(const CMsgRequestCrateItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRequestCrateItems& operator=(CMsgRequestCrateItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRequestCrateItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRequestCrateItems* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestCrateItems*>(
               &_CMsgRequestCrateItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgRequestCrateItems& a, CMsgRequestCrateItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRequestCrateItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRequestCrateItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRequestCrateItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgRequestCrateItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRequestCrateItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRequestCrateItems& from) {
    CMsgRequestCrateItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestCrateItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRequestCrateItems";
  }
  protected:
  explicit CMsgRequestCrateItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrateItemDefFieldNumber = 1,
  };
  // optional uint32 crate_item_def = 1;
  bool has_crate_item_def() const;
  private:
  bool _internal_has_crate_item_def() const;
  public:
  void clear_crate_item_def();
  uint32_t crate_item_def() const;
  void set_crate_item_def(uint32_t value);
  private:
  uint32_t _internal_crate_item_def() const;
  void _internal_set_crate_item_def(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgRequestCrateItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t crate_item_def_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestCrateItemsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRequestCrateItemsResponse) */ {
 public:
  inline CMsgRequestCrateItemsResponse() : CMsgRequestCrateItemsResponse(nullptr) {}
  ~CMsgRequestCrateItemsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgRequestCrateItemsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRequestCrateItemsResponse(const CMsgRequestCrateItemsResponse& from);
  CMsgRequestCrateItemsResponse(CMsgRequestCrateItemsResponse&& from) noexcept
    : CMsgRequestCrateItemsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgRequestCrateItemsResponse& operator=(const CMsgRequestCrateItemsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRequestCrateItemsResponse& operator=(CMsgRequestCrateItemsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRequestCrateItemsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRequestCrateItemsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestCrateItemsResponse*>(
               &_CMsgRequestCrateItemsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgRequestCrateItemsResponse& a, CMsgRequestCrateItemsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRequestCrateItemsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRequestCrateItemsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRequestCrateItemsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgRequestCrateItemsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRequestCrateItemsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRequestCrateItemsResponse& from) {
    CMsgRequestCrateItemsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestCrateItemsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRequestCrateItemsResponse";
  }
  protected:
  explicit CMsgRequestCrateItemsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgRequestCrateItemsResponse_EResult EResult;
  static constexpr EResult k_Succeeded =
    CMsgRequestCrateItemsResponse_EResult_k_Succeeded;
  static constexpr EResult k_Failed =
    CMsgRequestCrateItemsResponse_EResult_k_Failed;
  static inline bool EResult_IsValid(int value) {
    return CMsgRequestCrateItemsResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgRequestCrateItemsResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgRequestCrateItemsResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgRequestCrateItemsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgRequestCrateItemsResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgRequestCrateItemsResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgRequestCrateItemsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefsFieldNumber = 2,
    kPeekItemDefsFieldNumber = 3,
    kResponseFieldNumber = 1,
  };
  // repeated uint32 item_defs = 2;
  int item_defs_size() const;
  private:
  int _internal_item_defs_size() const;
  public:
  void clear_item_defs();
  private:
  uint32_t _internal_item_defs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_item_defs() const;
  void _internal_add_item_defs(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_item_defs();
  public:
  uint32_t item_defs(int index) const;
  void set_item_defs(int index, uint32_t value);
  void add_item_defs(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      item_defs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_item_defs();

  // repeated uint32 peek_item_defs = 3;
  int peek_item_defs_size() const;
  private:
  int _internal_peek_item_defs_size() const;
  public:
  void clear_peek_item_defs();
  private:
  uint32_t _internal_peek_item_defs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_peek_item_defs() const;
  void _internal_add_peek_item_defs(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_peek_item_defs();
  public:
  uint32_t peek_item_defs(int index) const;
  void set_peek_item_defs(int index, uint32_t value);
  void add_peek_item_defs(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      peek_item_defs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_peek_item_defs();

  // optional uint32 response = 1;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  uint32_t response() const;
  void set_response(uint32_t value);
  private:
  uint32_t _internal_response() const;
  void _internal_set_response(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgRequestCrateItemsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > item_defs_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > peek_item_defs_;
    uint32_t response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestCrateEscalationLevel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRequestCrateEscalationLevel) */ {
 public:
  inline CMsgRequestCrateEscalationLevel() : CMsgRequestCrateEscalationLevel(nullptr) {}
  ~CMsgRequestCrateEscalationLevel() override;
  explicit PROTOBUF_CONSTEXPR CMsgRequestCrateEscalationLevel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRequestCrateEscalationLevel(const CMsgRequestCrateEscalationLevel& from);
  CMsgRequestCrateEscalationLevel(CMsgRequestCrateEscalationLevel&& from) noexcept
    : CMsgRequestCrateEscalationLevel() {
    *this = ::std::move(from);
  }

  inline CMsgRequestCrateEscalationLevel& operator=(const CMsgRequestCrateEscalationLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRequestCrateEscalationLevel& operator=(CMsgRequestCrateEscalationLevel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRequestCrateEscalationLevel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRequestCrateEscalationLevel* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestCrateEscalationLevel*>(
               &_CMsgRequestCrateEscalationLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgRequestCrateEscalationLevel& a, CMsgRequestCrateEscalationLevel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRequestCrateEscalationLevel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRequestCrateEscalationLevel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRequestCrateEscalationLevel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgRequestCrateEscalationLevel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRequestCrateEscalationLevel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRequestCrateEscalationLevel& from) {
    CMsgRequestCrateEscalationLevel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestCrateEscalationLevel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRequestCrateEscalationLevel";
  }
  protected:
  explicit CMsgRequestCrateEscalationLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrateItemDefFieldNumber = 1,
  };
  // optional uint32 crate_item_def = 1;
  bool has_crate_item_def() const;
  private:
  bool _internal_has_crate_item_def() const;
  public:
  void clear_crate_item_def();
  uint32_t crate_item_def() const;
  void set_crate_item_def(uint32_t value);
  private:
  uint32_t _internal_crate_item_def() const;
  void _internal_set_crate_item_def(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgRequestCrateEscalationLevel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t crate_item_def_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestCrateEscalationLevelResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRequestCrateEscalationLevelResponse) */ {
 public:
  inline CMsgRequestCrateEscalationLevelResponse() : CMsgRequestCrateEscalationLevelResponse(nullptr) {}
  ~CMsgRequestCrateEscalationLevelResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgRequestCrateEscalationLevelResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRequestCrateEscalationLevelResponse(const CMsgRequestCrateEscalationLevelResponse& from);
  CMsgRequestCrateEscalationLevelResponse(CMsgRequestCrateEscalationLevelResponse&& from) noexcept
    : CMsgRequestCrateEscalationLevelResponse() {
    *this = ::std::move(from);
  }

  inline CMsgRequestCrateEscalationLevelResponse& operator=(const CMsgRequestCrateEscalationLevelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRequestCrateEscalationLevelResponse& operator=(CMsgRequestCrateEscalationLevelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRequestCrateEscalationLevelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRequestCrateEscalationLevelResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestCrateEscalationLevelResponse*>(
               &_CMsgRequestCrateEscalationLevelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgRequestCrateEscalationLevelResponse& a, CMsgRequestCrateEscalationLevelResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRequestCrateEscalationLevelResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRequestCrateEscalationLevelResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRequestCrateEscalationLevelResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgRequestCrateEscalationLevelResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRequestCrateEscalationLevelResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRequestCrateEscalationLevelResponse& from) {
    CMsgRequestCrateEscalationLevelResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestCrateEscalationLevelResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRequestCrateEscalationLevelResponse";
  }
  protected:
  explicit CMsgRequestCrateEscalationLevelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgRequestCrateEscalationLevelResponse_EResult EResult;
  static constexpr EResult k_Succeeded =
    CMsgRequestCrateEscalationLevelResponse_EResult_k_Succeeded;
  static constexpr EResult k_Failed =
    CMsgRequestCrateEscalationLevelResponse_EResult_k_Failed;
  static inline bool EResult_IsValid(int value) {
    return CMsgRequestCrateEscalationLevelResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgRequestCrateEscalationLevelResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgRequestCrateEscalationLevelResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgRequestCrateEscalationLevelResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgRequestCrateEscalationLevelResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgRequestCrateEscalationLevelResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgRequestCrateEscalationLevelResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
    kEscalationLevel0FieldNumber = 2,
    kEscalationLevel1FieldNumber = 3,
    kEscalationLevel2FieldNumber = 4,
    kEscalationLevel3FieldNumber = 5,
  };
  // optional uint32 response = 1;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  uint32_t response() const;
  void set_response(uint32_t value);
  private:
  uint32_t _internal_response() const;
  void _internal_set_response(uint32_t value);
  public:

  // optional uint32 escalation_level0 = 2;
  bool has_escalation_level0() const;
  private:
  bool _internal_has_escalation_level0() const;
  public:
  void clear_escalation_level0();
  uint32_t escalation_level0() const;
  void set_escalation_level0(uint32_t value);
  private:
  uint32_t _internal_escalation_level0() const;
  void _internal_set_escalation_level0(uint32_t value);
  public:

  // optional uint32 escalation_level1 = 3;
  bool has_escalation_level1() const;
  private:
  bool _internal_has_escalation_level1() const;
  public:
  void clear_escalation_level1();
  uint32_t escalation_level1() const;
  void set_escalation_level1(uint32_t value);
  private:
  uint32_t _internal_escalation_level1() const;
  void _internal_set_escalation_level1(uint32_t value);
  public:

  // optional uint32 escalation_level2 = 4;
  bool has_escalation_level2() const;
  private:
  bool _internal_has_escalation_level2() const;
  public:
  void clear_escalation_level2();
  uint32_t escalation_level2() const;
  void set_escalation_level2(uint32_t value);
  private:
  uint32_t _internal_escalation_level2() const;
  void _internal_set_escalation_level2(uint32_t value);
  public:

  // optional uint32 escalation_level3 = 5;
  bool has_escalation_level3() const;
  private:
  bool _internal_has_escalation_level3() const;
  public:
  void clear_escalation_level3();
  uint32_t escalation_level3() const;
  void set_escalation_level3(uint32_t value);
  private:
  uint32_t _internal_escalation_level3() const;
  void _internal_set_escalation_level3(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgRequestCrateEscalationLevelResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t response_;
    uint32_t escalation_level0_;
    uint32_t escalation_level1_;
    uint32_t escalation_level2_;
    uint32_t escalation_level3_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCCanUseDropRateBonus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCCanUseDropRateBonus) */ {
 public:
  inline CMsgGCToGCCanUseDropRateBonus() : CMsgGCToGCCanUseDropRateBonus(nullptr) {}
  ~CMsgGCToGCCanUseDropRateBonus() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCCanUseDropRateBonus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCCanUseDropRateBonus(const CMsgGCToGCCanUseDropRateBonus& from);
  CMsgGCToGCCanUseDropRateBonus(CMsgGCToGCCanUseDropRateBonus&& from) noexcept
    : CMsgGCToGCCanUseDropRateBonus() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCCanUseDropRateBonus& operator=(const CMsgGCToGCCanUseDropRateBonus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCCanUseDropRateBonus& operator=(CMsgGCToGCCanUseDropRateBonus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCCanUseDropRateBonus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCCanUseDropRateBonus* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCCanUseDropRateBonus*>(
               &_CMsgGCToGCCanUseDropRateBonus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgGCToGCCanUseDropRateBonus& a, CMsgGCToGCCanUseDropRateBonus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCCanUseDropRateBonus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCCanUseDropRateBonus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCCanUseDropRateBonus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCCanUseDropRateBonus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCCanUseDropRateBonus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCCanUseDropRateBonus& from) {
    CMsgGCToGCCanUseDropRateBonus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCCanUseDropRateBonus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCCanUseDropRateBonus";
  }
  protected:
  explicit CMsgGCToGCCanUseDropRateBonus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kDropRateBonusFieldNumber = 2,
    kBoosterTypeFieldNumber = 3,
    kExclusiveItemDefFieldNumber = 4,
    kAllowEqualRateFieldNumber = 5,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional float drop_rate_bonus = 2;
  bool has_drop_rate_bonus() const;
  private:
  bool _internal_has_drop_rate_bonus() const;
  public:
  void clear_drop_rate_bonus();
  float drop_rate_bonus() const;
  void set_drop_rate_bonus(float value);
  private:
  float _internal_drop_rate_bonus() const;
  void _internal_set_drop_rate_bonus(float value);
  public:

  // optional uint32 booster_type = 3;
  bool has_booster_type() const;
  private:
  bool _internal_has_booster_type() const;
  public:
  void clear_booster_type();
  uint32_t booster_type() const;
  void set_booster_type(uint32_t value);
  private:
  uint32_t _internal_booster_type() const;
  void _internal_set_booster_type(uint32_t value);
  public:

  // optional uint32 exclusive_item_def = 4;
  bool has_exclusive_item_def() const;
  private:
  bool _internal_has_exclusive_item_def() const;
  public:
  void clear_exclusive_item_def();
  uint32_t exclusive_item_def() const;
  void set_exclusive_item_def(uint32_t value);
  private:
  uint32_t _internal_exclusive_item_def() const;
  void _internal_set_exclusive_item_def(uint32_t value);
  public:

  // optional bool allow_equal_rate = 5;
  bool has_allow_equal_rate() const;
  private:
  bool _internal_has_allow_equal_rate() const;
  public:
  void clear_allow_equal_rate();
  bool allow_equal_rate() const;
  void set_allow_equal_rate(bool value);
  private:
  bool _internal_allow_equal_rate() const;
  void _internal_set_allow_equal_rate(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCCanUseDropRateBonus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    float drop_rate_bonus_;
    uint32_t booster_type_;
    uint32_t exclusive_item_def_;
    bool allow_equal_rate_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSQLAddDropRateBonus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSQLAddDropRateBonus) */ {
 public:
  inline CMsgSQLAddDropRateBonus() : CMsgSQLAddDropRateBonus(nullptr) {}
  ~CMsgSQLAddDropRateBonus() override;
  explicit PROTOBUF_CONSTEXPR CMsgSQLAddDropRateBonus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSQLAddDropRateBonus(const CMsgSQLAddDropRateBonus& from);
  CMsgSQLAddDropRateBonus(CMsgSQLAddDropRateBonus&& from) noexcept
    : CMsgSQLAddDropRateBonus() {
    *this = ::std::move(from);
  }

  inline CMsgSQLAddDropRateBonus& operator=(const CMsgSQLAddDropRateBonus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSQLAddDropRateBonus& operator=(CMsgSQLAddDropRateBonus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSQLAddDropRateBonus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSQLAddDropRateBonus* internal_default_instance() {
    return reinterpret_cast<const CMsgSQLAddDropRateBonus*>(
               &_CMsgSQLAddDropRateBonus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgSQLAddDropRateBonus& a, CMsgSQLAddDropRateBonus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSQLAddDropRateBonus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSQLAddDropRateBonus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSQLAddDropRateBonus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSQLAddDropRateBonus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSQLAddDropRateBonus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSQLAddDropRateBonus& from) {
    CMsgSQLAddDropRateBonus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSQLAddDropRateBonus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSQLAddDropRateBonus";
  }
  protected:
  explicit CMsgSQLAddDropRateBonus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kItemDefFieldNumber = 3,
    kDropRateBonusFieldNumber = 4,
    kBoosterTypeFieldNumber = 5,
    kSecondsDurationFieldNumber = 6,
    kEndTimeStampFieldNumber = 7,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 item_def = 3;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  uint32_t item_def() const;
  void set_item_def(uint32_t value);
  private:
  uint32_t _internal_item_def() const;
  void _internal_set_item_def(uint32_t value);
  public:

  // optional float drop_rate_bonus = 4;
  bool has_drop_rate_bonus() const;
  private:
  bool _internal_has_drop_rate_bonus() const;
  public:
  void clear_drop_rate_bonus();
  float drop_rate_bonus() const;
  void set_drop_rate_bonus(float value);
  private:
  float _internal_drop_rate_bonus() const;
  void _internal_set_drop_rate_bonus(float value);
  public:

  // optional uint32 booster_type = 5;
  bool has_booster_type() const;
  private:
  bool _internal_has_booster_type() const;
  public:
  void clear_booster_type();
  uint32_t booster_type() const;
  void set_booster_type(uint32_t value);
  private:
  uint32_t _internal_booster_type() const;
  void _internal_set_booster_type(uint32_t value);
  public:

  // optional uint32 seconds_duration = 6;
  bool has_seconds_duration() const;
  private:
  bool _internal_has_seconds_duration() const;
  public:
  void clear_seconds_duration();
  uint32_t seconds_duration() const;
  void set_seconds_duration(uint32_t value);
  private:
  uint32_t _internal_seconds_duration() const;
  void _internal_set_seconds_duration(uint32_t value);
  public:

  // optional uint32 end_time_stamp = 7;
  bool has_end_time_stamp() const;
  private:
  bool _internal_has_end_time_stamp() const;
  public:
  void clear_end_time_stamp();
  uint32_t end_time_stamp() const;
  void set_end_time_stamp(uint32_t value);
  private:
  uint32_t _internal_end_time_stamp() const;
  void _internal_set_end_time_stamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSQLAddDropRateBonus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t account_id_;
    uint32_t item_def_;
    float drop_rate_bonus_;
    uint32_t booster_type_;
    uint32_t seconds_duration_;
    uint32_t end_time_stamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSQLUpgradeBattleBooster final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSQLUpgradeBattleBooster) */ {
 public:
  inline CMsgSQLUpgradeBattleBooster() : CMsgSQLUpgradeBattleBooster(nullptr) {}
  ~CMsgSQLUpgradeBattleBooster() override;
  explicit PROTOBUF_CONSTEXPR CMsgSQLUpgradeBattleBooster(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSQLUpgradeBattleBooster(const CMsgSQLUpgradeBattleBooster& from);
  CMsgSQLUpgradeBattleBooster(CMsgSQLUpgradeBattleBooster&& from) noexcept
    : CMsgSQLUpgradeBattleBooster() {
    *this = ::std::move(from);
  }

  inline CMsgSQLUpgradeBattleBooster& operator=(const CMsgSQLUpgradeBattleBooster& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSQLUpgradeBattleBooster& operator=(CMsgSQLUpgradeBattleBooster&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSQLUpgradeBattleBooster& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSQLUpgradeBattleBooster* internal_default_instance() {
    return reinterpret_cast<const CMsgSQLUpgradeBattleBooster*>(
               &_CMsgSQLUpgradeBattleBooster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgSQLUpgradeBattleBooster& a, CMsgSQLUpgradeBattleBooster& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSQLUpgradeBattleBooster* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSQLUpgradeBattleBooster* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSQLUpgradeBattleBooster* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSQLUpgradeBattleBooster>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSQLUpgradeBattleBooster& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSQLUpgradeBattleBooster& from) {
    CMsgSQLUpgradeBattleBooster::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSQLUpgradeBattleBooster* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSQLUpgradeBattleBooster";
  }
  protected:
  explicit CMsgSQLUpgradeBattleBooster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kItemDefFieldNumber = 2,
    kBonusToAddFieldNumber = 3,
    kBoosterTypeFieldNumber = 4,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 item_def = 2;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  uint32_t item_def() const;
  void set_item_def(uint32_t value);
  private:
  uint32_t _internal_item_def() const;
  void _internal_set_item_def(uint32_t value);
  public:

  // optional float bonus_to_add = 3;
  bool has_bonus_to_add() const;
  private:
  bool _internal_has_bonus_to_add() const;
  public:
  void clear_bonus_to_add();
  float bonus_to_add() const;
  void set_bonus_to_add(float value);
  private:
  float _internal_bonus_to_add() const;
  void _internal_set_bonus_to_add(float value);
  public:

  // optional uint32 booster_type = 4;
  bool has_booster_type() const;
  private:
  bool _internal_has_booster_type() const;
  public:
  void clear_booster_type();
  uint32_t booster_type() const;
  void set_booster_type(uint32_t value);
  private:
  uint32_t _internal_booster_type() const;
  void _internal_set_booster_type(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSQLUpgradeBattleBooster)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t item_def_;
    float bonus_to_add_;
    uint32_t booster_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCRefreshSOCache final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCRefreshSOCache) */ {
 public:
  inline CMsgGCToGCRefreshSOCache() : CMsgGCToGCRefreshSOCache(nullptr) {}
  ~CMsgGCToGCRefreshSOCache() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCRefreshSOCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCRefreshSOCache(const CMsgGCToGCRefreshSOCache& from);
  CMsgGCToGCRefreshSOCache(CMsgGCToGCRefreshSOCache&& from) noexcept
    : CMsgGCToGCRefreshSOCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCRefreshSOCache& operator=(const CMsgGCToGCRefreshSOCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCRefreshSOCache& operator=(CMsgGCToGCRefreshSOCache&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCRefreshSOCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCRefreshSOCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCRefreshSOCache*>(
               &_CMsgGCToGCRefreshSOCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgGCToGCRefreshSOCache& a, CMsgGCToGCRefreshSOCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCRefreshSOCache* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCRefreshSOCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCRefreshSOCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCRefreshSOCache>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCRefreshSOCache& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCRefreshSOCache& from) {
    CMsgGCToGCRefreshSOCache::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCRefreshSOCache* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCRefreshSOCache";
  }
  protected:
  explicit CMsgGCToGCRefreshSOCache(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kReloadFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional bool reload = 2;
  bool has_reload() const;
  private:
  bool _internal_has_reload() const;
  public:
  void clear_reload();
  bool reload() const;
  void set_reload(bool value);
  private:
  bool _internal_reload() const;
  void _internal_set_reload(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCRefreshSOCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    bool reload_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCAddSubscriptionTime final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCAddSubscriptionTime) */ {
 public:
  inline CMsgGCToGCAddSubscriptionTime() : CMsgGCToGCAddSubscriptionTime(nullptr) {}
  ~CMsgGCToGCAddSubscriptionTime() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCAddSubscriptionTime(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCAddSubscriptionTime(const CMsgGCToGCAddSubscriptionTime& from);
  CMsgGCToGCAddSubscriptionTime(CMsgGCToGCAddSubscriptionTime&& from) noexcept
    : CMsgGCToGCAddSubscriptionTime() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCAddSubscriptionTime& operator=(const CMsgGCToGCAddSubscriptionTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCAddSubscriptionTime& operator=(CMsgGCToGCAddSubscriptionTime&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCAddSubscriptionTime& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCAddSubscriptionTime* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCAddSubscriptionTime*>(
               &_CMsgGCToGCAddSubscriptionTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgGCToGCAddSubscriptionTime& a, CMsgGCToGCAddSubscriptionTime& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCAddSubscriptionTime* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCAddSubscriptionTime* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCAddSubscriptionTime* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCAddSubscriptionTime>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCAddSubscriptionTime& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCAddSubscriptionTime& from) {
    CMsgGCToGCAddSubscriptionTime::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCAddSubscriptionTime* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCAddSubscriptionTime";
  }
  protected:
  explicit CMsgGCToGCAddSubscriptionTime(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchingSubscriptionDefIndexesFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kAdditionalSecondsFieldNumber = 3,
  };
  // repeated uint32 matching_subscription_def_indexes = 2;
  int matching_subscription_def_indexes_size() const;
  private:
  int _internal_matching_subscription_def_indexes_size() const;
  public:
  void clear_matching_subscription_def_indexes();
  private:
  uint32_t _internal_matching_subscription_def_indexes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_matching_subscription_def_indexes() const;
  void _internal_add_matching_subscription_def_indexes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_matching_subscription_def_indexes();
  public:
  uint32_t matching_subscription_def_indexes(int index) const;
  void set_matching_subscription_def_indexes(int index, uint32_t value);
  void add_matching_subscription_def_indexes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      matching_subscription_def_indexes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_matching_subscription_def_indexes();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 additional_seconds = 3;
  bool has_additional_seconds() const;
  private:
  bool _internal_has_additional_seconds() const;
  public:
  void clear_additional_seconds();
  uint32_t additional_seconds() const;
  void set_additional_seconds(uint32_t value);
  private:
  uint32_t _internal_additional_seconds() const;
  void _internal_set_additional_seconds(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCAddSubscriptionTime)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > matching_subscription_def_indexes_;
    uint32_t account_id_;
    uint32_t additional_seconds_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute) */ {
 public:
  inline CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() : CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(nullptr) {}
  ~CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from);
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute&& from) noexcept
    : CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& operator=(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& operator=(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute*>(
               &_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& a, CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
    CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute";
  }
  protected:
  explicit CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueStringFieldNumber = 4,
    kValueUint32FieldNumber = 2,
    kValueFloatFieldNumber = 3,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string value_string = 4;
  bool has_value_string() const;
  private:
  bool _internal_has_value_string() const;
  public:
  void clear_value_string();
  const std::string& value_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_string();
  PROTOBUF_NODISCARD std::string* release_value_string();
  void set_allocated_value_string(std::string* value_string);
  private:
  const std::string& _internal_value_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_string(const std::string& value);
  std::string* _internal_mutable_value_string();
  public:

  // optional uint32 value_uint32 = 2;
  bool has_value_uint32() const;
  private:
  bool _internal_has_value_uint32() const;
  public:
  void clear_value_uint32();
  uint32_t value_uint32() const;
  void set_value_uint32(uint32_t value);
  private:
  uint32_t _internal_value_uint32() const;
  void _internal_set_value_uint32(uint32_t value);
  public:

  // optional float value_float = 3;
  bool has_value_float() const;
  private:
  bool _internal_has_value_float() const;
  public:
  void clear_value_float();
  float value_float() const;
  void set_value_float(float value);
  private:
  float _internal_value_float() const;
  void _internal_set_value_float(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_string_;
    uint32_t value_uint32_;
    float value_float_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry) */ {
 public:
  inline CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() : CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(nullptr) {}
  ~CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from);
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry&& from) noexcept
    : CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& operator=(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& operator=(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry*>(
               &_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& a, CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
    CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry";
  }
  protected:
  explicit CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOwnerAccountIdFieldNumber = 1,
    kAuditActionFieldNumber = 2,
    kAuditDataFieldNumber = 3,
  };
  // optional uint32 owner_account_id = 1;
  bool has_owner_account_id() const;
  private:
  bool _internal_has_owner_account_id() const;
  public:
  void clear_owner_account_id();
  uint32_t owner_account_id() const;
  void set_owner_account_id(uint32_t value);
  private:
  uint32_t _internal_owner_account_id() const;
  void _internal_set_owner_account_id(uint32_t value);
  public:

  // optional uint32 audit_action = 2;
  bool has_audit_action() const;
  private:
  bool _internal_has_audit_action() const;
  public:
  void clear_audit_action();
  uint32_t audit_action() const;
  void set_audit_action(uint32_t value);
  private:
  uint32_t _internal_audit_action() const;
  void _internal_set_audit_action(uint32_t value);
  public:

  // optional uint64 audit_data = 3;
  bool has_audit_data() const;
  private:
  bool _internal_has_audit_data() const;
  public:
  void clear_audit_data();
  uint64_t audit_data() const;
  void set_audit_data(uint64_t value);
  private:
  uint64_t _internal_audit_data() const;
  void _internal_set_audit_data(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t owner_account_id_;
    uint32_t audit_action_;
    uint64_t audit_data_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGrantAccountRolledItems_Item final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGrantAccountRolledItems.Item) */ {
 public:
  inline CMsgGCToGCGrantAccountRolledItems_Item() : CMsgGCToGCGrantAccountRolledItems_Item(nullptr) {}
  ~CMsgGCToGCGrantAccountRolledItems_Item() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGrantAccountRolledItems_Item(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGrantAccountRolledItems_Item(const CMsgGCToGCGrantAccountRolledItems_Item& from);
  CMsgGCToGCGrantAccountRolledItems_Item(CMsgGCToGCGrantAccountRolledItems_Item&& from) noexcept
    : CMsgGCToGCGrantAccountRolledItems_Item() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGrantAccountRolledItems_Item& operator=(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGrantAccountRolledItems_Item& operator=(CMsgGCToGCGrantAccountRolledItems_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGrantAccountRolledItems_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGrantAccountRolledItems_Item* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGrantAccountRolledItems_Item*>(
               &_CMsgGCToGCGrantAccountRolledItems_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgGCToGCGrantAccountRolledItems_Item& a, CMsgGCToGCGrantAccountRolledItems_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGrantAccountRolledItems_Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGrantAccountRolledItems_Item>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGrantAccountRolledItems_Item& from) {
    CMsgGCToGCGrantAccountRolledItems_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGrantAccountRolledItems.Item";
  }
  protected:
  explicit CMsgGCToGCGrantAccountRolledItems_Item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute DynamicAttribute;
  typedef CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry AdditionalAuditEntry;

  // accessors -------------------------------------------------------

  enum : int {
    kLootListsFieldNumber = 2,
    kDynamicAttributesFieldNumber = 5,
    kAdditionalAuditEntriesFieldNumber = 6,
    kItemDefFieldNumber = 1,
    kIgnoreLimitFieldNumber = 3,
    kOriginFieldNumber = 4,
    kInventoryTokenFieldNumber = 7,
  };
  // repeated string loot_lists = 2;
  int loot_lists_size() const;
  private:
  int _internal_loot_lists_size() const;
  public:
  void clear_loot_lists();
  const std::string& loot_lists(int index) const;
  std::string* mutable_loot_lists(int index);
  void set_loot_lists(int index, const std::string& value);
  void set_loot_lists(int index, std::string&& value);
  void set_loot_lists(int index, const char* value);
  void set_loot_lists(int index, const char* value, size_t size);
  std::string* add_loot_lists();
  void add_loot_lists(const std::string& value);
  void add_loot_lists(std::string&& value);
  void add_loot_lists(const char* value);
  void add_loot_lists(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& loot_lists() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_loot_lists();
  private:
  const std::string& _internal_loot_lists(int index) const;
  std::string* _internal_add_loot_lists();
  public:

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  int dynamic_attributes_size() const;
  private:
  int _internal_dynamic_attributes_size() const;
  public:
  void clear_dynamic_attributes();
  ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* mutable_dynamic_attributes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >*
      mutable_dynamic_attributes();
  private:
  const ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& _internal_dynamic_attributes(int index) const;
  ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* _internal_add_dynamic_attributes();
  public:
  const ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& dynamic_attributes(int index) const;
  ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* add_dynamic_attributes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >&
      dynamic_attributes() const;

  // repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  int additional_audit_entries_size() const;
  private:
  int _internal_additional_audit_entries_size() const;
  public:
  void clear_additional_audit_entries();
  ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* mutable_additional_audit_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >*
      mutable_additional_audit_entries();
  private:
  const ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& _internal_additional_audit_entries(int index) const;
  ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* _internal_add_additional_audit_entries();
  public:
  const ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& additional_audit_entries(int index) const;
  ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* add_additional_audit_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >&
      additional_audit_entries() const;

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  uint32_t item_def() const;
  void set_item_def(uint32_t value);
  private:
  uint32_t _internal_item_def() const;
  void _internal_set_item_def(uint32_t value);
  public:

  // optional bool ignore_limit = 3;
  bool has_ignore_limit() const;
  private:
  bool _internal_has_ignore_limit() const;
  public:
  void clear_ignore_limit();
  bool ignore_limit() const;
  void set_ignore_limit(bool value);
  private:
  bool _internal_ignore_limit() const;
  void _internal_set_ignore_limit(bool value);
  public:

  // optional uint32 origin = 4;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  uint32_t origin() const;
  void set_origin(uint32_t value);
  private:
  uint32_t _internal_origin() const;
  void _internal_set_origin(uint32_t value);
  public:

  // optional uint32 inventory_token = 7;
  bool has_inventory_token() const;
  private:
  bool _internal_has_inventory_token() const;
  public:
  void clear_inventory_token();
  uint32_t inventory_token() const;
  void set_inventory_token(uint32_t value);
  private:
  uint32_t _internal_inventory_token() const;
  void _internal_set_inventory_token(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGrantAccountRolledItems.Item)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> loot_lists_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute > dynamic_attributes_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry > additional_audit_entries_;
    uint32_t item_def_;
    bool ignore_limit_;
    uint32_t origin_;
    uint32_t inventory_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGrantAccountRolledItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGrantAccountRolledItems) */ {
 public:
  inline CMsgGCToGCGrantAccountRolledItems() : CMsgGCToGCGrantAccountRolledItems(nullptr) {}
  ~CMsgGCToGCGrantAccountRolledItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGrantAccountRolledItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGrantAccountRolledItems(const CMsgGCToGCGrantAccountRolledItems& from);
  CMsgGCToGCGrantAccountRolledItems(CMsgGCToGCGrantAccountRolledItems&& from) noexcept
    : CMsgGCToGCGrantAccountRolledItems() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGrantAccountRolledItems& operator=(const CMsgGCToGCGrantAccountRolledItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGrantAccountRolledItems& operator=(CMsgGCToGCGrantAccountRolledItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGrantAccountRolledItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGrantAccountRolledItems* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGrantAccountRolledItems*>(
               &_CMsgGCToGCGrantAccountRolledItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgGCToGCGrantAccountRolledItems& a, CMsgGCToGCGrantAccountRolledItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGrantAccountRolledItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGrantAccountRolledItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGrantAccountRolledItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGrantAccountRolledItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGrantAccountRolledItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGrantAccountRolledItems& from) {
    CMsgGCToGCGrantAccountRolledItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGrantAccountRolledItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGrantAccountRolledItems";
  }
  protected:
  explicit CMsgGCToGCGrantAccountRolledItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToGCGrantAccountRolledItems_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kAuditActionFieldNumber = 3,
    kAuditDataFieldNumber = 4,
  };
  // repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::CMsgGCToGCGrantAccountRolledItems_Item* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item >*
      mutable_items();
  private:
  const ::CMsgGCToGCGrantAccountRolledItems_Item& _internal_items(int index) const;
  ::CMsgGCToGCGrantAccountRolledItems_Item* _internal_add_items();
  public:
  const ::CMsgGCToGCGrantAccountRolledItems_Item& items(int index) const;
  ::CMsgGCToGCGrantAccountRolledItems_Item* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item >&
      items() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 audit_action = 3;
  bool has_audit_action() const;
  private:
  bool _internal_has_audit_action() const;
  public:
  void clear_audit_action();
  uint32_t audit_action() const;
  void set_audit_action(uint32_t value);
  private:
  uint32_t _internal_audit_action() const;
  void _internal_set_audit_action(uint32_t value);
  public:

  // optional uint64 audit_data = 4;
  bool has_audit_data() const;
  private:
  bool _internal_has_audit_data() const;
  public:
  void clear_audit_data();
  uint64_t audit_data() const;
  void set_audit_data(uint64_t value);
  private:
  uint64_t _internal_audit_data() const;
  void _internal_set_audit_data(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGrantAccountRolledItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item > items_;
    uint32_t account_id_;
    uint32_t audit_action_;
    uint64_t audit_data_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCBetaDeleteItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCBetaDeleteItems) */ {
 public:
  inline CMsgGCToGCBetaDeleteItems() : CMsgGCToGCBetaDeleteItems(nullptr) {}
  ~CMsgGCToGCBetaDeleteItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCBetaDeleteItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCBetaDeleteItems(const CMsgGCToGCBetaDeleteItems& from);
  CMsgGCToGCBetaDeleteItems(CMsgGCToGCBetaDeleteItems&& from) noexcept
    : CMsgGCToGCBetaDeleteItems() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCBetaDeleteItems& operator=(const CMsgGCToGCBetaDeleteItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCBetaDeleteItems& operator=(CMsgGCToGCBetaDeleteItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCBetaDeleteItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCBetaDeleteItems* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCBetaDeleteItems*>(
               &_CMsgGCToGCBetaDeleteItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgGCToGCBetaDeleteItems& a, CMsgGCToGCBetaDeleteItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCBetaDeleteItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCBetaDeleteItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCBetaDeleteItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCBetaDeleteItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCBetaDeleteItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCBetaDeleteItems& from) {
    CMsgGCToGCBetaDeleteItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCBetaDeleteItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCBetaDeleteItems";
  }
  protected:
  explicit CMsgGCToGCBetaDeleteItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 2,
    kItemDefsFieldNumber = 3,
    kAccountIdFieldNumber = 1,
  };
  // repeated uint64 item_ids = 2;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // repeated uint32 item_defs = 3;
  int item_defs_size() const;
  private:
  int _internal_item_defs_size() const;
  public:
  void clear_item_defs();
  private:
  uint32_t _internal_item_defs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_item_defs() const;
  void _internal_add_item_defs(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_item_defs();
  public:
  uint32_t item_defs(int index) const;
  void set_item_defs(int index, uint32_t value);
  void add_item_defs(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      item_defs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_item_defs();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCBetaDeleteItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > item_defs_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGrantSelfMadeItemToAccount final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGrantSelfMadeItemToAccount) */ {
 public:
  inline CMsgGCToGCGrantSelfMadeItemToAccount() : CMsgGCToGCGrantSelfMadeItemToAccount(nullptr) {}
  ~CMsgGCToGCGrantSelfMadeItemToAccount() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGrantSelfMadeItemToAccount(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGrantSelfMadeItemToAccount(const CMsgGCToGCGrantSelfMadeItemToAccount& from);
  CMsgGCToGCGrantSelfMadeItemToAccount(CMsgGCToGCGrantSelfMadeItemToAccount&& from) noexcept
    : CMsgGCToGCGrantSelfMadeItemToAccount() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGrantSelfMadeItemToAccount& operator=(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGrantSelfMadeItemToAccount& operator=(CMsgGCToGCGrantSelfMadeItemToAccount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGrantSelfMadeItemToAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGrantSelfMadeItemToAccount* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGrantSelfMadeItemToAccount*>(
               &_CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgGCToGCGrantSelfMadeItemToAccount& a, CMsgGCToGCGrantSelfMadeItemToAccount& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGrantSelfMadeItemToAccount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGrantSelfMadeItemToAccount>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
    CMsgGCToGCGrantSelfMadeItemToAccount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGrantSelfMadeItemToAccount* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGrantSelfMadeItemToAccount";
  }
  protected:
  explicit CMsgGCToGCGrantSelfMadeItemToAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIndexFieldNumber = 1,
    kAccountidFieldNumber = 2,
  };
  // optional uint32 item_def_index = 1;
  bool has_item_def_index() const;
  private:
  bool _internal_has_item_def_index() const;
  public:
  void clear_item_def_index();
  uint32_t item_def_index() const;
  void set_item_def_index(uint32_t value);
  private:
  uint32_t _internal_item_def_index() const;
  void _internal_set_item_def_index(uint32_t value);
  public:

  // optional uint32 accountid = 2;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGrantSelfMadeItemToAccount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t item_def_index_;
    uint32_t accountid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgUseItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgUseItem) */ {
 public:
  inline CMsgUseItem() : CMsgUseItem(nullptr) {}
  ~CMsgUseItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgUseItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgUseItem(const CMsgUseItem& from);
  CMsgUseItem(CMsgUseItem&& from) noexcept
    : CMsgUseItem() {
    *this = ::std::move(from);
  }

  inline CMsgUseItem& operator=(const CMsgUseItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgUseItem& operator=(CMsgUseItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgUseItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgUseItem* internal_default_instance() {
    return reinterpret_cast<const CMsgUseItem*>(
               &_CMsgUseItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgUseItem& a, CMsgUseItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgUseItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgUseItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgUseItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgUseItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgUseItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgUseItem& from) {
    CMsgUseItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUseItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgUseItem";
  }
  protected:
  explicit CMsgUseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGiftPotentialTargetsFieldNumber = 3,
    kItemIdFieldNumber = 1,
    kTargetSteamIdFieldNumber = 2,
    kInitiatorSteamIdFieldNumber = 5,
    kDuelClassLockFieldNumber = 4,
    kItempackAckImmediatelyFieldNumber = 6,
  };
  // repeated uint32 gift__potential_targets = 3;
  int gift__potential_targets_size() const;
  private:
  int _internal_gift__potential_targets_size() const;
  public:
  void clear_gift__potential_targets();
  private:
  uint32_t _internal_gift__potential_targets(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_gift__potential_targets() const;
  void _internal_add_gift__potential_targets(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_gift__potential_targets();
  public:
  uint32_t gift__potential_targets(int index) const;
  void set_gift__potential_targets(int index, uint32_t value);
  void add_gift__potential_targets(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      gift__potential_targets() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_gift__potential_targets();

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional fixed64 target_steam_id = 2;
  bool has_target_steam_id() const;
  private:
  bool _internal_has_target_steam_id() const;
  public:
  void clear_target_steam_id();
  uint64_t target_steam_id() const;
  void set_target_steam_id(uint64_t value);
  private:
  uint64_t _internal_target_steam_id() const;
  void _internal_set_target_steam_id(uint64_t value);
  public:

  // optional uint64 initiator_steam_id = 5;
  bool has_initiator_steam_id() const;
  private:
  bool _internal_has_initiator_steam_id() const;
  public:
  void clear_initiator_steam_id();
  uint64_t initiator_steam_id() const;
  void set_initiator_steam_id(uint64_t value);
  private:
  uint64_t _internal_initiator_steam_id() const;
  void _internal_set_initiator_steam_id(uint64_t value);
  public:

  // optional uint32 duel__class_lock = 4;
  bool has_duel__class_lock() const;
  private:
  bool _internal_has_duel__class_lock() const;
  public:
  void clear_duel__class_lock();
  uint32_t duel__class_lock() const;
  void set_duel__class_lock(uint32_t value);
  private:
  uint32_t _internal_duel__class_lock() const;
  void _internal_set_duel__class_lock(uint32_t value);
  public:

  // optional bool itempack__ack_immediately = 6;
  bool has_itempack__ack_immediately() const;
  private:
  bool _internal_has_itempack__ack_immediately() const;
  public:
  void clear_itempack__ack_immediately();
  bool itempack__ack_immediately() const;
  void set_itempack__ack_immediately(bool value);
  private:
  bool _internal_itempack__ack_immediately() const;
  void _internal_set_itempack__ack_immediately(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgUseItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > gift__potential_targets_;
    uint64_t item_id_;
    uint64_t target_steam_id_;
    uint64_t initiator_steam_id_;
    uint32_t duel__class_lock_;
    bool itempack__ack_immediately_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerUseItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgServerUseItem) */ {
 public:
  inline CMsgServerUseItem() : CMsgServerUseItem(nullptr) {}
  ~CMsgServerUseItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgServerUseItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgServerUseItem(const CMsgServerUseItem& from);
  CMsgServerUseItem(CMsgServerUseItem&& from) noexcept
    : CMsgServerUseItem() {
    *this = ::std::move(from);
  }

  inline CMsgServerUseItem& operator=(const CMsgServerUseItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerUseItem& operator=(CMsgServerUseItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerUseItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerUseItem* internal_default_instance() {
    return reinterpret_cast<const CMsgServerUseItem*>(
               &_CMsgServerUseItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgServerUseItem& a, CMsgServerUseItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgServerUseItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerUseItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgServerUseItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgServerUseItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgServerUseItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgServerUseItem& from) {
    CMsgServerUseItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerUseItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgServerUseItem";
  }
  protected:
  explicit CMsgServerUseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseItemMsgFieldNumber = 2,
    kInitiatorAccountIdFieldNumber = 1,
  };
  // optional .CMsgUseItem use_item_msg = 2;
  bool has_use_item_msg() const;
  private:
  bool _internal_has_use_item_msg() const;
  public:
  void clear_use_item_msg();
  const ::CMsgUseItem& use_item_msg() const;
  PROTOBUF_NODISCARD ::CMsgUseItem* release_use_item_msg();
  ::CMsgUseItem* mutable_use_item_msg();
  void set_allocated_use_item_msg(::CMsgUseItem* use_item_msg);
  private:
  const ::CMsgUseItem& _internal_use_item_msg() const;
  ::CMsgUseItem* _internal_mutable_use_item_msg();
  public:
  void unsafe_arena_set_allocated_use_item_msg(
      ::CMsgUseItem* use_item_msg);
  ::CMsgUseItem* unsafe_arena_release_use_item_msg();

  // optional uint32 initiator_account_id = 1;
  bool has_initiator_account_id() const;
  private:
  bool _internal_has_initiator_account_id() const;
  public:
  void clear_initiator_account_id();
  uint32_t initiator_account_id() const;
  void set_initiator_account_id(uint32_t value);
  private:
  uint32_t _internal_initiator_account_id() const;
  void _internal_set_initiator_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgServerUseItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgUseItem* use_item_msg_;
    uint32_t initiator_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgUseMultipleItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgUseMultipleItems) */ {
 public:
  inline CMsgUseMultipleItems() : CMsgUseMultipleItems(nullptr) {}
  ~CMsgUseMultipleItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgUseMultipleItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgUseMultipleItems(const CMsgUseMultipleItems& from);
  CMsgUseMultipleItems(CMsgUseMultipleItems&& from) noexcept
    : CMsgUseMultipleItems() {
    *this = ::std::move(from);
  }

  inline CMsgUseMultipleItems& operator=(const CMsgUseMultipleItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgUseMultipleItems& operator=(CMsgUseMultipleItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgUseMultipleItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgUseMultipleItems* internal_default_instance() {
    return reinterpret_cast<const CMsgUseMultipleItems*>(
               &_CMsgUseMultipleItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgUseMultipleItems& a, CMsgUseMultipleItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgUseMultipleItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgUseMultipleItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgUseMultipleItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgUseMultipleItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgUseMultipleItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgUseMultipleItems& from) {
    CMsgUseMultipleItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUseMultipleItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgUseMultipleItems";
  }
  protected:
  explicit CMsgUseMultipleItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 1,
  };
  // repeated uint64 item_ids = 1;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // @@protoc_insertion_point(class_scope:CMsgUseMultipleItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCStoreRechargeRedirect_LineItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCStoreRechargeRedirect_LineItem) */ {
 public:
  inline CGCStoreRechargeRedirect_LineItem() : CGCStoreRechargeRedirect_LineItem(nullptr) {}
  ~CGCStoreRechargeRedirect_LineItem() override;
  explicit PROTOBUF_CONSTEXPR CGCStoreRechargeRedirect_LineItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCStoreRechargeRedirect_LineItem(const CGCStoreRechargeRedirect_LineItem& from);
  CGCStoreRechargeRedirect_LineItem(CGCStoreRechargeRedirect_LineItem&& from) noexcept
    : CGCStoreRechargeRedirect_LineItem() {
    *this = ::std::move(from);
  }

  inline CGCStoreRechargeRedirect_LineItem& operator=(const CGCStoreRechargeRedirect_LineItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCStoreRechargeRedirect_LineItem& operator=(CGCStoreRechargeRedirect_LineItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGCStoreRechargeRedirect_LineItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCStoreRechargeRedirect_LineItem* internal_default_instance() {
    return reinterpret_cast<const CGCStoreRechargeRedirect_LineItem*>(
               &_CGCStoreRechargeRedirect_LineItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CGCStoreRechargeRedirect_LineItem& a, CGCStoreRechargeRedirect_LineItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCStoreRechargeRedirect_LineItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCStoreRechargeRedirect_LineItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGCStoreRechargeRedirect_LineItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CGCStoreRechargeRedirect_LineItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CGCStoreRechargeRedirect_LineItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CGCStoreRechargeRedirect_LineItem& from) {
    CGCStoreRechargeRedirect_LineItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCStoreRechargeRedirect_LineItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCStoreRechargeRedirect_LineItem";
  }
  protected:
  explicit CGCStoreRechargeRedirect_LineItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefIdFieldNumber = 1,
    kQuantityFieldNumber = 2,
  };
  // optional uint32 item_def_id = 1;
  bool has_item_def_id() const;
  private:
  bool _internal_has_item_def_id() const;
  public:
  void clear_item_def_id();
  uint32_t item_def_id() const;
  void set_item_def_id(uint32_t value);
  private:
  uint32_t _internal_item_def_id() const;
  void _internal_set_item_def_id(uint32_t value);
  public:

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  uint32_t quantity() const;
  void set_quantity(uint32_t value);
  private:
  uint32_t _internal_quantity() const;
  void _internal_set_quantity(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CGCStoreRechargeRedirect_LineItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t item_def_id_;
    uint32_t quantity_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCEconSQLWorkItemEmbeddedRollbackData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCEconSQLWorkItemEmbeddedRollbackData) */ {
 public:
  inline CMsgGCEconSQLWorkItemEmbeddedRollbackData() : CMsgGCEconSQLWorkItemEmbeddedRollbackData(nullptr) {}
  ~CMsgGCEconSQLWorkItemEmbeddedRollbackData() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCEconSQLWorkItemEmbeddedRollbackData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCEconSQLWorkItemEmbeddedRollbackData(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from);
  CMsgGCEconSQLWorkItemEmbeddedRollbackData(CMsgGCEconSQLWorkItemEmbeddedRollbackData&& from) noexcept
    : CMsgGCEconSQLWorkItemEmbeddedRollbackData() {
    *this = ::std::move(from);
  }

  inline CMsgGCEconSQLWorkItemEmbeddedRollbackData& operator=(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCEconSQLWorkItemEmbeddedRollbackData& operator=(CMsgGCEconSQLWorkItemEmbeddedRollbackData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCEconSQLWorkItemEmbeddedRollbackData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCEconSQLWorkItemEmbeddedRollbackData* internal_default_instance() {
    return reinterpret_cast<const CMsgGCEconSQLWorkItemEmbeddedRollbackData*>(
               &_CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgGCEconSQLWorkItemEmbeddedRollbackData& a, CMsgGCEconSQLWorkItemEmbeddedRollbackData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCEconSQLWorkItemEmbeddedRollbackData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCEconSQLWorkItemEmbeddedRollbackData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
    CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCEconSQLWorkItemEmbeddedRollbackData";
  }
  protected:
  explicit CMsgGCEconSQLWorkItemEmbeddedRollbackData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeletedItemIdFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kOldAuditActionFieldNumber = 3,
    kNewAuditActionFieldNumber = 4,
    kExpectedAuditActionFieldNumber = 5,
  };
  // optional uint64 deleted_item_id = 2;
  bool has_deleted_item_id() const;
  private:
  bool _internal_has_deleted_item_id() const;
  public:
  void clear_deleted_item_id();
  uint64_t deleted_item_id() const;
  void set_deleted_item_id(uint64_t value);
  private:
  uint64_t _internal_deleted_item_id() const;
  void _internal_set_deleted_item_id(uint64_t value);
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 old_audit_action = 3;
  bool has_old_audit_action() const;
  private:
  bool _internal_has_old_audit_action() const;
  public:
  void clear_old_audit_action();
  uint32_t old_audit_action() const;
  void set_old_audit_action(uint32_t value);
  private:
  uint32_t _internal_old_audit_action() const;
  void _internal_set_old_audit_action(uint32_t value);
  public:

  // optional uint32 new_audit_action = 4;
  bool has_new_audit_action() const;
  private:
  bool _internal_has_new_audit_action() const;
  public:
  void clear_new_audit_action();
  uint32_t new_audit_action() const;
  void set_new_audit_action(uint32_t value);
  private:
  uint32_t _internal_new_audit_action() const;
  void _internal_set_new_audit_action(uint32_t value);
  public:

  // optional uint32 expected_audit_action = 5;
  bool has_expected_audit_action() const;
  private:
  bool _internal_has_expected_audit_action() const;
  public:
  void clear_expected_audit_action();
  uint32_t expected_audit_action() const;
  void set_expected_audit_action(uint32_t value);
  private:
  uint32_t _internal_expected_audit_action() const;
  void _internal_set_expected_audit_action(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCEconSQLWorkItemEmbeddedRollbackData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t deleted_item_id_;
    uint32_t account_id_;
    uint32_t old_audit_action_;
    uint32_t new_audit_action_;
    uint32_t expected_audit_action_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgCraftStatue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCraftStatue) */ {
 public:
  inline CMsgCraftStatue() : CMsgCraftStatue(nullptr) {}
  ~CMsgCraftStatue() override;
  explicit PROTOBUF_CONSTEXPR CMsgCraftStatue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCraftStatue(const CMsgCraftStatue& from);
  CMsgCraftStatue(CMsgCraftStatue&& from) noexcept
    : CMsgCraftStatue() {
    *this = ::std::move(from);
  }

  inline CMsgCraftStatue& operator=(const CMsgCraftStatue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCraftStatue& operator=(CMsgCraftStatue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCraftStatue& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCraftStatue* internal_default_instance() {
    return reinterpret_cast<const CMsgCraftStatue*>(
               &_CMsgCraftStatue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgCraftStatue& a, CMsgCraftStatue& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCraftStatue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCraftStatue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCraftStatue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCraftStatue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCraftStatue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCraftStatue& from) {
    CMsgCraftStatue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCraftStatue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCraftStatue";
  }
  protected:
  explicit CMsgCraftStatue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSequencenameFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kHeroidFieldNumber = 1,
    kCycleFieldNumber = 3,
    kToolidFieldNumber = 6,
    kPedestalItemdefFieldNumber = 5,
  };
  // optional string sequencename = 2;
  bool has_sequencename() const;
  private:
  bool _internal_has_sequencename() const;
  public:
  void clear_sequencename();
  const std::string& sequencename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sequencename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sequencename();
  PROTOBUF_NODISCARD std::string* release_sequencename();
  void set_allocated_sequencename(std::string* sequencename);
  private:
  const std::string& _internal_sequencename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sequencename(const std::string& value);
  std::string* _internal_mutable_sequencename();
  public:

  // optional string description = 4;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional uint32 heroid = 1;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  uint32_t heroid() const;
  void set_heroid(uint32_t value);
  private:
  uint32_t _internal_heroid() const;
  void _internal_set_heroid(uint32_t value);
  public:

  // optional float cycle = 3;
  bool has_cycle() const;
  private:
  bool _internal_has_cycle() const;
  public:
  void clear_cycle();
  float cycle() const;
  void set_cycle(float value);
  private:
  float _internal_cycle() const;
  void _internal_set_cycle(float value);
  public:

  // optional uint64 toolid = 6;
  bool has_toolid() const;
  private:
  bool _internal_has_toolid() const;
  public:
  void clear_toolid();
  uint64_t toolid() const;
  void set_toolid(uint64_t value);
  private:
  uint64_t _internal_toolid() const;
  void _internal_set_toolid(uint64_t value);
  public:

  // optional uint32 pedestal_itemdef = 5;
  bool has_pedestal_itemdef() const;
  private:
  bool _internal_has_pedestal_itemdef() const;
  public:
  void clear_pedestal_itemdef();
  uint32_t pedestal_itemdef() const;
  void set_pedestal_itemdef(uint32_t value);
  private:
  uint32_t _internal_pedestal_itemdef() const;
  void _internal_set_pedestal_itemdef(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCraftStatue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sequencename_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    uint32_t heroid_;
    float cycle_;
    uint64_t toolid_;
    uint32_t pedestal_itemdef_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgRedeemCode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRedeemCode) */ {
 public:
  inline CMsgRedeemCode() : CMsgRedeemCode(nullptr) {}
  ~CMsgRedeemCode() override;
  explicit PROTOBUF_CONSTEXPR CMsgRedeemCode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRedeemCode(const CMsgRedeemCode& from);
  CMsgRedeemCode(CMsgRedeemCode&& from) noexcept
    : CMsgRedeemCode() {
    *this = ::std::move(from);
  }

  inline CMsgRedeemCode& operator=(const CMsgRedeemCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRedeemCode& operator=(CMsgRedeemCode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRedeemCode& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRedeemCode* internal_default_instance() {
    return reinterpret_cast<const CMsgRedeemCode*>(
               &_CMsgRedeemCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgRedeemCode& a, CMsgRedeemCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRedeemCode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRedeemCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRedeemCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgRedeemCode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRedeemCode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRedeemCode& from) {
    CMsgRedeemCode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRedeemCode* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRedeemCode";
  }
  protected:
  explicit CMsgRedeemCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // optional string code = 1;
  bool has_code() const;
  private:
  bool _internal_has_code() const;
  public:
  void clear_code();
  const std::string& code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // @@protoc_insertion_point(class_scope:CMsgRedeemCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgRedeemCodeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRedeemCodeResponse) */ {
 public:
  inline CMsgRedeemCodeResponse() : CMsgRedeemCodeResponse(nullptr) {}
  ~CMsgRedeemCodeResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgRedeemCodeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRedeemCodeResponse(const CMsgRedeemCodeResponse& from);
  CMsgRedeemCodeResponse(CMsgRedeemCodeResponse&& from) noexcept
    : CMsgRedeemCodeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgRedeemCodeResponse& operator=(const CMsgRedeemCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRedeemCodeResponse& operator=(CMsgRedeemCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRedeemCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRedeemCodeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRedeemCodeResponse*>(
               &_CMsgRedeemCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgRedeemCodeResponse& a, CMsgRedeemCodeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRedeemCodeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRedeemCodeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRedeemCodeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgRedeemCodeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRedeemCodeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRedeemCodeResponse& from) {
    CMsgRedeemCodeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRedeemCodeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRedeemCodeResponse";
  }
  protected:
  explicit CMsgRedeemCodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgRedeemCodeResponse_EResultCode EResultCode;
  static constexpr EResultCode k_Succeeded =
    CMsgRedeemCodeResponse_EResultCode_k_Succeeded;
  static constexpr EResultCode k_Failed_CodeNotFound =
    CMsgRedeemCodeResponse_EResultCode_k_Failed_CodeNotFound;
  static constexpr EResultCode k_Failed_CodeAlreadyUsed =
    CMsgRedeemCodeResponse_EResultCode_k_Failed_CodeAlreadyUsed;
  static constexpr EResultCode k_Failed_OtherError =
    CMsgRedeemCodeResponse_EResultCode_k_Failed_OtherError;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgRedeemCodeResponse_EResultCode_IsValid(value);
  }
  static constexpr EResultCode EResultCode_MIN =
    CMsgRedeemCodeResponse_EResultCode_EResultCode_MIN;
  static constexpr EResultCode EResultCode_MAX =
    CMsgRedeemCodeResponse_EResultCode_EResultCode_MAX;
  static constexpr int EResultCode_ARRAYSIZE =
    CMsgRedeemCodeResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgRedeemCodeResponse_EResultCode_descriptor();
  }
  template<typename T>
  static inline const std::string& EResultCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResultCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResultCode_Name.");
    return CMsgRedeemCodeResponse_EResultCode_Name(enum_t_value);
  }
  static inline bool EResultCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResultCode* value) {
    return CMsgRedeemCodeResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kResponseFieldNumber = 1,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 response = 1;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  uint32_t response() const;
  void set_response(uint32_t value);
  private:
  uint32_t _internal_response() const;
  void _internal_set_response(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgRedeemCodeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDevNewItemRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevNewItemRequest) */ {
 public:
  inline CMsgDevNewItemRequest() : CMsgDevNewItemRequest(nullptr) {}
  ~CMsgDevNewItemRequest() override;
  explicit PROTOBUF_CONSTEXPR CMsgDevNewItemRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from);
  CMsgDevNewItemRequest(CMsgDevNewItemRequest&& from) noexcept
    : CMsgDevNewItemRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDevNewItemRequest& operator=(const CMsgDevNewItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevNewItemRequest& operator=(CMsgDevNewItemRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevNewItemRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevNewItemRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDevNewItemRequest*>(
               &_CMsgDevNewItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgDevNewItemRequest& a, CMsgDevNewItemRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevNewItemRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevNewItemRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDevNewItemRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgDevNewItemRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgDevNewItemRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgDevNewItemRequest& from) {
    CMsgDevNewItemRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevNewItemRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevNewItemRequest";
  }
  protected:
  explicit CMsgDevNewItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttrDefNameFieldNumber = 5,
    kAttrValueFieldNumber = 6,
    kItemDefNameFieldNumber = 3,
    kLootListNameFieldNumber = 4,
    kItemQualityFieldNumber = 7,
  };
  // repeated string attr_def_name = 5;
  int attr_def_name_size() const;
  private:
  int _internal_attr_def_name_size() const;
  public:
  void clear_attr_def_name();
  const std::string& attr_def_name(int index) const;
  std::string* mutable_attr_def_name(int index);
  void set_attr_def_name(int index, const std::string& value);
  void set_attr_def_name(int index, std::string&& value);
  void set_attr_def_name(int index, const char* value);
  void set_attr_def_name(int index, const char* value, size_t size);
  std::string* add_attr_def_name();
  void add_attr_def_name(const std::string& value);
  void add_attr_def_name(std::string&& value);
  void add_attr_def_name(const char* value);
  void add_attr_def_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& attr_def_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_attr_def_name();
  private:
  const std::string& _internal_attr_def_name(int index) const;
  std::string* _internal_add_attr_def_name();
  public:

  // repeated string attr_value = 6;
  int attr_value_size() const;
  private:
  int _internal_attr_value_size() const;
  public:
  void clear_attr_value();
  const std::string& attr_value(int index) const;
  std::string* mutable_attr_value(int index);
  void set_attr_value(int index, const std::string& value);
  void set_attr_value(int index, std::string&& value);
  void set_attr_value(int index, const char* value);
  void set_attr_value(int index, const char* value, size_t size);
  std::string* add_attr_value();
  void add_attr_value(const std::string& value);
  void add_attr_value(std::string&& value);
  void add_attr_value(const char* value);
  void add_attr_value(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& attr_value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_attr_value();
  private:
  const std::string& _internal_attr_value(int index) const;
  std::string* _internal_add_attr_value();
  public:

  // optional string item_def_name = 3;
  bool has_item_def_name() const;
  private:
  bool _internal_has_item_def_name() const;
  public:
  void clear_item_def_name();
  const std::string& item_def_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_item_def_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_item_def_name();
  PROTOBUF_NODISCARD std::string* release_item_def_name();
  void set_allocated_item_def_name(std::string* item_def_name);
  private:
  const std::string& _internal_item_def_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_item_def_name(const std::string& value);
  std::string* _internal_mutable_item_def_name();
  public:

  // optional string loot_list_name = 4;
  bool has_loot_list_name() const;
  private:
  bool _internal_has_loot_list_name() const;
  public:
  void clear_loot_list_name();
  const std::string& loot_list_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_loot_list_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_loot_list_name();
  PROTOBUF_NODISCARD std::string* release_loot_list_name();
  void set_allocated_loot_list_name(std::string* loot_list_name);
  private:
  const std::string& _internal_loot_list_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_loot_list_name(const std::string& value);
  std::string* _internal_mutable_loot_list_name();
  public:

  // optional uint32 item_quality = 7;
  bool has_item_quality() const;
  private:
  bool _internal_has_item_quality() const;
  public:
  void clear_item_quality();
  uint32_t item_quality() const;
  void set_item_quality(uint32_t value);
  private:
  uint32_t _internal_item_quality() const;
  void _internal_set_item_quality(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevNewItemRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> attr_def_name_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> attr_value_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_def_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr loot_list_name_;
    uint32_t item_quality_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDevNewItemRequestResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevNewItemRequestResponse) */ {
 public:
  inline CMsgDevNewItemRequestResponse() : CMsgDevNewItemRequestResponse(nullptr) {}
  ~CMsgDevNewItemRequestResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgDevNewItemRequestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevNewItemRequestResponse(const CMsgDevNewItemRequestResponse& from);
  CMsgDevNewItemRequestResponse(CMsgDevNewItemRequestResponse&& from) noexcept
    : CMsgDevNewItemRequestResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDevNewItemRequestResponse& operator=(const CMsgDevNewItemRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevNewItemRequestResponse& operator=(CMsgDevNewItemRequestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevNewItemRequestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevNewItemRequestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDevNewItemRequestResponse*>(
               &_CMsgDevNewItemRequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgDevNewItemRequestResponse& a, CMsgDevNewItemRequestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevNewItemRequestResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevNewItemRequestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDevNewItemRequestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgDevNewItemRequestResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgDevNewItemRequestResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgDevNewItemRequestResponse& from) {
    CMsgDevNewItemRequestResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevNewItemRequestResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevNewItemRequestResponse";
  }
  protected:
  explicit CMsgDevNewItemRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevNewItemRequestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDevUnlockAllItemStyles final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevUnlockAllItemStyles) */ {
 public:
  inline CMsgDevUnlockAllItemStyles() : CMsgDevUnlockAllItemStyles(nullptr) {}
  ~CMsgDevUnlockAllItemStyles() override;
  explicit PROTOBUF_CONSTEXPR CMsgDevUnlockAllItemStyles(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevUnlockAllItemStyles(const CMsgDevUnlockAllItemStyles& from);
  CMsgDevUnlockAllItemStyles(CMsgDevUnlockAllItemStyles&& from) noexcept
    : CMsgDevUnlockAllItemStyles() {
    *this = ::std::move(from);
  }

  inline CMsgDevUnlockAllItemStyles& operator=(const CMsgDevUnlockAllItemStyles& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevUnlockAllItemStyles& operator=(CMsgDevUnlockAllItemStyles&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevUnlockAllItemStyles& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevUnlockAllItemStyles* internal_default_instance() {
    return reinterpret_cast<const CMsgDevUnlockAllItemStyles*>(
               &_CMsgDevUnlockAllItemStyles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgDevUnlockAllItemStyles& a, CMsgDevUnlockAllItemStyles& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevUnlockAllItemStyles* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevUnlockAllItemStyles* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDevUnlockAllItemStyles* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgDevUnlockAllItemStyles>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgDevUnlockAllItemStyles& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgDevUnlockAllItemStyles& from) {
    CMsgDevUnlockAllItemStyles::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevUnlockAllItemStyles* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevUnlockAllItemStyles";
  }
  protected:
  explicit CMsgDevUnlockAllItemStyles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevUnlockAllItemStyles)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDevUnlockAllItemStylesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevUnlockAllItemStylesResponse) */ {
 public:
  inline CMsgDevUnlockAllItemStylesResponse() : CMsgDevUnlockAllItemStylesResponse(nullptr) {}
  ~CMsgDevUnlockAllItemStylesResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgDevUnlockAllItemStylesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevUnlockAllItemStylesResponse(const CMsgDevUnlockAllItemStylesResponse& from);
  CMsgDevUnlockAllItemStylesResponse(CMsgDevUnlockAllItemStylesResponse&& from) noexcept
    : CMsgDevUnlockAllItemStylesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDevUnlockAllItemStylesResponse& operator=(const CMsgDevUnlockAllItemStylesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevUnlockAllItemStylesResponse& operator=(CMsgDevUnlockAllItemStylesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevUnlockAllItemStylesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevUnlockAllItemStylesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDevUnlockAllItemStylesResponse*>(
               &_CMsgDevUnlockAllItemStylesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgDevUnlockAllItemStylesResponse& a, CMsgDevUnlockAllItemStylesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevUnlockAllItemStylesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevUnlockAllItemStylesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDevUnlockAllItemStylesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgDevUnlockAllItemStylesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgDevUnlockAllItemStylesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgDevUnlockAllItemStylesResponse& from) {
    CMsgDevUnlockAllItemStylesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevUnlockAllItemStylesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevUnlockAllItemStylesResponse";
  }
  protected:
  explicit CMsgDevUnlockAllItemStylesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevUnlockAllItemStylesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetAccountSubscriptionItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCGetAccountSubscriptionItem) */ {
 public:
  inline CMsgGCGetAccountSubscriptionItem() : CMsgGCGetAccountSubscriptionItem(nullptr) {}
  ~CMsgGCGetAccountSubscriptionItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCGetAccountSubscriptionItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCGetAccountSubscriptionItem(const CMsgGCGetAccountSubscriptionItem& from);
  CMsgGCGetAccountSubscriptionItem(CMsgGCGetAccountSubscriptionItem&& from) noexcept
    : CMsgGCGetAccountSubscriptionItem() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetAccountSubscriptionItem& operator=(const CMsgGCGetAccountSubscriptionItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCGetAccountSubscriptionItem& operator=(CMsgGCGetAccountSubscriptionItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCGetAccountSubscriptionItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCGetAccountSubscriptionItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetAccountSubscriptionItem*>(
               &_CMsgGCGetAccountSubscriptionItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgGCGetAccountSubscriptionItem& a, CMsgGCGetAccountSubscriptionItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCGetAccountSubscriptionItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCGetAccountSubscriptionItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCGetAccountSubscriptionItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCGetAccountSubscriptionItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCGetAccountSubscriptionItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCGetAccountSubscriptionItem& from) {
    CMsgGCGetAccountSubscriptionItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetAccountSubscriptionItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCGetAccountSubscriptionItem";
  }
  protected:
  explicit CMsgGCGetAccountSubscriptionItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCGetAccountSubscriptionItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetAccountSubscriptionItemResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCGetAccountSubscriptionItemResponse) */ {
 public:
  inline CMsgGCGetAccountSubscriptionItemResponse() : CMsgGCGetAccountSubscriptionItemResponse(nullptr) {}
  ~CMsgGCGetAccountSubscriptionItemResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCGetAccountSubscriptionItemResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCGetAccountSubscriptionItemResponse(const CMsgGCGetAccountSubscriptionItemResponse& from);
  CMsgGCGetAccountSubscriptionItemResponse(CMsgGCGetAccountSubscriptionItemResponse&& from) noexcept
    : CMsgGCGetAccountSubscriptionItemResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetAccountSubscriptionItemResponse& operator=(const CMsgGCGetAccountSubscriptionItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCGetAccountSubscriptionItemResponse& operator=(CMsgGCGetAccountSubscriptionItemResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCGetAccountSubscriptionItemResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCGetAccountSubscriptionItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetAccountSubscriptionItemResponse*>(
               &_CMsgGCGetAccountSubscriptionItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgGCGetAccountSubscriptionItemResponse& a, CMsgGCGetAccountSubscriptionItemResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCGetAccountSubscriptionItemResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCGetAccountSubscriptionItemResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCGetAccountSubscriptionItemResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCGetAccountSubscriptionItemResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCGetAccountSubscriptionItemResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCGetAccountSubscriptionItemResponse& from) {
    CMsgGCGetAccountSubscriptionItemResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetAccountSubscriptionItemResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCGetAccountSubscriptionItemResponse";
  }
  protected:
  explicit CMsgGCGetAccountSubscriptionItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDefIndexFieldNumber = 1,
  };
  // optional uint32 def_index = 1;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  uint32_t def_index() const;
  void set_def_index(uint32_t value);
  private:
  uint32_t _internal_def_index() const;
  void _internal_set_def_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCGetAccountSubscriptionItemResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t def_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCAddGiftItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCAddGiftItem) */ {
 public:
  inline CMsgGCAddGiftItem() : CMsgGCAddGiftItem(nullptr) {}
  ~CMsgGCAddGiftItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCAddGiftItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCAddGiftItem(const CMsgGCAddGiftItem& from);
  CMsgGCAddGiftItem(CMsgGCAddGiftItem&& from) noexcept
    : CMsgGCAddGiftItem() {
    *this = ::std::move(from);
  }

  inline CMsgGCAddGiftItem& operator=(const CMsgGCAddGiftItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCAddGiftItem& operator=(CMsgGCAddGiftItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCAddGiftItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCAddGiftItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGCAddGiftItem*>(
               &_CMsgGCAddGiftItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CMsgGCAddGiftItem& a, CMsgGCAddGiftItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCAddGiftItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCAddGiftItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCAddGiftItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCAddGiftItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCAddGiftItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCAddGiftItem& from) {
    CMsgGCAddGiftItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCAddGiftItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCAddGiftItem";
  }
  protected:
  explicit CMsgGCAddGiftItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCAddGiftItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCWrapAndDeliverGift final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCWrapAndDeliverGift) */ {
 public:
  inline CMsgClientToGCWrapAndDeliverGift() : CMsgClientToGCWrapAndDeliverGift(nullptr) {}
  ~CMsgClientToGCWrapAndDeliverGift() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCWrapAndDeliverGift(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCWrapAndDeliverGift(const CMsgClientToGCWrapAndDeliverGift& from);
  CMsgClientToGCWrapAndDeliverGift(CMsgClientToGCWrapAndDeliverGift&& from) noexcept
    : CMsgClientToGCWrapAndDeliverGift() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCWrapAndDeliverGift& operator=(const CMsgClientToGCWrapAndDeliverGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCWrapAndDeliverGift& operator=(CMsgClientToGCWrapAndDeliverGift&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCWrapAndDeliverGift& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCWrapAndDeliverGift* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCWrapAndDeliverGift*>(
               &_CMsgClientToGCWrapAndDeliverGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgClientToGCWrapAndDeliverGift& a, CMsgClientToGCWrapAndDeliverGift& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCWrapAndDeliverGift* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCWrapAndDeliverGift* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCWrapAndDeliverGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCWrapAndDeliverGift>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCWrapAndDeliverGift& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCWrapAndDeliverGift& from) {
    CMsgClientToGCWrapAndDeliverGift::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCWrapAndDeliverGift* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCWrapAndDeliverGift";
  }
  protected:
  explicit CMsgClientToGCWrapAndDeliverGift(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGiftMessageFieldNumber = 3,
    kItemIdFieldNumber = 1,
    kGiveToAccountIdFieldNumber = 2,
  };
  // optional string gift_message = 3;
  bool has_gift_message() const;
  private:
  bool _internal_has_gift_message() const;
  public:
  void clear_gift_message();
  const std::string& gift_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_gift_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_gift_message();
  PROTOBUF_NODISCARD std::string* release_gift_message();
  void set_allocated_gift_message(std::string* gift_message);
  private:
  const std::string& _internal_gift_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_gift_message(const std::string& value);
  std::string* _internal_mutable_gift_message();
  public:

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 give_to_account_id = 2;
  bool has_give_to_account_id() const;
  private:
  bool _internal_has_give_to_account_id() const;
  public:
  void clear_give_to_account_id();
  uint32_t give_to_account_id() const;
  void set_give_to_account_id(uint32_t value);
  private:
  uint32_t _internal_give_to_account_id() const;
  void _internal_set_give_to_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCWrapAndDeliverGift)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gift_message_;
    uint64_t item_id_;
    uint32_t give_to_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCWrapAndDeliverGiftResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCWrapAndDeliverGiftResponse) */ {
 public:
  inline CMsgClientToGCWrapAndDeliverGiftResponse() : CMsgClientToGCWrapAndDeliverGiftResponse(nullptr) {}
  ~CMsgClientToGCWrapAndDeliverGiftResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCWrapAndDeliverGiftResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCWrapAndDeliverGiftResponse(const CMsgClientToGCWrapAndDeliverGiftResponse& from);
  CMsgClientToGCWrapAndDeliverGiftResponse(CMsgClientToGCWrapAndDeliverGiftResponse&& from) noexcept
    : CMsgClientToGCWrapAndDeliverGiftResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCWrapAndDeliverGiftResponse& operator=(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCWrapAndDeliverGiftResponse& operator=(CMsgClientToGCWrapAndDeliverGiftResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCWrapAndDeliverGiftResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCWrapAndDeliverGiftResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCWrapAndDeliverGiftResponse*>(
               &_CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgClientToGCWrapAndDeliverGiftResponse& a, CMsgClientToGCWrapAndDeliverGiftResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCWrapAndDeliverGiftResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCWrapAndDeliverGiftResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
    CMsgClientToGCWrapAndDeliverGiftResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCWrapAndDeliverGiftResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCWrapAndDeliverGiftResponse";
  }
  protected:
  explicit CMsgClientToGCWrapAndDeliverGiftResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
    kGiftingChargeUsesFieldNumber = 2,
    kGiftingChargeMaxFieldNumber = 3,
    kGiftingUsesFieldNumber = 4,
    kGiftingMaxFieldNumber = 5,
    kGiftingWindowHoursFieldNumber = 6,
    kTradeRestrictionFieldNumber = 7,
  };
  // optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::EGCMsgResponse response() const;
  void set_response(::EGCMsgResponse value);
  private:
  ::EGCMsgResponse _internal_response() const;
  void _internal_set_response(::EGCMsgResponse value);
  public:

  // optional uint32 gifting_charge_uses = 2;
  bool has_gifting_charge_uses() const;
  private:
  bool _internal_has_gifting_charge_uses() const;
  public:
  void clear_gifting_charge_uses();
  uint32_t gifting_charge_uses() const;
  void set_gifting_charge_uses(uint32_t value);
  private:
  uint32_t _internal_gifting_charge_uses() const;
  void _internal_set_gifting_charge_uses(uint32_t value);
  public:

  // optional int32 gifting_charge_max = 3;
  bool has_gifting_charge_max() const;
  private:
  bool _internal_has_gifting_charge_max() const;
  public:
  void clear_gifting_charge_max();
  int32_t gifting_charge_max() const;
  void set_gifting_charge_max(int32_t value);
  private:
  int32_t _internal_gifting_charge_max() const;
  void _internal_set_gifting_charge_max(int32_t value);
  public:

  // optional uint32 gifting_uses = 4;
  bool has_gifting_uses() const;
  private:
  bool _internal_has_gifting_uses() const;
  public:
  void clear_gifting_uses();
  uint32_t gifting_uses() const;
  void set_gifting_uses(uint32_t value);
  private:
  uint32_t _internal_gifting_uses() const;
  void _internal_set_gifting_uses(uint32_t value);
  public:

  // optional int32 gifting_max = 5;
  bool has_gifting_max() const;
  private:
  bool _internal_has_gifting_max() const;
  public:
  void clear_gifting_max();
  int32_t gifting_max() const;
  void set_gifting_max(int32_t value);
  private:
  int32_t _internal_gifting_max() const;
  void _internal_set_gifting_max(int32_t value);
  public:

  // optional uint32 gifting_window_hours = 6;
  bool has_gifting_window_hours() const;
  private:
  bool _internal_has_gifting_window_hours() const;
  public:
  void clear_gifting_window_hours();
  uint32_t gifting_window_hours() const;
  void set_gifting_window_hours(uint32_t value);
  private:
  uint32_t _internal_gifting_window_hours() const;
  void _internal_set_gifting_window_hours(uint32_t value);
  public:

  // optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  bool has_trade_restriction() const;
  private:
  bool _internal_has_trade_restriction() const;
  public:
  void clear_trade_restriction();
  ::EGCMsgInitiateTradeResponse trade_restriction() const;
  void set_trade_restriction(::EGCMsgInitiateTradeResponse value);
  private:
  ::EGCMsgInitiateTradeResponse _internal_trade_restriction() const;
  void _internal_set_trade_restriction(::EGCMsgInitiateTradeResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCWrapAndDeliverGiftResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
    uint32_t gifting_charge_uses_;
    int32_t gifting_charge_max_;
    uint32_t gifting_uses_;
    int32_t gifting_max_;
    uint32_t gifting_window_hours_;
    int trade_restriction_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnwrapGift final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnwrapGift) */ {
 public:
  inline CMsgClientToGCUnwrapGift() : CMsgClientToGCUnwrapGift(nullptr) {}
  ~CMsgClientToGCUnwrapGift() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnwrapGift(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnwrapGift(const CMsgClientToGCUnwrapGift& from);
  CMsgClientToGCUnwrapGift(CMsgClientToGCUnwrapGift&& from) noexcept
    : CMsgClientToGCUnwrapGift() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnwrapGift& operator=(const CMsgClientToGCUnwrapGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnwrapGift& operator=(CMsgClientToGCUnwrapGift&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnwrapGift& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnwrapGift* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnwrapGift*>(
               &_CMsgClientToGCUnwrapGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgClientToGCUnwrapGift& a, CMsgClientToGCUnwrapGift& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnwrapGift* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnwrapGift* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnwrapGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnwrapGift>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnwrapGift& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnwrapGift& from) {
    CMsgClientToGCUnwrapGift::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnwrapGift* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnwrapGift";
  }
  protected:
  explicit CMsgClientToGCUnwrapGift(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnwrapGift)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetGiftPermissions final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetGiftPermissions) */ {
 public:
  inline CMsgClientToGCGetGiftPermissions() : CMsgClientToGCGetGiftPermissions(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetGiftPermissions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetGiftPermissions(const CMsgClientToGCGetGiftPermissions& from);
  CMsgClientToGCGetGiftPermissions(CMsgClientToGCGetGiftPermissions&& from) noexcept
    : CMsgClientToGCGetGiftPermissions() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetGiftPermissions& operator=(const CMsgClientToGCGetGiftPermissions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetGiftPermissions& operator=(CMsgClientToGCGetGiftPermissions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetGiftPermissions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetGiftPermissions* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetGiftPermissions*>(
               &_CMsgClientToGCGetGiftPermissions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgClientToGCGetGiftPermissions& a, CMsgClientToGCGetGiftPermissions& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetGiftPermissions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetGiftPermissions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetGiftPermissions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetGiftPermissions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCGetGiftPermissions& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCGetGiftPermissions& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetGiftPermissions";
  }
  protected:
  explicit CMsgClientToGCGetGiftPermissions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetGiftPermissions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetGiftPermissionsResponse_FriendPermission final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission) */ {
 public:
  inline CMsgClientToGCGetGiftPermissionsResponse_FriendPermission() : CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(nullptr) {}
  ~CMsgClientToGCGetGiftPermissionsResponse_FriendPermission() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from);
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission&& from) noexcept
    : CMsgClientToGCGetGiftPermissionsResponse_FriendPermission() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& operator=(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& operator=(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission*>(
               &_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& a, CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetGiftPermissionsResponse_FriendPermission>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
    CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetGiftPermissionsResponse.FriendPermission";
  }
  protected:
  explicit CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kPermissionFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional .EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  bool has_permission() const;
  private:
  bool _internal_has_permission() const;
  public:
  void clear_permission();
  ::EGCMsgInitiateTradeResponse permission() const;
  void set_permission(::EGCMsgInitiateTradeResponse value);
  private:
  ::EGCMsgInitiateTradeResponse _internal_permission() const;
  void _internal_set_permission(::EGCMsgInitiateTradeResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    int permission_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetGiftPermissionsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetGiftPermissionsResponse) */ {
 public:
  inline CMsgClientToGCGetGiftPermissionsResponse() : CMsgClientToGCGetGiftPermissionsResponse(nullptr) {}
  ~CMsgClientToGCGetGiftPermissionsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetGiftPermissionsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetGiftPermissionsResponse(const CMsgClientToGCGetGiftPermissionsResponse& from);
  CMsgClientToGCGetGiftPermissionsResponse(CMsgClientToGCGetGiftPermissionsResponse&& from) noexcept
    : CMsgClientToGCGetGiftPermissionsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetGiftPermissionsResponse& operator=(const CMsgClientToGCGetGiftPermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetGiftPermissionsResponse& operator=(CMsgClientToGCGetGiftPermissionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetGiftPermissionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetGiftPermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetGiftPermissionsResponse*>(
               &_CMsgClientToGCGetGiftPermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgClientToGCGetGiftPermissionsResponse& a, CMsgClientToGCGetGiftPermissionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetGiftPermissionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetGiftPermissionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetGiftPermissionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetGiftPermissionsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetGiftPermissionsResponse& from) {
    CMsgClientToGCGetGiftPermissionsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetGiftPermissionsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetGiftPermissionsResponse";
  }
  protected:
  explicit CMsgClientToGCGetGiftPermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetGiftPermissionsResponse_FriendPermission FriendPermission;

  // accessors -------------------------------------------------------

  enum : int {
    kFriendPermissionsFieldNumber = 9,
    kIsUnlimitedFieldNumber = 1,
    kHasTwoFactorFieldNumber = 3,
    kSenderPermissionFieldNumber = 6,
    kFriendshipAgeRequirementFieldNumber = 7,
    kFriendshipAgeRequirementTwoFactorFieldNumber = 8,
  };
  // repeated .CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  int friend_permissions_size() const;
  private:
  int _internal_friend_permissions_size() const;
  public:
  void clear_friend_permissions();
  ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* mutable_friend_permissions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >*
      mutable_friend_permissions();
  private:
  const ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& _internal_friend_permissions(int index) const;
  ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* _internal_add_friend_permissions();
  public:
  const ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& friend_permissions(int index) const;
  ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* add_friend_permissions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >&
      friend_permissions() const;

  // optional bool is_unlimited = 1;
  bool has_is_unlimited() const;
  private:
  bool _internal_has_is_unlimited() const;
  public:
  void clear_is_unlimited();
  bool is_unlimited() const;
  void set_is_unlimited(bool value);
  private:
  bool _internal_is_unlimited() const;
  void _internal_set_is_unlimited(bool value);
  public:

  // optional bool has_two_factor = 3;
  bool has_has_two_factor() const;
  private:
  bool _internal_has_has_two_factor() const;
  public:
  void clear_has_two_factor();
  bool has_two_factor() const;
  void set_has_two_factor(bool value);
  private:
  bool _internal_has_two_factor() const;
  void _internal_set_has_two_factor(bool value);
  public:

  // optional .EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  bool has_sender_permission() const;
  private:
  bool _internal_has_sender_permission() const;
  public:
  void clear_sender_permission();
  ::EGCMsgInitiateTradeResponse sender_permission() const;
  void set_sender_permission(::EGCMsgInitiateTradeResponse value);
  private:
  ::EGCMsgInitiateTradeResponse _internal_sender_permission() const;
  void _internal_set_sender_permission(::EGCMsgInitiateTradeResponse value);
  public:

  // optional uint32 friendship_age_requirement = 7;
  bool has_friendship_age_requirement() const;
  private:
  bool _internal_has_friendship_age_requirement() const;
  public:
  void clear_friendship_age_requirement();
  uint32_t friendship_age_requirement() const;
  void set_friendship_age_requirement(uint32_t value);
  private:
  uint32_t _internal_friendship_age_requirement() const;
  void _internal_set_friendship_age_requirement(uint32_t value);
  public:

  // optional uint32 friendship_age_requirement_two_factor = 8;
  bool has_friendship_age_requirement_two_factor() const;
  private:
  bool _internal_has_friendship_age_requirement_two_factor() const;
  public:
  void clear_friendship_age_requirement_two_factor();
  uint32_t friendship_age_requirement_two_factor() const;
  void set_friendship_age_requirement_two_factor(uint32_t value);
  private:
  uint32_t _internal_friendship_age_requirement_two_factor() const;
  void _internal_set_friendship_age_requirement_two_factor(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetGiftPermissionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission > friend_permissions_;
    bool is_unlimited_;
    bool has_two_factor_;
    int sender_permission_;
    uint32_t friendship_age_requirement_;
    uint32_t friendship_age_requirement_two_factor_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnpackBundle final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnpackBundle) */ {
 public:
  inline CMsgClientToGCUnpackBundle() : CMsgClientToGCUnpackBundle(nullptr) {}
  ~CMsgClientToGCUnpackBundle() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnpackBundle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnpackBundle(const CMsgClientToGCUnpackBundle& from);
  CMsgClientToGCUnpackBundle(CMsgClientToGCUnpackBundle&& from) noexcept
    : CMsgClientToGCUnpackBundle() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnpackBundle& operator=(const CMsgClientToGCUnpackBundle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnpackBundle& operator=(CMsgClientToGCUnpackBundle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnpackBundle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnpackBundle* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnpackBundle*>(
               &_CMsgClientToGCUnpackBundle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgClientToGCUnpackBundle& a, CMsgClientToGCUnpackBundle& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnpackBundle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnpackBundle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnpackBundle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnpackBundle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnpackBundle& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnpackBundle& from) {
    CMsgClientToGCUnpackBundle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnpackBundle* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnpackBundle";
  }
  protected:
  explicit CMsgClientToGCUnpackBundle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnpackBundle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnpackBundleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnpackBundleResponse) */ {
 public:
  inline CMsgClientToGCUnpackBundleResponse() : CMsgClientToGCUnpackBundleResponse(nullptr) {}
  ~CMsgClientToGCUnpackBundleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnpackBundleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnpackBundleResponse(const CMsgClientToGCUnpackBundleResponse& from);
  CMsgClientToGCUnpackBundleResponse(CMsgClientToGCUnpackBundleResponse&& from) noexcept
    : CMsgClientToGCUnpackBundleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnpackBundleResponse& operator=(const CMsgClientToGCUnpackBundleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnpackBundleResponse& operator=(CMsgClientToGCUnpackBundleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnpackBundleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnpackBundleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnpackBundleResponse*>(
               &_CMsgClientToGCUnpackBundleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgClientToGCUnpackBundleResponse& a, CMsgClientToGCUnpackBundleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnpackBundleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnpackBundleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnpackBundleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnpackBundleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnpackBundleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnpackBundleResponse& from) {
    CMsgClientToGCUnpackBundleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnpackBundleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnpackBundleResponse";
  }
  protected:
  explicit CMsgClientToGCUnpackBundleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUnpackBundleResponse_EUnpackBundle EUnpackBundle;
  static constexpr EUnpackBundle k_UnpackBundle_Succeeded =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Succeeded;
  static constexpr EUnpackBundle k_UnpackBundle_Failed_ItemIsNotBundle =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_ItemIsNotBundle;
  static constexpr EUnpackBundle k_UnpackBundle_Failed_UnableToCreateContainedItem =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_UnableToCreateContainedItem;
  static constexpr EUnpackBundle k_UnpackBundle_Failed_SOCacheError =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_SOCacheError;
  static constexpr EUnpackBundle k_UnpackBundle_Failed_ItemIsInvalid =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_ItemIsInvalid;
  static constexpr EUnpackBundle k_UnpackBundle_Failed_BadItemQuantity =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_BadItemQuantity;
  static constexpr EUnpackBundle k_UnpackBundle_Failed_UnableToDeleteItem =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_k_UnpackBundle_Failed_UnableToDeleteItem;
  static inline bool EUnpackBundle_IsValid(int value) {
    return CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(value);
  }
  static constexpr EUnpackBundle EUnpackBundle_MIN =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_MIN;
  static constexpr EUnpackBundle EUnpackBundle_MAX =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_MAX;
  static constexpr int EUnpackBundle_ARRAYSIZE =
    CMsgClientToGCUnpackBundleResponse_EUnpackBundle_EUnpackBundle_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EUnpackBundle_descriptor() {
    return CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor();
  }
  template<typename T>
  static inline const std::string& EUnpackBundle_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EUnpackBundle>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EUnpackBundle_Name.");
    return CMsgClientToGCUnpackBundleResponse_EUnpackBundle_Name(enum_t_value);
  }
  static inline bool EUnpackBundle_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EUnpackBundle* value) {
    return CMsgClientToGCUnpackBundleResponse_EUnpackBundle_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUnpackedItemIdsFieldNumber = 1,
    kUnpackedItemDefIndexesFieldNumber = 3,
    kResponseFieldNumber = 2,
  };
  // repeated uint64 unpacked_item_ids = 1;
  int unpacked_item_ids_size() const;
  private:
  int _internal_unpacked_item_ids_size() const;
  public:
  void clear_unpacked_item_ids();
  private:
  uint64_t _internal_unpacked_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_unpacked_item_ids() const;
  void _internal_add_unpacked_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_unpacked_item_ids();
  public:
  uint64_t unpacked_item_ids(int index) const;
  void set_unpacked_item_ids(int index, uint64_t value);
  void add_unpacked_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      unpacked_item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_unpacked_item_ids();

  // repeated uint32 unpacked_item_def_indexes = 3;
  int unpacked_item_def_indexes_size() const;
  private:
  int _internal_unpacked_item_def_indexes_size() const;
  public:
  void clear_unpacked_item_def_indexes();
  private:
  uint32_t _internal_unpacked_item_def_indexes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_unpacked_item_def_indexes() const;
  void _internal_add_unpacked_item_def_indexes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_unpacked_item_def_indexes();
  public:
  uint32_t unpacked_item_def_indexes(int index) const;
  void set_unpacked_item_def_indexes(int index, uint32_t value);
  void add_unpacked_item_def_indexes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      unpacked_item_def_indexes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_unpacked_item_def_indexes();

  // optional .CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle response() const;
  void set_response(::CMsgClientToGCUnpackBundleResponse_EUnpackBundle value);
  private:
  ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle _internal_response() const;
  void _internal_set_response(::CMsgClientToGCUnpackBundleResponse_EUnpackBundle value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnpackBundleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > unpacked_item_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > unpacked_item_def_indexes_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPackBundle final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPackBundle) */ {
 public:
  inline CMsgClientToGCPackBundle() : CMsgClientToGCPackBundle(nullptr) {}
  ~CMsgClientToGCPackBundle() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPackBundle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPackBundle(const CMsgClientToGCPackBundle& from);
  CMsgClientToGCPackBundle(CMsgClientToGCPackBundle&& from) noexcept
    : CMsgClientToGCPackBundle() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPackBundle& operator=(const CMsgClientToGCPackBundle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPackBundle& operator=(CMsgClientToGCPackBundle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPackBundle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPackBundle* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPackBundle*>(
               &_CMsgClientToGCPackBundle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgClientToGCPackBundle& a, CMsgClientToGCPackBundle& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPackBundle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPackBundle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPackBundle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPackBundle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPackBundle& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPackBundle& from) {
    CMsgClientToGCPackBundle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPackBundle* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPackBundle";
  }
  protected:
  explicit CMsgClientToGCPackBundle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 1,
    kBundleItemDefIndexFieldNumber = 2,
  };
  // repeated uint64 item_ids = 1;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // optional uint32 bundle_item_def_index = 2;
  bool has_bundle_item_def_index() const;
  private:
  bool _internal_has_bundle_item_def_index() const;
  public:
  void clear_bundle_item_def_index();
  uint32_t bundle_item_def_index() const;
  void set_bundle_item_def_index(uint32_t value);
  private:
  uint32_t _internal_bundle_item_def_index() const;
  void _internal_set_bundle_item_def_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPackBundle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    uint32_t bundle_item_def_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPackBundleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPackBundleResponse) */ {
 public:
  inline CMsgClientToGCPackBundleResponse() : CMsgClientToGCPackBundleResponse(nullptr) {}
  ~CMsgClientToGCPackBundleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPackBundleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPackBundleResponse(const CMsgClientToGCPackBundleResponse& from);
  CMsgClientToGCPackBundleResponse(CMsgClientToGCPackBundleResponse&& from) noexcept
    : CMsgClientToGCPackBundleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPackBundleResponse& operator=(const CMsgClientToGCPackBundleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPackBundleResponse& operator=(CMsgClientToGCPackBundleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPackBundleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPackBundleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPackBundleResponse*>(
               &_CMsgClientToGCPackBundleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgClientToGCPackBundleResponse& a, CMsgClientToGCPackBundleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPackBundleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPackBundleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPackBundleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPackBundleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPackBundleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPackBundleResponse& from) {
    CMsgClientToGCPackBundleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPackBundleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPackBundleResponse";
  }
  protected:
  explicit CMsgClientToGCPackBundleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPackBundleResponse_EPackBundle EPackBundle;
  static constexpr EPackBundle k_PackBundle_Succeeded =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Succeeded;
  static constexpr EPackBundle k_PackBundle_Failed_InternalError =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_InternalError;
  static constexpr EPackBundle k_PackBundle_Failed_ItemIsNotBundle =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsNotBundle;
  static constexpr EPackBundle k_PackBundle_Failed_SOCacheError =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_SOCacheError;
  static constexpr EPackBundle k_PackBundle_Failed_ItemIsInvalid =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsInvalid;
  static constexpr EPackBundle k_PackBundle_Failed_BadItemQuantity =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_BadItemQuantity;
  static constexpr EPackBundle k_PackBundle_Failed_UnableToDeleteItem =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_UnableToDeleteItem;
  static constexpr EPackBundle k_PackBundle_Failed_BundleCannotBePacked =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_BundleCannotBePacked;
  static constexpr EPackBundle k_PackBundle_Failed_ItemIsUntradeable =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsUntradeable;
  static constexpr EPackBundle k_PackBundle_Failed_ItemIsEquipped =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsEquipped;
  static constexpr EPackBundle k_PackBundle_Failed_ItemHasGems =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemHasGems;
  static constexpr EPackBundle k_PackBundle_Failed_ItemMixedQuality =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemMixedQuality;
  static constexpr EPackBundle k_PackBundle_Failed_ItemInvalidQuality =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemInvalidQuality;
  static constexpr EPackBundle k_PackBundle_Failed_ItemIsNonEconomy =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_ItemIsNonEconomy;
  static constexpr EPackBundle k_PackBundle_Failed_Disabled =
    CMsgClientToGCPackBundleResponse_EPackBundle_k_PackBundle_Failed_Disabled;
  static inline bool EPackBundle_IsValid(int value) {
    return CMsgClientToGCPackBundleResponse_EPackBundle_IsValid(value);
  }
  static constexpr EPackBundle EPackBundle_MIN =
    CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_MIN;
  static constexpr EPackBundle EPackBundle_MAX =
    CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_MAX;
  static constexpr int EPackBundle_ARRAYSIZE =
    CMsgClientToGCPackBundleResponse_EPackBundle_EPackBundle_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EPackBundle_descriptor() {
    return CMsgClientToGCPackBundleResponse_EPackBundle_descriptor();
  }
  template<typename T>
  static inline const std::string& EPackBundle_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EPackBundle>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EPackBundle_Name.");
    return CMsgClientToGCPackBundleResponse_EPackBundle_Name(enum_t_value);
  }
  static inline bool EPackBundle_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EPackBundle* value) {
    return CMsgClientToGCPackBundleResponse_EPackBundle_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kResponseFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional .CMsgClientToGCPackBundleResponse.EPackBundle response = 2 [default = k_PackBundle_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCPackBundleResponse_EPackBundle response() const;
  void set_response(::CMsgClientToGCPackBundleResponse_EPackBundle value);
  private:
  ::CMsgClientToGCPackBundleResponse_EPackBundle _internal_response() const;
  void _internal_set_response(::CMsgClientToGCPackBundleResponse_EPackBundle value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPackBundleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientStoreTransactionCompleted final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientStoreTransactionCompleted) */ {
 public:
  inline CMsgGCToClientStoreTransactionCompleted() : CMsgGCToClientStoreTransactionCompleted(nullptr) {}
  ~CMsgGCToClientStoreTransactionCompleted() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientStoreTransactionCompleted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientStoreTransactionCompleted(const CMsgGCToClientStoreTransactionCompleted& from);
  CMsgGCToClientStoreTransactionCompleted(CMsgGCToClientStoreTransactionCompleted&& from) noexcept
    : CMsgGCToClientStoreTransactionCompleted() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientStoreTransactionCompleted& operator=(const CMsgGCToClientStoreTransactionCompleted& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientStoreTransactionCompleted& operator=(CMsgGCToClientStoreTransactionCompleted&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientStoreTransactionCompleted& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientStoreTransactionCompleted* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientStoreTransactionCompleted*>(
               &_CMsgGCToClientStoreTransactionCompleted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgGCToClientStoreTransactionCompleted& a, CMsgGCToClientStoreTransactionCompleted& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientStoreTransactionCompleted* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientStoreTransactionCompleted* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientStoreTransactionCompleted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientStoreTransactionCompleted>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientStoreTransactionCompleted& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientStoreTransactionCompleted& from) {
    CMsgGCToClientStoreTransactionCompleted::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientStoreTransactionCompleted* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientStoreTransactionCompleted";
  }
  protected:
  explicit CMsgGCToClientStoreTransactionCompleted(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 2,
    kTxnIdFieldNumber = 1,
  };
  // repeated uint64 item_ids = 2;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // optional uint64 txn_id = 1;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  uint64_t txn_id() const;
  void set_txn_id(uint64_t value);
  private:
  uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientStoreTransactionCompleted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    uint64_t txn_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCEquipItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCEquipItems) */ {
 public:
  inline CMsgClientToGCEquipItems() : CMsgClientToGCEquipItems(nullptr) {}
  ~CMsgClientToGCEquipItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCEquipItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCEquipItems(const CMsgClientToGCEquipItems& from);
  CMsgClientToGCEquipItems(CMsgClientToGCEquipItems&& from) noexcept
    : CMsgClientToGCEquipItems() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCEquipItems& operator=(const CMsgClientToGCEquipItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCEquipItems& operator=(CMsgClientToGCEquipItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCEquipItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCEquipItems* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCEquipItems*>(
               &_CMsgClientToGCEquipItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgClientToGCEquipItems& a, CMsgClientToGCEquipItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCEquipItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCEquipItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCEquipItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCEquipItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCEquipItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCEquipItems& from) {
    CMsgClientToGCEquipItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCEquipItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCEquipItems";
  }
  protected:
  explicit CMsgClientToGCEquipItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipsFieldNumber = 1,
  };
  // repeated .CMsgAdjustItemEquippedState equips = 1;
  int equips_size() const;
  private:
  int _internal_equips_size() const;
  public:
  void clear_equips();
  ::CMsgAdjustItemEquippedState* mutable_equips(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAdjustItemEquippedState >*
      mutable_equips();
  private:
  const ::CMsgAdjustItemEquippedState& _internal_equips(int index) const;
  ::CMsgAdjustItemEquippedState* _internal_add_equips();
  public:
  const ::CMsgAdjustItemEquippedState& equips(int index) const;
  ::CMsgAdjustItemEquippedState* add_equips();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAdjustItemEquippedState >&
      equips() const;

  // @@protoc_insertion_point(class_scope:CMsgClientToGCEquipItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAdjustItemEquippedState > equips_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCEquipItemsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCEquipItemsResponse) */ {
 public:
  inline CMsgClientToGCEquipItemsResponse() : CMsgClientToGCEquipItemsResponse(nullptr) {}
  ~CMsgClientToGCEquipItemsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCEquipItemsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCEquipItemsResponse(const CMsgClientToGCEquipItemsResponse& from);
  CMsgClientToGCEquipItemsResponse(CMsgClientToGCEquipItemsResponse&& from) noexcept
    : CMsgClientToGCEquipItemsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCEquipItemsResponse& operator=(const CMsgClientToGCEquipItemsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCEquipItemsResponse& operator=(CMsgClientToGCEquipItemsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCEquipItemsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCEquipItemsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCEquipItemsResponse*>(
               &_CMsgClientToGCEquipItemsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CMsgClientToGCEquipItemsResponse& a, CMsgClientToGCEquipItemsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCEquipItemsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCEquipItemsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCEquipItemsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCEquipItemsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCEquipItemsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCEquipItemsResponse& from) {
    CMsgClientToGCEquipItemsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCEquipItemsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCEquipItemsResponse";
  }
  protected:
  explicit CMsgClientToGCEquipItemsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSoCacheVersionIdFieldNumber = 1,
  };
  // optional fixed64 so_cache_version_id = 1;
  bool has_so_cache_version_id() const;
  private:
  bool _internal_has_so_cache_version_id() const;
  public:
  void clear_so_cache_version_id();
  uint64_t so_cache_version_id() const;
  void set_so_cache_version_id(uint64_t value);
  private:
  uint64_t _internal_so_cache_version_id() const;
  void _internal_set_so_cache_version_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCEquipItemsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t so_cache_version_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetItemStyle final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetItemStyle) */ {
 public:
  inline CMsgClientToGCSetItemStyle() : CMsgClientToGCSetItemStyle(nullptr) {}
  ~CMsgClientToGCSetItemStyle() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetItemStyle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetItemStyle(const CMsgClientToGCSetItemStyle& from);
  CMsgClientToGCSetItemStyle(CMsgClientToGCSetItemStyle&& from) noexcept
    : CMsgClientToGCSetItemStyle() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetItemStyle& operator=(const CMsgClientToGCSetItemStyle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetItemStyle& operator=(CMsgClientToGCSetItemStyle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetItemStyle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetItemStyle* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetItemStyle*>(
               &_CMsgClientToGCSetItemStyle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CMsgClientToGCSetItemStyle& a, CMsgClientToGCSetItemStyle& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetItemStyle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetItemStyle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetItemStyle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetItemStyle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetItemStyle& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetItemStyle& from) {
    CMsgClientToGCSetItemStyle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetItemStyle* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetItemStyle";
  }
  protected:
  explicit CMsgClientToGCSetItemStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kStyleIndexFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 style_index = 2 [default = 255];
  bool has_style_index() const;
  private:
  bool _internal_has_style_index() const;
  public:
  void clear_style_index();
  uint32_t style_index() const;
  void set_style_index(uint32_t value);
  private:
  uint32_t _internal_style_index() const;
  void _internal_set_style_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetItemStyle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t style_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetItemStyleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetItemStyleResponse) */ {
 public:
  inline CMsgClientToGCSetItemStyleResponse() : CMsgClientToGCSetItemStyleResponse(nullptr) {}
  ~CMsgClientToGCSetItemStyleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetItemStyleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetItemStyleResponse(const CMsgClientToGCSetItemStyleResponse& from);
  CMsgClientToGCSetItemStyleResponse(CMsgClientToGCSetItemStyleResponse&& from) noexcept
    : CMsgClientToGCSetItemStyleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetItemStyleResponse& operator=(const CMsgClientToGCSetItemStyleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetItemStyleResponse& operator=(CMsgClientToGCSetItemStyleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetItemStyleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetItemStyleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetItemStyleResponse*>(
               &_CMsgClientToGCSetItemStyleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CMsgClientToGCSetItemStyleResponse& a, CMsgClientToGCSetItemStyleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetItemStyleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetItemStyleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetItemStyleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetItemStyleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetItemStyleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetItemStyleResponse& from) {
    CMsgClientToGCSetItemStyleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetItemStyleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetItemStyleResponse";
  }
  protected:
  explicit CMsgClientToGCSetItemStyleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetItemStyleResponse_ESetStyle ESetStyle;
  static constexpr ESetStyle k_SetStyle_Succeeded =
    CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Succeeded;
  static constexpr ESetStyle k_SetStyle_Failed =
    CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Failed;
  static constexpr ESetStyle k_SetStyle_Failed_StyleIsLocked =
    CMsgClientToGCSetItemStyleResponse_ESetStyle_k_SetStyle_Failed_StyleIsLocked;
  static inline bool ESetStyle_IsValid(int value) {
    return CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(value);
  }
  static constexpr ESetStyle ESetStyle_MIN =
    CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_MIN;
  static constexpr ESetStyle ESetStyle_MAX =
    CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_MAX;
  static constexpr int ESetStyle_ARRAYSIZE =
    CMsgClientToGCSetItemStyleResponse_ESetStyle_ESetStyle_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ESetStyle_descriptor() {
    return CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor();
  }
  template<typename T>
  static inline const std::string& ESetStyle_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ESetStyle>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ESetStyle_Name.");
    return CMsgClientToGCSetItemStyleResponse_ESetStyle_Name(enum_t_value);
  }
  static inline bool ESetStyle_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ESetStyle* value) {
    return CMsgClientToGCSetItemStyleResponse_ESetStyle_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // optional .CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCSetItemStyleResponse_ESetStyle response() const;
  void set_response(::CMsgClientToGCSetItemStyleResponse_ESetStyle value);
  private:
  ::CMsgClientToGCSetItemStyleResponse_ESetStyle _internal_response() const;
  void _internal_set_response(::CMsgClientToGCSetItemStyleResponse_ESetStyle value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetItemStyleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockItemStyle final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockItemStyle) */ {
 public:
  inline CMsgClientToGCUnlockItemStyle() : CMsgClientToGCUnlockItemStyle(nullptr) {}
  ~CMsgClientToGCUnlockItemStyle() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockItemStyle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockItemStyle(const CMsgClientToGCUnlockItemStyle& from);
  CMsgClientToGCUnlockItemStyle(CMsgClientToGCUnlockItemStyle&& from) noexcept
    : CMsgClientToGCUnlockItemStyle() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockItemStyle& operator=(const CMsgClientToGCUnlockItemStyle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockItemStyle& operator=(CMsgClientToGCUnlockItemStyle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockItemStyle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockItemStyle* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockItemStyle*>(
               &_CMsgClientToGCUnlockItemStyle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CMsgClientToGCUnlockItemStyle& a, CMsgClientToGCUnlockItemStyle& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockItemStyle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockItemStyle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockItemStyle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockItemStyle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockItemStyle& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockItemStyle& from) {
    CMsgClientToGCUnlockItemStyle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockItemStyle* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockItemStyle";
  }
  protected:
  explicit CMsgClientToGCUnlockItemStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConsumableItemIdsFieldNumber = 3,
    kItemToUnlockFieldNumber = 1,
    kStyleIndexFieldNumber = 2,
  };
  // repeated uint64 consumable_item_ids = 3;
  int consumable_item_ids_size() const;
  private:
  int _internal_consumable_item_ids_size() const;
  public:
  void clear_consumable_item_ids();
  private:
  uint64_t _internal_consumable_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_consumable_item_ids() const;
  void _internal_add_consumable_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_consumable_item_ids();
  public:
  uint64_t consumable_item_ids(int index) const;
  void set_consumable_item_ids(int index, uint64_t value);
  void add_consumable_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      consumable_item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_consumable_item_ids();

  // optional uint64 item_to_unlock = 1;
  bool has_item_to_unlock() const;
  private:
  bool _internal_has_item_to_unlock() const;
  public:
  void clear_item_to_unlock();
  uint64_t item_to_unlock() const;
  void set_item_to_unlock(uint64_t value);
  private:
  uint64_t _internal_item_to_unlock() const;
  void _internal_set_item_to_unlock(uint64_t value);
  public:

  // optional uint32 style_index = 2 [default = 255];
  bool has_style_index() const;
  private:
  bool _internal_has_style_index() const;
  public:
  void clear_style_index();
  uint32_t style_index() const;
  void set_style_index(uint32_t value);
  private:
  uint32_t _internal_style_index() const;
  void _internal_set_style_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockItemStyle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > consumable_item_ids_;
    uint64_t item_to_unlock_;
    uint32_t style_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockItemStyleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockItemStyleResponse) */ {
 public:
  inline CMsgClientToGCUnlockItemStyleResponse() : CMsgClientToGCUnlockItemStyleResponse(nullptr) {}
  ~CMsgClientToGCUnlockItemStyleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockItemStyleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockItemStyleResponse(const CMsgClientToGCUnlockItemStyleResponse& from);
  CMsgClientToGCUnlockItemStyleResponse(CMsgClientToGCUnlockItemStyleResponse&& from) noexcept
    : CMsgClientToGCUnlockItemStyleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockItemStyleResponse& operator=(const CMsgClientToGCUnlockItemStyleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockItemStyleResponse& operator=(CMsgClientToGCUnlockItemStyleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockItemStyleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockItemStyleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockItemStyleResponse*>(
               &_CMsgClientToGCUnlockItemStyleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CMsgClientToGCUnlockItemStyleResponse& a, CMsgClientToGCUnlockItemStyleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockItemStyleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockItemStyleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockItemStyleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockItemStyleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockItemStyleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockItemStyleResponse& from) {
    CMsgClientToGCUnlockItemStyleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockItemStyleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockItemStyleResponse";
  }
  protected:
  explicit CMsgClientToGCUnlockItemStyleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle EUnlockStyle;
  static constexpr EUnlockStyle k_UnlockStyle_Succeeded =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Succeeded;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_PreReq =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_PreReq;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_CantAfford =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantAfford;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_CantCommit =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantCommit;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_CantLockCache =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantLockCache;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_CantAffordAttrib =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantAffordAttrib;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_CantAffordGem =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_CantAffordGem;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_NoCompendiumLevel =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_NoCompendiumLevel;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_AlreadyUnlocked =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_AlreadyUnlocked;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_OtherError =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_OtherError;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_ItemIsInvalid =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_ItemIsInvalid;
  static constexpr EUnlockStyle k_UnlockStyle_Failed_ToolIsInvalid =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_k_UnlockStyle_Failed_ToolIsInvalid;
  static inline bool EUnlockStyle_IsValid(int value) {
    return CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value);
  }
  static constexpr EUnlockStyle EUnlockStyle_MIN =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_MIN;
  static constexpr EUnlockStyle EUnlockStyle_MAX =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_MAX;
  static constexpr int EUnlockStyle_ARRAYSIZE =
    CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_EUnlockStyle_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EUnlockStyle_descriptor() {
    return CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor();
  }
  template<typename T>
  static inline const std::string& EUnlockStyle_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EUnlockStyle>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EUnlockStyle_Name.");
    return CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_Name(enum_t_value);
  }
  static inline bool EUnlockStyle_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EUnlockStyle* value) {
    return CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kResponseFieldNumber = 1,
    kStyleIndexFieldNumber = 3,
    kStylePrereqFieldNumber = 4,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle response() const;
  void set_response(::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle value);
  private:
  ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle _internal_response() const;
  void _internal_set_response(::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle value);
  public:

  // optional uint32 style_index = 3 [default = 255];
  bool has_style_index() const;
  private:
  bool _internal_has_style_index() const;
  public:
  void clear_style_index();
  uint32_t style_index() const;
  void set_style_index(uint32_t value);
  private:
  uint32_t _internal_style_index() const;
  void _internal_set_style_index(uint32_t value);
  public:

  // optional uint32 style_prereq = 4 [default = 255];
  bool has_style_prereq() const;
  private:
  bool _internal_has_style_prereq() const;
  public:
  void clear_style_prereq();
  uint32_t style_prereq() const;
  void set_style_prereq(uint32_t value);
  private:
  uint32_t _internal_style_prereq() const;
  void _internal_set_style_prereq(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockItemStyleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    int response_;
    uint32_t style_index_;
    uint32_t style_prereq_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetItemInventoryCategory final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetItemInventoryCategory) */ {
 public:
  inline CMsgClientToGCSetItemInventoryCategory() : CMsgClientToGCSetItemInventoryCategory(nullptr) {}
  ~CMsgClientToGCSetItemInventoryCategory() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetItemInventoryCategory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetItemInventoryCategory(const CMsgClientToGCSetItemInventoryCategory& from);
  CMsgClientToGCSetItemInventoryCategory(CMsgClientToGCSetItemInventoryCategory&& from) noexcept
    : CMsgClientToGCSetItemInventoryCategory() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetItemInventoryCategory& operator=(const CMsgClientToGCSetItemInventoryCategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetItemInventoryCategory& operator=(CMsgClientToGCSetItemInventoryCategory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetItemInventoryCategory& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetItemInventoryCategory* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetItemInventoryCategory*>(
               &_CMsgClientToGCSetItemInventoryCategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CMsgClientToGCSetItemInventoryCategory& a, CMsgClientToGCSetItemInventoryCategory& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetItemInventoryCategory* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetItemInventoryCategory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetItemInventoryCategory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetItemInventoryCategory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetItemInventoryCategory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetItemInventoryCategory& from) {
    CMsgClientToGCSetItemInventoryCategory::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetItemInventoryCategory* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetItemInventoryCategory";
  }
  protected:
  explicit CMsgClientToGCSetItemInventoryCategory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdsFieldNumber = 1,
    kSetToValueFieldNumber = 2,
    kRemoveCategoriesFieldNumber = 3,
    kAddCategoriesFieldNumber = 4,
  };
  // repeated uint64 item_ids = 1;
  int item_ids_size() const;
  private:
  int _internal_item_ids_size() const;
  public:
  void clear_item_ids();
  private:
  uint64_t _internal_item_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_ids() const;
  void _internal_add_item_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_ids();
  public:
  uint64_t item_ids(int index) const;
  void set_item_ids(int index, uint64_t value);
  void add_item_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_ids();

  // optional uint32 set_to_value = 2;
  bool has_set_to_value() const;
  private:
  bool _internal_has_set_to_value() const;
  public:
  void clear_set_to_value();
  uint32_t set_to_value() const;
  void set_set_to_value(uint32_t value);
  private:
  uint32_t _internal_set_to_value() const;
  void _internal_set_set_to_value(uint32_t value);
  public:

  // optional uint32 remove_categories = 3;
  bool has_remove_categories() const;
  private:
  bool _internal_has_remove_categories() const;
  public:
  void clear_remove_categories();
  uint32_t remove_categories() const;
  void set_remove_categories(uint32_t value);
  private:
  uint32_t _internal_remove_categories() const;
  void _internal_set_remove_categories(uint32_t value);
  public:

  // optional uint32 add_categories = 4;
  bool has_add_categories() const;
  private:
  bool _internal_has_add_categories() const;
  public:
  void clear_add_categories();
  uint32_t add_categories() const;
  void set_add_categories(uint32_t value);
  private:
  uint32_t _internal_add_categories() const;
  void _internal_set_add_categories(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetItemInventoryCategory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_ids_;
    uint32_t set_to_value_;
    uint32_t remove_categories_;
    uint32_t add_categories_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockCrate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockCrate) */ {
 public:
  inline CMsgClientToGCUnlockCrate() : CMsgClientToGCUnlockCrate(nullptr) {}
  ~CMsgClientToGCUnlockCrate() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockCrate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockCrate(const CMsgClientToGCUnlockCrate& from);
  CMsgClientToGCUnlockCrate(CMsgClientToGCUnlockCrate&& from) noexcept
    : CMsgClientToGCUnlockCrate() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockCrate& operator=(const CMsgClientToGCUnlockCrate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockCrate& operator=(CMsgClientToGCUnlockCrate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockCrate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockCrate* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockCrate*>(
               &_CMsgClientToGCUnlockCrate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CMsgClientToGCUnlockCrate& a, CMsgClientToGCUnlockCrate& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockCrate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockCrate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockCrate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockCrate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockCrate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockCrate& from) {
    CMsgClientToGCUnlockCrate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockCrate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockCrate";
  }
  protected:
  explicit CMsgClientToGCUnlockCrate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrateItemIdFieldNumber = 1,
    kKeyItemIdFieldNumber = 2,
  };
  // optional uint64 crate_item_id = 1;
  bool has_crate_item_id() const;
  private:
  bool _internal_has_crate_item_id() const;
  public:
  void clear_crate_item_id();
  uint64_t crate_item_id() const;
  void set_crate_item_id(uint64_t value);
  private:
  uint64_t _internal_crate_item_id() const;
  void _internal_set_crate_item_id(uint64_t value);
  public:

  // optional uint64 key_item_id = 2;
  bool has_key_item_id() const;
  private:
  bool _internal_has_key_item_id() const;
  public:
  void clear_key_item_id();
  uint64_t key_item_id() const;
  void set_key_item_id(uint64_t value);
  private:
  uint64_t _internal_key_item_id() const;
  void _internal_set_key_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockCrate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t crate_item_id_;
    uint64_t key_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockCrateResponse_Item final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockCrateResponse.Item) */ {
 public:
  inline CMsgClientToGCUnlockCrateResponse_Item() : CMsgClientToGCUnlockCrateResponse_Item(nullptr) {}
  ~CMsgClientToGCUnlockCrateResponse_Item() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockCrateResponse_Item(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockCrateResponse_Item(const CMsgClientToGCUnlockCrateResponse_Item& from);
  CMsgClientToGCUnlockCrateResponse_Item(CMsgClientToGCUnlockCrateResponse_Item&& from) noexcept
    : CMsgClientToGCUnlockCrateResponse_Item() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockCrateResponse_Item& operator=(const CMsgClientToGCUnlockCrateResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockCrateResponse_Item& operator=(CMsgClientToGCUnlockCrateResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockCrateResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockCrateResponse_Item* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockCrateResponse_Item*>(
               &_CMsgClientToGCUnlockCrateResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CMsgClientToGCUnlockCrateResponse_Item& a, CMsgClientToGCUnlockCrateResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockCrateResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockCrateResponse_Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockCrateResponse_Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockCrateResponse_Item>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockCrateResponse_Item& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockCrateResponse_Item& from) {
    CMsgClientToGCUnlockCrateResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockCrateResponse_Item* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockCrateResponse.Item";
  }
  protected:
  explicit CMsgClientToGCUnlockCrateResponse_Item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kDefIndexFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 def_index = 2;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  uint32_t def_index() const;
  void set_def_index(uint32_t value);
  private:
  uint32_t _internal_def_index() const;
  void _internal_set_def_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockCrateResponse.Item)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t def_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockCrateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockCrateResponse) */ {
 public:
  inline CMsgClientToGCUnlockCrateResponse() : CMsgClientToGCUnlockCrateResponse(nullptr) {}
  ~CMsgClientToGCUnlockCrateResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockCrateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockCrateResponse(const CMsgClientToGCUnlockCrateResponse& from);
  CMsgClientToGCUnlockCrateResponse(CMsgClientToGCUnlockCrateResponse&& from) noexcept
    : CMsgClientToGCUnlockCrateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockCrateResponse& operator=(const CMsgClientToGCUnlockCrateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockCrateResponse& operator=(CMsgClientToGCUnlockCrateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockCrateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockCrateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockCrateResponse*>(
               &_CMsgClientToGCUnlockCrateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CMsgClientToGCUnlockCrateResponse& a, CMsgClientToGCUnlockCrateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockCrateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockCrateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockCrateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockCrateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockCrateResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockCrateResponse& from) {
    CMsgClientToGCUnlockCrateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockCrateResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockCrateResponse";
  }
  protected:
  explicit CMsgClientToGCUnlockCrateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUnlockCrateResponse_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kGrantedItemsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  int granted_items_size() const;
  private:
  int _internal_granted_items_size() const;
  public:
  void clear_granted_items();
  ::CMsgClientToGCUnlockCrateResponse_Item* mutable_granted_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCUnlockCrateResponse_Item >*
      mutable_granted_items();
  private:
  const ::CMsgClientToGCUnlockCrateResponse_Item& _internal_granted_items(int index) const;
  ::CMsgClientToGCUnlockCrateResponse_Item* _internal_add_granted_items();
  public:
  const ::CMsgClientToGCUnlockCrateResponse_Item& granted_items(int index) const;
  ::CMsgClientToGCUnlockCrateResponse_Item* add_granted_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCUnlockCrateResponse_Item >&
      granted_items() const;

  // optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::EGCMsgResponse result() const;
  void set_result(::EGCMsgResponse value);
  private:
  ::EGCMsgResponse _internal_result() const;
  void _internal_set_result(::EGCMsgResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockCrateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCUnlockCrateResponse_Item > granted_items_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRemoveItemAttribute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRemoveItemAttribute) */ {
 public:
  inline CMsgClientToGCRemoveItemAttribute() : CMsgClientToGCRemoveItemAttribute(nullptr) {}
  ~CMsgClientToGCRemoveItemAttribute() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRemoveItemAttribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRemoveItemAttribute(const CMsgClientToGCRemoveItemAttribute& from);
  CMsgClientToGCRemoveItemAttribute(CMsgClientToGCRemoveItemAttribute&& from) noexcept
    : CMsgClientToGCRemoveItemAttribute() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRemoveItemAttribute& operator=(const CMsgClientToGCRemoveItemAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRemoveItemAttribute& operator=(CMsgClientToGCRemoveItemAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRemoveItemAttribute& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRemoveItemAttribute* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRemoveItemAttribute*>(
               &_CMsgClientToGCRemoveItemAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CMsgClientToGCRemoveItemAttribute& a, CMsgClientToGCRemoveItemAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRemoveItemAttribute* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRemoveItemAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRemoveItemAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRemoveItemAttribute>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRemoveItemAttribute& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRemoveItemAttribute& from) {
    CMsgClientToGCRemoveItemAttribute::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRemoveItemAttribute* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRemoveItemAttribute";
  }
  protected:
  explicit CMsgClientToGCRemoveItemAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRemoveItemAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRemoveItemAttributeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRemoveItemAttributeResponse) */ {
 public:
  inline CMsgClientToGCRemoveItemAttributeResponse() : CMsgClientToGCRemoveItemAttributeResponse(nullptr) {}
  ~CMsgClientToGCRemoveItemAttributeResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRemoveItemAttributeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRemoveItemAttributeResponse(const CMsgClientToGCRemoveItemAttributeResponse& from);
  CMsgClientToGCRemoveItemAttributeResponse(CMsgClientToGCRemoveItemAttributeResponse&& from) noexcept
    : CMsgClientToGCRemoveItemAttributeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRemoveItemAttributeResponse& operator=(const CMsgClientToGCRemoveItemAttributeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRemoveItemAttributeResponse& operator=(CMsgClientToGCRemoveItemAttributeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRemoveItemAttributeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRemoveItemAttributeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRemoveItemAttributeResponse*>(
               &_CMsgClientToGCRemoveItemAttributeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CMsgClientToGCRemoveItemAttributeResponse& a, CMsgClientToGCRemoveItemAttributeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRemoveItemAttributeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRemoveItemAttributeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRemoveItemAttributeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRemoveItemAttributeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRemoveItemAttributeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRemoveItemAttributeResponse& from) {
    CMsgClientToGCRemoveItemAttributeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRemoveItemAttributeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRemoveItemAttributeResponse";
  }
  protected:
  explicit CMsgClientToGCRemoveItemAttributeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute ERemoveItemAttribute;
  static constexpr ERemoveItemAttribute k_RemoveItemAttribute_Succeeded =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Succeeded;
  static constexpr ERemoveItemAttribute k_RemoveItemAttribute_Failed =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed;
  static constexpr ERemoveItemAttribute k_RemoveItemAttribute_Failed_ItemIsInvalid =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_ItemIsInvalid;
  static constexpr ERemoveItemAttribute k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved;
  static constexpr ERemoveItemAttribute k_RemoveItemAttribute_Failed_AttributeDoesntExist =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_k_RemoveItemAttribute_Failed_AttributeDoesntExist;
  static inline bool ERemoveItemAttribute_IsValid(int value) {
    return CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(value);
  }
  static constexpr ERemoveItemAttribute ERemoveItemAttribute_MIN =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_MIN;
  static constexpr ERemoveItemAttribute ERemoveItemAttribute_MAX =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_MAX;
  static constexpr int ERemoveItemAttribute_ARRAYSIZE =
    CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_ERemoveItemAttribute_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ERemoveItemAttribute_descriptor() {
    return CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor();
  }
  template<typename T>
  static inline const std::string& ERemoveItemAttribute_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ERemoveItemAttribute>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ERemoveItemAttribute_Name.");
    return CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_Name(enum_t_value);
  }
  static inline bool ERemoveItemAttribute_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ERemoveItemAttribute* value) {
    return CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kResponseFieldNumber = 1,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional .CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute response() const;
  void set_response(::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute value);
  private:
  ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute _internal_response() const;
  void _internal_set_response(::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRemoveItemAttributeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCNameItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCNameItem) */ {
 public:
  inline CMsgClientToGCNameItem() : CMsgClientToGCNameItem(nullptr) {}
  ~CMsgClientToGCNameItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCNameItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCNameItem(const CMsgClientToGCNameItem& from);
  CMsgClientToGCNameItem(CMsgClientToGCNameItem&& from) noexcept
    : CMsgClientToGCNameItem() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCNameItem& operator=(const CMsgClientToGCNameItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCNameItem& operator=(CMsgClientToGCNameItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCNameItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCNameItem* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCNameItem*>(
               &_CMsgClientToGCNameItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CMsgClientToGCNameItem& a, CMsgClientToGCNameItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCNameItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCNameItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCNameItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCNameItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCNameItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCNameItem& from) {
    CMsgClientToGCNameItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCNameItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCNameItem";
  }
  protected:
  explicit CMsgClientToGCNameItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kSubjectItemIdFieldNumber = 1,
    kToolItemIdFieldNumber = 2,
  };
  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 subject_item_id = 1;
  bool has_subject_item_id() const;
  private:
  bool _internal_has_subject_item_id() const;
  public:
  void clear_subject_item_id();
  uint64_t subject_item_id() const;
  void set_subject_item_id(uint64_t value);
  private:
  uint64_t _internal_subject_item_id() const;
  void _internal_set_subject_item_id(uint64_t value);
  public:

  // optional uint64 tool_item_id = 2;
  bool has_tool_item_id() const;
  private:
  bool _internal_has_tool_item_id() const;
  public:
  void clear_tool_item_id();
  uint64_t tool_item_id() const;
  void set_tool_item_id(uint64_t value);
  private:
  uint64_t _internal_tool_item_id() const;
  void _internal_set_tool_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCNameItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint64_t subject_item_id_;
    uint64_t tool_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCNameItemResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCNameItemResponse) */ {
 public:
  inline CMsgClientToGCNameItemResponse() : CMsgClientToGCNameItemResponse(nullptr) {}
  ~CMsgClientToGCNameItemResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCNameItemResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCNameItemResponse(const CMsgClientToGCNameItemResponse& from);
  CMsgClientToGCNameItemResponse(CMsgClientToGCNameItemResponse&& from) noexcept
    : CMsgClientToGCNameItemResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCNameItemResponse& operator=(const CMsgClientToGCNameItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCNameItemResponse& operator=(CMsgClientToGCNameItemResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCNameItemResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCNameItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCNameItemResponse*>(
               &_CMsgClientToGCNameItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(CMsgClientToGCNameItemResponse& a, CMsgClientToGCNameItemResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCNameItemResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCNameItemResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCNameItemResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCNameItemResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCNameItemResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCNameItemResponse& from) {
    CMsgClientToGCNameItemResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCNameItemResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCNameItemResponse";
  }
  protected:
  explicit CMsgClientToGCNameItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCNameItemResponse_ENameItem ENameItem;
  static constexpr ENameItem k_NameItem_Succeeded =
    CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Succeeded;
  static constexpr ENameItem k_NameItem_Failed =
    CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed;
  static constexpr ENameItem k_NameItem_Failed_ToolIsInvalid =
    CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_ToolIsInvalid;
  static constexpr ENameItem k_NameItem_Failed_ItemIsInvalid =
    CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_ItemIsInvalid;
  static constexpr ENameItem k_NameItem_Failed_NameIsInvalid =
    CMsgClientToGCNameItemResponse_ENameItem_k_NameItem_Failed_NameIsInvalid;
  static inline bool ENameItem_IsValid(int value) {
    return CMsgClientToGCNameItemResponse_ENameItem_IsValid(value);
  }
  static constexpr ENameItem ENameItem_MIN =
    CMsgClientToGCNameItemResponse_ENameItem_ENameItem_MIN;
  static constexpr ENameItem ENameItem_MAX =
    CMsgClientToGCNameItemResponse_ENameItem_ENameItem_MAX;
  static constexpr int ENameItem_ARRAYSIZE =
    CMsgClientToGCNameItemResponse_ENameItem_ENameItem_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ENameItem_descriptor() {
    return CMsgClientToGCNameItemResponse_ENameItem_descriptor();
  }
  template<typename T>
  static inline const std::string& ENameItem_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ENameItem>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ENameItem_Name.");
    return CMsgClientToGCNameItemResponse_ENameItem_Name(enum_t_value);
  }
  static inline bool ENameItem_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ENameItem* value) {
    return CMsgClientToGCNameItemResponse_ENameItem_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kResponseFieldNumber = 1,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional .CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCNameItemResponse_ENameItem response() const;
  void set_response(::CMsgClientToGCNameItemResponse_ENameItem value);
  private:
  ::CMsgClientToGCNameItemResponse_ENameItem _internal_response() const;
  void _internal_set_response(::CMsgClientToGCNameItemResponse_ENameItem value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCNameItemResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCSetItemPosition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCSetItemPosition) */ {
 public:
  inline CMsgGCSetItemPosition() : CMsgGCSetItemPosition(nullptr) {}
  ~CMsgGCSetItemPosition() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCSetItemPosition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCSetItemPosition(const CMsgGCSetItemPosition& from);
  CMsgGCSetItemPosition(CMsgGCSetItemPosition&& from) noexcept
    : CMsgGCSetItemPosition() {
    *this = ::std::move(from);
  }

  inline CMsgGCSetItemPosition& operator=(const CMsgGCSetItemPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCSetItemPosition& operator=(CMsgGCSetItemPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCSetItemPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCSetItemPosition* internal_default_instance() {
    return reinterpret_cast<const CMsgGCSetItemPosition*>(
               &_CMsgGCSetItemPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(CMsgGCSetItemPosition& a, CMsgGCSetItemPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCSetItemPosition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCSetItemPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCSetItemPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCSetItemPosition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCSetItemPosition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCSetItemPosition& from) {
    CMsgGCSetItemPosition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCSetItemPosition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCSetItemPosition";
  }
  protected:
  explicit CMsgGCSetItemPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kNewPositionFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 new_position = 2;
  bool has_new_position() const;
  private:
  bool _internal_has_new_position() const;
  public:
  void clear_new_position();
  uint32_t new_position() const;
  void set_new_position(uint32_t value);
  private:
  uint32_t _internal_new_position() const;
  void _internal_set_new_position(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCSetItemPosition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t new_position_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CAttribute_ItemDynamicRecipeComponent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CAttribute_ItemDynamicRecipeComponent) */ {
 public:
  inline CAttribute_ItemDynamicRecipeComponent() : CAttribute_ItemDynamicRecipeComponent(nullptr) {}
  ~CAttribute_ItemDynamicRecipeComponent() override;
  explicit PROTOBUF_CONSTEXPR CAttribute_ItemDynamicRecipeComponent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CAttribute_ItemDynamicRecipeComponent(const CAttribute_ItemDynamicRecipeComponent& from);
  CAttribute_ItemDynamicRecipeComponent(CAttribute_ItemDynamicRecipeComponent&& from) noexcept
    : CAttribute_ItemDynamicRecipeComponent() {
    *this = ::std::move(from);
  }

  inline CAttribute_ItemDynamicRecipeComponent& operator=(const CAttribute_ItemDynamicRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CAttribute_ItemDynamicRecipeComponent& operator=(CAttribute_ItemDynamicRecipeComponent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CAttribute_ItemDynamicRecipeComponent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CAttribute_ItemDynamicRecipeComponent* internal_default_instance() {
    return reinterpret_cast<const CAttribute_ItemDynamicRecipeComponent*>(
               &_CAttribute_ItemDynamicRecipeComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(CAttribute_ItemDynamicRecipeComponent& a, CAttribute_ItemDynamicRecipeComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(CAttribute_ItemDynamicRecipeComponent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CAttribute_ItemDynamicRecipeComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CAttribute_ItemDynamicRecipeComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CAttribute_ItemDynamicRecipeComponent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CAttribute_ItemDynamicRecipeComponent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CAttribute_ItemDynamicRecipeComponent& from) {
    CAttribute_ItemDynamicRecipeComponent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CAttribute_ItemDynamicRecipeComponent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CAttribute_ItemDynamicRecipeComponent";
  }
  protected:
  explicit CAttribute_ItemDynamicRecipeComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributesStringFieldNumber = 4,
    kLootlistFieldNumber = 8,
    kItemDefFieldNumber = 1,
    kItemQualityFieldNumber = 2,
    kItemFlagsFieldNumber = 3,
    kItemCountFieldNumber = 5,
    kItemsFulfilledFieldNumber = 6,
    kItemRarityFieldNumber = 7,
    kFulfilledItemIdFieldNumber = 9,
    kAssociatedItemDefFieldNumber = 10,
  };
  // optional string attributes_string = 4;
  bool has_attributes_string() const;
  private:
  bool _internal_has_attributes_string() const;
  public:
  void clear_attributes_string();
  const std::string& attributes_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_attributes_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_attributes_string();
  PROTOBUF_NODISCARD std::string* release_attributes_string();
  void set_allocated_attributes_string(std::string* attributes_string);
  private:
  const std::string& _internal_attributes_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attributes_string(const std::string& value);
  std::string* _internal_mutable_attributes_string();
  public:

  // optional string lootlist = 8;
  bool has_lootlist() const;
  private:
  bool _internal_has_lootlist() const;
  public:
  void clear_lootlist();
  const std::string& lootlist() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_lootlist(ArgT0&& arg0, ArgT... args);
  std::string* mutable_lootlist();
  PROTOBUF_NODISCARD std::string* release_lootlist();
  void set_allocated_lootlist(std::string* lootlist);
  private:
  const std::string& _internal_lootlist() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lootlist(const std::string& value);
  std::string* _internal_mutable_lootlist();
  public:

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  uint32_t item_def() const;
  void set_item_def(uint32_t value);
  private:
  uint32_t _internal_item_def() const;
  void _internal_set_item_def(uint32_t value);
  public:

  // optional uint32 item_quality = 2;
  bool has_item_quality() const;
  private:
  bool _internal_has_item_quality() const;
  public:
  void clear_item_quality();
  uint32_t item_quality() const;
  void set_item_quality(uint32_t value);
  private:
  uint32_t _internal_item_quality() const;
  void _internal_set_item_quality(uint32_t value);
  public:

  // optional uint32 item_flags = 3;
  bool has_item_flags() const;
  private:
  bool _internal_has_item_flags() const;
  public:
  void clear_item_flags();
  uint32_t item_flags() const;
  void set_item_flags(uint32_t value);
  private:
  uint32_t _internal_item_flags() const;
  void _internal_set_item_flags(uint32_t value);
  public:

  // optional uint32 item_count = 5;
  bool has_item_count() const;
  private:
  bool _internal_has_item_count() const;
  public:
  void clear_item_count();
  uint32_t item_count() const;
  void set_item_count(uint32_t value);
  private:
  uint32_t _internal_item_count() const;
  void _internal_set_item_count(uint32_t value);
  public:

  // optional uint32 items_fulfilled = 6;
  bool has_items_fulfilled() const;
  private:
  bool _internal_has_items_fulfilled() const;
  public:
  void clear_items_fulfilled();
  uint32_t items_fulfilled() const;
  void set_items_fulfilled(uint32_t value);
  private:
  uint32_t _internal_items_fulfilled() const;
  void _internal_set_items_fulfilled(uint32_t value);
  public:

  // optional uint32 item_rarity = 7;
  bool has_item_rarity() const;
  private:
  bool _internal_has_item_rarity() const;
  public:
  void clear_item_rarity();
  uint32_t item_rarity() const;
  void set_item_rarity(uint32_t value);
  private:
  uint32_t _internal_item_rarity() const;
  void _internal_set_item_rarity(uint32_t value);
  public:

  // optional uint64 fulfilled_item_id = 9;
  bool has_fulfilled_item_id() const;
  private:
  bool _internal_has_fulfilled_item_id() const;
  public:
  void clear_fulfilled_item_id();
  uint64_t fulfilled_item_id() const;
  void set_fulfilled_item_id(uint64_t value);
  private:
  uint64_t _internal_fulfilled_item_id() const;
  void _internal_set_fulfilled_item_id(uint64_t value);
  public:

  // optional uint32 associated_item_def = 10;
  bool has_associated_item_def() const;
  private:
  bool _internal_has_associated_item_def() const;
  public:
  void clear_associated_item_def();
  uint32_t associated_item_def() const;
  void set_associated_item_def(uint32_t value);
  private:
  uint32_t _internal_associated_item_def() const;
  void _internal_set_associated_item_def(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CAttribute_ItemDynamicRecipeComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr attributes_string_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lootlist_;
    uint32_t item_def_;
    uint32_t item_quality_;
    uint32_t item_flags_;
    uint32_t item_count_;
    uint32_t items_fulfilled_;
    uint32_t item_rarity_;
    uint64_t fulfilled_item_id_;
    uint32_t associated_item_def_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket) */ {
 public:
  inline CProtoItemSocket() : CProtoItemSocket(nullptr) {}
  ~CProtoItemSocket() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket(const CProtoItemSocket& from);
  CProtoItemSocket(CProtoItemSocket&& from) noexcept
    : CProtoItemSocket() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket& operator=(const CProtoItemSocket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket& operator=(CProtoItemSocket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket*>(
               &_CProtoItemSocket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(CProtoItemSocket& a, CProtoItemSocket& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket& from) {
    CProtoItemSocket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket";
  }
  protected:
  explicit CProtoItemSocket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequiredHeroFieldNumber = 4,
    kRequiredItemSlotFieldNumber = 7,
    kItemIdFieldNumber = 1,
    kAttrDefIndexFieldNumber = 2,
    kRequiredTypeFieldNumber = 3,
    kGemDefIndexFieldNumber = 5,
    kNotTradableFieldNumber = 6,
  };
  // optional string required_hero = 4;
  bool has_required_hero() const;
  private:
  bool _internal_has_required_hero() const;
  public:
  void clear_required_hero();
  const std::string& required_hero() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_required_hero(ArgT0&& arg0, ArgT... args);
  std::string* mutable_required_hero();
  PROTOBUF_NODISCARD std::string* release_required_hero();
  void set_allocated_required_hero(std::string* required_hero);
  private:
  const std::string& _internal_required_hero() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_required_hero(const std::string& value);
  std::string* _internal_mutable_required_hero();
  public:

  // optional string required_item_slot = 7;
  bool has_required_item_slot() const;
  private:
  bool _internal_has_required_item_slot() const;
  public:
  void clear_required_item_slot();
  const std::string& required_item_slot() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_required_item_slot(ArgT0&& arg0, ArgT... args);
  std::string* mutable_required_item_slot();
  PROTOBUF_NODISCARD std::string* release_required_item_slot();
  void set_allocated_required_item_slot(std::string* required_item_slot);
  private:
  const std::string& _internal_required_item_slot() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_required_item_slot(const std::string& value);
  std::string* _internal_mutable_required_item_slot();
  public:

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 attr_def_index = 2;
  bool has_attr_def_index() const;
  private:
  bool _internal_has_attr_def_index() const;
  public:
  void clear_attr_def_index();
  uint32_t attr_def_index() const;
  void set_attr_def_index(uint32_t value);
  private:
  uint32_t _internal_attr_def_index() const;
  void _internal_set_attr_def_index(uint32_t value);
  public:

  // optional uint32 required_type = 3;
  bool has_required_type() const;
  private:
  bool _internal_has_required_type() const;
  public:
  void clear_required_type();
  uint32_t required_type() const;
  void set_required_type(uint32_t value);
  private:
  uint32_t _internal_required_type() const;
  void _internal_set_required_type(uint32_t value);
  public:

  // optional uint32 gem_def_index = 5;
  bool has_gem_def_index() const;
  private:
  bool _internal_has_gem_def_index() const;
  public:
  void clear_gem_def_index();
  uint32_t gem_def_index() const;
  void set_gem_def_index(uint32_t value);
  private:
  uint32_t _internal_gem_def_index() const;
  void _internal_set_gem_def_index(uint32_t value);
  public:

  // optional bool not_tradable = 6;
  bool has_not_tradable() const;
  private:
  bool _internal_has_not_tradable() const;
  public:
  void clear_not_tradable();
  bool not_tradable() const;
  void set_not_tradable(bool value);
  private:
  bool _internal_not_tradable() const;
  void _internal_set_not_tradable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr required_hero_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr required_item_slot_;
    uint64_t item_id_;
    uint32_t attr_def_index_;
    uint32_t required_type_;
    uint32_t gem_def_index_;
    bool not_tradable_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Empty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Empty) */ {
 public:
  inline CProtoItemSocket_Empty() : CProtoItemSocket_Empty(nullptr) {}
  ~CProtoItemSocket_Empty() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Empty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Empty(const CProtoItemSocket_Empty& from);
  CProtoItemSocket_Empty(CProtoItemSocket_Empty&& from) noexcept
    : CProtoItemSocket_Empty() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Empty& operator=(const CProtoItemSocket_Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Empty& operator=(CProtoItemSocket_Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Empty* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Empty*>(
               &_CProtoItemSocket_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(CProtoItemSocket_Empty& a, CProtoItemSocket_Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Empty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Empty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Empty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Empty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Empty& from) {
    CProtoItemSocket_Empty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Empty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Empty";
  }
  protected:
  explicit CProtoItemSocket_Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Empty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Effect final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Effect) */ {
 public:
  inline CProtoItemSocket_Effect() : CProtoItemSocket_Effect(nullptr) {}
  ~CProtoItemSocket_Effect() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Effect(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Effect(const CProtoItemSocket_Effect& from);
  CProtoItemSocket_Effect(CProtoItemSocket_Effect&& from) noexcept
    : CProtoItemSocket_Effect() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Effect& operator=(const CProtoItemSocket_Effect& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Effect& operator=(CProtoItemSocket_Effect&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Effect& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Effect* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Effect*>(
               &_CProtoItemSocket_Effect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CProtoItemSocket_Effect& a, CProtoItemSocket_Effect& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Effect* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Effect* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Effect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Effect>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Effect& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Effect& from) {
    CProtoItemSocket_Effect::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Effect* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Effect";
  }
  protected:
  explicit CProtoItemSocket_Effect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kEffectFieldNumber = 2,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 effect = 2;
  bool has_effect() const;
  private:
  bool _internal_has_effect() const;
  public:
  void clear_effect();
  uint32_t effect() const;
  void set_effect(uint32_t value);
  private:
  uint32_t _internal_effect() const;
  void _internal_set_effect(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Effect)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t effect_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Color final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Color) */ {
 public:
  inline CProtoItemSocket_Color() : CProtoItemSocket_Color(nullptr) {}
  ~CProtoItemSocket_Color() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Color(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Color(const CProtoItemSocket_Color& from);
  CProtoItemSocket_Color(CProtoItemSocket_Color&& from) noexcept
    : CProtoItemSocket_Color() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Color& operator=(const CProtoItemSocket_Color& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Color& operator=(CProtoItemSocket_Color&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Color& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Color* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Color*>(
               &_CProtoItemSocket_Color_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CProtoItemSocket_Color& a, CProtoItemSocket_Color& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Color* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Color* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Color* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Color>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Color& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Color& from) {
    CProtoItemSocket_Color::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Color* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Color";
  }
  protected:
  explicit CProtoItemSocket_Color(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kRedFieldNumber = 2,
    kGreenFieldNumber = 3,
    kBlueFieldNumber = 4,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 red = 2;
  bool has_red() const;
  private:
  bool _internal_has_red() const;
  public:
  void clear_red();
  uint32_t red() const;
  void set_red(uint32_t value);
  private:
  uint32_t _internal_red() const;
  void _internal_set_red(uint32_t value);
  public:

  // optional uint32 green = 3;
  bool has_green() const;
  private:
  bool _internal_has_green() const;
  public:
  void clear_green();
  uint32_t green() const;
  void set_green(uint32_t value);
  private:
  uint32_t _internal_green() const;
  void _internal_set_green(uint32_t value);
  public:

  // optional uint32 blue = 4;
  bool has_blue() const;
  private:
  bool _internal_has_blue() const;
  public:
  void clear_blue();
  uint32_t blue() const;
  void set_blue(uint32_t value);
  private:
  uint32_t _internal_blue() const;
  void _internal_set_blue(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Color)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t red_;
    uint32_t green_;
    uint32_t blue_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Strange final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Strange) */ {
 public:
  inline CProtoItemSocket_Strange() : CProtoItemSocket_Strange(nullptr) {}
  ~CProtoItemSocket_Strange() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Strange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Strange(const CProtoItemSocket_Strange& from);
  CProtoItemSocket_Strange(CProtoItemSocket_Strange&& from) noexcept
    : CProtoItemSocket_Strange() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Strange& operator=(const CProtoItemSocket_Strange& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Strange& operator=(CProtoItemSocket_Strange&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Strange& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Strange* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Strange*>(
               &_CProtoItemSocket_Strange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(CProtoItemSocket_Strange& a, CProtoItemSocket_Strange& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Strange* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Strange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Strange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Strange>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Strange& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Strange& from) {
    CProtoItemSocket_Strange::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Strange* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Strange";
  }
  protected:
  explicit CProtoItemSocket_Strange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kStrangeTypeFieldNumber = 2,
    kStrangeValueFieldNumber = 3,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 strange_type = 2;
  bool has_strange_type() const;
  private:
  bool _internal_has_strange_type() const;
  public:
  void clear_strange_type();
  uint32_t strange_type() const;
  void set_strange_type(uint32_t value);
  private:
  uint32_t _internal_strange_type() const;
  void _internal_set_strange_type(uint32_t value);
  public:

  // optional uint32 strange_value = 3;
  bool has_strange_value() const;
  private:
  bool _internal_has_strange_value() const;
  public:
  void clear_strange_value();
  uint32_t strange_value() const;
  void set_strange_value(uint32_t value);
  private:
  uint32_t _internal_strange_value() const;
  void _internal_set_strange_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Strange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t strange_type_;
    uint32_t strange_value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY) */ {
 public:
  inline CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY() : CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(nullptr) {}
  ~CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& from);
  CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY&& from) noexcept
    : CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& operator=(const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& operator=(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY*>(
               &_CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& a, CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY& from) {
    CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY";
  }
  protected:
  explicit CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kStrangeTypeFieldNumber = 2,
    kStrangeValueFieldNumber = 3,
    kAbilityEffectFieldNumber = 4,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 strange_type = 2;
  bool has_strange_type() const;
  private:
  bool _internal_has_strange_type() const;
  public:
  void clear_strange_type();
  uint32_t strange_type() const;
  void set_strange_type(uint32_t value);
  private:
  uint32_t _internal_strange_type() const;
  void _internal_set_strange_type(uint32_t value);
  public:

  // optional uint32 strange_value = 3;
  bool has_strange_value() const;
  private:
  bool _internal_has_strange_value() const;
  public:
  void clear_strange_value();
  uint32_t strange_value() const;
  void set_strange_value(uint32_t value);
  private:
  uint32_t _internal_strange_value() const;
  void _internal_set_strange_value(uint32_t value);
  public:

  // optional uint32 ability_effect = 4;
  bool has_ability_effect() const;
  private:
  bool _internal_has_ability_effect() const;
  public:
  void clear_ability_effect();
  uint32_t ability_effect() const;
  void set_ability_effect(uint32_t value);
  private:
  uint32_t _internal_ability_effect() const;
  void _internal_set_ability_effect(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t strange_type_;
    uint32_t strange_value_;
    uint32_t ability_effect_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Spectator final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Spectator) */ {
 public:
  inline CProtoItemSocket_Spectator() : CProtoItemSocket_Spectator(nullptr) {}
  ~CProtoItemSocket_Spectator() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Spectator(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Spectator(const CProtoItemSocket_Spectator& from);
  CProtoItemSocket_Spectator(CProtoItemSocket_Spectator&& from) noexcept
    : CProtoItemSocket_Spectator() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Spectator& operator=(const CProtoItemSocket_Spectator& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Spectator& operator=(CProtoItemSocket_Spectator&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Spectator& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Spectator* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Spectator*>(
               &_CProtoItemSocket_Spectator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(CProtoItemSocket_Spectator& a, CProtoItemSocket_Spectator& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Spectator* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Spectator* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Spectator* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Spectator>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Spectator& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Spectator& from) {
    CProtoItemSocket_Spectator::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Spectator* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Spectator";
  }
  protected:
  explicit CProtoItemSocket_Spectator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kGamesViewedFieldNumber = 2,
    kCorporationIdFieldNumber = 3,
    kLeagueIdFieldNumber = 4,
    kTeamIdFieldNumber = 5,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 games_viewed = 2;
  bool has_games_viewed() const;
  private:
  bool _internal_has_games_viewed() const;
  public:
  void clear_games_viewed();
  uint32_t games_viewed() const;
  void set_games_viewed(uint32_t value);
  private:
  uint32_t _internal_games_viewed() const;
  void _internal_set_games_viewed(uint32_t value);
  public:

  // optional uint32 corporation_id = 3;
  bool has_corporation_id() const;
  private:
  bool _internal_has_corporation_id() const;
  public:
  void clear_corporation_id();
  uint32_t corporation_id() const;
  void set_corporation_id(uint32_t value);
  private:
  uint32_t _internal_corporation_id() const;
  void _internal_set_corporation_id(uint32_t value);
  public:

  // optional uint32 league_id = 4;
  bool has_league_id() const;
  private:
  bool _internal_has_league_id() const;
  public:
  void clear_league_id();
  uint32_t league_id() const;
  void set_league_id(uint32_t value);
  private:
  uint32_t _internal_league_id() const;
  void _internal_set_league_id(uint32_t value);
  public:

  // optional uint32 team_id = 5;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  uint32_t team_id() const;
  void set_team_id(uint32_t value);
  private:
  uint32_t _internal_team_id() const;
  void _internal_set_team_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Spectator)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t games_viewed_;
    uint32_t corporation_id_;
    uint32_t league_id_;
    uint32_t team_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_AssetModifier final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_AssetModifier) */ {
 public:
  inline CProtoItemSocket_AssetModifier() : CProtoItemSocket_AssetModifier(nullptr) {}
  ~CProtoItemSocket_AssetModifier() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_AssetModifier(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_AssetModifier(const CProtoItemSocket_AssetModifier& from);
  CProtoItemSocket_AssetModifier(CProtoItemSocket_AssetModifier&& from) noexcept
    : CProtoItemSocket_AssetModifier() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_AssetModifier& operator=(const CProtoItemSocket_AssetModifier& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_AssetModifier& operator=(CProtoItemSocket_AssetModifier&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_AssetModifier& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_AssetModifier* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_AssetModifier*>(
               &_CProtoItemSocket_AssetModifier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(CProtoItemSocket_AssetModifier& a, CProtoItemSocket_AssetModifier& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_AssetModifier* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_AssetModifier* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_AssetModifier* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_AssetModifier>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_AssetModifier& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_AssetModifier& from) {
    CProtoItemSocket_AssetModifier::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_AssetModifier* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_AssetModifier";
  }
  protected:
  explicit CProtoItemSocket_AssetModifier(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kAssetModifierFieldNumber = 2,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 asset_modifier = 2;
  bool has_asset_modifier() const;
  private:
  bool _internal_has_asset_modifier() const;
  public:
  void clear_asset_modifier();
  uint32_t asset_modifier() const;
  void set_asset_modifier(uint32_t value);
  private:
  uint32_t _internal_asset_modifier() const;
  void _internal_set_asset_modifier(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_AssetModifier)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t asset_modifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) */ {
 public:
  inline CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() : CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(nullptr) {}
  ~CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from);
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY&& from) noexcept
    : CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& operator=(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& operator=(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY*>(
               &_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& a, CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
    CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY";
  }
  protected:
  explicit CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
    kAssetModifierFieldNumber = 2,
    kAnimModifierFieldNumber = 3,
    kAbilityEffectFieldNumber = 4,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 asset_modifier = 2;
  bool has_asset_modifier() const;
  private:
  bool _internal_has_asset_modifier() const;
  public:
  void clear_asset_modifier();
  uint32_t asset_modifier() const;
  void set_asset_modifier(uint32_t value);
  private:
  uint32_t _internal_asset_modifier() const;
  void _internal_set_asset_modifier(uint32_t value);
  public:

  // optional uint32 anim_modifier = 3;
  bool has_anim_modifier() const;
  private:
  bool _internal_has_anim_modifier() const;
  public:
  void clear_anim_modifier();
  uint32_t anim_modifier() const;
  void set_anim_modifier(uint32_t value);
  private:
  uint32_t _internal_anim_modifier() const;
  void _internal_set_anim_modifier(uint32_t value);
  public:

  // optional uint32 ability_effect = 4;
  bool has_ability_effect() const;
  private:
  bool _internal_has_ability_effect() const;
  public:
  void clear_ability_effect();
  uint32_t ability_effect() const;
  void set_ability_effect(uint32_t value);
  private:
  uint32_t _internal_ability_effect() const;
  void _internal_set_ability_effect(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
    uint32_t asset_modifier_;
    uint32_t anim_modifier_;
    uint32_t ability_effect_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_Autograph final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_Autograph) */ {
 public:
  inline CProtoItemSocket_Autograph() : CProtoItemSocket_Autograph(nullptr) {}
  ~CProtoItemSocket_Autograph() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_Autograph(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_Autograph(const CProtoItemSocket_Autograph& from);
  CProtoItemSocket_Autograph(CProtoItemSocket_Autograph&& from) noexcept
    : CProtoItemSocket_Autograph() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_Autograph& operator=(const CProtoItemSocket_Autograph& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_Autograph& operator=(CProtoItemSocket_Autograph&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_Autograph& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_Autograph* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_Autograph*>(
               &_CProtoItemSocket_Autograph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(CProtoItemSocket_Autograph& a, CProtoItemSocket_Autograph& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_Autograph* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_Autograph* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_Autograph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_Autograph>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_Autograph& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_Autograph& from) {
    CProtoItemSocket_Autograph::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_Autograph* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_Autograph";
  }
  protected:
  explicit CProtoItemSocket_Autograph(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutographFieldNumber = 2,
    kSocketFieldNumber = 1,
    kAutographIdFieldNumber = 3,
    kAutographScoreFieldNumber = 4,
  };
  // optional string autograph = 2;
  bool has_autograph() const;
  private:
  bool _internal_has_autograph() const;
  public:
  void clear_autograph();
  const std::string& autograph() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_autograph(ArgT0&& arg0, ArgT... args);
  std::string* mutable_autograph();
  PROTOBUF_NODISCARD std::string* release_autograph();
  void set_allocated_autograph(std::string* autograph);
  private:
  const std::string& _internal_autograph() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_autograph(const std::string& value);
  std::string* _internal_mutable_autograph();
  public:

  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // optional uint32 autograph_id = 3;
  bool has_autograph_id() const;
  private:
  bool _internal_has_autograph_id() const;
  public:
  void clear_autograph_id();
  uint32_t autograph_id() const;
  void set_autograph_id(uint32_t value);
  private:
  uint32_t _internal_autograph_id() const;
  void _internal_set_autograph_id(uint32_t value);
  public:

  // optional uint32 autograph_score = 4;
  bool has_autograph_score() const;
  private:
  bool _internal_has_autograph_score() const;
  public:
  void clear_autograph_score();
  uint32_t autograph_score() const;
  void set_autograph_score(uint32_t value);
  private:
  uint32_t _internal_autograph_score() const;
  void _internal_set_autograph_score(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_Autograph)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr autograph_;
    ::CProtoItemSocket* socket_;
    uint32_t autograph_id_;
    uint32_t autograph_score_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CProtoItemSocket_StaticVisuals final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CProtoItemSocket_StaticVisuals) */ {
 public:
  inline CProtoItemSocket_StaticVisuals() : CProtoItemSocket_StaticVisuals(nullptr) {}
  ~CProtoItemSocket_StaticVisuals() override;
  explicit PROTOBUF_CONSTEXPR CProtoItemSocket_StaticVisuals(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CProtoItemSocket_StaticVisuals(const CProtoItemSocket_StaticVisuals& from);
  CProtoItemSocket_StaticVisuals(CProtoItemSocket_StaticVisuals&& from) noexcept
    : CProtoItemSocket_StaticVisuals() {
    *this = ::std::move(from);
  }

  inline CProtoItemSocket_StaticVisuals& operator=(const CProtoItemSocket_StaticVisuals& from) {
    CopyFrom(from);
    return *this;
  }
  inline CProtoItemSocket_StaticVisuals& operator=(CProtoItemSocket_StaticVisuals&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CProtoItemSocket_StaticVisuals& default_instance() {
    return *internal_default_instance();
  }
  static inline const CProtoItemSocket_StaticVisuals* internal_default_instance() {
    return reinterpret_cast<const CProtoItemSocket_StaticVisuals*>(
               &_CProtoItemSocket_StaticVisuals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CProtoItemSocket_StaticVisuals& a, CProtoItemSocket_StaticVisuals& b) {
    a.Swap(&b);
  }
  inline void Swap(CProtoItemSocket_StaticVisuals* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CProtoItemSocket_StaticVisuals* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CProtoItemSocket_StaticVisuals* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CProtoItemSocket_StaticVisuals>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CProtoItemSocket_StaticVisuals& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CProtoItemSocket_StaticVisuals& from) {
    CProtoItemSocket_StaticVisuals::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CProtoItemSocket_StaticVisuals* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CProtoItemSocket_StaticVisuals";
  }
  protected:
  explicit CProtoItemSocket_StaticVisuals(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocketFieldNumber = 1,
  };
  // optional .CProtoItemSocket socket = 1;
  bool has_socket() const;
  private:
  bool _internal_has_socket() const;
  public:
  void clear_socket();
  const ::CProtoItemSocket& socket() const;
  PROTOBUF_NODISCARD ::CProtoItemSocket* release_socket();
  ::CProtoItemSocket* mutable_socket();
  void set_allocated_socket(::CProtoItemSocket* socket);
  private:
  const ::CProtoItemSocket& _internal_socket() const;
  ::CProtoItemSocket* _internal_mutable_socket();
  public:
  void unsafe_arena_set_allocated_socket(
      ::CProtoItemSocket* socket);
  ::CProtoItemSocket* unsafe_arena_release_socket();

  // @@protoc_insertion_point(class_scope:CProtoItemSocket_StaticVisuals)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CProtoItemSocket* socket_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CAttribute_String final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CAttribute_String) */ {
 public:
  inline CAttribute_String() : CAttribute_String(nullptr) {}
  ~CAttribute_String() override;
  explicit PROTOBUF_CONSTEXPR CAttribute_String(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CAttribute_String(const CAttribute_String& from);
  CAttribute_String(CAttribute_String&& from) noexcept
    : CAttribute_String() {
    *this = ::std::move(from);
  }

  inline CAttribute_String& operator=(const CAttribute_String& from) {
    CopyFrom(from);
    return *this;
  }
  inline CAttribute_String& operator=(CAttribute_String&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CAttribute_String& default_instance() {
    return *internal_default_instance();
  }
  static inline const CAttribute_String* internal_default_instance() {
    return reinterpret_cast<const CAttribute_String*>(
               &_CAttribute_String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CAttribute_String& a, CAttribute_String& b) {
    a.Swap(&b);
  }
  inline void Swap(CAttribute_String* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CAttribute_String* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CAttribute_String* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CAttribute_String>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CAttribute_String& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CAttribute_String& from) {
    CAttribute_String::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CAttribute_String* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CAttribute_String";
  }
  protected:
  explicit CAttribute_String(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // optional string value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:CAttribute_String)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetItemDailyRevenue_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetItemDailyRevenue_Request) */ {
 public:
  inline CWorkshop_GetItemDailyRevenue_Request() : CWorkshop_GetItemDailyRevenue_Request(nullptr) {}
  ~CWorkshop_GetItemDailyRevenue_Request() override;
  explicit PROTOBUF_CONSTEXPR CWorkshop_GetItemDailyRevenue_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetItemDailyRevenue_Request(const CWorkshop_GetItemDailyRevenue_Request& from);
  CWorkshop_GetItemDailyRevenue_Request(CWorkshop_GetItemDailyRevenue_Request&& from) noexcept
    : CWorkshop_GetItemDailyRevenue_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetItemDailyRevenue_Request& operator=(const CWorkshop_GetItemDailyRevenue_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetItemDailyRevenue_Request& operator=(CWorkshop_GetItemDailyRevenue_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetItemDailyRevenue_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetItemDailyRevenue_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetItemDailyRevenue_Request*>(
               &_CWorkshop_GetItemDailyRevenue_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(CWorkshop_GetItemDailyRevenue_Request& a, CWorkshop_GetItemDailyRevenue_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetItemDailyRevenue_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetItemDailyRevenue_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CWorkshop_GetItemDailyRevenue_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CWorkshop_GetItemDailyRevenue_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CWorkshop_GetItemDailyRevenue_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CWorkshop_GetItemDailyRevenue_Request& from) {
    CWorkshop_GetItemDailyRevenue_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetItemDailyRevenue_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetItemDailyRevenue_Request";
  }
  protected:
  explicit CWorkshop_GetItemDailyRevenue_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kItemIdFieldNumber = 2,
    kDateStartFieldNumber = 3,
    kDateEndFieldNumber = 4,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // optional uint32 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint32_t item_id() const;
  void set_item_id(uint32_t value);
  private:
  uint32_t _internal_item_id() const;
  void _internal_set_item_id(uint32_t value);
  public:

  // optional uint32 date_start = 3;
  bool has_date_start() const;
  private:
  bool _internal_has_date_start() const;
  public:
  void clear_date_start();
  uint32_t date_start() const;
  void set_date_start(uint32_t value);
  private:
  uint32_t _internal_date_start() const;
  void _internal_set_date_start(uint32_t value);
  public:

  // optional uint32 date_end = 4;
  bool has_date_end() const;
  private:
  bool _internal_has_date_end() const;
  public:
  void clear_date_end();
  uint32_t date_end() const;
  void set_date_end(uint32_t value);
  private:
  uint32_t _internal_date_end() const;
  void _internal_set_date_end(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_GetItemDailyRevenue_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t appid_;
    uint32_t item_id_;
    uint32_t date_start_;
    uint32_t date_end_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue) */ {
 public:
  inline CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue() : CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(nullptr) {}
  ~CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue() override;
  explicit PROTOBUF_CONSTEXPR CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from);
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue&& from) noexcept
    : CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& operator=(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& operator=(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue*>(
               &_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& a, CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
    CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue";
  }
  protected:
  explicit CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountryCodeFieldNumber = 1,
    kRevenueUsdFieldNumber = 3,
    kDateFieldNumber = 2,
    kUnitsFieldNumber = 4,
  };
  // optional string country_code = 1;
  bool has_country_code() const;
  private:
  bool _internal_has_country_code() const;
  public:
  void clear_country_code();
  const std::string& country_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country_code();
  PROTOBUF_NODISCARD std::string* release_country_code();
  void set_allocated_country_code(std::string* country_code);
  private:
  const std::string& _internal_country_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country_code(const std::string& value);
  std::string* _internal_mutable_country_code();
  public:

  // optional int64 revenue_usd = 3;
  bool has_revenue_usd() const;
  private:
  bool _internal_has_revenue_usd() const;
  public:
  void clear_revenue_usd();
  int64_t revenue_usd() const;
  void set_revenue_usd(int64_t value);
  private:
  int64_t _internal_revenue_usd() const;
  void _internal_set_revenue_usd(int64_t value);
  public:

  // optional uint32 date = 2;
  bool has_date() const;
  private:
  bool _internal_has_date() const;
  public:
  void clear_date();
  uint32_t date() const;
  void set_date(uint32_t value);
  private:
  uint32_t _internal_date() const;
  void _internal_set_date(uint32_t value);
  public:

  // optional int32 units = 4;
  bool has_units() const;
  private:
  bool _internal_has_units() const;
  public:
  void clear_units();
  int32_t units() const;
  void set_units(int32_t value);
  private:
  int32_t _internal_units() const;
  void _internal_set_units(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_code_;
    int64_t revenue_usd_;
    uint32_t date_;
    int32_t units_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetItemDailyRevenue_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetItemDailyRevenue_Response) */ {
 public:
  inline CWorkshop_GetItemDailyRevenue_Response() : CWorkshop_GetItemDailyRevenue_Response(nullptr) {}
  ~CWorkshop_GetItemDailyRevenue_Response() override;
  explicit PROTOBUF_CONSTEXPR CWorkshop_GetItemDailyRevenue_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetItemDailyRevenue_Response(const CWorkshop_GetItemDailyRevenue_Response& from);
  CWorkshop_GetItemDailyRevenue_Response(CWorkshop_GetItemDailyRevenue_Response&& from) noexcept
    : CWorkshop_GetItemDailyRevenue_Response() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetItemDailyRevenue_Response& operator=(const CWorkshop_GetItemDailyRevenue_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetItemDailyRevenue_Response& operator=(CWorkshop_GetItemDailyRevenue_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetItemDailyRevenue_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetItemDailyRevenue_Response* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetItemDailyRevenue_Response*>(
               &_CWorkshop_GetItemDailyRevenue_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(CWorkshop_GetItemDailyRevenue_Response& a, CWorkshop_GetItemDailyRevenue_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetItemDailyRevenue_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetItemDailyRevenue_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CWorkshop_GetItemDailyRevenue_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CWorkshop_GetItemDailyRevenue_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CWorkshop_GetItemDailyRevenue_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CWorkshop_GetItemDailyRevenue_Response& from) {
    CWorkshop_GetItemDailyRevenue_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetItemDailyRevenue_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetItemDailyRevenue_Response";
  }
  protected:
  explicit CWorkshop_GetItemDailyRevenue_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue CountryDailyRevenue;

  // accessors -------------------------------------------------------

  enum : int {
    kCountryRevenueFieldNumber = 1,
  };
  // repeated .CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  int country_revenue_size() const;
  private:
  int _internal_country_revenue_size() const;
  public:
  void clear_country_revenue();
  ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* mutable_country_revenue(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >*
      mutable_country_revenue();
  private:
  const ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& _internal_country_revenue(int index) const;
  ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* _internal_add_country_revenue();
  public:
  const ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& country_revenue(int index) const;
  ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* add_country_revenue();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >&
      country_revenue() const;

  // @@protoc_insertion_point(class_scope:CWorkshop_GetItemDailyRevenue_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue > country_revenue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetPackageDailyRevenue_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetPackageDailyRevenue_Request) */ {
 public:
  inline CWorkshop_GetPackageDailyRevenue_Request() : CWorkshop_GetPackageDailyRevenue_Request(nullptr) {}
  ~CWorkshop_GetPackageDailyRevenue_Request() override;
  explicit PROTOBUF_CONSTEXPR CWorkshop_GetPackageDailyRevenue_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetPackageDailyRevenue_Request(const CWorkshop_GetPackageDailyRevenue_Request& from);
  CWorkshop_GetPackageDailyRevenue_Request(CWorkshop_GetPackageDailyRevenue_Request&& from) noexcept
    : CWorkshop_GetPackageDailyRevenue_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetPackageDailyRevenue_Request& operator=(const CWorkshop_GetPackageDailyRevenue_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetPackageDailyRevenue_Request& operator=(CWorkshop_GetPackageDailyRevenue_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetPackageDailyRevenue_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetPackageDailyRevenue_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetPackageDailyRevenue_Request*>(
               &_CWorkshop_GetPackageDailyRevenue_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(CWorkshop_GetPackageDailyRevenue_Request& a, CWorkshop_GetPackageDailyRevenue_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetPackageDailyRevenue_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetPackageDailyRevenue_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CWorkshop_GetPackageDailyRevenue_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CWorkshop_GetPackageDailyRevenue_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CWorkshop_GetPackageDailyRevenue_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CWorkshop_GetPackageDailyRevenue_Request& from) {
    CWorkshop_GetPackageDailyRevenue_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetPackageDailyRevenue_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetPackageDailyRevenue_Request";
  }
  protected:
  explicit CWorkshop_GetPackageDailyRevenue_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageidFieldNumber = 1,
    kDateStartFieldNumber = 2,
    kDateEndFieldNumber = 3,
  };
  // optional uint32 packageid = 1;
  bool has_packageid() const;
  private:
  bool _internal_has_packageid() const;
  public:
  void clear_packageid();
  uint32_t packageid() const;
  void set_packageid(uint32_t value);
  private:
  uint32_t _internal_packageid() const;
  void _internal_set_packageid(uint32_t value);
  public:

  // optional uint32 date_start = 2;
  bool has_date_start() const;
  private:
  bool _internal_has_date_start() const;
  public:
  void clear_date_start();
  uint32_t date_start() const;
  void set_date_start(uint32_t value);
  private:
  uint32_t _internal_date_start() const;
  void _internal_set_date_start(uint32_t value);
  public:

  // optional uint32 date_end = 3;
  bool has_date_end() const;
  private:
  bool _internal_has_date_end() const;
  public:
  void clear_date_end();
  uint32_t date_end() const;
  void set_date_end(uint32_t value);
  private:
  uint32_t _internal_date_end() const;
  void _internal_set_date_end(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_GetPackageDailyRevenue_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t packageid_;
    uint32_t date_start_;
    uint32_t date_end_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue) */ {
 public:
  inline CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue() : CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(nullptr) {}
  ~CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue() override;
  explicit PROTOBUF_CONSTEXPR CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from);
  CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue&& from) noexcept
    : CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& operator=(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& operator=(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue*>(
               &_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& a, CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from) {
    CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue";
  }
  protected:
  explicit CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountryCodeFieldNumber = 1,
    kRevenueUsdFieldNumber = 3,
    kDateFieldNumber = 2,
    kUnitsFieldNumber = 4,
  };
  // optional string country_code = 1;
  bool has_country_code() const;
  private:
  bool _internal_has_country_code() const;
  public:
  void clear_country_code();
  const std::string& country_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country_code();
  PROTOBUF_NODISCARD std::string* release_country_code();
  void set_allocated_country_code(std::string* country_code);
  private:
  const std::string& _internal_country_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country_code(const std::string& value);
  std::string* _internal_mutable_country_code();
  public:

  // optional int64 revenue_usd = 3;
  bool has_revenue_usd() const;
  private:
  bool _internal_has_revenue_usd() const;
  public:
  void clear_revenue_usd();
  int64_t revenue_usd() const;
  void set_revenue_usd(int64_t value);
  private:
  int64_t _internal_revenue_usd() const;
  void _internal_set_revenue_usd(int64_t value);
  public:

  // optional uint32 date = 2;
  bool has_date() const;
  private:
  bool _internal_has_date() const;
  public:
  void clear_date();
  uint32_t date() const;
  void set_date(uint32_t value);
  private:
  uint32_t _internal_date() const;
  void _internal_set_date(uint32_t value);
  public:

  // optional int32 units = 4;
  bool has_units() const;
  private:
  bool _internal_has_units() const;
  public:
  void clear_units();
  int32_t units() const;
  void set_units(int32_t value);
  private:
  int32_t _internal_units() const;
  void _internal_set_units(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_code_;
    int64_t revenue_usd_;
    uint32_t date_;
    int32_t units_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetPackageDailyRevenue_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetPackageDailyRevenue_Response) */ {
 public:
  inline CWorkshop_GetPackageDailyRevenue_Response() : CWorkshop_GetPackageDailyRevenue_Response(nullptr) {}
  ~CWorkshop_GetPackageDailyRevenue_Response() override;
  explicit PROTOBUF_CONSTEXPR CWorkshop_GetPackageDailyRevenue_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetPackageDailyRevenue_Response(const CWorkshop_GetPackageDailyRevenue_Response& from);
  CWorkshop_GetPackageDailyRevenue_Response(CWorkshop_GetPackageDailyRevenue_Response&& from) noexcept
    : CWorkshop_GetPackageDailyRevenue_Response() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetPackageDailyRevenue_Response& operator=(const CWorkshop_GetPackageDailyRevenue_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetPackageDailyRevenue_Response& operator=(CWorkshop_GetPackageDailyRevenue_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CWorkshop_GetPackageDailyRevenue_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetPackageDailyRevenue_Response* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetPackageDailyRevenue_Response*>(
               &_CWorkshop_GetPackageDailyRevenue_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(CWorkshop_GetPackageDailyRevenue_Response& a, CWorkshop_GetPackageDailyRevenue_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetPackageDailyRevenue_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetPackageDailyRevenue_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CWorkshop_GetPackageDailyRevenue_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CWorkshop_GetPackageDailyRevenue_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CWorkshop_GetPackageDailyRevenue_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CWorkshop_GetPackageDailyRevenue_Response& from) {
    CWorkshop_GetPackageDailyRevenue_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetPackageDailyRevenue_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetPackageDailyRevenue_Response";
  }
  protected:
  explicit CWorkshop_GetPackageDailyRevenue_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue CountryDailyRevenue;

  // accessors -------------------------------------------------------

  enum : int {
    kCountryRevenueFieldNumber = 1,
  };
  // repeated .CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  int country_revenue_size() const;
  private:
  int _internal_country_revenue_size() const;
  public:
  void clear_country_revenue();
  ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* mutable_country_revenue(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >*
      mutable_country_revenue();
  private:
  const ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& _internal_country_revenue(int index) const;
  ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* _internal_add_country_revenue();
  public:
  const ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& country_revenue(int index) const;
  ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* add_country_revenue();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >&
      country_revenue() const;

  // @@protoc_insertion_point(class_scope:CWorkshop_GetPackageDailyRevenue_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue > country_revenue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSQLGCToGCGrantBackpackSlots final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSQLGCToGCGrantBackpackSlots) */ {
 public:
  inline CMsgSQLGCToGCGrantBackpackSlots() : CMsgSQLGCToGCGrantBackpackSlots(nullptr) {}
  ~CMsgSQLGCToGCGrantBackpackSlots() override;
  explicit PROTOBUF_CONSTEXPR CMsgSQLGCToGCGrantBackpackSlots(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSQLGCToGCGrantBackpackSlots(const CMsgSQLGCToGCGrantBackpackSlots& from);
  CMsgSQLGCToGCGrantBackpackSlots(CMsgSQLGCToGCGrantBackpackSlots&& from) noexcept
    : CMsgSQLGCToGCGrantBackpackSlots() {
    *this = ::std::move(from);
  }

  inline CMsgSQLGCToGCGrantBackpackSlots& operator=(const CMsgSQLGCToGCGrantBackpackSlots& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSQLGCToGCGrantBackpackSlots& operator=(CMsgSQLGCToGCGrantBackpackSlots&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSQLGCToGCGrantBackpackSlots& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSQLGCToGCGrantBackpackSlots* internal_default_instance() {
    return reinterpret_cast<const CMsgSQLGCToGCGrantBackpackSlots*>(
               &_CMsgSQLGCToGCGrantBackpackSlots_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(CMsgSQLGCToGCGrantBackpackSlots& a, CMsgSQLGCToGCGrantBackpackSlots& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSQLGCToGCGrantBackpackSlots* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSQLGCToGCGrantBackpackSlots* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSQLGCToGCGrantBackpackSlots* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSQLGCToGCGrantBackpackSlots>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSQLGCToGCGrantBackpackSlots& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSQLGCToGCGrantBackpackSlots& from) {
    CMsgSQLGCToGCGrantBackpackSlots::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSQLGCToGCGrantBackpackSlots* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSQLGCToGCGrantBackpackSlots";
  }
  protected:
  explicit CMsgSQLGCToGCGrantBackpackSlots(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kAddSlotsFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 add_slots = 2;
  bool has_add_slots() const;
  private:
  bool _internal_has_add_slots() const;
  public:
  void clear_add_slots();
  uint32_t add_slots() const;
  void set_add_slots(uint32_t value);
  private:
  uint32_t _internal_add_slots() const;
  void _internal_set_add_slots(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSQLGCToGCGrantBackpackSlots)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t add_slots_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLookupAccountName final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLookupAccountName) */ {
 public:
  inline CMsgClientToGCLookupAccountName() : CMsgClientToGCLookupAccountName(nullptr) {}
  ~CMsgClientToGCLookupAccountName() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCLookupAccountName(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLookupAccountName(const CMsgClientToGCLookupAccountName& from);
  CMsgClientToGCLookupAccountName(CMsgClientToGCLookupAccountName&& from) noexcept
    : CMsgClientToGCLookupAccountName() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLookupAccountName& operator=(const CMsgClientToGCLookupAccountName& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLookupAccountName& operator=(CMsgClientToGCLookupAccountName&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCLookupAccountName& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLookupAccountName* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLookupAccountName*>(
               &_CMsgClientToGCLookupAccountName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(CMsgClientToGCLookupAccountName& a, CMsgClientToGCLookupAccountName& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLookupAccountName* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLookupAccountName* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCLookupAccountName* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCLookupAccountName>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCLookupAccountName& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCLookupAccountName& from) {
    CMsgClientToGCLookupAccountName::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLookupAccountName* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLookupAccountName";
  }
  protected:
  explicit CMsgClientToGCLookupAccountName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLookupAccountName)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLookupAccountNameResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLookupAccountNameResponse) */ {
 public:
  inline CMsgClientToGCLookupAccountNameResponse() : CMsgClientToGCLookupAccountNameResponse(nullptr) {}
  ~CMsgClientToGCLookupAccountNameResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCLookupAccountNameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLookupAccountNameResponse(const CMsgClientToGCLookupAccountNameResponse& from);
  CMsgClientToGCLookupAccountNameResponse(CMsgClientToGCLookupAccountNameResponse&& from) noexcept
    : CMsgClientToGCLookupAccountNameResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLookupAccountNameResponse& operator=(const CMsgClientToGCLookupAccountNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLookupAccountNameResponse& operator=(CMsgClientToGCLookupAccountNameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCLookupAccountNameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLookupAccountNameResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLookupAccountNameResponse*>(
               &_CMsgClientToGCLookupAccountNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(CMsgClientToGCLookupAccountNameResponse& a, CMsgClientToGCLookupAccountNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLookupAccountNameResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLookupAccountNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCLookupAccountNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCLookupAccountNameResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCLookupAccountNameResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCLookupAccountNameResponse& from) {
    CMsgClientToGCLookupAccountNameResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLookupAccountNameResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLookupAccountNameResponse";
  }
  protected:
  explicit CMsgClientToGCLookupAccountNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNameFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // optional string account_name = 2;
  bool has_account_name() const;
  private:
  bool _internal_has_account_name() const;
  public:
  void clear_account_name();
  const std::string& account_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_name();
  PROTOBUF_NODISCARD std::string* release_account_name();
  void set_allocated_account_name(std::string* account_name);
  private:
  const std::string& _internal_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_name(const std::string& value);
  std::string* _internal_mutable_account_name();
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLookupAccountNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipe_Item final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateStaticRecipe.Item) */ {
 public:
  inline CMsgClientToGCCreateStaticRecipe_Item() : CMsgClientToGCCreateStaticRecipe_Item(nullptr) {}
  ~CMsgClientToGCCreateStaticRecipe_Item() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateStaticRecipe_Item(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateStaticRecipe_Item(const CMsgClientToGCCreateStaticRecipe_Item& from);
  CMsgClientToGCCreateStaticRecipe_Item(CMsgClientToGCCreateStaticRecipe_Item&& from) noexcept
    : CMsgClientToGCCreateStaticRecipe_Item() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateStaticRecipe_Item& operator=(const CMsgClientToGCCreateStaticRecipe_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateStaticRecipe_Item& operator=(CMsgClientToGCCreateStaticRecipe_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateStaticRecipe_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateStaticRecipe_Item* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateStaticRecipe_Item*>(
               &_CMsgClientToGCCreateStaticRecipe_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(CMsgClientToGCCreateStaticRecipe_Item& a, CMsgClientToGCCreateStaticRecipe_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateStaticRecipe_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateStaticRecipe_Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipe_Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateStaticRecipe_Item>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateStaticRecipe_Item& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateStaticRecipe_Item& from) {
    CMsgClientToGCCreateStaticRecipe_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateStaticRecipe_Item* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateStaticRecipe.Item";
  }
  protected:
  explicit CMsgClientToGCCreateStaticRecipe_Item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kSlotIdFieldNumber = 2,
  };
  // optional uint64 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 slot_id = 2;
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  uint32_t slot_id() const;
  void set_slot_id(uint32_t value);
  private:
  uint32_t _internal_slot_id() const;
  void _internal_set_slot_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipe.Item)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t slot_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipe final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateStaticRecipe) */ {
 public:
  inline CMsgClientToGCCreateStaticRecipe() : CMsgClientToGCCreateStaticRecipe(nullptr) {}
  ~CMsgClientToGCCreateStaticRecipe() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateStaticRecipe(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateStaticRecipe(const CMsgClientToGCCreateStaticRecipe& from);
  CMsgClientToGCCreateStaticRecipe(CMsgClientToGCCreateStaticRecipe&& from) noexcept
    : CMsgClientToGCCreateStaticRecipe() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateStaticRecipe& operator=(const CMsgClientToGCCreateStaticRecipe& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateStaticRecipe& operator=(CMsgClientToGCCreateStaticRecipe&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateStaticRecipe& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateStaticRecipe* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateStaticRecipe*>(
               &_CMsgClientToGCCreateStaticRecipe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(CMsgClientToGCCreateStaticRecipe& a, CMsgClientToGCCreateStaticRecipe& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateStaticRecipe* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateStaticRecipe* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipe* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateStaticRecipe>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateStaticRecipe& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateStaticRecipe& from) {
    CMsgClientToGCCreateStaticRecipe::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateStaticRecipe* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateStaticRecipe";
  }
  protected:
  explicit CMsgClientToGCCreateStaticRecipe(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreateStaticRecipe_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kRecipeDefIndexFieldNumber = 2,
  };
  // repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::CMsgClientToGCCreateStaticRecipe_Item* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >*
      mutable_items();
  private:
  const ::CMsgClientToGCCreateStaticRecipe_Item& _internal_items(int index) const;
  ::CMsgClientToGCCreateStaticRecipe_Item* _internal_add_items();
  public:
  const ::CMsgClientToGCCreateStaticRecipe_Item& items(int index) const;
  ::CMsgClientToGCCreateStaticRecipe_Item* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >&
      items() const;

  // optional uint32 recipe_def_index = 2;
  bool has_recipe_def_index() const;
  private:
  bool _internal_has_recipe_def_index() const;
  public:
  void clear_recipe_def_index();
  uint32_t recipe_def_index() const;
  void set_recipe_def_index(uint32_t value);
  private:
  uint32_t _internal_recipe_def_index() const;
  void _internal_set_recipe_def_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipe)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item > items_;
    uint32_t recipe_def_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipeResponse_OutputItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateStaticRecipeResponse.OutputItem) */ {
 public:
  inline CMsgClientToGCCreateStaticRecipeResponse_OutputItem() : CMsgClientToGCCreateStaticRecipeResponse_OutputItem(nullptr) {}
  ~CMsgClientToGCCreateStaticRecipeResponse_OutputItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateStaticRecipeResponse_OutputItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateStaticRecipeResponse_OutputItem(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from);
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem(CMsgClientToGCCreateStaticRecipeResponse_OutputItem&& from) noexcept
    : CMsgClientToGCCreateStaticRecipeResponse_OutputItem() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateStaticRecipeResponse_OutputItem& operator=(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateStaticRecipeResponse_OutputItem& operator=(CMsgClientToGCCreateStaticRecipeResponse_OutputItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateStaticRecipeResponse_OutputItem* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateStaticRecipeResponse_OutputItem*>(
               &_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem& a, CMsgClientToGCCreateStaticRecipeResponse_OutputItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipeResponse_OutputItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateStaticRecipeResponse_OutputItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
    CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateStaticRecipeResponse.OutputItem";
  }
  protected:
  explicit CMsgClientToGCCreateStaticRecipeResponse_OutputItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 2,
    kDefIndexFieldNumber = 1,
    kSlotIdFieldNumber = 3,
  };
  // optional uint64 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint64_t item_id() const;
  void set_item_id(uint64_t value);
  private:
  uint64_t _internal_item_id() const;
  void _internal_set_item_id(uint64_t value);
  public:

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  private:
  bool _internal_has_def_index() const;
  public:
  void clear_def_index();
  uint32_t def_index() const;
  void set_def_index(uint32_t value);
  private:
  uint32_t _internal_def_index() const;
  void _internal_set_def_index(uint32_t value);
  public:

  // optional uint32 slot_id = 3;
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  uint32_t slot_id() const;
  void set_slot_id(uint32_t value);
  private:
  uint32_t _internal_slot_id() const;
  void _internal_set_slot_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t item_id_;
    uint32_t def_index_;
    uint32_t slot_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipeResponse_InputError final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateStaticRecipeResponse.InputError) */ {
 public:
  inline CMsgClientToGCCreateStaticRecipeResponse_InputError() : CMsgClientToGCCreateStaticRecipeResponse_InputError(nullptr) {}
  ~CMsgClientToGCCreateStaticRecipeResponse_InputError() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateStaticRecipeResponse_InputError(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateStaticRecipeResponse_InputError(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from);
  CMsgClientToGCCreateStaticRecipeResponse_InputError(CMsgClientToGCCreateStaticRecipeResponse_InputError&& from) noexcept
    : CMsgClientToGCCreateStaticRecipeResponse_InputError() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateStaticRecipeResponse_InputError& operator=(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateStaticRecipeResponse_InputError& operator=(CMsgClientToGCCreateStaticRecipeResponse_InputError&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateStaticRecipeResponse_InputError& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateStaticRecipeResponse_InputError* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateStaticRecipeResponse_InputError*>(
               &_CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(CMsgClientToGCCreateStaticRecipeResponse_InputError& a, CMsgClientToGCCreateStaticRecipeResponse_InputError& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipeResponse_InputError* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateStaticRecipeResponse_InputError>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
    CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateStaticRecipeResponse.InputError";
  }
  protected:
  explicit CMsgClientToGCCreateStaticRecipeResponse_InputError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotIdFieldNumber = 1,
    kErrorFieldNumber = 2,
  };
  // optional uint32 slot_id = 1;
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  uint32_t slot_id() const;
  void set_slot_id(uint32_t value);
  private:
  uint32_t _internal_slot_id() const;
  void _internal_set_slot_id(uint32_t value);
  public:

  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  ::CMsgClientToGCCreateStaticRecipeResponse_EResponse error() const;
  void set_error(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value);
  private:
  ::CMsgClientToGCCreateStaticRecipeResponse_EResponse _internal_error() const;
  void _internal_set_error(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipeResponse.InputError)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t slot_id_;
    int error_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput) */ {
 public:
  inline CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput() : CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(nullptr) {}
  ~CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from);
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput&& from) noexcept
    : CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& operator=(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& operator=(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput*>(
               &_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& a, CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
    CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput";
  }
  protected:
  explicit CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kSlotIdFieldNumber = 1,
  };
  // optional uint64 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  uint64_t value() const;
  void set_value(uint64_t value);
  private:
  uint64_t _internal_value() const;
  void _internal_set_value(uint64_t value);
  public:

  // optional uint32 slot_id = 1;
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  uint32_t slot_id() const;
  void set_slot_id(uint32_t value);
  private:
  uint32_t _internal_slot_id() const;
  void _internal_set_slot_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t value_;
    uint32_t slot_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateStaticRecipeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateStaticRecipeResponse) */ {
 public:
  inline CMsgClientToGCCreateStaticRecipeResponse() : CMsgClientToGCCreateStaticRecipeResponse(nullptr) {}
  ~CMsgClientToGCCreateStaticRecipeResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateStaticRecipeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateStaticRecipeResponse(const CMsgClientToGCCreateStaticRecipeResponse& from);
  CMsgClientToGCCreateStaticRecipeResponse(CMsgClientToGCCreateStaticRecipeResponse&& from) noexcept
    : CMsgClientToGCCreateStaticRecipeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateStaticRecipeResponse& operator=(const CMsgClientToGCCreateStaticRecipeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateStaticRecipeResponse& operator=(CMsgClientToGCCreateStaticRecipeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateStaticRecipeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateStaticRecipeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateStaticRecipeResponse*>(
               &_CMsgClientToGCCreateStaticRecipeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(CMsgClientToGCCreateStaticRecipeResponse& a, CMsgClientToGCCreateStaticRecipeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateStaticRecipeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateStaticRecipeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateStaticRecipeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateStaticRecipeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateStaticRecipeResponse& from) {
    CMsgClientToGCCreateStaticRecipeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateStaticRecipeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateStaticRecipeResponse";
  }
  protected:
  explicit CMsgClientToGCCreateStaticRecipeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreateStaticRecipeResponse_OutputItem OutputItem;
  typedef CMsgClientToGCCreateStaticRecipeResponse_InputError InputError;
  typedef CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput AdditionalOutput;

  typedef CMsgClientToGCCreateStaticRecipeResponse_EResponse EResponse;
  static constexpr EResponse eResponse_Success =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_Success;
  static constexpr EResponse eResponse_OfferingDisabled =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_OfferingDisabled;
  static constexpr EResponse eResponse_InvalidItems =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InvalidItems;
  static constexpr EResponse eResponse_InternalError =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_InternalError;
  static constexpr EResponse eResponse_MissingLeague =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingLeague;
  static constexpr EResponse eResponse_MissingEvent =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_eResponse_MissingEvent;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCCreateStaticRecipeResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCCreateStaticRecipeResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOutputItemsFieldNumber = 2,
    kInputErrorsFieldNumber = 3,
    kAdditionalOutputsFieldNumber = 4,
    kResponseFieldNumber = 1,
  };
  // repeated .CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  int output_items_size() const;
  private:
  int _internal_output_items_size() const;
  public:
  void clear_output_items();
  ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* mutable_output_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >*
      mutable_output_items();
  private:
  const ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem& _internal_output_items(int index) const;
  ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* _internal_add_output_items();
  public:
  const ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem& output_items(int index) const;
  ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* add_output_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >&
      output_items() const;

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  int input_errors_size() const;
  private:
  int _internal_input_errors_size() const;
  public:
  void clear_input_errors();
  ::CMsgClientToGCCreateStaticRecipeResponse_InputError* mutable_input_errors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_InputError >*
      mutable_input_errors();
  private:
  const ::CMsgClientToGCCreateStaticRecipeResponse_InputError& _internal_input_errors(int index) const;
  ::CMsgClientToGCCreateStaticRecipeResponse_InputError* _internal_add_input_errors();
  public:
  const ::CMsgClientToGCCreateStaticRecipeResponse_InputError& input_errors(int index) const;
  ::CMsgClientToGCCreateStaticRecipeResponse_InputError* add_input_errors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_InputError >&
      input_errors() const;

  // repeated .CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  int additional_outputs_size() const;
  private:
  int _internal_additional_outputs_size() const;
  public:
  void clear_additional_outputs();
  ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* mutable_additional_outputs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >*
      mutable_additional_outputs();
  private:
  const ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& _internal_additional_outputs(int index) const;
  ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* _internal_add_additional_outputs();
  public:
  const ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& additional_outputs(int index) const;
  ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* add_additional_outputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >&
      additional_outputs() const;

  // optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCCreateStaticRecipeResponse_EResponse response() const;
  void set_response(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value);
  private:
  ::CMsgClientToGCCreateStaticRecipeResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateStaticRecipeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem > output_items_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_InputError > input_errors_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput > additional_outputs_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgProcessTransactionOrder_Item final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgProcessTransactionOrder.Item) */ {
 public:
  inline CMsgProcessTransactionOrder_Item() : CMsgProcessTransactionOrder_Item(nullptr) {}
  ~CMsgProcessTransactionOrder_Item() override;
  explicit PROTOBUF_CONSTEXPR CMsgProcessTransactionOrder_Item(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgProcessTransactionOrder_Item(const CMsgProcessTransactionOrder_Item& from);
  CMsgProcessTransactionOrder_Item(CMsgProcessTransactionOrder_Item&& from) noexcept
    : CMsgProcessTransactionOrder_Item() {
    *this = ::std::move(from);
  }

  inline CMsgProcessTransactionOrder_Item& operator=(const CMsgProcessTransactionOrder_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgProcessTransactionOrder_Item& operator=(CMsgProcessTransactionOrder_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgProcessTransactionOrder_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgProcessTransactionOrder_Item* internal_default_instance() {
    return reinterpret_cast<const CMsgProcessTransactionOrder_Item*>(
               &_CMsgProcessTransactionOrder_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(CMsgProcessTransactionOrder_Item& a, CMsgProcessTransactionOrder_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgProcessTransactionOrder_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgProcessTransactionOrder_Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgProcessTransactionOrder_Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgProcessTransactionOrder_Item>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgProcessTransactionOrder_Item& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgProcessTransactionOrder_Item& from) {
    CMsgProcessTransactionOrder_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProcessTransactionOrder_Item* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgProcessTransactionOrder.Item";
  }
  protected:
  explicit CMsgProcessTransactionOrder_Item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryDescFieldNumber = 4,
    kItemDefIndexFieldNumber = 1,
    kItemPriceFieldNumber = 2,
    kQuantityFieldNumber = 3,
    kStorePurchaseTypeFieldNumber = 5,
    kSourceReferenceIdFieldNumber = 6,
    kParentStackIndexFieldNumber = 7,
    kDefaultPriceFieldNumber = 8,
    kIsUserFacingFieldNumber = 9,
  };
  // optional string category_desc = 4;
  bool has_category_desc() const;
  private:
  bool _internal_has_category_desc() const;
  public:
  void clear_category_desc();
  const std::string& category_desc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_category_desc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_category_desc();
  PROTOBUF_NODISCARD std::string* release_category_desc();
  void set_allocated_category_desc(std::string* category_desc);
  private:
  const std::string& _internal_category_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_desc(const std::string& value);
  std::string* _internal_mutable_category_desc();
  public:

  // optional uint32 item_def_index = 1;
  bool has_item_def_index() const;
  private:
  bool _internal_has_item_def_index() const;
  public:
  void clear_item_def_index();
  uint32_t item_def_index() const;
  void set_item_def_index(uint32_t value);
  private:
  uint32_t _internal_item_def_index() const;
  void _internal_set_item_def_index(uint32_t value);
  public:

  // optional uint32 item_price = 2;
  bool has_item_price() const;
  private:
  bool _internal_has_item_price() const;
  public:
  void clear_item_price();
  uint32_t item_price() const;
  void set_item_price(uint32_t value);
  private:
  uint32_t _internal_item_price() const;
  void _internal_set_item_price(uint32_t value);
  public:

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  uint32_t quantity() const;
  void set_quantity(uint32_t value);
  private:
  uint32_t _internal_quantity() const;
  void _internal_set_quantity(uint32_t value);
  public:

  // optional uint32 store_purchase_type = 5;
  bool has_store_purchase_type() const;
  private:
  bool _internal_has_store_purchase_type() const;
  public:
  void clear_store_purchase_type();
  uint32_t store_purchase_type() const;
  void set_store_purchase_type(uint32_t value);
  private:
  uint32_t _internal_store_purchase_type() const;
  void _internal_set_store_purchase_type(uint32_t value);
  public:

  // optional uint64 source_reference_id = 6;
  bool has_source_reference_id() const;
  private:
  bool _internal_has_source_reference_id() const;
  public:
  void clear_source_reference_id();
  uint64_t source_reference_id() const;
  void set_source_reference_id(uint64_t value);
  private:
  uint64_t _internal_source_reference_id() const;
  void _internal_set_source_reference_id(uint64_t value);
  public:

  // optional int32 parent_stack_index = 7;
  bool has_parent_stack_index() const;
  private:
  bool _internal_has_parent_stack_index() const;
  public:
  void clear_parent_stack_index();
  int32_t parent_stack_index() const;
  void set_parent_stack_index(int32_t value);
  private:
  int32_t _internal_parent_stack_index() const;
  void _internal_set_parent_stack_index(int32_t value);
  public:

  // optional bool default_price = 8;
  bool has_default_price() const;
  private:
  bool _internal_has_default_price() const;
  public:
  void clear_default_price();
  bool default_price() const;
  void set_default_price(bool value);
  private:
  bool _internal_default_price() const;
  void _internal_set_default_price(bool value);
  public:

  // optional bool is_user_facing = 9;
  bool has_is_user_facing() const;
  private:
  bool _internal_has_is_user_facing() const;
  public:
  void clear_is_user_facing();
  bool is_user_facing() const;
  void set_is_user_facing(bool value);
  private:
  bool _internal_is_user_facing() const;
  void _internal_set_is_user_facing(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgProcessTransactionOrder.Item)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_desc_;
    uint32_t item_def_index_;
    uint32_t item_price_;
    uint32_t quantity_;
    uint32_t store_purchase_type_;
    uint64_t source_reference_id_;
    int32_t parent_stack_index_;
    bool default_price_;
    bool is_user_facing_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgProcessTransactionOrder final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgProcessTransactionOrder) */ {
 public:
  inline CMsgProcessTransactionOrder() : CMsgProcessTransactionOrder(nullptr) {}
  ~CMsgProcessTransactionOrder() override;
  explicit PROTOBUF_CONSTEXPR CMsgProcessTransactionOrder(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgProcessTransactionOrder(const CMsgProcessTransactionOrder& from);
  CMsgProcessTransactionOrder(CMsgProcessTransactionOrder&& from) noexcept
    : CMsgProcessTransactionOrder() {
    *this = ::std::move(from);
  }

  inline CMsgProcessTransactionOrder& operator=(const CMsgProcessTransactionOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgProcessTransactionOrder& operator=(CMsgProcessTransactionOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgProcessTransactionOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgProcessTransactionOrder* internal_default_instance() {
    return reinterpret_cast<const CMsgProcessTransactionOrder*>(
               &_CMsgProcessTransactionOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(CMsgProcessTransactionOrder& a, CMsgProcessTransactionOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgProcessTransactionOrder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgProcessTransactionOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgProcessTransactionOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgProcessTransactionOrder>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgProcessTransactionOrder& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgProcessTransactionOrder& from) {
    CMsgProcessTransactionOrder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProcessTransactionOrder* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgProcessTransactionOrder";
  }
  protected:
  explicit CMsgProcessTransactionOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgProcessTransactionOrder_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 9,
    kTxnIdFieldNumber = 1,
    kSteamTxnIdFieldNumber = 2,
    kPartnerTxnIdFieldNumber = 3,
    kSteamIdFieldNumber = 4,
    kWatermarkFieldNumber = 6,
    kTimeStampFieldNumber = 5,
    kPurchaseReportStatusFieldNumber = 7,
    kCurrencyFieldNumber = 8,
  };
  // repeated .CMsgProcessTransactionOrder.Item items = 9;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::CMsgProcessTransactionOrder_Item* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgProcessTransactionOrder_Item >*
      mutable_items();
  private:
  const ::CMsgProcessTransactionOrder_Item& _internal_items(int index) const;
  ::CMsgProcessTransactionOrder_Item* _internal_add_items();
  public:
  const ::CMsgProcessTransactionOrder_Item& items(int index) const;
  ::CMsgProcessTransactionOrder_Item* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgProcessTransactionOrder_Item >&
      items() const;

  // optional uint64 txn_id = 1;
  bool has_txn_id() const;
  private:
  bool _internal_has_txn_id() const;
  public:
  void clear_txn_id();
  uint64_t txn_id() const;
  void set_txn_id(uint64_t value);
  private:
  uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(uint64_t value);
  public:

  // optional uint64 steam_txn_id = 2;
  bool has_steam_txn_id() const;
  private:
  bool _internal_has_steam_txn_id() const;
  public:
  void clear_steam_txn_id();
  uint64_t steam_txn_id() const;
  void set_steam_txn_id(uint64_t value);
  private:
  uint64_t _internal_steam_txn_id() const;
  void _internal_set_steam_txn_id(uint64_t value);
  public:

  // optional uint64 partner_txn_id = 3;
  bool has_partner_txn_id() const;
  private:
  bool _internal_has_partner_txn_id() const;
  public:
  void clear_partner_txn_id();
  uint64_t partner_txn_id() const;
  void set_partner_txn_id(uint64_t value);
  private:
  uint64_t _internal_partner_txn_id() const;
  void _internal_set_partner_txn_id(uint64_t value);
  public:

  // optional fixed64 steam_id = 4;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  uint64_t steam_id() const;
  void set_steam_id(uint64_t value);
  private:
  uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(uint64_t value);
  public:

  // optional uint64 watermark = 6;
  bool has_watermark() const;
  private:
  bool _internal_has_watermark() const;
  public:
  void clear_watermark();
  uint64_t watermark() const;
  void set_watermark(uint64_t value);
  private:
  uint64_t _internal_watermark() const;
  void _internal_set_watermark(uint64_t value);
  public:

  // optional uint32 time_stamp = 5;
  bool has_time_stamp() const;
  private:
  bool _internal_has_time_stamp() const;
  public:
  void clear_time_stamp();
  uint32_t time_stamp() const;
  void set_time_stamp(uint32_t value);
  private:
  uint32_t _internal_time_stamp() const;
  void _internal_set_time_stamp(uint32_t value);
  public:

  // optional int32 purchase_report_status = 7;
  bool has_purchase_report_status() const;
  private:
  bool _internal_has_purchase_report_status() const;
  public:
  void clear_purchase_report_status();
  int32_t purchase_report_status() const;
  void set_purchase_report_status(int32_t value);
  private:
  int32_t _internal_purchase_report_status() const;
  void _internal_set_purchase_report_status(int32_t value);
  public:

  // optional uint32 currency = 8;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  uint32_t currency() const;
  void set_currency(uint32_t value);
  private:
  uint32_t _internal_currency() const;
  void _internal_set_currency(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgProcessTransactionOrder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgProcessTransactionOrder_Item > items_;
    uint64_t txn_id_;
    uint64_t steam_txn_id_;
    uint64_t partner_txn_id_;
    uint64_t steam_id_;
    uint64_t watermark_;
    uint32_t time_stamp_;
    int32_t purchase_report_status_;
    uint32_t currency_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCStoreProcessCDKeyTransaction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCStoreProcessCDKeyTransaction) */ {
 public:
  inline CMsgGCToGCStoreProcessCDKeyTransaction() : CMsgGCToGCStoreProcessCDKeyTransaction(nullptr) {}
  ~CMsgGCToGCStoreProcessCDKeyTransaction() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCStoreProcessCDKeyTransaction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCStoreProcessCDKeyTransaction(const CMsgGCToGCStoreProcessCDKeyTransaction& from);
  CMsgGCToGCStoreProcessCDKeyTransaction(CMsgGCToGCStoreProcessCDKeyTransaction&& from) noexcept
    : CMsgGCToGCStoreProcessCDKeyTransaction() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCStoreProcessCDKeyTransaction& operator=(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCStoreProcessCDKeyTransaction& operator=(CMsgGCToGCStoreProcessCDKeyTransaction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCStoreProcessCDKeyTransaction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCStoreProcessCDKeyTransaction* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCStoreProcessCDKeyTransaction*>(
               &_CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(CMsgGCToGCStoreProcessCDKeyTransaction& a, CMsgGCToGCStoreProcessCDKeyTransaction& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCStoreProcessCDKeyTransaction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCStoreProcessCDKeyTransaction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
    CMsgGCToGCStoreProcessCDKeyTransaction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCStoreProcessCDKeyTransaction* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCStoreProcessCDKeyTransaction";
  }
  protected:
  explicit CMsgGCToGCStoreProcessCDKeyTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderFieldNumber = 1,
    kReasonCodeFieldNumber = 2,
    kPartnerFieldNumber = 3,
  };
  // optional .CMsgProcessTransactionOrder order = 1;
  bool has_order() const;
  private:
  bool _internal_has_order() const;
  public:
  void clear_order();
  const ::CMsgProcessTransactionOrder& order() const;
  PROTOBUF_NODISCARD ::CMsgProcessTransactionOrder* release_order();
  ::CMsgProcessTransactionOrder* mutable_order();
  void set_allocated_order(::CMsgProcessTransactionOrder* order);
  private:
  const ::CMsgProcessTransactionOrder& _internal_order() const;
  ::CMsgProcessTransactionOrder* _internal_mutable_order();
  public:
  void unsafe_arena_set_allocated_order(
      ::CMsgProcessTransactionOrder* order);
  ::CMsgProcessTransactionOrder* unsafe_arena_release_order();

  // optional uint32 reason_code = 2;
  bool has_reason_code() const;
  private:
  bool _internal_has_reason_code() const;
  public:
  void clear_reason_code();
  uint32_t reason_code() const;
  void set_reason_code(uint32_t value);
  private:
  uint32_t _internal_reason_code() const;
  void _internal_set_reason_code(uint32_t value);
  public:

  // optional uint32 partner = 3;
  bool has_partner() const;
  private:
  bool _internal_has_partner() const;
  public:
  void clear_partner();
  uint32_t partner() const;
  void set_partner(uint32_t value);
  private:
  uint32_t _internal_partner() const;
  void _internal_set_partner(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCStoreProcessCDKeyTransaction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgProcessTransactionOrder* order_;
    uint32_t reason_code_;
    uint32_t partner_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCStoreProcessCDKeyTransactionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCStoreProcessCDKeyTransactionResponse) */ {
 public:
  inline CMsgGCToGCStoreProcessCDKeyTransactionResponse() : CMsgGCToGCStoreProcessCDKeyTransactionResponse(nullptr) {}
  ~CMsgGCToGCStoreProcessCDKeyTransactionResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCStoreProcessCDKeyTransactionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCStoreProcessCDKeyTransactionResponse(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from);
  CMsgGCToGCStoreProcessCDKeyTransactionResponse(CMsgGCToGCStoreProcessCDKeyTransactionResponse&& from) noexcept
    : CMsgGCToGCStoreProcessCDKeyTransactionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCStoreProcessCDKeyTransactionResponse& operator=(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCStoreProcessCDKeyTransactionResponse& operator=(CMsgGCToGCStoreProcessCDKeyTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCStoreProcessCDKeyTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCStoreProcessCDKeyTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCStoreProcessCDKeyTransactionResponse*>(
               &_CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(CMsgGCToGCStoreProcessCDKeyTransactionResponse& a, CMsgGCToGCStoreProcessCDKeyTransactionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCStoreProcessCDKeyTransactionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCStoreProcessCDKeyTransactionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
    CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCStoreProcessCDKeyTransactionResponse";
  }
  protected:
  explicit CMsgGCToGCStoreProcessCDKeyTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCStoreProcessCDKeyTransactionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCStoreProcessSettlement final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCStoreProcessSettlement) */ {
 public:
  inline CMsgGCToGCStoreProcessSettlement() : CMsgGCToGCStoreProcessSettlement(nullptr) {}
  ~CMsgGCToGCStoreProcessSettlement() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCStoreProcessSettlement(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCStoreProcessSettlement(const CMsgGCToGCStoreProcessSettlement& from);
  CMsgGCToGCStoreProcessSettlement(CMsgGCToGCStoreProcessSettlement&& from) noexcept
    : CMsgGCToGCStoreProcessSettlement() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCStoreProcessSettlement& operator=(const CMsgGCToGCStoreProcessSettlement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCStoreProcessSettlement& operator=(CMsgGCToGCStoreProcessSettlement&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCStoreProcessSettlement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCStoreProcessSettlement* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCStoreProcessSettlement*>(
               &_CMsgGCToGCStoreProcessSettlement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(CMsgGCToGCStoreProcessSettlement& a, CMsgGCToGCStoreProcessSettlement& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCStoreProcessSettlement* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCStoreProcessSettlement* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCStoreProcessSettlement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCStoreProcessSettlement>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCStoreProcessSettlement& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCStoreProcessSettlement& from) {
    CMsgGCToGCStoreProcessSettlement::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCStoreProcessSettlement* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCStoreProcessSettlement";
  }
  protected:
  explicit CMsgGCToGCStoreProcessSettlement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderFieldNumber = 1,
  };
  // optional .CMsgProcessTransactionOrder order = 1;
  bool has_order() const;
  private:
  bool _internal_has_order() const;
  public:
  void clear_order();
  const ::CMsgProcessTransactionOrder& order() const;
  PROTOBUF_NODISCARD ::CMsgProcessTransactionOrder* release_order();
  ::CMsgProcessTransactionOrder* mutable_order();
  void set_allocated_order(::CMsgProcessTransactionOrder* order);
  private:
  const ::CMsgProcessTransactionOrder& _internal_order() const;
  ::CMsgProcessTransactionOrder* _internal_mutable_order();
  public:
  void unsafe_arena_set_allocated_order(
      ::CMsgProcessTransactionOrder* order);
  ::CMsgProcessTransactionOrder* unsafe_arena_release_order();

  // @@protoc_insertion_point(class_scope:CMsgGCToGCStoreProcessSettlement)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgProcessTransactionOrder* order_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCStoreProcessSettlementResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCStoreProcessSettlementResponse) */ {
 public:
  inline CMsgGCToGCStoreProcessSettlementResponse() : CMsgGCToGCStoreProcessSettlementResponse(nullptr) {}
  ~CMsgGCToGCStoreProcessSettlementResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCStoreProcessSettlementResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCStoreProcessSettlementResponse(const CMsgGCToGCStoreProcessSettlementResponse& from);
  CMsgGCToGCStoreProcessSettlementResponse(CMsgGCToGCStoreProcessSettlementResponse&& from) noexcept
    : CMsgGCToGCStoreProcessSettlementResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCStoreProcessSettlementResponse& operator=(const CMsgGCToGCStoreProcessSettlementResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCStoreProcessSettlementResponse& operator=(CMsgGCToGCStoreProcessSettlementResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCStoreProcessSettlementResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCStoreProcessSettlementResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCStoreProcessSettlementResponse*>(
               &_CMsgGCToGCStoreProcessSettlementResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(CMsgGCToGCStoreProcessSettlementResponse& a, CMsgGCToGCStoreProcessSettlementResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCStoreProcessSettlementResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCStoreProcessSettlementResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCStoreProcessSettlementResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCStoreProcessSettlementResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCStoreProcessSettlementResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCStoreProcessSettlementResponse& from) {
    CMsgGCToGCStoreProcessSettlementResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCStoreProcessSettlementResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCStoreProcessSettlementResponse";
  }
  protected:
  explicit CMsgGCToGCStoreProcessSettlementResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCStoreProcessSettlementResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCBroadcastConsoleCommand final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCBroadcastConsoleCommand) */ {
 public:
  inline CMsgGCToGCBroadcastConsoleCommand() : CMsgGCToGCBroadcastConsoleCommand(nullptr) {}
  ~CMsgGCToGCBroadcastConsoleCommand() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCBroadcastConsoleCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCBroadcastConsoleCommand(const CMsgGCToGCBroadcastConsoleCommand& from);
  CMsgGCToGCBroadcastConsoleCommand(CMsgGCToGCBroadcastConsoleCommand&& from) noexcept
    : CMsgGCToGCBroadcastConsoleCommand() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCBroadcastConsoleCommand& operator=(const CMsgGCToGCBroadcastConsoleCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCBroadcastConsoleCommand& operator=(CMsgGCToGCBroadcastConsoleCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCBroadcastConsoleCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCBroadcastConsoleCommand* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCBroadcastConsoleCommand*>(
               &_CMsgGCToGCBroadcastConsoleCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(CMsgGCToGCBroadcastConsoleCommand& a, CMsgGCToGCBroadcastConsoleCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCBroadcastConsoleCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCBroadcastConsoleCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCBroadcastConsoleCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCBroadcastConsoleCommand>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCBroadcastConsoleCommand& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCBroadcastConsoleCommand& from) {
    CMsgGCToGCBroadcastConsoleCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCBroadcastConsoleCommand* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCBroadcastConsoleCommand";
  }
  protected:
  explicit CMsgGCToGCBroadcastConsoleCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConCommandFieldNumber = 1,
    kOutputInitiatorFieldNumber = 4,
    kReportOutputFieldNumber = 2,
    kSendingGcFieldNumber = 3,
  };
  // optional string con_command = 1;
  bool has_con_command() const;
  private:
  bool _internal_has_con_command() const;
  public:
  void clear_con_command();
  const std::string& con_command() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_con_command(ArgT0&& arg0, ArgT... args);
  std::string* mutable_con_command();
  PROTOBUF_NODISCARD std::string* release_con_command();
  void set_allocated_con_command(std::string* con_command);
  private:
  const std::string& _internal_con_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_con_command(const std::string& value);
  std::string* _internal_mutable_con_command();
  public:

  // optional string output_initiator = 4;
  bool has_output_initiator() const;
  private:
  bool _internal_has_output_initiator() const;
  public:
  void clear_output_initiator();
  const std::string& output_initiator() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_output_initiator(ArgT0&& arg0, ArgT... args);
  std::string* mutable_output_initiator();
  PROTOBUF_NODISCARD std::string* release_output_initiator();
  void set_allocated_output_initiator(std::string* output_initiator);
  private:
  const std::string& _internal_output_initiator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output_initiator(const std::string& value);
  std::string* _internal_mutable_output_initiator();
  public:

  // optional bool report_output = 2;
  bool has_report_output() const;
  private:
  bool _internal_has_report_output() const;
  public:
  void clear_report_output();
  bool report_output() const;
  void set_report_output(bool value);
  private:
  bool _internal_report_output() const;
  void _internal_set_report_output(bool value);
  public:

  // optional int32 sending_gc = 3 [default = -1];
  bool has_sending_gc() const;
  private:
  bool _internal_has_sending_gc() const;
  public:
  void clear_sending_gc();
  int32_t sending_gc() const;
  void set_sending_gc(int32_t value);
  private:
  int32_t _internal_sending_gc() const;
  void _internal_set_sending_gc(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCBroadcastConsoleCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr con_command_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_initiator_;
    bool report_output_;
    int32_t sending_gc_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCConsoleOutput_OutputLine final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCConsoleOutput.OutputLine) */ {
 public:
  inline CMsgGCToGCConsoleOutput_OutputLine() : CMsgGCToGCConsoleOutput_OutputLine(nullptr) {}
  ~CMsgGCToGCConsoleOutput_OutputLine() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCConsoleOutput_OutputLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCConsoleOutput_OutputLine(const CMsgGCToGCConsoleOutput_OutputLine& from);
  CMsgGCToGCConsoleOutput_OutputLine(CMsgGCToGCConsoleOutput_OutputLine&& from) noexcept
    : CMsgGCToGCConsoleOutput_OutputLine() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCConsoleOutput_OutputLine& operator=(const CMsgGCToGCConsoleOutput_OutputLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCConsoleOutput_OutputLine& operator=(CMsgGCToGCConsoleOutput_OutputLine&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCConsoleOutput_OutputLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCConsoleOutput_OutputLine* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCConsoleOutput_OutputLine*>(
               &_CMsgGCToGCConsoleOutput_OutputLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(CMsgGCToGCConsoleOutput_OutputLine& a, CMsgGCToGCConsoleOutput_OutputLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCConsoleOutput_OutputLine* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCConsoleOutput_OutputLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCConsoleOutput_OutputLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCConsoleOutput_OutputLine>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCConsoleOutput_OutputLine& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCConsoleOutput_OutputLine& from) {
    CMsgGCToGCConsoleOutput_OutputLine::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCConsoleOutput_OutputLine* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCConsoleOutput.OutputLine";
  }
  protected:
  explicit CMsgGCToGCConsoleOutput_OutputLine(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kSpewLevelFieldNumber = 2,
  };
  // optional string text = 1;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional uint32 spew_level = 2;
  bool has_spew_level() const;
  private:
  bool _internal_has_spew_level() const;
  public:
  void clear_spew_level();
  uint32_t spew_level() const;
  void set_spew_level(uint32_t value);
  private:
  uint32_t _internal_spew_level() const;
  void _internal_set_spew_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCConsoleOutput.OutputLine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
    uint32_t spew_level_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCConsoleOutput final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCConsoleOutput) */ {
 public:
  inline CMsgGCToGCConsoleOutput() : CMsgGCToGCConsoleOutput(nullptr) {}
  ~CMsgGCToGCConsoleOutput() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCConsoleOutput(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCConsoleOutput(const CMsgGCToGCConsoleOutput& from);
  CMsgGCToGCConsoleOutput(CMsgGCToGCConsoleOutput&& from) noexcept
    : CMsgGCToGCConsoleOutput() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCConsoleOutput& operator=(const CMsgGCToGCConsoleOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCConsoleOutput& operator=(CMsgGCToGCConsoleOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCConsoleOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCConsoleOutput* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCConsoleOutput*>(
               &_CMsgGCToGCConsoleOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(CMsgGCToGCConsoleOutput& a, CMsgGCToGCConsoleOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCConsoleOutput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCConsoleOutput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCConsoleOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCConsoleOutput>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCConsoleOutput& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCConsoleOutput& from) {
    CMsgGCToGCConsoleOutput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCConsoleOutput* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCConsoleOutput";
  }
  protected:
  explicit CMsgGCToGCConsoleOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToGCConsoleOutput_OutputLine OutputLine;

  // accessors -------------------------------------------------------

  enum : int {
    kMsgsFieldNumber = 3,
    kInitiatorFieldNumber = 1,
    kIsLastForSourceJobFieldNumber = 4,
    kSendingGcFieldNumber = 2,
  };
  // repeated .CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;
  public:
  void clear_msgs();
  ::CMsgGCToGCConsoleOutput_OutputLine* mutable_msgs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCConsoleOutput_OutputLine >*
      mutable_msgs();
  private:
  const ::CMsgGCToGCConsoleOutput_OutputLine& _internal_msgs(int index) const;
  ::CMsgGCToGCConsoleOutput_OutputLine* _internal_add_msgs();
  public:
  const ::CMsgGCToGCConsoleOutput_OutputLine& msgs(int index) const;
  ::CMsgGCToGCConsoleOutput_OutputLine* add_msgs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCConsoleOutput_OutputLine >&
      msgs() const;

  // optional string initiator = 1;
  bool has_initiator() const;
  private:
  bool _internal_has_initiator() const;
  public:
  void clear_initiator();
  const std::string& initiator() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_initiator(ArgT0&& arg0, ArgT... args);
  std::string* mutable_initiator();
  PROTOBUF_NODISCARD std::string* release_initiator();
  void set_allocated_initiator(std::string* initiator);
  private:
  const std::string& _internal_initiator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiator(const std::string& value);
  std::string* _internal_mutable_initiator();
  public:

  // optional bool is_last_for_source_job = 4;
  bool has_is_last_for_source_job() const;
  private:
  bool _internal_has_is_last_for_source_job() const;
  public:
  void clear_is_last_for_source_job();
  bool is_last_for_source_job() const;
  void set_is_last_for_source_job(bool value);
  private:
  bool _internal_is_last_for_source_job() const;
  void _internal_set_is_last_for_source_job(bool value);
  public:

  // optional int32 sending_gc = 2 [default = -1];
  bool has_sending_gc() const;
  private:
  bool _internal_has_sending_gc() const;
  public:
  void clear_sending_gc();
  int32_t sending_gc() const;
  void set_sending_gc(int32_t value);
  private:
  int32_t _internal_sending_gc() const;
  void _internal_set_sending_gc(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCConsoleOutput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCConsoleOutput_OutputLine > msgs_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr initiator_;
    bool is_last_for_source_job_;
    int32_t sending_gc_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgItemAges_MaxItemIDTimestamp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgItemAges.MaxItemIDTimestamp) */ {
 public:
  inline CMsgItemAges_MaxItemIDTimestamp() : CMsgItemAges_MaxItemIDTimestamp(nullptr) {}
  ~CMsgItemAges_MaxItemIDTimestamp() override;
  explicit PROTOBUF_CONSTEXPR CMsgItemAges_MaxItemIDTimestamp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgItemAges_MaxItemIDTimestamp(const CMsgItemAges_MaxItemIDTimestamp& from);
  CMsgItemAges_MaxItemIDTimestamp(CMsgItemAges_MaxItemIDTimestamp&& from) noexcept
    : CMsgItemAges_MaxItemIDTimestamp() {
    *this = ::std::move(from);
  }

  inline CMsgItemAges_MaxItemIDTimestamp& operator=(const CMsgItemAges_MaxItemIDTimestamp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgItemAges_MaxItemIDTimestamp& operator=(CMsgItemAges_MaxItemIDTimestamp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgItemAges_MaxItemIDTimestamp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgItemAges_MaxItemIDTimestamp* internal_default_instance() {
    return reinterpret_cast<const CMsgItemAges_MaxItemIDTimestamp*>(
               &_CMsgItemAges_MaxItemIDTimestamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(CMsgItemAges_MaxItemIDTimestamp& a, CMsgItemAges_MaxItemIDTimestamp& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgItemAges_MaxItemIDTimestamp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgItemAges_MaxItemIDTimestamp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgItemAges_MaxItemIDTimestamp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgItemAges_MaxItemIDTimestamp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgItemAges_MaxItemIDTimestamp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgItemAges_MaxItemIDTimestamp& from) {
    CMsgItemAges_MaxItemIDTimestamp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgItemAges_MaxItemIDTimestamp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgItemAges.MaxItemIDTimestamp";
  }
  protected:
  explicit CMsgItemAges_MaxItemIDTimestamp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxItemIdFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // optional uint64 max_item_id = 2;
  bool has_max_item_id() const;
  private:
  bool _internal_has_max_item_id() const;
  public:
  void clear_max_item_id();
  uint64_t max_item_id() const;
  void set_max_item_id(uint64_t value);
  private:
  uint64_t _internal_max_item_id() const;
  void _internal_set_max_item_id(uint64_t value);
  public:

  // optional uint32 timestamp = 1;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgItemAges.MaxItemIDTimestamp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t max_item_id_;
    uint32_t timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgItemAges final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgItemAges) */ {
 public:
  inline CMsgItemAges() : CMsgItemAges(nullptr) {}
  ~CMsgItemAges() override;
  explicit PROTOBUF_CONSTEXPR CMsgItemAges(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgItemAges(const CMsgItemAges& from);
  CMsgItemAges(CMsgItemAges&& from) noexcept
    : CMsgItemAges() {
    *this = ::std::move(from);
  }

  inline CMsgItemAges& operator=(const CMsgItemAges& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgItemAges& operator=(CMsgItemAges&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgItemAges& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgItemAges* internal_default_instance() {
    return reinterpret_cast<const CMsgItemAges*>(
               &_CMsgItemAges_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(CMsgItemAges& a, CMsgItemAges& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgItemAges* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgItemAges* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgItemAges* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgItemAges>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgItemAges& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgItemAges& from) {
    CMsgItemAges::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgItemAges* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgItemAges";
  }
  protected:
  explicit CMsgItemAges(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgItemAges_MaxItemIDTimestamp MaxItemIDTimestamp;

  // accessors -------------------------------------------------------

  enum : int {
    kMaxItemIdTimestampsFieldNumber = 1,
  };
  // repeated .CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  int max_item_id_timestamps_size() const;
  private:
  int _internal_max_item_id_timestamps_size() const;
  public:
  void clear_max_item_id_timestamps();
  ::CMsgItemAges_MaxItemIDTimestamp* mutable_max_item_id_timestamps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgItemAges_MaxItemIDTimestamp >*
      mutable_max_item_id_timestamps();
  private:
  const ::CMsgItemAges_MaxItemIDTimestamp& _internal_max_item_id_timestamps(int index) const;
  ::CMsgItemAges_MaxItemIDTimestamp* _internal_add_max_item_id_timestamps();
  public:
  const ::CMsgItemAges_MaxItemIDTimestamp& max_item_id_timestamps(int index) const;
  ::CMsgItemAges_MaxItemIDTimestamp* add_max_item_id_timestamps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgItemAges_MaxItemIDTimestamp >&
      max_item_id_timestamps() const;

  // @@protoc_insertion_point(class_scope:CMsgItemAges)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgItemAges_MaxItemIDTimestamp > max_item_id_timestamps_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCInternalTestMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCInternalTestMsg) */ {
 public:
  inline CMsgGCToGCInternalTestMsg() : CMsgGCToGCInternalTestMsg(nullptr) {}
  ~CMsgGCToGCInternalTestMsg() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCInternalTestMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCInternalTestMsg(const CMsgGCToGCInternalTestMsg& from);
  CMsgGCToGCInternalTestMsg(CMsgGCToGCInternalTestMsg&& from) noexcept
    : CMsgGCToGCInternalTestMsg() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCInternalTestMsg& operator=(const CMsgGCToGCInternalTestMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCInternalTestMsg& operator=(CMsgGCToGCInternalTestMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCInternalTestMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCInternalTestMsg* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCInternalTestMsg*>(
               &_CMsgGCToGCInternalTestMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(CMsgGCToGCInternalTestMsg& a, CMsgGCToGCInternalTestMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCInternalTestMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCInternalTestMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCInternalTestMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCInternalTestMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCInternalTestMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCInternalTestMsg& from) {
    CMsgGCToGCInternalTestMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCInternalTestMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCInternalTestMsg";
  }
  protected:
  explicit CMsgGCToGCInternalTestMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageBodyFieldNumber = 5,
    kSenderIdFieldNumber = 2,
    kContextFieldNumber = 3,
    kMessageIdFieldNumber = 4,
    kJobIdSourceFieldNumber = 6,
    kJobIdTargetFieldNumber = 7,
    kSendingGcFieldNumber = 1,
  };
  // optional bytes message_body = 5;
  bool has_message_body() const;
  private:
  bool _internal_has_message_body() const;
  public:
  void clear_message_body();
  const std::string& message_body() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message_body(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message_body();
  PROTOBUF_NODISCARD std::string* release_message_body();
  void set_allocated_message_body(std::string* message_body);
  private:
  const std::string& _internal_message_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_body(const std::string& value);
  std::string* _internal_mutable_message_body();
  public:

  // optional fixed64 sender_id = 2;
  bool has_sender_id() const;
  private:
  bool _internal_has_sender_id() const;
  public:
  void clear_sender_id();
  uint64_t sender_id() const;
  void set_sender_id(uint64_t value);
  private:
  uint64_t _internal_sender_id() const;
  void _internal_set_sender_id(uint64_t value);
  public:

  // optional uint32 context = 3;
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  uint32_t context() const;
  void set_context(uint32_t value);
  private:
  uint32_t _internal_context() const;
  void _internal_set_context(uint32_t value);
  public:

  // optional uint32 message_id = 4;
  bool has_message_id() const;
  private:
  bool _internal_has_message_id() const;
  public:
  void clear_message_id();
  uint32_t message_id() const;
  void set_message_id(uint32_t value);
  private:
  uint32_t _internal_message_id() const;
  void _internal_set_message_id(uint32_t value);
  public:

  // optional fixed64 job_id_source = 6;
  bool has_job_id_source() const;
  private:
  bool _internal_has_job_id_source() const;
  public:
  void clear_job_id_source();
  uint64_t job_id_source() const;
  void set_job_id_source(uint64_t value);
  private:
  uint64_t _internal_job_id_source() const;
  void _internal_set_job_id_source(uint64_t value);
  public:

  // optional fixed64 job_id_target = 7;
  bool has_job_id_target() const;
  private:
  bool _internal_has_job_id_target() const;
  public:
  void clear_job_id_target();
  uint64_t job_id_target() const;
  void set_job_id_target(uint64_t value);
  private:
  uint64_t _internal_job_id_target() const;
  void _internal_set_job_id_target(uint64_t value);
  public:

  // optional int32 sending_gc = 1 [default = -1];
  bool has_sending_gc() const;
  private:
  bool _internal_has_sending_gc() const;
  public:
  void clear_sending_gc();
  int32_t sending_gc() const;
  void set_sending_gc(int32_t value);
  private:
  int32_t _internal_sending_gc() const;
  void _internal_set_sending_gc(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCInternalTestMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_body_;
    uint64_t sender_id_;
    uint32_t context_;
    uint32_t message_id_;
    uint64_t job_id_source_;
    uint64_t job_id_target_;
    int32_t sending_gc_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCClientServerVersionsUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCClientServerVersionsUpdated) */ {
 public:
  inline CMsgGCToGCClientServerVersionsUpdated() : CMsgGCToGCClientServerVersionsUpdated(nullptr) {}
  ~CMsgGCToGCClientServerVersionsUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCClientServerVersionsUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCClientServerVersionsUpdated(const CMsgGCToGCClientServerVersionsUpdated& from);
  CMsgGCToGCClientServerVersionsUpdated(CMsgGCToGCClientServerVersionsUpdated&& from) noexcept
    : CMsgGCToGCClientServerVersionsUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCClientServerVersionsUpdated& operator=(const CMsgGCToGCClientServerVersionsUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCClientServerVersionsUpdated& operator=(CMsgGCToGCClientServerVersionsUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCClientServerVersionsUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCClientServerVersionsUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCClientServerVersionsUpdated*>(
               &_CMsgGCToGCClientServerVersionsUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(CMsgGCToGCClientServerVersionsUpdated& a, CMsgGCToGCClientServerVersionsUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCClientServerVersionsUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCClientServerVersionsUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCClientServerVersionsUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCClientServerVersionsUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCClientServerVersionsUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCClientServerVersionsUpdated& from) {
    CMsgGCToGCClientServerVersionsUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCClientServerVersionsUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCClientServerVersionsUpdated";
  }
  protected:
  explicit CMsgGCToGCClientServerVersionsUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientMinAllowedVersionFieldNumber = 1,
    kClientActiveVersionFieldNumber = 2,
    kServerActiveVersionFieldNumber = 3,
    kServerDeployedVersionFieldNumber = 4,
    kWhatChangedFieldNumber = 5,
  };
  // optional uint32 client_min_allowed_version = 1;
  bool has_client_min_allowed_version() const;
  private:
  bool _internal_has_client_min_allowed_version() const;
  public:
  void clear_client_min_allowed_version();
  uint32_t client_min_allowed_version() const;
  void set_client_min_allowed_version(uint32_t value);
  private:
  uint32_t _internal_client_min_allowed_version() const;
  void _internal_set_client_min_allowed_version(uint32_t value);
  public:

  // optional uint32 client_active_version = 2;
  bool has_client_active_version() const;
  private:
  bool _internal_has_client_active_version() const;
  public:
  void clear_client_active_version();
  uint32_t client_active_version() const;
  void set_client_active_version(uint32_t value);
  private:
  uint32_t _internal_client_active_version() const;
  void _internal_set_client_active_version(uint32_t value);
  public:

  // optional uint32 server_active_version = 3;
  bool has_server_active_version() const;
  private:
  bool _internal_has_server_active_version() const;
  public:
  void clear_server_active_version();
  uint32_t server_active_version() const;
  void set_server_active_version(uint32_t value);
  private:
  uint32_t _internal_server_active_version() const;
  void _internal_set_server_active_version(uint32_t value);
  public:

  // optional uint32 server_deployed_version = 4;
  bool has_server_deployed_version() const;
  private:
  bool _internal_has_server_deployed_version() const;
  public:
  void clear_server_deployed_version();
  uint32_t server_deployed_version() const;
  void set_server_deployed_version(uint32_t value);
  private:
  uint32_t _internal_server_deployed_version() const;
  void _internal_set_server_deployed_version(uint32_t value);
  public:

  // optional uint32 what_changed = 5;
  bool has_what_changed() const;
  private:
  bool _internal_has_what_changed() const;
  public:
  void clear_what_changed();
  uint32_t what_changed() const;
  void set_what_changed(uint32_t value);
  private:
  uint32_t _internal_what_changed() const;
  void _internal_set_what_changed(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCClientServerVersionsUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t client_min_allowed_version_;
    uint32_t client_active_version_;
    uint32_t server_active_version_;
    uint32_t server_deployed_version_;
    uint32_t what_changed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCBroadcastMessageFromSub final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCBroadcastMessageFromSub) */ {
 public:
  inline CMsgGCToGCBroadcastMessageFromSub() : CMsgGCToGCBroadcastMessageFromSub(nullptr) {}
  ~CMsgGCToGCBroadcastMessageFromSub() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCBroadcastMessageFromSub(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCBroadcastMessageFromSub(const CMsgGCToGCBroadcastMessageFromSub& from);
  CMsgGCToGCBroadcastMessageFromSub(CMsgGCToGCBroadcastMessageFromSub&& from) noexcept
    : CMsgGCToGCBroadcastMessageFromSub() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCBroadcastMessageFromSub& operator=(const CMsgGCToGCBroadcastMessageFromSub& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCBroadcastMessageFromSub& operator=(CMsgGCToGCBroadcastMessageFromSub&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCBroadcastMessageFromSub& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCBroadcastMessageFromSub* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCBroadcastMessageFromSub*>(
               &_CMsgGCToGCBroadcastMessageFromSub_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(CMsgGCToGCBroadcastMessageFromSub& a, CMsgGCToGCBroadcastMessageFromSub& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCBroadcastMessageFromSub* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCBroadcastMessageFromSub* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCBroadcastMessageFromSub* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCBroadcastMessageFromSub>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCBroadcastMessageFromSub& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCBroadcastMessageFromSub& from) {
    CMsgGCToGCBroadcastMessageFromSub::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCBroadcastMessageFromSub* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCBroadcastMessageFromSub";
  }
  protected:
  explicit CMsgGCToGCBroadcastMessageFromSub(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdListFieldNumber = 3,
    kSteamIdListFieldNumber = 4,
    kSerializedMsgFieldNumber = 2,
    kMsgIdFieldNumber = 1,
  };
  // repeated uint32 account_id_list = 3 [packed = true];
  int account_id_list_size() const;
  private:
  int _internal_account_id_list_size() const;
  public:
  void clear_account_id_list();
  private:
  uint32_t _internal_account_id_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_account_id_list() const;
  void _internal_add_account_id_list(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_account_id_list();
  public:
  uint32_t account_id_list(int index) const;
  void set_account_id_list(int index, uint32_t value);
  void add_account_id_list(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      account_id_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_account_id_list();

  // repeated fixed64 steam_id_list = 4 [packed = true];
  int steam_id_list_size() const;
  private:
  int _internal_steam_id_list_size() const;
  public:
  void clear_steam_id_list();
  private:
  uint64_t _internal_steam_id_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_steam_id_list() const;
  void _internal_add_steam_id_list(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_steam_id_list();
  public:
  uint64_t steam_id_list(int index) const;
  void set_steam_id_list(int index, uint64_t value);
  void add_steam_id_list(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      steam_id_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_steam_id_list();

  // optional bytes serialized_msg = 2;
  bool has_serialized_msg() const;
  private:
  bool _internal_has_serialized_msg() const;
  public:
  void clear_serialized_msg();
  const std::string& serialized_msg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_serialized_msg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_serialized_msg();
  PROTOBUF_NODISCARD std::string* release_serialized_msg();
  void set_allocated_serialized_msg(std::string* serialized_msg);
  private:
  const std::string& _internal_serialized_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serialized_msg(const std::string& value);
  std::string* _internal_mutable_serialized_msg();
  public:

  // optional uint32 msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  uint32_t msg_id() const;
  void set_msg_id(uint32_t value);
  private:
  uint32_t _internal_msg_id() const;
  void _internal_set_msg_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCBroadcastMessageFromSub)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > account_id_list_;
    mutable std::atomic<int> _account_id_list_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > steam_id_list_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialized_msg_;
    uint32_t msg_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCurrencyPricePoints_Currency final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientCurrencyPricePoints.Currency) */ {
 public:
  inline CMsgGCToClientCurrencyPricePoints_Currency() : CMsgGCToClientCurrencyPricePoints_Currency(nullptr) {}
  ~CMsgGCToClientCurrencyPricePoints_Currency() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientCurrencyPricePoints_Currency(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientCurrencyPricePoints_Currency(const CMsgGCToClientCurrencyPricePoints_Currency& from);
  CMsgGCToClientCurrencyPricePoints_Currency(CMsgGCToClientCurrencyPricePoints_Currency&& from) noexcept
    : CMsgGCToClientCurrencyPricePoints_Currency() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCurrencyPricePoints_Currency& operator=(const CMsgGCToClientCurrencyPricePoints_Currency& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientCurrencyPricePoints_Currency& operator=(CMsgGCToClientCurrencyPricePoints_Currency&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientCurrencyPricePoints_Currency& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientCurrencyPricePoints_Currency* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCurrencyPricePoints_Currency*>(
               &_CMsgGCToClientCurrencyPricePoints_Currency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(CMsgGCToClientCurrencyPricePoints_Currency& a, CMsgGCToClientCurrencyPricePoints_Currency& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientCurrencyPricePoints_Currency* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientCurrencyPricePoints_Currency* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientCurrencyPricePoints_Currency* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientCurrencyPricePoints_Currency>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientCurrencyPricePoints_Currency& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientCurrencyPricePoints_Currency& from) {
    CMsgGCToClientCurrencyPricePoints_Currency::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCurrencyPricePoints_Currency* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientCurrencyPricePoints.Currency";
  }
  protected:
  explicit CMsgGCToClientCurrencyPricePoints_Currency(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrencyPriceFieldNumber = 2,
    kCurrencyIdFieldNumber = 1,
  };
  // repeated uint64 currency_price = 2 [packed = true];
  int currency_price_size() const;
  private:
  int _internal_currency_price_size() const;
  public:
  void clear_currency_price();
  private:
  uint64_t _internal_currency_price(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_currency_price() const;
  void _internal_add_currency_price(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_currency_price();
  public:
  uint64_t currency_price(int index) const;
  void set_currency_price(int index, uint64_t value);
  void add_currency_price(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      currency_price() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_currency_price();

  // optional uint32 currency_id = 1;
  bool has_currency_id() const;
  private:
  bool _internal_has_currency_id() const;
  public:
  void clear_currency_id();
  uint32_t currency_id() const;
  void set_currency_id(uint32_t value);
  private:
  uint32_t _internal_currency_id() const;
  void _internal_set_currency_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCurrencyPricePoints.Currency)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > currency_price_;
    mutable std::atomic<int> _currency_price_cached_byte_size_;
    uint32_t currency_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCurrencyPricePoints final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientCurrencyPricePoints) */ {
 public:
  inline CMsgGCToClientCurrencyPricePoints() : CMsgGCToClientCurrencyPricePoints(nullptr) {}
  ~CMsgGCToClientCurrencyPricePoints() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientCurrencyPricePoints(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientCurrencyPricePoints(const CMsgGCToClientCurrencyPricePoints& from);
  CMsgGCToClientCurrencyPricePoints(CMsgGCToClientCurrencyPricePoints&& from) noexcept
    : CMsgGCToClientCurrencyPricePoints() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCurrencyPricePoints& operator=(const CMsgGCToClientCurrencyPricePoints& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientCurrencyPricePoints& operator=(CMsgGCToClientCurrencyPricePoints&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientCurrencyPricePoints& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientCurrencyPricePoints* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCurrencyPricePoints*>(
               &_CMsgGCToClientCurrencyPricePoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(CMsgGCToClientCurrencyPricePoints& a, CMsgGCToClientCurrencyPricePoints& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientCurrencyPricePoints* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientCurrencyPricePoints* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientCurrencyPricePoints* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientCurrencyPricePoints>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientCurrencyPricePoints& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientCurrencyPricePoints& from) {
    CMsgGCToClientCurrencyPricePoints::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCurrencyPricePoints* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientCurrencyPricePoints";
  }
  protected:
  explicit CMsgGCToClientCurrencyPricePoints(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientCurrencyPricePoints_Currency Currency;

  // accessors -------------------------------------------------------

  enum : int {
    kPriceKeyFieldNumber = 1,
    kCurrenciesFieldNumber = 2,
  };
  // repeated uint64 price_key = 1 [packed = true];
  int price_key_size() const;
  private:
  int _internal_price_key_size() const;
  public:
  void clear_price_key();
  private:
  uint64_t _internal_price_key(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_price_key() const;
  void _internal_add_price_key(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_price_key();
  public:
  uint64_t price_key(int index) const;
  void set_price_key(int index, uint64_t value);
  void add_price_key(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      price_key() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_price_key();

  // repeated .CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
  int currencies_size() const;
  private:
  int _internal_currencies_size() const;
  public:
  void clear_currencies();
  ::CMsgGCToClientCurrencyPricePoints_Currency* mutable_currencies(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientCurrencyPricePoints_Currency >*
      mutable_currencies();
  private:
  const ::CMsgGCToClientCurrencyPricePoints_Currency& _internal_currencies(int index) const;
  ::CMsgGCToClientCurrencyPricePoints_Currency* _internal_add_currencies();
  public:
  const ::CMsgGCToClientCurrencyPricePoints_Currency& currencies(int index) const;
  ::CMsgGCToClientCurrencyPricePoints_Currency* add_currencies();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientCurrencyPricePoints_Currency >&
      currencies() const;

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCurrencyPricePoints)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > price_key_;
    mutable std::atomic<int> _price_key_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientCurrencyPricePoints_Currency > currencies_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgBannedWordList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBannedWordList) */ {
 public:
  inline CMsgBannedWordList() : CMsgBannedWordList(nullptr) {}
  ~CMsgBannedWordList() override;
  explicit PROTOBUF_CONSTEXPR CMsgBannedWordList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBannedWordList(const CMsgBannedWordList& from);
  CMsgBannedWordList(CMsgBannedWordList&& from) noexcept
    : CMsgBannedWordList() {
    *this = ::std::move(from);
  }

  inline CMsgBannedWordList& operator=(const CMsgBannedWordList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBannedWordList& operator=(CMsgBannedWordList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgBannedWordList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBannedWordList* internal_default_instance() {
    return reinterpret_cast<const CMsgBannedWordList*>(
               &_CMsgBannedWordList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  friend void swap(CMsgBannedWordList& a, CMsgBannedWordList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBannedWordList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBannedWordList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgBannedWordList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgBannedWordList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgBannedWordList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgBannedWordList& from) {
    CMsgBannedWordList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBannedWordList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBannedWordList";
  }
  protected:
  explicit CMsgBannedWordList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBannedWordsFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // repeated string banned_words = 2;
  int banned_words_size() const;
  private:
  int _internal_banned_words_size() const;
  public:
  void clear_banned_words();
  const std::string& banned_words(int index) const;
  std::string* mutable_banned_words(int index);
  void set_banned_words(int index, const std::string& value);
  void set_banned_words(int index, std::string&& value);
  void set_banned_words(int index, const char* value);
  void set_banned_words(int index, const char* value, size_t size);
  std::string* add_banned_words();
  void add_banned_words(const std::string& value);
  void add_banned_words(std::string&& value);
  void add_banned_words(const char* value);
  void add_banned_words(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& banned_words() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_banned_words();
  private:
  const std::string& _internal_banned_words(int index) const;
  std::string* _internal_add_banned_words();
  public:

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBannedWordList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> banned_words_;
    uint32_t version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCFlushSteamInventoryCache_Key final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCFlushSteamInventoryCache.Key) */ {
 public:
  inline CMsgGCToGCFlushSteamInventoryCache_Key() : CMsgGCToGCFlushSteamInventoryCache_Key(nullptr) {}
  ~CMsgGCToGCFlushSteamInventoryCache_Key() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCFlushSteamInventoryCache_Key(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCFlushSteamInventoryCache_Key(const CMsgGCToGCFlushSteamInventoryCache_Key& from);
  CMsgGCToGCFlushSteamInventoryCache_Key(CMsgGCToGCFlushSteamInventoryCache_Key&& from) noexcept
    : CMsgGCToGCFlushSteamInventoryCache_Key() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCFlushSteamInventoryCache_Key& operator=(const CMsgGCToGCFlushSteamInventoryCache_Key& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCFlushSteamInventoryCache_Key& operator=(CMsgGCToGCFlushSteamInventoryCache_Key&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCFlushSteamInventoryCache_Key& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCFlushSteamInventoryCache_Key* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCFlushSteamInventoryCache_Key*>(
               &_CMsgGCToGCFlushSteamInventoryCache_Key_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  friend void swap(CMsgGCToGCFlushSteamInventoryCache_Key& a, CMsgGCToGCFlushSteamInventoryCache_Key& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCFlushSteamInventoryCache_Key* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCFlushSteamInventoryCache_Key* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCFlushSteamInventoryCache_Key* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCFlushSteamInventoryCache_Key>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCFlushSteamInventoryCache_Key& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCFlushSteamInventoryCache_Key& from) {
    CMsgGCToGCFlushSteamInventoryCache_Key::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCFlushSteamInventoryCache_Key* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCFlushSteamInventoryCache.Key";
  }
  protected:
  explicit CMsgGCToGCFlushSteamInventoryCache_Key(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kContextidFieldNumber = 2,
  };
  // optional uint64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional uint64 contextid = 2;
  bool has_contextid() const;
  private:
  bool _internal_has_contextid() const;
  public:
  void clear_contextid();
  uint64_t contextid() const;
  void set_contextid(uint64_t value);
  private:
  uint64_t _internal_contextid() const;
  void _internal_set_contextid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCFlushSteamInventoryCache.Key)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t steamid_;
    uint64_t contextid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCFlushSteamInventoryCache final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCFlushSteamInventoryCache) */ {
 public:
  inline CMsgGCToGCFlushSteamInventoryCache() : CMsgGCToGCFlushSteamInventoryCache(nullptr) {}
  ~CMsgGCToGCFlushSteamInventoryCache() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCFlushSteamInventoryCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCFlushSteamInventoryCache(const CMsgGCToGCFlushSteamInventoryCache& from);
  CMsgGCToGCFlushSteamInventoryCache(CMsgGCToGCFlushSteamInventoryCache&& from) noexcept
    : CMsgGCToGCFlushSteamInventoryCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCFlushSteamInventoryCache& operator=(const CMsgGCToGCFlushSteamInventoryCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCFlushSteamInventoryCache& operator=(CMsgGCToGCFlushSteamInventoryCache&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCFlushSteamInventoryCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCFlushSteamInventoryCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCFlushSteamInventoryCache*>(
               &_CMsgGCToGCFlushSteamInventoryCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  friend void swap(CMsgGCToGCFlushSteamInventoryCache& a, CMsgGCToGCFlushSteamInventoryCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCFlushSteamInventoryCache* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCFlushSteamInventoryCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCFlushSteamInventoryCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCFlushSteamInventoryCache>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCFlushSteamInventoryCache& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCFlushSteamInventoryCache& from) {
    CMsgGCToGCFlushSteamInventoryCache::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCFlushSteamInventoryCache* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCFlushSteamInventoryCache";
  }
  protected:
  explicit CMsgGCToGCFlushSteamInventoryCache(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToGCFlushSteamInventoryCache_Key Key;

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 1,
  };
  // repeated .CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
  int keys_size() const;
  private:
  int _internal_keys_size() const;
  public:
  void clear_keys();
  ::CMsgGCToGCFlushSteamInventoryCache_Key* mutable_keys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCFlushSteamInventoryCache_Key >*
      mutable_keys();
  private:
  const ::CMsgGCToGCFlushSteamInventoryCache_Key& _internal_keys(int index) const;
  ::CMsgGCToGCFlushSteamInventoryCache_Key* _internal_add_keys();
  public:
  const ::CMsgGCToGCFlushSteamInventoryCache_Key& keys(int index) const;
  ::CMsgGCToGCFlushSteamInventoryCache_Key* add_keys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCFlushSteamInventoryCache_Key >&
      keys() const;

  // @@protoc_insertion_point(class_scope:CMsgGCToGCFlushSteamInventoryCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCFlushSteamInventoryCache_Key > keys_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCUpdateSubscriptionItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCUpdateSubscriptionItems) */ {
 public:
  inline CMsgGCToGCUpdateSubscriptionItems() : CMsgGCToGCUpdateSubscriptionItems(nullptr) {}
  ~CMsgGCToGCUpdateSubscriptionItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCUpdateSubscriptionItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCUpdateSubscriptionItems(const CMsgGCToGCUpdateSubscriptionItems& from);
  CMsgGCToGCUpdateSubscriptionItems(CMsgGCToGCUpdateSubscriptionItems&& from) noexcept
    : CMsgGCToGCUpdateSubscriptionItems() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCUpdateSubscriptionItems& operator=(const CMsgGCToGCUpdateSubscriptionItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCUpdateSubscriptionItems& operator=(CMsgGCToGCUpdateSubscriptionItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCUpdateSubscriptionItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCUpdateSubscriptionItems* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCUpdateSubscriptionItems*>(
               &_CMsgGCToGCUpdateSubscriptionItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  friend void swap(CMsgGCToGCUpdateSubscriptionItems& a, CMsgGCToGCUpdateSubscriptionItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCUpdateSubscriptionItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCUpdateSubscriptionItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCUpdateSubscriptionItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCUpdateSubscriptionItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCUpdateSubscriptionItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCUpdateSubscriptionItems& from) {
    CMsgGCToGCUpdateSubscriptionItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCUpdateSubscriptionItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCUpdateSubscriptionItems";
  }
  protected:
  explicit CMsgGCToGCUpdateSubscriptionItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kAlwaysNotifyFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional bool always_notify = 2;
  bool has_always_notify() const;
  private:
  bool _internal_has_always_notify() const;
  public:
  void clear_always_notify();
  bool always_notify() const;
  void set_always_notify(bool value);
  private:
  bool _internal_always_notify() const;
  void _internal_set_always_notify(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCUpdateSubscriptionItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    bool always_notify_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCSelfPing final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSelfPing) */ {
 public:
  inline CMsgGCToGCSelfPing() : CMsgGCToGCSelfPing(nullptr) {}
  ~CMsgGCToGCSelfPing() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCSelfPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCSelfPing(const CMsgGCToGCSelfPing& from);
  CMsgGCToGCSelfPing(CMsgGCToGCSelfPing&& from) noexcept
    : CMsgGCToGCSelfPing() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSelfPing& operator=(const CMsgGCToGCSelfPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCSelfPing& operator=(CMsgGCToGCSelfPing&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCSelfPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCSelfPing* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSelfPing*>(
               &_CMsgGCToGCSelfPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  friend void swap(CMsgGCToGCSelfPing& a, CMsgGCToGCSelfPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCSelfPing* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCSelfPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCSelfPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCSelfPing>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCSelfPing& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCSelfPing& from) {
    CMsgGCToGCSelfPing::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCSelfPing* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCSelfPing";
  }
  protected:
  explicit CMsgGCToGCSelfPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSampleIdFieldNumber = 1,
  };
  // optional uint32 sample_id = 1;
  bool has_sample_id() const;
  private:
  bool _internal_has_sample_id() const;
  public:
  void clear_sample_id();
  uint32_t sample_id() const;
  void set_sample_id(uint32_t value);
  private:
  uint32_t _internal_sample_id() const;
  void _internal_set_sample_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSelfPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t sample_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGetInfuxIntervalStats final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgGCToGCGetInfuxIntervalStats) */ {
 public:
  inline CMsgGCToGCGetInfuxIntervalStats() : CMsgGCToGCGetInfuxIntervalStats(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGetInfuxIntervalStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGetInfuxIntervalStats(const CMsgGCToGCGetInfuxIntervalStats& from);
  CMsgGCToGCGetInfuxIntervalStats(CMsgGCToGCGetInfuxIntervalStats&& from) noexcept
    : CMsgGCToGCGetInfuxIntervalStats() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGetInfuxIntervalStats& operator=(const CMsgGCToGCGetInfuxIntervalStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGetInfuxIntervalStats& operator=(CMsgGCToGCGetInfuxIntervalStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGetInfuxIntervalStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGetInfuxIntervalStats* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGetInfuxIntervalStats*>(
               &_CMsgGCToGCGetInfuxIntervalStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  friend void swap(CMsgGCToGCGetInfuxIntervalStats& a, CMsgGCToGCGetInfuxIntervalStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGetInfuxIntervalStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGetInfuxIntervalStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGetInfuxIntervalStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGetInfuxIntervalStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgGCToGCGetInfuxIntervalStats& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgGCToGCGetInfuxIntervalStats& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGetInfuxIntervalStats";
  }
  protected:
  explicit CMsgGCToGCGetInfuxIntervalStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGetInfuxIntervalStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCGetInfuxIntervalStatsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCGetInfuxIntervalStatsResponse) */ {
 public:
  inline CMsgGCToGCGetInfuxIntervalStatsResponse() : CMsgGCToGCGetInfuxIntervalStatsResponse(nullptr) {}
  ~CMsgGCToGCGetInfuxIntervalStatsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCGetInfuxIntervalStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCGetInfuxIntervalStatsResponse(const CMsgGCToGCGetInfuxIntervalStatsResponse& from);
  CMsgGCToGCGetInfuxIntervalStatsResponse(CMsgGCToGCGetInfuxIntervalStatsResponse&& from) noexcept
    : CMsgGCToGCGetInfuxIntervalStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCGetInfuxIntervalStatsResponse& operator=(const CMsgGCToGCGetInfuxIntervalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCGetInfuxIntervalStatsResponse& operator=(CMsgGCToGCGetInfuxIntervalStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCGetInfuxIntervalStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCGetInfuxIntervalStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCGetInfuxIntervalStatsResponse*>(
               &_CMsgGCToGCGetInfuxIntervalStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  friend void swap(CMsgGCToGCGetInfuxIntervalStatsResponse& a, CMsgGCToGCGetInfuxIntervalStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCGetInfuxIntervalStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCGetInfuxIntervalStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCGetInfuxIntervalStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCGetInfuxIntervalStatsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCGetInfuxIntervalStatsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCGetInfuxIntervalStatsResponse& from) {
    CMsgGCToGCGetInfuxIntervalStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCGetInfuxIntervalStatsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCGetInfuxIntervalStatsResponse";
  }
  protected:
  explicit CMsgGCToGCGetInfuxIntervalStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdsFieldNumber = 1,
    kStatTotalFieldNumber = 2,
    kStatSamplesFieldNumber = 3,
    kStatMaxFieldNumber = 4,
    kSampleDurationMsFieldNumber = 5,
  };
  // repeated fixed32 stat_ids = 1 [packed = true];
  int stat_ids_size() const;
  private:
  int _internal_stat_ids_size() const;
  public:
  void clear_stat_ids();
  private:
  uint32_t _internal_stat_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_stat_ids() const;
  void _internal_add_stat_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_stat_ids();
  public:
  uint32_t stat_ids(int index) const;
  void set_stat_ids(int index, uint32_t value);
  void add_stat_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      stat_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_stat_ids();

  // repeated uint64 stat_total = 2 [packed = true];
  int stat_total_size() const;
  private:
  int _internal_stat_total_size() const;
  public:
  void clear_stat_total();
  private:
  uint64_t _internal_stat_total(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_stat_total() const;
  void _internal_add_stat_total(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_stat_total();
  public:
  uint64_t stat_total(int index) const;
  void set_stat_total(int index, uint64_t value);
  void add_stat_total(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      stat_total() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_stat_total();

  // repeated uint32 stat_samples = 3 [packed = true];
  int stat_samples_size() const;
  private:
  int _internal_stat_samples_size() const;
  public:
  void clear_stat_samples();
  private:
  uint32_t _internal_stat_samples(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_stat_samples() const;
  void _internal_add_stat_samples(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_stat_samples();
  public:
  uint32_t stat_samples(int index) const;
  void set_stat_samples(int index, uint32_t value);
  void add_stat_samples(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      stat_samples() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_stat_samples();

  // repeated uint32 stat_max = 4 [packed = true];
  int stat_max_size() const;
  private:
  int _internal_stat_max_size() const;
  public:
  void clear_stat_max();
  private:
  uint32_t _internal_stat_max(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_stat_max() const;
  void _internal_add_stat_max(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_stat_max();
  public:
  uint32_t stat_max(int index) const;
  void set_stat_max(int index, uint32_t value);
  void add_stat_max(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      stat_max() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_stat_max();

  // optional uint32 sample_duration_ms = 5;
  bool has_sample_duration_ms() const;
  private:
  bool _internal_has_sample_duration_ms() const;
  public:
  void clear_sample_duration_ms();
  uint32_t sample_duration_ms() const;
  void set_sample_duration_ms(uint32_t value);
  private:
  uint32_t _internal_sample_duration_ms() const;
  void _internal_set_sample_duration_ms(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCGetInfuxIntervalStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > stat_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > stat_total_;
    mutable std::atomic<int> _stat_total_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > stat_samples_;
    mutable std::atomic<int> _stat_samples_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > stat_max_;
    mutable std::atomic<int> _stat_max_cached_byte_size_;
    uint32_t sample_duration_ms_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCPurchaseSucceeded final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgGCToGCPurchaseSucceeded) */ {
 public:
  inline CMsgGCToGCPurchaseSucceeded() : CMsgGCToGCPurchaseSucceeded(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCPurchaseSucceeded(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCPurchaseSucceeded(const CMsgGCToGCPurchaseSucceeded& from);
  CMsgGCToGCPurchaseSucceeded(CMsgGCToGCPurchaseSucceeded&& from) noexcept
    : CMsgGCToGCPurchaseSucceeded() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCPurchaseSucceeded& operator=(const CMsgGCToGCPurchaseSucceeded& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCPurchaseSucceeded& operator=(CMsgGCToGCPurchaseSucceeded&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCPurchaseSucceeded& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCPurchaseSucceeded* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCPurchaseSucceeded*>(
               &_CMsgGCToGCPurchaseSucceeded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  friend void swap(CMsgGCToGCPurchaseSucceeded& a, CMsgGCToGCPurchaseSucceeded& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCPurchaseSucceeded* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCPurchaseSucceeded* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCPurchaseSucceeded* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCPurchaseSucceeded>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgGCToGCPurchaseSucceeded& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgGCToGCPurchaseSucceeded& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCPurchaseSucceeded";
  }
  protected:
  explicit CMsgGCToGCPurchaseSucceeded(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCPurchaseSucceeded)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLimitedItemPurchaseQuantity final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetLimitedItemPurchaseQuantity) */ {
 public:
  inline CMsgClientToGCGetLimitedItemPurchaseQuantity() : CMsgClientToGCGetLimitedItemPurchaseQuantity(nullptr) {}
  ~CMsgClientToGCGetLimitedItemPurchaseQuantity() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetLimitedItemPurchaseQuantity(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetLimitedItemPurchaseQuantity(const CMsgClientToGCGetLimitedItemPurchaseQuantity& from);
  CMsgClientToGCGetLimitedItemPurchaseQuantity(CMsgClientToGCGetLimitedItemPurchaseQuantity&& from) noexcept
    : CMsgClientToGCGetLimitedItemPurchaseQuantity() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetLimitedItemPurchaseQuantity& operator=(const CMsgClientToGCGetLimitedItemPurchaseQuantity& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetLimitedItemPurchaseQuantity& operator=(CMsgClientToGCGetLimitedItemPurchaseQuantity&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetLimitedItemPurchaseQuantity& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetLimitedItemPurchaseQuantity* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLimitedItemPurchaseQuantity*>(
               &_CMsgClientToGCGetLimitedItemPurchaseQuantity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  friend void swap(CMsgClientToGCGetLimitedItemPurchaseQuantity& a, CMsgClientToGCGetLimitedItemPurchaseQuantity& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetLimitedItemPurchaseQuantity* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetLimitedItemPurchaseQuantity* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLimitedItemPurchaseQuantity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetLimitedItemPurchaseQuantity>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetLimitedItemPurchaseQuantity& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetLimitedItemPurchaseQuantity& from) {
    CMsgClientToGCGetLimitedItemPurchaseQuantity::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetLimitedItemPurchaseQuantity* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetLimitedItemPurchaseQuantity";
  }
  protected:
  explicit CMsgClientToGCGetLimitedItemPurchaseQuantity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefFieldNumber = 1,
  };
  // optional uint32 item_def = 1;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  uint32_t item_def() const;
  void set_item_def(uint32_t value);
  private:
  uint32_t _internal_item_def() const;
  void _internal_set_item_def(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLimitedItemPurchaseQuantity)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t item_def_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLimitedItemPurchaseQuantityResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) */ {
 public:
  inline CMsgClientToGCGetLimitedItemPurchaseQuantityResponse() : CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(nullptr) {}
  ~CMsgClientToGCGetLimitedItemPurchaseQuantityResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& from);
  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse&& from) noexcept
    : CMsgClientToGCGetLimitedItemPurchaseQuantityResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& operator=(const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& operator=(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse*>(
               &_CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  friend void swap(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& a, CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLimitedItemPurchaseQuantityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetLimitedItemPurchaseQuantityResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetLimitedItemPurchaseQuantityResponse& from) {
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetLimitedItemPurchaseQuantityResponse";
  }
  protected:
  explicit CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidItemDef =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eInvalidItemDef;
  static constexpr EResponse k_eItemDefNotLimited =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_k_eItemDefNotLimited;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kQuantityPurchasedFieldNumber = 2,
  };
  // optional .CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse result() const;
  void set_result(::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse value);
  private:
  ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse value);
  public:

  // optional uint32 quantity_purchased = 2;
  bool has_quantity_purchased() const;
  private:
  bool _internal_has_quantity_purchased() const;
  public:
  void clear_quantity_purchased();
  uint32_t quantity_purchased() const;
  void set_quantity_purchased(uint32_t value);
  private:
  uint32_t _internal_quantity_purchased() const;
  void _internal_set_quantity_purchased(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLimitedItemPurchaseQuantityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    uint32_t quantity_purchased_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCUpdateWelcomeMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCUpdateWelcomeMsg) */ {
 public:
  inline CMsgGCToGCUpdateWelcomeMsg() : CMsgGCToGCUpdateWelcomeMsg(nullptr) {}
  ~CMsgGCToGCUpdateWelcomeMsg() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToGCUpdateWelcomeMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCUpdateWelcomeMsg(const CMsgGCToGCUpdateWelcomeMsg& from);
  CMsgGCToGCUpdateWelcomeMsg(CMsgGCToGCUpdateWelcomeMsg&& from) noexcept
    : CMsgGCToGCUpdateWelcomeMsg() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCUpdateWelcomeMsg& operator=(const CMsgGCToGCUpdateWelcomeMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCUpdateWelcomeMsg& operator=(CMsgGCToGCUpdateWelcomeMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToGCUpdateWelcomeMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCUpdateWelcomeMsg* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCUpdateWelcomeMsg*>(
               &_CMsgGCToGCUpdateWelcomeMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  friend void swap(CMsgGCToGCUpdateWelcomeMsg& a, CMsgGCToGCUpdateWelcomeMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCUpdateWelcomeMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCUpdateWelcomeMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToGCUpdateWelcomeMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToGCUpdateWelcomeMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToGCUpdateWelcomeMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToGCUpdateWelcomeMsg& from) {
    CMsgGCToGCUpdateWelcomeMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCUpdateWelcomeMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCUpdateWelcomeMsg";
  }
  protected:
  explicit CMsgGCToGCUpdateWelcomeMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewMsgFieldNumber = 2,
    kServerFieldNumber = 1,
    kBroadcastFieldNumber = 3,
  };
  // optional .CExtraMsgBlock new_msg = 2;
  bool has_new_msg() const;
  private:
  bool _internal_has_new_msg() const;
  public:
  void clear_new_msg();
  const ::CExtraMsgBlock& new_msg() const;
  PROTOBUF_NODISCARD ::CExtraMsgBlock* release_new_msg();
  ::CExtraMsgBlock* mutable_new_msg();
  void set_allocated_new_msg(::CExtraMsgBlock* new_msg);
  private:
  const ::CExtraMsgBlock& _internal_new_msg() const;
  ::CExtraMsgBlock* _internal_mutable_new_msg();
  public:
  void unsafe_arena_set_allocated_new_msg(
      ::CExtraMsgBlock* new_msg);
  ::CExtraMsgBlock* unsafe_arena_release_new_msg();

  // optional bool server = 1;
  bool has_server() const;
  private:
  bool _internal_has_server() const;
  public:
  void clear_server();
  bool server() const;
  void set_server(bool value);
  private:
  bool _internal_server() const;
  void _internal_set_server(bool value);
  public:

  // optional bool broadcast = 3;
  bool has_broadcast() const;
  private:
  bool _internal_has_broadcast() const;
  public:
  void clear_broadcast();
  bool broadcast() const;
  void set_broadcast(bool value);
  private:
  bool _internal_broadcast() const;
  void _internal_set_broadcast(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCUpdateWelcomeMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CExtraMsgBlock* new_msg_;
    bool server_;
    bool broadcast_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgApplyAutograph

// optional uint64 autograph_item_id = 1;
inline bool CMsgApplyAutograph::_internal_has_autograph_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgApplyAutograph::has_autograph_item_id() const {
  return _internal_has_autograph_item_id();
}
inline void CMsgApplyAutograph::clear_autograph_item_id() {
  _impl_.autograph_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgApplyAutograph::_internal_autograph_item_id() const {
  return _impl_.autograph_item_id_;
}
inline uint64_t CMsgApplyAutograph::autograph_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyAutograph.autograph_item_id)
  return _internal_autograph_item_id();
}
inline void CMsgApplyAutograph::_internal_set_autograph_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.autograph_item_id_ = value;
}
inline void CMsgApplyAutograph::set_autograph_item_id(uint64_t value) {
  _internal_set_autograph_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyAutograph.autograph_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgApplyAutograph::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgApplyAutograph::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgApplyAutograph::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgApplyAutograph::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgApplyAutograph::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgApplyAutograph.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgApplyAutograph::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_item_id_ = value;
}
inline void CMsgApplyAutograph::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgApplyAutograph.item_item_id)
}

// -------------------------------------------------------------------

// CMsgAdjustItemEquippedState

// optional uint64 item_id = 1;
inline bool CMsgAdjustItemEquippedState::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgAdjustItemEquippedState::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgAdjustItemEquippedState::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgAdjustItemEquippedState::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.item_id)
  return _internal_item_id();
}
inline void CMsgAdjustItemEquippedState::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgAdjustItemEquippedState::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.item_id)
}

// optional uint32 new_class = 2;
inline bool CMsgAdjustItemEquippedState::_internal_has_new_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_new_class() const {
  return _internal_has_new_class();
}
inline void CMsgAdjustItemEquippedState::clear_new_class() {
  _impl_.new_class_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgAdjustItemEquippedState::_internal_new_class() const {
  return _impl_.new_class_;
}
inline uint32_t CMsgAdjustItemEquippedState::new_class() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.new_class)
  return _internal_new_class();
}
inline void CMsgAdjustItemEquippedState::_internal_set_new_class(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.new_class_ = value;
}
inline void CMsgAdjustItemEquippedState::set_new_class(uint32_t value) {
  _internal_set_new_class(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.new_class)
}

// optional uint32 new_slot = 3;
inline bool CMsgAdjustItemEquippedState::_internal_has_new_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_new_slot() const {
  return _internal_has_new_slot();
}
inline void CMsgAdjustItemEquippedState::clear_new_slot() {
  _impl_.new_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgAdjustItemEquippedState::_internal_new_slot() const {
  return _impl_.new_slot_;
}
inline uint32_t CMsgAdjustItemEquippedState::new_slot() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.new_slot)
  return _internal_new_slot();
}
inline void CMsgAdjustItemEquippedState::_internal_set_new_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.new_slot_ = value;
}
inline void CMsgAdjustItemEquippedState::set_new_slot(uint32_t value) {
  _internal_set_new_slot(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.new_slot)
}

// optional uint32 style_index = 4 [default = 255];
inline bool CMsgAdjustItemEquippedState::_internal_has_style_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgAdjustItemEquippedState::has_style_index() const {
  return _internal_has_style_index();
}
inline void CMsgAdjustItemEquippedState::clear_style_index() {
  _impl_.style_index_ = 255u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgAdjustItemEquippedState::_internal_style_index() const {
  return _impl_.style_index_;
}
inline uint32_t CMsgAdjustItemEquippedState::style_index() const {
  // @@protoc_insertion_point(field_get:CMsgAdjustItemEquippedState.style_index)
  return _internal_style_index();
}
inline void CMsgAdjustItemEquippedState::_internal_set_style_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.style_index_ = value;
}
inline void CMsgAdjustItemEquippedState::set_style_index(uint32_t value) {
  _internal_set_style_index(value);
  // @@protoc_insertion_point(field_set:CMsgAdjustItemEquippedState.style_index)
}

// -------------------------------------------------------------------

// CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment

// optional uint32 event_type = 1;
inline bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_has_event_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::has_event_type() const {
  return _internal_has_event_type();
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_event_type() {
  _impl_.event_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_event_type() const {
  return _impl_.event_type_;
}
inline uint32_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.event_type)
  return _internal_event_type();
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_set_event_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.event_type_ = value;
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_event_type(uint32_t value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.event_type)
}

// optional uint64 item_id = 2;
inline bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.item_id)
  return _internal_item_id();
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.item_id)
}

// optional uint32 adjustment = 3;
inline bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_has_adjustment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::has_adjustment() const {
  return _internal_has_adjustment();
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_adjustment() {
  _impl_.adjustment_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_adjustment() const {
  return _impl_.adjustment_;
}
inline uint32_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::adjustment() const {
  // @@protoc_insertion_point(field_get:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.adjustment)
  return _internal_adjustment();
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_internal_set_adjustment(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.adjustment_ = value;
}
inline void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_adjustment(uint32_t value) {
  _internal_set_adjustment(value);
  // @@protoc_insertion_point(field_set:CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.adjustment)
}

// -------------------------------------------------------------------

// CMsgEconPlayerStrangeCountAdjustment

// optional uint32 account_id = 1;
inline bool CMsgEconPlayerStrangeCountAdjustment::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgEconPlayerStrangeCountAdjustment::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgEconPlayerStrangeCountAdjustment::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgEconPlayerStrangeCountAdjustment::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgEconPlayerStrangeCountAdjustment::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgEconPlayerStrangeCountAdjustment.account_id)
  return _internal_account_id();
}
inline void CMsgEconPlayerStrangeCountAdjustment::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgEconPlayerStrangeCountAdjustment::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgEconPlayerStrangeCountAdjustment.account_id)
}

// repeated .CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
inline int CMsgEconPlayerStrangeCountAdjustment::_internal_strange_count_adjustments_size() const {
  return _impl_.strange_count_adjustments_.size();
}
inline int CMsgEconPlayerStrangeCountAdjustment::strange_count_adjustments_size() const {
  return _internal_strange_count_adjustments_size();
}
inline void CMsgEconPlayerStrangeCountAdjustment::clear_strange_count_adjustments() {
  _impl_.strange_count_adjustments_.Clear();
}
inline ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::mutable_strange_count_adjustments(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return _impl_.strange_count_adjustments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >*
CMsgEconPlayerStrangeCountAdjustment::mutable_strange_count_adjustments() {
  // @@protoc_insertion_point(field_mutable_list:CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return &_impl_.strange_count_adjustments_;
}
inline const ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::_internal_strange_count_adjustments(int index) const {
  return _impl_.strange_count_adjustments_.Get(index);
}
inline const ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::strange_count_adjustments(int index) const {
  // @@protoc_insertion_point(field_get:CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return _internal_strange_count_adjustments(index);
}
inline ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::_internal_add_strange_count_adjustments() {
  return _impl_.strange_count_adjustments_.Add();
}
inline ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::add_strange_count_adjustments() {
  ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* _add = _internal_add_strange_count_adjustments();
  // @@protoc_insertion_point(field_add:CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >&
CMsgEconPlayerStrangeCountAdjustment::strange_count_adjustments() const {
  // @@protoc_insertion_point(field_list:CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return _impl_.strange_count_adjustments_;
}

// optional bool turbo_mode = 3;
inline bool CMsgEconPlayerStrangeCountAdjustment::_internal_has_turbo_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgEconPlayerStrangeCountAdjustment::has_turbo_mode() const {
  return _internal_has_turbo_mode();
}
inline void CMsgEconPlayerStrangeCountAdjustment::clear_turbo_mode() {
  _impl_.turbo_mode_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgEconPlayerStrangeCountAdjustment::_internal_turbo_mode() const {
  return _impl_.turbo_mode_;
}
inline bool CMsgEconPlayerStrangeCountAdjustment::turbo_mode() const {
  // @@protoc_insertion_point(field_get:CMsgEconPlayerStrangeCountAdjustment.turbo_mode)
  return _internal_turbo_mode();
}
inline void CMsgEconPlayerStrangeCountAdjustment::_internal_set_turbo_mode(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.turbo_mode_ = value;
}
inline void CMsgEconPlayerStrangeCountAdjustment::set_turbo_mode(bool value) {
  _internal_set_turbo_mode(value);
  // @@protoc_insertion_point(field_set:CMsgEconPlayerStrangeCountAdjustment.turbo_mode)
}

// -------------------------------------------------------------------

// CMsgCraftingResponse

// repeated uint64 item_ids = 1;
inline int CMsgCraftingResponse::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgCraftingResponse::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgCraftingResponse::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgCraftingResponse::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgCraftingResponse::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCraftingResponse.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgCraftingResponse::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgCraftingResponse.item_ids)
}
inline void CMsgCraftingResponse::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgCraftingResponse::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgCraftingResponse.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgCraftingResponse::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgCraftingResponse::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgCraftingResponse.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgCraftingResponse::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgCraftingResponse::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCraftingResponse.item_ids)
  return _internal_mutable_item_ids();
}

// -------------------------------------------------------------------

// CMsgGCRequestStoreSalesData

// optional uint32 version = 1;
inline bool CMsgGCRequestStoreSalesData::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesData::has_version() const {
  return _internal_has_version();
}
inline void CMsgGCRequestStoreSalesData::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCRequestStoreSalesData::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgGCRequestStoreSalesData::version() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesData.version)
  return _internal_version();
}
inline void CMsgGCRequestStoreSalesData::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.version_ = value;
}
inline void CMsgGCRequestStoreSalesData::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesData.version)
}

// optional uint32 currency = 2;
inline bool CMsgGCRequestStoreSalesData::_internal_has_currency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesData::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgGCRequestStoreSalesData::clear_currency() {
  _impl_.currency_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCRequestStoreSalesData::_internal_currency() const {
  return _impl_.currency_;
}
inline uint32_t CMsgGCRequestStoreSalesData::currency() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesData.currency)
  return _internal_currency();
}
inline void CMsgGCRequestStoreSalesData::_internal_set_currency(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.currency_ = value;
}
inline void CMsgGCRequestStoreSalesData::set_currency(uint32_t value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesData.currency)
}

// -------------------------------------------------------------------

// CMsgGCRequestStoreSalesDataResponse_Price

// optional uint32 item_def = 1;
inline bool CMsgGCRequestStoreSalesDataResponse_Price::_internal_has_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesDataResponse_Price::has_item_def() const {
  return _internal_has_item_def();
}
inline void CMsgGCRequestStoreSalesDataResponse_Price::clear_item_def() {
  _impl_.item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse_Price::_internal_item_def() const {
  return _impl_.item_def_;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse_Price::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataResponse.Price.item_def)
  return _internal_item_def();
}
inline void CMsgGCRequestStoreSalesDataResponse_Price::_internal_set_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_ = value;
}
inline void CMsgGCRequestStoreSalesDataResponse_Price::set_item_def(uint32_t value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesDataResponse.Price.item_def)
}

// optional uint32 price = 2;
inline bool CMsgGCRequestStoreSalesDataResponse_Price::_internal_has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesDataResponse_Price::has_price() const {
  return _internal_has_price();
}
inline void CMsgGCRequestStoreSalesDataResponse_Price::clear_price() {
  _impl_.price_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse_Price::_internal_price() const {
  return _impl_.price_;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse_Price::price() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataResponse.Price.price)
  return _internal_price();
}
inline void CMsgGCRequestStoreSalesDataResponse_Price::_internal_set_price(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.price_ = value;
}
inline void CMsgGCRequestStoreSalesDataResponse_Price::set_price(uint32_t value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesDataResponse.Price.price)
}

// -------------------------------------------------------------------

// CMsgGCRequestStoreSalesDataResponse

// repeated .CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
inline int CMsgGCRequestStoreSalesDataResponse::_internal_sale_price_size() const {
  return _impl_.sale_price_.size();
}
inline int CMsgGCRequestStoreSalesDataResponse::sale_price_size() const {
  return _internal_sale_price_size();
}
inline void CMsgGCRequestStoreSalesDataResponse::clear_sale_price() {
  _impl_.sale_price_.Clear();
}
inline ::CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse::mutable_sale_price(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCRequestStoreSalesDataResponse.sale_price)
  return _impl_.sale_price_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCRequestStoreSalesDataResponse_Price >*
CMsgGCRequestStoreSalesDataResponse::mutable_sale_price() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCRequestStoreSalesDataResponse.sale_price)
  return &_impl_.sale_price_;
}
inline const ::CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse::_internal_sale_price(int index) const {
  return _impl_.sale_price_.Get(index);
}
inline const ::CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse::sale_price(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataResponse.sale_price)
  return _internal_sale_price(index);
}
inline ::CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse::_internal_add_sale_price() {
  return _impl_.sale_price_.Add();
}
inline ::CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse::add_sale_price() {
  ::CMsgGCRequestStoreSalesDataResponse_Price* _add = _internal_add_sale_price();
  // @@protoc_insertion_point(field_add:CMsgGCRequestStoreSalesDataResponse.sale_price)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCRequestStoreSalesDataResponse_Price >&
CMsgGCRequestStoreSalesDataResponse::sale_price() const {
  // @@protoc_insertion_point(field_list:CMsgGCRequestStoreSalesDataResponse.sale_price)
  return _impl_.sale_price_;
}

// optional uint32 version = 2;
inline bool CMsgGCRequestStoreSalesDataResponse::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesDataResponse::has_version() const {
  return _internal_has_version();
}
inline void CMsgGCRequestStoreSalesDataResponse::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse::version() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataResponse.version)
  return _internal_version();
}
inline void CMsgGCRequestStoreSalesDataResponse::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.version_ = value;
}
inline void CMsgGCRequestStoreSalesDataResponse::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesDataResponse.version)
}

// optional uint32 expiration_time = 3;
inline bool CMsgGCRequestStoreSalesDataResponse::_internal_has_expiration_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesDataResponse::has_expiration_time() const {
  return _internal_has_expiration_time();
}
inline void CMsgGCRequestStoreSalesDataResponse::clear_expiration_time() {
  _impl_.expiration_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse::_internal_expiration_time() const {
  return _impl_.expiration_time_;
}
inline uint32_t CMsgGCRequestStoreSalesDataResponse::expiration_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataResponse.expiration_time)
  return _internal_expiration_time();
}
inline void CMsgGCRequestStoreSalesDataResponse::_internal_set_expiration_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.expiration_time_ = value;
}
inline void CMsgGCRequestStoreSalesDataResponse::set_expiration_time(uint32_t value) {
  _internal_set_expiration_time(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesDataResponse.expiration_time)
}

// -------------------------------------------------------------------

// CMsgGCRequestStoreSalesDataUpToDateResponse

// optional uint32 version = 1;
inline bool CMsgGCRequestStoreSalesDataUpToDateResponse::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesDataUpToDateResponse::has_version() const {
  return _internal_has_version();
}
inline void CMsgGCRequestStoreSalesDataUpToDateResponse::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCRequestStoreSalesDataUpToDateResponse::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgGCRequestStoreSalesDataUpToDateResponse::version() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataUpToDateResponse.version)
  return _internal_version();
}
inline void CMsgGCRequestStoreSalesDataUpToDateResponse::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.version_ = value;
}
inline void CMsgGCRequestStoreSalesDataUpToDateResponse::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesDataUpToDateResponse.version)
}

// optional uint32 expiration_time = 2;
inline bool CMsgGCRequestStoreSalesDataUpToDateResponse::_internal_has_expiration_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRequestStoreSalesDataUpToDateResponse::has_expiration_time() const {
  return _internal_has_expiration_time();
}
inline void CMsgGCRequestStoreSalesDataUpToDateResponse::clear_expiration_time() {
  _impl_.expiration_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCRequestStoreSalesDataUpToDateResponse::_internal_expiration_time() const {
  return _impl_.expiration_time_;
}
inline uint32_t CMsgGCRequestStoreSalesDataUpToDateResponse::expiration_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestStoreSalesDataUpToDateResponse.expiration_time)
  return _internal_expiration_time();
}
inline void CMsgGCRequestStoreSalesDataUpToDateResponse::_internal_set_expiration_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.expiration_time_ = value;
}
inline void CMsgGCRequestStoreSalesDataUpToDateResponse::set_expiration_time(uint32_t value) {
  _internal_set_expiration_time(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestStoreSalesDataUpToDateResponse.expiration_time)
}

// -------------------------------------------------------------------

// CMsgGCToGCPingRequest

// -------------------------------------------------------------------

// CMsgGCToGCPingResponse

// -------------------------------------------------------------------

// CMsgGCToGCGetUserSessionServer

// optional uint32 account_id = 1;
inline bool CMsgGCToGCGetUserSessionServer::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGetUserSessionServer::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCGetUserSessionServer::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGetUserSessionServer::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCGetUserSessionServer::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetUserSessionServer.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCGetUserSessionServer::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCGetUserSessionServer::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetUserSessionServer.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToGCGetUserSessionServerResponse

// optional fixed64 server_steam_id = 1;
inline bool CMsgGCToGCGetUserSessionServerResponse::_internal_has_server_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGetUserSessionServerResponse::has_server_steam_id() const {
  return _internal_has_server_steam_id();
}
inline void CMsgGCToGCGetUserSessionServerResponse::clear_server_steam_id() {
  _impl_.server_steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCToGCGetUserSessionServerResponse::_internal_server_steam_id() const {
  return _impl_.server_steam_id_;
}
inline uint64_t CMsgGCToGCGetUserSessionServerResponse::server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetUserSessionServerResponse.server_steam_id)
  return _internal_server_steam_id();
}
inline void CMsgGCToGCGetUserSessionServerResponse::_internal_set_server_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.server_steam_id_ = value;
}
inline void CMsgGCToGCGetUserSessionServerResponse::set_server_steam_id(uint64_t value) {
  _internal_set_server_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetUserSessionServerResponse.server_steam_id)
}

// optional bool is_online = 2;
inline bool CMsgGCToGCGetUserSessionServerResponse::_internal_has_is_online() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGetUserSessionServerResponse::has_is_online() const {
  return _internal_has_is_online();
}
inline void CMsgGCToGCGetUserSessionServerResponse::clear_is_online() {
  _impl_.is_online_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToGCGetUserSessionServerResponse::_internal_is_online() const {
  return _impl_.is_online_;
}
inline bool CMsgGCToGCGetUserSessionServerResponse::is_online() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetUserSessionServerResponse.is_online)
  return _internal_is_online();
}
inline void CMsgGCToGCGetUserSessionServerResponse::_internal_set_is_online(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.is_online_ = value;
}
inline void CMsgGCToGCGetUserSessionServerResponse::set_is_online(bool value) {
  _internal_set_is_online(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetUserSessionServerResponse.is_online)
}

// -------------------------------------------------------------------

// CMsgGCToGCGetUserServerMembers

// optional uint32 account_id = 1;
inline bool CMsgGCToGCGetUserServerMembers::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGetUserServerMembers::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCGetUserServerMembers::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGetUserServerMembers::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCGetUserServerMembers::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetUserServerMembers.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCGetUserServerMembers::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCGetUserServerMembers::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetUserServerMembers.account_id)
}

// optional uint32 max_spectators = 2;
inline bool CMsgGCToGCGetUserServerMembers::_internal_has_max_spectators() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGetUserServerMembers::has_max_spectators() const {
  return _internal_has_max_spectators();
}
inline void CMsgGCToGCGetUserServerMembers::clear_max_spectators() {
  _impl_.max_spectators_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCGetUserServerMembers::_internal_max_spectators() const {
  return _impl_.max_spectators_;
}
inline uint32_t CMsgGCToGCGetUserServerMembers::max_spectators() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetUserServerMembers.max_spectators)
  return _internal_max_spectators();
}
inline void CMsgGCToGCGetUserServerMembers::_internal_set_max_spectators(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.max_spectators_ = value;
}
inline void CMsgGCToGCGetUserServerMembers::set_max_spectators(uint32_t value) {
  _internal_set_max_spectators(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetUserServerMembers.max_spectators)
}

// -------------------------------------------------------------------

// CMsgGCToGCGetUserServerMembersResponse

// repeated uint32 member_account_id = 1;
inline int CMsgGCToGCGetUserServerMembersResponse::_internal_member_account_id_size() const {
  return _impl_.member_account_id_.size();
}
inline int CMsgGCToGCGetUserServerMembersResponse::member_account_id_size() const {
  return _internal_member_account_id_size();
}
inline void CMsgGCToGCGetUserServerMembersResponse::clear_member_account_id() {
  _impl_.member_account_id_.Clear();
}
inline uint32_t CMsgGCToGCGetUserServerMembersResponse::_internal_member_account_id(int index) const {
  return _impl_.member_account_id_.Get(index);
}
inline uint32_t CMsgGCToGCGetUserServerMembersResponse::member_account_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetUserServerMembersResponse.member_account_id)
  return _internal_member_account_id(index);
}
inline void CMsgGCToGCGetUserServerMembersResponse::set_member_account_id(int index, uint32_t value) {
  _impl_.member_account_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetUserServerMembersResponse.member_account_id)
}
inline void CMsgGCToGCGetUserServerMembersResponse::_internal_add_member_account_id(uint32_t value) {
  _impl_.member_account_id_.Add(value);
}
inline void CMsgGCToGCGetUserServerMembersResponse::add_member_account_id(uint32_t value) {
  _internal_add_member_account_id(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCGetUserServerMembersResponse.member_account_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetUserServerMembersResponse::_internal_member_account_id() const {
  return _impl_.member_account_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetUserServerMembersResponse::member_account_id() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGetUserServerMembersResponse.member_account_id)
  return _internal_member_account_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetUserServerMembersResponse::_internal_mutable_member_account_id() {
  return &_impl_.member_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetUserServerMembersResponse::mutable_member_account_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGetUserServerMembersResponse.member_account_id)
  return _internal_mutable_member_account_id();
}

// -------------------------------------------------------------------

// CMsgLookupMultipleAccountNames

// repeated uint32 accountids = 1 [packed = true];
inline int CMsgLookupMultipleAccountNames::_internal_accountids_size() const {
  return _impl_.accountids_.size();
}
inline int CMsgLookupMultipleAccountNames::accountids_size() const {
  return _internal_accountids_size();
}
inline void CMsgLookupMultipleAccountNames::clear_accountids() {
  _impl_.accountids_.Clear();
}
inline uint32_t CMsgLookupMultipleAccountNames::_internal_accountids(int index) const {
  return _impl_.accountids_.Get(index);
}
inline uint32_t CMsgLookupMultipleAccountNames::accountids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgLookupMultipleAccountNames.accountids)
  return _internal_accountids(index);
}
inline void CMsgLookupMultipleAccountNames::set_accountids(int index, uint32_t value) {
  _impl_.accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgLookupMultipleAccountNames.accountids)
}
inline void CMsgLookupMultipleAccountNames::_internal_add_accountids(uint32_t value) {
  _impl_.accountids_.Add(value);
}
inline void CMsgLookupMultipleAccountNames::add_accountids(uint32_t value) {
  _internal_add_accountids(value);
  // @@protoc_insertion_point(field_add:CMsgLookupMultipleAccountNames.accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgLookupMultipleAccountNames::_internal_accountids() const {
  return _impl_.accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgLookupMultipleAccountNames::accountids() const {
  // @@protoc_insertion_point(field_list:CMsgLookupMultipleAccountNames.accountids)
  return _internal_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgLookupMultipleAccountNames::_internal_mutable_accountids() {
  return &_impl_.accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgLookupMultipleAccountNames::mutable_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgLookupMultipleAccountNames.accountids)
  return _internal_mutable_accountids();
}

// -------------------------------------------------------------------

// CMsgLookupMultipleAccountNamesResponse_Account

// optional uint32 accountid = 1;
inline bool CMsgLookupMultipleAccountNamesResponse_Account::_internal_has_accountid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgLookupMultipleAccountNamesResponse_Account::has_accountid() const {
  return _internal_has_accountid();
}
inline void CMsgLookupMultipleAccountNamesResponse_Account::clear_accountid() {
  _impl_.accountid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgLookupMultipleAccountNamesResponse_Account::_internal_accountid() const {
  return _impl_.accountid_;
}
inline uint32_t CMsgLookupMultipleAccountNamesResponse_Account::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgLookupMultipleAccountNamesResponse.Account.accountid)
  return _internal_accountid();
}
inline void CMsgLookupMultipleAccountNamesResponse_Account::_internal_set_accountid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.accountid_ = value;
}
inline void CMsgLookupMultipleAccountNamesResponse_Account::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CMsgLookupMultipleAccountNamesResponse.Account.accountid)
}

// optional string persona = 2;
inline bool CMsgLookupMultipleAccountNamesResponse_Account::_internal_has_persona() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgLookupMultipleAccountNamesResponse_Account::has_persona() const {
  return _internal_has_persona();
}
inline void CMsgLookupMultipleAccountNamesResponse_Account::clear_persona() {
  _impl_.persona_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgLookupMultipleAccountNamesResponse_Account::persona() const {
  // @@protoc_insertion_point(field_get:CMsgLookupMultipleAccountNamesResponse.Account.persona)
  return _internal_persona();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgLookupMultipleAccountNamesResponse_Account::set_persona(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.persona_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgLookupMultipleAccountNamesResponse.Account.persona)
}
inline std::string* CMsgLookupMultipleAccountNamesResponse_Account::mutable_persona() {
  std::string* _s = _internal_mutable_persona();
  // @@protoc_insertion_point(field_mutable:CMsgLookupMultipleAccountNamesResponse.Account.persona)
  return _s;
}
inline const std::string& CMsgLookupMultipleAccountNamesResponse_Account::_internal_persona() const {
  return _impl_.persona_.Get();
}
inline void CMsgLookupMultipleAccountNamesResponse_Account::_internal_set_persona(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.persona_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgLookupMultipleAccountNamesResponse_Account::_internal_mutable_persona() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.persona_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgLookupMultipleAccountNamesResponse_Account::release_persona() {
  // @@protoc_insertion_point(field_release:CMsgLookupMultipleAccountNamesResponse.Account.persona)
  if (!_internal_has_persona()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.persona_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.persona_.IsDefault()) {
    _impl_.persona_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgLookupMultipleAccountNamesResponse_Account::set_allocated_persona(std::string* persona) {
  if (persona != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.persona_.SetAllocated(persona, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.persona_.IsDefault()) {
    _impl_.persona_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgLookupMultipleAccountNamesResponse.Account.persona)
}

// -------------------------------------------------------------------

// CMsgLookupMultipleAccountNamesResponse

// repeated .CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
inline int CMsgLookupMultipleAccountNamesResponse::_internal_accounts_size() const {
  return _impl_.accounts_.size();
}
inline int CMsgLookupMultipleAccountNamesResponse::accounts_size() const {
  return _internal_accounts_size();
}
inline void CMsgLookupMultipleAccountNamesResponse::clear_accounts() {
  _impl_.accounts_.Clear();
}
inline ::CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgLookupMultipleAccountNamesResponse.accounts)
  return _impl_.accounts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgLookupMultipleAccountNamesResponse_Account >*
CMsgLookupMultipleAccountNamesResponse::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:CMsgLookupMultipleAccountNamesResponse.accounts)
  return &_impl_.accounts_;
}
inline const ::CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse::_internal_accounts(int index) const {
  return _impl_.accounts_.Get(index);
}
inline const ::CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse::accounts(int index) const {
  // @@protoc_insertion_point(field_get:CMsgLookupMultipleAccountNamesResponse.accounts)
  return _internal_accounts(index);
}
inline ::CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse::_internal_add_accounts() {
  return _impl_.accounts_.Add();
}
inline ::CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse::add_accounts() {
  ::CMsgLookupMultipleAccountNamesResponse_Account* _add = _internal_add_accounts();
  // @@protoc_insertion_point(field_add:CMsgLookupMultipleAccountNamesResponse.accounts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgLookupMultipleAccountNamesResponse_Account >&
CMsgLookupMultipleAccountNamesResponse::accounts() const {
  // @@protoc_insertion_point(field_list:CMsgLookupMultipleAccountNamesResponse.accounts)
  return _impl_.accounts_;
}

// -------------------------------------------------------------------

// CMsgRequestCrateItems

// optional uint32 crate_item_def = 1;
inline bool CMsgRequestCrateItems::_internal_has_crate_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRequestCrateItems::has_crate_item_def() const {
  return _internal_has_crate_item_def();
}
inline void CMsgRequestCrateItems::clear_crate_item_def() {
  _impl_.crate_item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgRequestCrateItems::_internal_crate_item_def() const {
  return _impl_.crate_item_def_;
}
inline uint32_t CMsgRequestCrateItems::crate_item_def() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateItems.crate_item_def)
  return _internal_crate_item_def();
}
inline void CMsgRequestCrateItems::_internal_set_crate_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.crate_item_def_ = value;
}
inline void CMsgRequestCrateItems::set_crate_item_def(uint32_t value) {
  _internal_set_crate_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateItems.crate_item_def)
}

// -------------------------------------------------------------------

// CMsgRequestCrateItemsResponse

// optional uint32 response = 1;
inline bool CMsgRequestCrateItemsResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRequestCrateItemsResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgRequestCrateItemsResponse::clear_response() {
  _impl_.response_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgRequestCrateItemsResponse::_internal_response() const {
  return _impl_.response_;
}
inline uint32_t CMsgRequestCrateItemsResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateItemsResponse.response)
  return _internal_response();
}
inline void CMsgRequestCrateItemsResponse::_internal_set_response(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgRequestCrateItemsResponse::set_response(uint32_t value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateItemsResponse.response)
}

// repeated uint32 item_defs = 2;
inline int CMsgRequestCrateItemsResponse::_internal_item_defs_size() const {
  return _impl_.item_defs_.size();
}
inline int CMsgRequestCrateItemsResponse::item_defs_size() const {
  return _internal_item_defs_size();
}
inline void CMsgRequestCrateItemsResponse::clear_item_defs() {
  _impl_.item_defs_.Clear();
}
inline uint32_t CMsgRequestCrateItemsResponse::_internal_item_defs(int index) const {
  return _impl_.item_defs_.Get(index);
}
inline uint32_t CMsgRequestCrateItemsResponse::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateItemsResponse.item_defs)
  return _internal_item_defs(index);
}
inline void CMsgRequestCrateItemsResponse::set_item_defs(int index, uint32_t value) {
  _impl_.item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateItemsResponse.item_defs)
}
inline void CMsgRequestCrateItemsResponse::_internal_add_item_defs(uint32_t value) {
  _impl_.item_defs_.Add(value);
}
inline void CMsgRequestCrateItemsResponse::add_item_defs(uint32_t value) {
  _internal_add_item_defs(value);
  // @@protoc_insertion_point(field_add:CMsgRequestCrateItemsResponse.item_defs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRequestCrateItemsResponse::_internal_item_defs() const {
  return _impl_.item_defs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRequestCrateItemsResponse::item_defs() const {
  // @@protoc_insertion_point(field_list:CMsgRequestCrateItemsResponse.item_defs)
  return _internal_item_defs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRequestCrateItemsResponse::_internal_mutable_item_defs() {
  return &_impl_.item_defs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRequestCrateItemsResponse::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRequestCrateItemsResponse.item_defs)
  return _internal_mutable_item_defs();
}

// repeated uint32 peek_item_defs = 3;
inline int CMsgRequestCrateItemsResponse::_internal_peek_item_defs_size() const {
  return _impl_.peek_item_defs_.size();
}
inline int CMsgRequestCrateItemsResponse::peek_item_defs_size() const {
  return _internal_peek_item_defs_size();
}
inline void CMsgRequestCrateItemsResponse::clear_peek_item_defs() {
  _impl_.peek_item_defs_.Clear();
}
inline uint32_t CMsgRequestCrateItemsResponse::_internal_peek_item_defs(int index) const {
  return _impl_.peek_item_defs_.Get(index);
}
inline uint32_t CMsgRequestCrateItemsResponse::peek_item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateItemsResponse.peek_item_defs)
  return _internal_peek_item_defs(index);
}
inline void CMsgRequestCrateItemsResponse::set_peek_item_defs(int index, uint32_t value) {
  _impl_.peek_item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateItemsResponse.peek_item_defs)
}
inline void CMsgRequestCrateItemsResponse::_internal_add_peek_item_defs(uint32_t value) {
  _impl_.peek_item_defs_.Add(value);
}
inline void CMsgRequestCrateItemsResponse::add_peek_item_defs(uint32_t value) {
  _internal_add_peek_item_defs(value);
  // @@protoc_insertion_point(field_add:CMsgRequestCrateItemsResponse.peek_item_defs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRequestCrateItemsResponse::_internal_peek_item_defs() const {
  return _impl_.peek_item_defs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRequestCrateItemsResponse::peek_item_defs() const {
  // @@protoc_insertion_point(field_list:CMsgRequestCrateItemsResponse.peek_item_defs)
  return _internal_peek_item_defs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRequestCrateItemsResponse::_internal_mutable_peek_item_defs() {
  return &_impl_.peek_item_defs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRequestCrateItemsResponse::mutable_peek_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRequestCrateItemsResponse.peek_item_defs)
  return _internal_mutable_peek_item_defs();
}

// -------------------------------------------------------------------

// CMsgRequestCrateEscalationLevel

// optional uint32 crate_item_def = 1;
inline bool CMsgRequestCrateEscalationLevel::_internal_has_crate_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRequestCrateEscalationLevel::has_crate_item_def() const {
  return _internal_has_crate_item_def();
}
inline void CMsgRequestCrateEscalationLevel::clear_crate_item_def() {
  _impl_.crate_item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgRequestCrateEscalationLevel::_internal_crate_item_def() const {
  return _impl_.crate_item_def_;
}
inline uint32_t CMsgRequestCrateEscalationLevel::crate_item_def() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateEscalationLevel.crate_item_def)
  return _internal_crate_item_def();
}
inline void CMsgRequestCrateEscalationLevel::_internal_set_crate_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.crate_item_def_ = value;
}
inline void CMsgRequestCrateEscalationLevel::set_crate_item_def(uint32_t value) {
  _internal_set_crate_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateEscalationLevel.crate_item_def)
}

// -------------------------------------------------------------------

// CMsgRequestCrateEscalationLevelResponse

// optional uint32 response = 1;
inline bool CMsgRequestCrateEscalationLevelResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRequestCrateEscalationLevelResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgRequestCrateEscalationLevelResponse::clear_response() {
  _impl_.response_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::_internal_response() const {
  return _impl_.response_;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateEscalationLevelResponse.response)
  return _internal_response();
}
inline void CMsgRequestCrateEscalationLevelResponse::_internal_set_response(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgRequestCrateEscalationLevelResponse::set_response(uint32_t value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateEscalationLevelResponse.response)
}

// optional uint32 escalation_level0 = 2;
inline bool CMsgRequestCrateEscalationLevelResponse::_internal_has_escalation_level0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgRequestCrateEscalationLevelResponse::has_escalation_level0() const {
  return _internal_has_escalation_level0();
}
inline void CMsgRequestCrateEscalationLevelResponse::clear_escalation_level0() {
  _impl_.escalation_level0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::_internal_escalation_level0() const {
  return _impl_.escalation_level0_;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::escalation_level0() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateEscalationLevelResponse.escalation_level0)
  return _internal_escalation_level0();
}
inline void CMsgRequestCrateEscalationLevelResponse::_internal_set_escalation_level0(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.escalation_level0_ = value;
}
inline void CMsgRequestCrateEscalationLevelResponse::set_escalation_level0(uint32_t value) {
  _internal_set_escalation_level0(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateEscalationLevelResponse.escalation_level0)
}

// optional uint32 escalation_level1 = 3;
inline bool CMsgRequestCrateEscalationLevelResponse::_internal_has_escalation_level1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgRequestCrateEscalationLevelResponse::has_escalation_level1() const {
  return _internal_has_escalation_level1();
}
inline void CMsgRequestCrateEscalationLevelResponse::clear_escalation_level1() {
  _impl_.escalation_level1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::_internal_escalation_level1() const {
  return _impl_.escalation_level1_;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::escalation_level1() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateEscalationLevelResponse.escalation_level1)
  return _internal_escalation_level1();
}
inline void CMsgRequestCrateEscalationLevelResponse::_internal_set_escalation_level1(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.escalation_level1_ = value;
}
inline void CMsgRequestCrateEscalationLevelResponse::set_escalation_level1(uint32_t value) {
  _internal_set_escalation_level1(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateEscalationLevelResponse.escalation_level1)
}

// optional uint32 escalation_level2 = 4;
inline bool CMsgRequestCrateEscalationLevelResponse::_internal_has_escalation_level2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgRequestCrateEscalationLevelResponse::has_escalation_level2() const {
  return _internal_has_escalation_level2();
}
inline void CMsgRequestCrateEscalationLevelResponse::clear_escalation_level2() {
  _impl_.escalation_level2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::_internal_escalation_level2() const {
  return _impl_.escalation_level2_;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::escalation_level2() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateEscalationLevelResponse.escalation_level2)
  return _internal_escalation_level2();
}
inline void CMsgRequestCrateEscalationLevelResponse::_internal_set_escalation_level2(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.escalation_level2_ = value;
}
inline void CMsgRequestCrateEscalationLevelResponse::set_escalation_level2(uint32_t value) {
  _internal_set_escalation_level2(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateEscalationLevelResponse.escalation_level2)
}

// optional uint32 escalation_level3 = 5;
inline bool CMsgRequestCrateEscalationLevelResponse::_internal_has_escalation_level3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgRequestCrateEscalationLevelResponse::has_escalation_level3() const {
  return _internal_has_escalation_level3();
}
inline void CMsgRequestCrateEscalationLevelResponse::clear_escalation_level3() {
  _impl_.escalation_level3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::_internal_escalation_level3() const {
  return _impl_.escalation_level3_;
}
inline uint32_t CMsgRequestCrateEscalationLevelResponse::escalation_level3() const {
  // @@protoc_insertion_point(field_get:CMsgRequestCrateEscalationLevelResponse.escalation_level3)
  return _internal_escalation_level3();
}
inline void CMsgRequestCrateEscalationLevelResponse::_internal_set_escalation_level3(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.escalation_level3_ = value;
}
inline void CMsgRequestCrateEscalationLevelResponse::set_escalation_level3(uint32_t value) {
  _internal_set_escalation_level3(value);
  // @@protoc_insertion_point(field_set:CMsgRequestCrateEscalationLevelResponse.escalation_level3)
}

// -------------------------------------------------------------------

// CMsgGCToGCCanUseDropRateBonus

// optional uint32 account_id = 1;
inline bool CMsgGCToGCCanUseDropRateBonus::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCCanUseDropRateBonus::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCCanUseDropRateBonus::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCCanUseDropRateBonus::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCCanUseDropRateBonus::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCCanUseDropRateBonus.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCCanUseDropRateBonus::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCCanUseDropRateBonus::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCCanUseDropRateBonus.account_id)
}

// optional float drop_rate_bonus = 2;
inline bool CMsgGCToGCCanUseDropRateBonus::_internal_has_drop_rate_bonus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCCanUseDropRateBonus::has_drop_rate_bonus() const {
  return _internal_has_drop_rate_bonus();
}
inline void CMsgGCToGCCanUseDropRateBonus::clear_drop_rate_bonus() {
  _impl_.drop_rate_bonus_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCToGCCanUseDropRateBonus::_internal_drop_rate_bonus() const {
  return _impl_.drop_rate_bonus_;
}
inline float CMsgGCToGCCanUseDropRateBonus::drop_rate_bonus() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCCanUseDropRateBonus.drop_rate_bonus)
  return _internal_drop_rate_bonus();
}
inline void CMsgGCToGCCanUseDropRateBonus::_internal_set_drop_rate_bonus(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.drop_rate_bonus_ = value;
}
inline void CMsgGCToGCCanUseDropRateBonus::set_drop_rate_bonus(float value) {
  _internal_set_drop_rate_bonus(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCCanUseDropRateBonus.drop_rate_bonus)
}

// optional uint32 booster_type = 3;
inline bool CMsgGCToGCCanUseDropRateBonus::_internal_has_booster_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCCanUseDropRateBonus::has_booster_type() const {
  return _internal_has_booster_type();
}
inline void CMsgGCToGCCanUseDropRateBonus::clear_booster_type() {
  _impl_.booster_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToGCCanUseDropRateBonus::_internal_booster_type() const {
  return _impl_.booster_type_;
}
inline uint32_t CMsgGCToGCCanUseDropRateBonus::booster_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCCanUseDropRateBonus.booster_type)
  return _internal_booster_type();
}
inline void CMsgGCToGCCanUseDropRateBonus::_internal_set_booster_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.booster_type_ = value;
}
inline void CMsgGCToGCCanUseDropRateBonus::set_booster_type(uint32_t value) {
  _internal_set_booster_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCCanUseDropRateBonus.booster_type)
}

// optional uint32 exclusive_item_def = 4;
inline bool CMsgGCToGCCanUseDropRateBonus::_internal_has_exclusive_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCCanUseDropRateBonus::has_exclusive_item_def() const {
  return _internal_has_exclusive_item_def();
}
inline void CMsgGCToGCCanUseDropRateBonus::clear_exclusive_item_def() {
  _impl_.exclusive_item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCToGCCanUseDropRateBonus::_internal_exclusive_item_def() const {
  return _impl_.exclusive_item_def_;
}
inline uint32_t CMsgGCToGCCanUseDropRateBonus::exclusive_item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCCanUseDropRateBonus.exclusive_item_def)
  return _internal_exclusive_item_def();
}
inline void CMsgGCToGCCanUseDropRateBonus::_internal_set_exclusive_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.exclusive_item_def_ = value;
}
inline void CMsgGCToGCCanUseDropRateBonus::set_exclusive_item_def(uint32_t value) {
  _internal_set_exclusive_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCCanUseDropRateBonus.exclusive_item_def)
}

// optional bool allow_equal_rate = 5;
inline bool CMsgGCToGCCanUseDropRateBonus::_internal_has_allow_equal_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToGCCanUseDropRateBonus::has_allow_equal_rate() const {
  return _internal_has_allow_equal_rate();
}
inline void CMsgGCToGCCanUseDropRateBonus::clear_allow_equal_rate() {
  _impl_.allow_equal_rate_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgGCToGCCanUseDropRateBonus::_internal_allow_equal_rate() const {
  return _impl_.allow_equal_rate_;
}
inline bool CMsgGCToGCCanUseDropRateBonus::allow_equal_rate() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCCanUseDropRateBonus.allow_equal_rate)
  return _internal_allow_equal_rate();
}
inline void CMsgGCToGCCanUseDropRateBonus::_internal_set_allow_equal_rate(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.allow_equal_rate_ = value;
}
inline void CMsgGCToGCCanUseDropRateBonus::set_allow_equal_rate(bool value) {
  _internal_set_allow_equal_rate(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCCanUseDropRateBonus.allow_equal_rate)
}

// -------------------------------------------------------------------

// CMsgSQLAddDropRateBonus

// optional uint32 account_id = 1;
inline bool CMsgSQLAddDropRateBonus::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgSQLAddDropRateBonus::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgSQLAddDropRateBonus::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgSQLAddDropRateBonus::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.account_id)
  return _internal_account_id();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.account_id)
}

// optional uint64 item_id = 2;
inline bool CMsgSQLAddDropRateBonus::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgSQLAddDropRateBonus::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgSQLAddDropRateBonus::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgSQLAddDropRateBonus::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.item_id)
  return _internal_item_id();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.item_id)
}

// optional uint32 item_def = 3;
inline bool CMsgSQLAddDropRateBonus::_internal_has_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_item_def() const {
  return _internal_has_item_def();
}
inline void CMsgSQLAddDropRateBonus::clear_item_def() {
  _impl_.item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgSQLAddDropRateBonus::_internal_item_def() const {
  return _impl_.item_def_;
}
inline uint32_t CMsgSQLAddDropRateBonus::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.item_def)
  return _internal_item_def();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.item_def_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_item_def(uint32_t value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.item_def)
}

// optional float drop_rate_bonus = 4;
inline bool CMsgSQLAddDropRateBonus::_internal_has_drop_rate_bonus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_drop_rate_bonus() const {
  return _internal_has_drop_rate_bonus();
}
inline void CMsgSQLAddDropRateBonus::clear_drop_rate_bonus() {
  _impl_.drop_rate_bonus_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgSQLAddDropRateBonus::_internal_drop_rate_bonus() const {
  return _impl_.drop_rate_bonus_;
}
inline float CMsgSQLAddDropRateBonus::drop_rate_bonus() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.drop_rate_bonus)
  return _internal_drop_rate_bonus();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_drop_rate_bonus(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.drop_rate_bonus_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_drop_rate_bonus(float value) {
  _internal_set_drop_rate_bonus(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.drop_rate_bonus)
}

// optional uint32 booster_type = 5;
inline bool CMsgSQLAddDropRateBonus::_internal_has_booster_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_booster_type() const {
  return _internal_has_booster_type();
}
inline void CMsgSQLAddDropRateBonus::clear_booster_type() {
  _impl_.booster_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgSQLAddDropRateBonus::_internal_booster_type() const {
  return _impl_.booster_type_;
}
inline uint32_t CMsgSQLAddDropRateBonus::booster_type() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.booster_type)
  return _internal_booster_type();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_booster_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.booster_type_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_booster_type(uint32_t value) {
  _internal_set_booster_type(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.booster_type)
}

// optional uint32 seconds_duration = 6;
inline bool CMsgSQLAddDropRateBonus::_internal_has_seconds_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_seconds_duration() const {
  return _internal_has_seconds_duration();
}
inline void CMsgSQLAddDropRateBonus::clear_seconds_duration() {
  _impl_.seconds_duration_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgSQLAddDropRateBonus::_internal_seconds_duration() const {
  return _impl_.seconds_duration_;
}
inline uint32_t CMsgSQLAddDropRateBonus::seconds_duration() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.seconds_duration)
  return _internal_seconds_duration();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_seconds_duration(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.seconds_duration_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_seconds_duration(uint32_t value) {
  _internal_set_seconds_duration(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.seconds_duration)
}

// optional uint32 end_time_stamp = 7;
inline bool CMsgSQLAddDropRateBonus::_internal_has_end_time_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgSQLAddDropRateBonus::has_end_time_stamp() const {
  return _internal_has_end_time_stamp();
}
inline void CMsgSQLAddDropRateBonus::clear_end_time_stamp() {
  _impl_.end_time_stamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgSQLAddDropRateBonus::_internal_end_time_stamp() const {
  return _impl_.end_time_stamp_;
}
inline uint32_t CMsgSQLAddDropRateBonus::end_time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgSQLAddDropRateBonus.end_time_stamp)
  return _internal_end_time_stamp();
}
inline void CMsgSQLAddDropRateBonus::_internal_set_end_time_stamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.end_time_stamp_ = value;
}
inline void CMsgSQLAddDropRateBonus::set_end_time_stamp(uint32_t value) {
  _internal_set_end_time_stamp(value);
  // @@protoc_insertion_point(field_set:CMsgSQLAddDropRateBonus.end_time_stamp)
}

// -------------------------------------------------------------------

// CMsgSQLUpgradeBattleBooster

// optional uint32 account_id = 1;
inline bool CMsgSQLUpgradeBattleBooster::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSQLUpgradeBattleBooster::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgSQLUpgradeBattleBooster::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgSQLUpgradeBattleBooster::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgSQLUpgradeBattleBooster::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSQLUpgradeBattleBooster.account_id)
  return _internal_account_id();
}
inline void CMsgSQLUpgradeBattleBooster::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgSQLUpgradeBattleBooster::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgSQLUpgradeBattleBooster.account_id)
}

// optional uint32 item_def = 2;
inline bool CMsgSQLUpgradeBattleBooster::_internal_has_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSQLUpgradeBattleBooster::has_item_def() const {
  return _internal_has_item_def();
}
inline void CMsgSQLUpgradeBattleBooster::clear_item_def() {
  _impl_.item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgSQLUpgradeBattleBooster::_internal_item_def() const {
  return _impl_.item_def_;
}
inline uint32_t CMsgSQLUpgradeBattleBooster::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgSQLUpgradeBattleBooster.item_def)
  return _internal_item_def();
}
inline void CMsgSQLUpgradeBattleBooster::_internal_set_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_def_ = value;
}
inline void CMsgSQLUpgradeBattleBooster::set_item_def(uint32_t value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgSQLUpgradeBattleBooster.item_def)
}

// optional float bonus_to_add = 3;
inline bool CMsgSQLUpgradeBattleBooster::_internal_has_bonus_to_add() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSQLUpgradeBattleBooster::has_bonus_to_add() const {
  return _internal_has_bonus_to_add();
}
inline void CMsgSQLUpgradeBattleBooster::clear_bonus_to_add() {
  _impl_.bonus_to_add_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgSQLUpgradeBattleBooster::_internal_bonus_to_add() const {
  return _impl_.bonus_to_add_;
}
inline float CMsgSQLUpgradeBattleBooster::bonus_to_add() const {
  // @@protoc_insertion_point(field_get:CMsgSQLUpgradeBattleBooster.bonus_to_add)
  return _internal_bonus_to_add();
}
inline void CMsgSQLUpgradeBattleBooster::_internal_set_bonus_to_add(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.bonus_to_add_ = value;
}
inline void CMsgSQLUpgradeBattleBooster::set_bonus_to_add(float value) {
  _internal_set_bonus_to_add(value);
  // @@protoc_insertion_point(field_set:CMsgSQLUpgradeBattleBooster.bonus_to_add)
}

// optional uint32 booster_type = 4;
inline bool CMsgSQLUpgradeBattleBooster::_internal_has_booster_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSQLUpgradeBattleBooster::has_booster_type() const {
  return _internal_has_booster_type();
}
inline void CMsgSQLUpgradeBattleBooster::clear_booster_type() {
  _impl_.booster_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgSQLUpgradeBattleBooster::_internal_booster_type() const {
  return _impl_.booster_type_;
}
inline uint32_t CMsgSQLUpgradeBattleBooster::booster_type() const {
  // @@protoc_insertion_point(field_get:CMsgSQLUpgradeBattleBooster.booster_type)
  return _internal_booster_type();
}
inline void CMsgSQLUpgradeBattleBooster::_internal_set_booster_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.booster_type_ = value;
}
inline void CMsgSQLUpgradeBattleBooster::set_booster_type(uint32_t value) {
  _internal_set_booster_type(value);
  // @@protoc_insertion_point(field_set:CMsgSQLUpgradeBattleBooster.booster_type)
}

// -------------------------------------------------------------------

// CMsgGCToGCRefreshSOCache

// optional uint32 account_id = 1;
inline bool CMsgGCToGCRefreshSOCache::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCRefreshSOCache::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCRefreshSOCache::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCRefreshSOCache::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCRefreshSOCache::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCRefreshSOCache.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCRefreshSOCache::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCRefreshSOCache::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCRefreshSOCache.account_id)
}

// optional bool reload = 2;
inline bool CMsgGCToGCRefreshSOCache::_internal_has_reload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCRefreshSOCache::has_reload() const {
  return _internal_has_reload();
}
inline void CMsgGCToGCRefreshSOCache::clear_reload() {
  _impl_.reload_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToGCRefreshSOCache::_internal_reload() const {
  return _impl_.reload_;
}
inline bool CMsgGCToGCRefreshSOCache::reload() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCRefreshSOCache.reload)
  return _internal_reload();
}
inline void CMsgGCToGCRefreshSOCache::_internal_set_reload(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reload_ = value;
}
inline void CMsgGCToGCRefreshSOCache::set_reload(bool value) {
  _internal_set_reload(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCRefreshSOCache.reload)
}

// -------------------------------------------------------------------

// CMsgGCToGCAddSubscriptionTime

// optional uint32 account_id = 1;
inline bool CMsgGCToGCAddSubscriptionTime::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCAddSubscriptionTime::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCAddSubscriptionTime::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCAddSubscriptionTime::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCAddSubscriptionTime::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCAddSubscriptionTime.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCAddSubscriptionTime::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCAddSubscriptionTime::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCAddSubscriptionTime.account_id)
}

// repeated uint32 matching_subscription_def_indexes = 2;
inline int CMsgGCToGCAddSubscriptionTime::_internal_matching_subscription_def_indexes_size() const {
  return _impl_.matching_subscription_def_indexes_.size();
}
inline int CMsgGCToGCAddSubscriptionTime::matching_subscription_def_indexes_size() const {
  return _internal_matching_subscription_def_indexes_size();
}
inline void CMsgGCToGCAddSubscriptionTime::clear_matching_subscription_def_indexes() {
  _impl_.matching_subscription_def_indexes_.Clear();
}
inline uint32_t CMsgGCToGCAddSubscriptionTime::_internal_matching_subscription_def_indexes(int index) const {
  return _impl_.matching_subscription_def_indexes_.Get(index);
}
inline uint32_t CMsgGCToGCAddSubscriptionTime::matching_subscription_def_indexes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCAddSubscriptionTime.matching_subscription_def_indexes)
  return _internal_matching_subscription_def_indexes(index);
}
inline void CMsgGCToGCAddSubscriptionTime::set_matching_subscription_def_indexes(int index, uint32_t value) {
  _impl_.matching_subscription_def_indexes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCAddSubscriptionTime.matching_subscription_def_indexes)
}
inline void CMsgGCToGCAddSubscriptionTime::_internal_add_matching_subscription_def_indexes(uint32_t value) {
  _impl_.matching_subscription_def_indexes_.Add(value);
}
inline void CMsgGCToGCAddSubscriptionTime::add_matching_subscription_def_indexes(uint32_t value) {
  _internal_add_matching_subscription_def_indexes(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCAddSubscriptionTime.matching_subscription_def_indexes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCAddSubscriptionTime::_internal_matching_subscription_def_indexes() const {
  return _impl_.matching_subscription_def_indexes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCAddSubscriptionTime::matching_subscription_def_indexes() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCAddSubscriptionTime.matching_subscription_def_indexes)
  return _internal_matching_subscription_def_indexes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCAddSubscriptionTime::_internal_mutable_matching_subscription_def_indexes() {
  return &_impl_.matching_subscription_def_indexes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCAddSubscriptionTime::mutable_matching_subscription_def_indexes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCAddSubscriptionTime.matching_subscription_def_indexes)
  return _internal_mutable_matching_subscription_def_indexes();
}

// optional uint32 additional_seconds = 3;
inline bool CMsgGCToGCAddSubscriptionTime::_internal_has_additional_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCAddSubscriptionTime::has_additional_seconds() const {
  return _internal_has_additional_seconds();
}
inline void CMsgGCToGCAddSubscriptionTime::clear_additional_seconds() {
  _impl_.additional_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCAddSubscriptionTime::_internal_additional_seconds() const {
  return _impl_.additional_seconds_;
}
inline uint32_t CMsgGCToGCAddSubscriptionTime::additional_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCAddSubscriptionTime.additional_seconds)
  return _internal_additional_seconds();
}
inline void CMsgGCToGCAddSubscriptionTime::_internal_set_additional_seconds(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.additional_seconds_ = value;
}
inline void CMsgGCToGCAddSubscriptionTime::set_additional_seconds(uint32_t value) {
  _internal_set_additional_seconds(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCAddSubscriptionTime.additional_seconds)
}

// -------------------------------------------------------------------

// CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute

// optional string name = 1;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_name() const {
  return _internal_has_name();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
  return _s;
}
inline const std::string& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::release_name() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}

// optional uint32 value_uint32 = 2;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_has_value_uint32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_value_uint32() const {
  return _internal_has_value_uint32();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_value_uint32() {
  _impl_.value_uint32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_value_uint32() const {
  return _impl_.value_uint32_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::value_uint32() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_uint32)
  return _internal_value_uint32();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_set_value_uint32(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.value_uint32_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_value_uint32(uint32_t value) {
  _internal_set_value_uint32(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_uint32)
}

// optional float value_float = 3;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_has_value_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_value_float() const {
  return _internal_has_value_float();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_value_float() {
  _impl_.value_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_value_float() const {
  return _impl_.value_float_;
}
inline float CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::value_float() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_float)
  return _internal_value_float();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_set_value_float(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.value_float_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_value_float(float value) {
  _internal_set_value_float(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_float)
}

// optional string value_string = 4;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_has_value_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_value_string() const {
  return _internal_has_value_string();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_value_string() {
  _impl_.value_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::value_string() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string)
  return _internal_value_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_value_string(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.value_string_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string)
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::mutable_value_string() {
  std::string* _s = _internal_mutable_value_string();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string)
  return _s;
}
inline const std::string& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_value_string() const {
  return _impl_.value_string_.Get();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_set_value_string(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_string_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_internal_mutable_value_string() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.value_string_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::release_value_string() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string)
  if (!_internal_has_value_string()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.value_string_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_string_.IsDefault()) {
    _impl_.value_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_allocated_value_string(std::string* value_string) {
  if (value_string != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.value_string_.SetAllocated(value_string, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_string_.IsDefault()) {
    _impl_.value_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string)
}

// -------------------------------------------------------------------

// CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry

// optional uint32 owner_account_id = 1;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_has_owner_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::has_owner_account_id() const {
  return _internal_has_owner_account_id();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_owner_account_id() {
  _impl_.owner_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_owner_account_id() const {
  return _impl_.owner_account_id_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::owner_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.owner_account_id)
  return _internal_owner_account_id();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_set_owner_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.owner_account_id_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_owner_account_id(uint32_t value) {
  _internal_set_owner_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.owner_account_id)
}

// optional uint32 audit_action = 2;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_has_audit_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::has_audit_action() const {
  return _internal_has_audit_action();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_audit_action() {
  _impl_.audit_action_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_audit_action() const {
  return _impl_.audit_action_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::audit_action() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_action)
  return _internal_audit_action();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_set_audit_action(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.audit_action_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_audit_action(uint32_t value) {
  _internal_set_audit_action(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_action)
}

// optional uint64 audit_data = 3;
inline bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_has_audit_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::has_audit_data() const {
  return _internal_has_audit_data();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_audit_data() {
  _impl_.audit_data_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_audit_data() const {
  return _impl_.audit_data_;
}
inline uint64_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::audit_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_data)
  return _internal_audit_data();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_internal_set_audit_data(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.audit_data_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_audit_data(uint64_t value) {
  _internal_set_audit_data(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_data)
}

// -------------------------------------------------------------------

// CMsgGCToGCGrantAccountRolledItems_Item

// optional uint32 item_def = 1;
inline bool CMsgGCToGCGrantAccountRolledItems_Item::_internal_has_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item::has_item_def() const {
  return _internal_has_item_def();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_item_def() {
  _impl_.item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item::_internal_item_def() const {
  return _impl_.item_def_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.item_def)
  return _internal_item_def();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::_internal_set_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_item_def(uint32_t value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.item_def)
}

// repeated string loot_lists = 2;
inline int CMsgGCToGCGrantAccountRolledItems_Item::_internal_loot_lists_size() const {
  return _impl_.loot_lists_.size();
}
inline int CMsgGCToGCGrantAccountRolledItems_Item::loot_lists_size() const {
  return _internal_loot_lists_size();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_loot_lists() {
  _impl_.loot_lists_.Clear();
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists() {
  std::string* _s = _internal_add_loot_lists();
  // @@protoc_insertion_point(field_add_mutable:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return _s;
}
inline const std::string& CMsgGCToGCGrantAccountRolledItems_Item::_internal_loot_lists(int index) const {
  return _impl_.loot_lists_.Get(index);
}
inline const std::string& CMsgGCToGCGrantAccountRolledItems_Item::loot_lists(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return _internal_loot_lists(index);
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item::mutable_loot_lists(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return _impl_.loot_lists_.Mutable(index);
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, const std::string& value) {
  _impl_.loot_lists_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, std::string&& value) {
  _impl_.loot_lists_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.loot_lists_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, const char* value, size_t size) {
  _impl_.loot_lists_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline std::string* CMsgGCToGCGrantAccountRolledItems_Item::_internal_add_loot_lists() {
  return _impl_.loot_lists_.Add();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(const std::string& value) {
  _impl_.loot_lists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(std::string&& value) {
  _impl_.loot_lists_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.loot_lists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(const char* value, size_t size) {
  _impl_.loot_lists_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgGCToGCGrantAccountRolledItems_Item::loot_lists() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return _impl_.loot_lists_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgGCToGCGrantAccountRolledItems_Item::mutable_loot_lists() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return &_impl_.loot_lists_;
}

// optional bool ignore_limit = 3;
inline bool CMsgGCToGCGrantAccountRolledItems_Item::_internal_has_ignore_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item::has_ignore_limit() const {
  return _internal_has_ignore_limit();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_ignore_limit() {
  _impl_.ignore_limit_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item::_internal_ignore_limit() const {
  return _impl_.ignore_limit_;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item::ignore_limit() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.ignore_limit)
  return _internal_ignore_limit();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::_internal_set_ignore_limit(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ignore_limit_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_ignore_limit(bool value) {
  _internal_set_ignore_limit(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.ignore_limit)
}

// optional uint32 origin = 4;
inline bool CMsgGCToGCGrantAccountRolledItems_Item::_internal_has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item::has_origin() const {
  return _internal_has_origin();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_origin() {
  _impl_.origin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item::_internal_origin() const {
  return _impl_.origin_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item::origin() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.origin)
  return _internal_origin();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::_internal_set_origin(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.origin_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_origin(uint32_t value) {
  _internal_set_origin(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.origin)
}

// repeated .CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
inline int CMsgGCToGCGrantAccountRolledItems_Item::_internal_dynamic_attributes_size() const {
  return _impl_.dynamic_attributes_.size();
}
inline int CMsgGCToGCGrantAccountRolledItems_Item::dynamic_attributes_size() const {
  return _internal_dynamic_attributes_size();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_dynamic_attributes() {
  _impl_.dynamic_attributes_.Clear();
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item::mutable_dynamic_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return _impl_.dynamic_attributes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >*
CMsgGCToGCGrantAccountRolledItems_Item::mutable_dynamic_attributes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return &_impl_.dynamic_attributes_;
}
inline const ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item::_internal_dynamic_attributes(int index) const {
  return _impl_.dynamic_attributes_.Get(index);
}
inline const ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item::dynamic_attributes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return _internal_dynamic_attributes(index);
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item::_internal_add_dynamic_attributes() {
  return _impl_.dynamic_attributes_.Add();
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item::add_dynamic_attributes() {
  ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* _add = _internal_add_dynamic_attributes();
  // @@protoc_insertion_point(field_add:CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >&
CMsgGCToGCGrantAccountRolledItems_Item::dynamic_attributes() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return _impl_.dynamic_attributes_;
}

// repeated .CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
inline int CMsgGCToGCGrantAccountRolledItems_Item::_internal_additional_audit_entries_size() const {
  return _impl_.additional_audit_entries_.size();
}
inline int CMsgGCToGCGrantAccountRolledItems_Item::additional_audit_entries_size() const {
  return _internal_additional_audit_entries_size();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_additional_audit_entries() {
  _impl_.additional_audit_entries_.Clear();
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item::mutable_additional_audit_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return _impl_.additional_audit_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >*
CMsgGCToGCGrantAccountRolledItems_Item::mutable_additional_audit_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return &_impl_.additional_audit_entries_;
}
inline const ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item::_internal_additional_audit_entries(int index) const {
  return _impl_.additional_audit_entries_.Get(index);
}
inline const ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item::additional_audit_entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return _internal_additional_audit_entries(index);
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item::_internal_add_additional_audit_entries() {
  return _impl_.additional_audit_entries_.Add();
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item::add_additional_audit_entries() {
  ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* _add = _internal_add_additional_audit_entries();
  // @@protoc_insertion_point(field_add:CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >&
CMsgGCToGCGrantAccountRolledItems_Item::additional_audit_entries() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return _impl_.additional_audit_entries_;
}

// optional uint32 inventory_token = 7;
inline bool CMsgGCToGCGrantAccountRolledItems_Item::_internal_has_inventory_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems_Item::has_inventory_token() const {
  return _internal_has_inventory_token();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::clear_inventory_token() {
  _impl_.inventory_token_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item::_internal_inventory_token() const {
  return _impl_.inventory_token_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems_Item::inventory_token() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.Item.inventory_token)
  return _internal_inventory_token();
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::_internal_set_inventory_token(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.inventory_token_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems_Item::set_inventory_token(uint32_t value) {
  _internal_set_inventory_token(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.Item.inventory_token)
}

// -------------------------------------------------------------------

// CMsgGCToGCGrantAccountRolledItems

// optional uint32 account_id = 1;
inline bool CMsgGCToGCGrantAccountRolledItems::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCGrantAccountRolledItems::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCGrantAccountRolledItems::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.account_id)
}

// repeated .CMsgGCToGCGrantAccountRolledItems.Item items = 2;
inline int CMsgGCToGCGrantAccountRolledItems::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int CMsgGCToGCGrantAccountRolledItems::items_size() const {
  return _internal_items_size();
}
inline void CMsgGCToGCGrantAccountRolledItems::clear_items() {
  _impl_.items_.Clear();
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCGrantAccountRolledItems.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item >*
CMsgGCToGCGrantAccountRolledItems::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGrantAccountRolledItems.items)
  return &_impl_.items_;
}
inline const ::CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.items)
  return _internal_items(index);
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems::add_items() {
  ::CMsgGCToGCGrantAccountRolledItems_Item* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:CMsgGCToGCGrantAccountRolledItems.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCGrantAccountRolledItems_Item >&
CMsgGCToGCGrantAccountRolledItems::items() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGrantAccountRolledItems.items)
  return _impl_.items_;
}

// optional uint32 audit_action = 3;
inline bool CMsgGCToGCGrantAccountRolledItems::_internal_has_audit_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems::has_audit_action() const {
  return _internal_has_audit_action();
}
inline void CMsgGCToGCGrantAccountRolledItems::clear_audit_action() {
  _impl_.audit_action_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems::_internal_audit_action() const {
  return _impl_.audit_action_;
}
inline uint32_t CMsgGCToGCGrantAccountRolledItems::audit_action() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.audit_action)
  return _internal_audit_action();
}
inline void CMsgGCToGCGrantAccountRolledItems::_internal_set_audit_action(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.audit_action_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems::set_audit_action(uint32_t value) {
  _internal_set_audit_action(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.audit_action)
}

// optional uint64 audit_data = 4;
inline bool CMsgGCToGCGrantAccountRolledItems::_internal_has_audit_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantAccountRolledItems::has_audit_data() const {
  return _internal_has_audit_data();
}
inline void CMsgGCToGCGrantAccountRolledItems::clear_audit_data() {
  _impl_.audit_data_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgGCToGCGrantAccountRolledItems::_internal_audit_data() const {
  return _impl_.audit_data_;
}
inline uint64_t CMsgGCToGCGrantAccountRolledItems::audit_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantAccountRolledItems.audit_data)
  return _internal_audit_data();
}
inline void CMsgGCToGCGrantAccountRolledItems::_internal_set_audit_data(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.audit_data_ = value;
}
inline void CMsgGCToGCGrantAccountRolledItems::set_audit_data(uint64_t value) {
  _internal_set_audit_data(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantAccountRolledItems.audit_data)
}

// -------------------------------------------------------------------

// CMsgGCToGCBetaDeleteItems

// optional uint32 account_id = 1;
inline bool CMsgGCToGCBetaDeleteItems::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCBetaDeleteItems::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCBetaDeleteItems::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCBetaDeleteItems::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCBetaDeleteItems::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBetaDeleteItems.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCBetaDeleteItems::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCBetaDeleteItems::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBetaDeleteItems.account_id)
}

// repeated uint64 item_ids = 2;
inline int CMsgGCToGCBetaDeleteItems::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgGCToGCBetaDeleteItems::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgGCToGCBetaDeleteItems::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgGCToGCBetaDeleteItems::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgGCToGCBetaDeleteItems::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBetaDeleteItems.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgGCToGCBetaDeleteItems::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBetaDeleteItems.item_ids)
}
inline void CMsgGCToGCBetaDeleteItems::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgGCToGCBetaDeleteItems::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCBetaDeleteItems.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToGCBetaDeleteItems::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToGCBetaDeleteItems::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCBetaDeleteItems.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToGCBetaDeleteItems::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToGCBetaDeleteItems::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCBetaDeleteItems.item_ids)
  return _internal_mutable_item_ids();
}

// repeated uint32 item_defs = 3;
inline int CMsgGCToGCBetaDeleteItems::_internal_item_defs_size() const {
  return _impl_.item_defs_.size();
}
inline int CMsgGCToGCBetaDeleteItems::item_defs_size() const {
  return _internal_item_defs_size();
}
inline void CMsgGCToGCBetaDeleteItems::clear_item_defs() {
  _impl_.item_defs_.Clear();
}
inline uint32_t CMsgGCToGCBetaDeleteItems::_internal_item_defs(int index) const {
  return _impl_.item_defs_.Get(index);
}
inline uint32_t CMsgGCToGCBetaDeleteItems::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBetaDeleteItems.item_defs)
  return _internal_item_defs(index);
}
inline void CMsgGCToGCBetaDeleteItems::set_item_defs(int index, uint32_t value) {
  _impl_.item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBetaDeleteItems.item_defs)
}
inline void CMsgGCToGCBetaDeleteItems::_internal_add_item_defs(uint32_t value) {
  _impl_.item_defs_.Add(value);
}
inline void CMsgGCToGCBetaDeleteItems::add_item_defs(uint32_t value) {
  _internal_add_item_defs(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCBetaDeleteItems.item_defs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCBetaDeleteItems::_internal_item_defs() const {
  return _impl_.item_defs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCBetaDeleteItems::item_defs() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCBetaDeleteItems.item_defs)
  return _internal_item_defs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCBetaDeleteItems::_internal_mutable_item_defs() {
  return &_impl_.item_defs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCBetaDeleteItems::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCBetaDeleteItems.item_defs)
  return _internal_mutable_item_defs();
}

// -------------------------------------------------------------------

// CMsgGCToGCGrantSelfMadeItemToAccount

// optional uint32 item_def_index = 1;
inline bool CMsgGCToGCGrantSelfMadeItemToAccount::_internal_has_item_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantSelfMadeItemToAccount::has_item_def_index() const {
  return _internal_has_item_def_index();
}
inline void CMsgGCToGCGrantSelfMadeItemToAccount::clear_item_def_index() {
  _impl_.item_def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGrantSelfMadeItemToAccount::_internal_item_def_index() const {
  return _impl_.item_def_index_;
}
inline uint32_t CMsgGCToGCGrantSelfMadeItemToAccount::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantSelfMadeItemToAccount.item_def_index)
  return _internal_item_def_index();
}
inline void CMsgGCToGCGrantSelfMadeItemToAccount::_internal_set_item_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_index_ = value;
}
inline void CMsgGCToGCGrantSelfMadeItemToAccount::set_item_def_index(uint32_t value) {
  _internal_set_item_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantSelfMadeItemToAccount.item_def_index)
}

// optional uint32 accountid = 2;
inline bool CMsgGCToGCGrantSelfMadeItemToAccount::_internal_has_accountid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCGrantSelfMadeItemToAccount::has_accountid() const {
  return _internal_has_accountid();
}
inline void CMsgGCToGCGrantSelfMadeItemToAccount::clear_accountid() {
  _impl_.accountid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCGrantSelfMadeItemToAccount::_internal_accountid() const {
  return _impl_.accountid_;
}
inline uint32_t CMsgGCToGCGrantSelfMadeItemToAccount::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGrantSelfMadeItemToAccount.accountid)
  return _internal_accountid();
}
inline void CMsgGCToGCGrantSelfMadeItemToAccount::_internal_set_accountid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.accountid_ = value;
}
inline void CMsgGCToGCGrantSelfMadeItemToAccount::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGrantSelfMadeItemToAccount.accountid)
}

// -------------------------------------------------------------------

// CMsgUseItem

// optional uint64 item_id = 1;
inline bool CMsgUseItem::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgUseItem::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgUseItem::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgUseItem::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgUseItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.item_id)
  return _internal_item_id();
}
inline void CMsgUseItem::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgUseItem::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.item_id)
}

// optional fixed64 target_steam_id = 2;
inline bool CMsgUseItem::_internal_has_target_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgUseItem::has_target_steam_id() const {
  return _internal_has_target_steam_id();
}
inline void CMsgUseItem::clear_target_steam_id() {
  _impl_.target_steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgUseItem::_internal_target_steam_id() const {
  return _impl_.target_steam_id_;
}
inline uint64_t CMsgUseItem::target_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.target_steam_id)
  return _internal_target_steam_id();
}
inline void CMsgUseItem::_internal_set_target_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_steam_id_ = value;
}
inline void CMsgUseItem::set_target_steam_id(uint64_t value) {
  _internal_set_target_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.target_steam_id)
}

// repeated uint32 gift__potential_targets = 3;
inline int CMsgUseItem::_internal_gift__potential_targets_size() const {
  return _impl_.gift__potential_targets_.size();
}
inline int CMsgUseItem::gift__potential_targets_size() const {
  return _internal_gift__potential_targets_size();
}
inline void CMsgUseItem::clear_gift__potential_targets() {
  _impl_.gift__potential_targets_.Clear();
}
inline uint32_t CMsgUseItem::_internal_gift__potential_targets(int index) const {
  return _impl_.gift__potential_targets_.Get(index);
}
inline uint32_t CMsgUseItem::gift__potential_targets(int index) const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.gift__potential_targets)
  return _internal_gift__potential_targets(index);
}
inline void CMsgUseItem::set_gift__potential_targets(int index, uint32_t value) {
  _impl_.gift__potential_targets_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.gift__potential_targets)
}
inline void CMsgUseItem::_internal_add_gift__potential_targets(uint32_t value) {
  _impl_.gift__potential_targets_.Add(value);
}
inline void CMsgUseItem::add_gift__potential_targets(uint32_t value) {
  _internal_add_gift__potential_targets(value);
  // @@protoc_insertion_point(field_add:CMsgUseItem.gift__potential_targets)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgUseItem::_internal_gift__potential_targets() const {
  return _impl_.gift__potential_targets_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgUseItem::gift__potential_targets() const {
  // @@protoc_insertion_point(field_list:CMsgUseItem.gift__potential_targets)
  return _internal_gift__potential_targets();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgUseItem::_internal_mutable_gift__potential_targets() {
  return &_impl_.gift__potential_targets_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgUseItem::mutable_gift__potential_targets() {
  // @@protoc_insertion_point(field_mutable_list:CMsgUseItem.gift__potential_targets)
  return _internal_mutable_gift__potential_targets();
}

// optional uint32 duel__class_lock = 4;
inline bool CMsgUseItem::_internal_has_duel__class_lock() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgUseItem::has_duel__class_lock() const {
  return _internal_has_duel__class_lock();
}
inline void CMsgUseItem::clear_duel__class_lock() {
  _impl_.duel__class_lock_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgUseItem::_internal_duel__class_lock() const {
  return _impl_.duel__class_lock_;
}
inline uint32_t CMsgUseItem::duel__class_lock() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.duel__class_lock)
  return _internal_duel__class_lock();
}
inline void CMsgUseItem::_internal_set_duel__class_lock(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.duel__class_lock_ = value;
}
inline void CMsgUseItem::set_duel__class_lock(uint32_t value) {
  _internal_set_duel__class_lock(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.duel__class_lock)
}

// optional uint64 initiator_steam_id = 5;
inline bool CMsgUseItem::_internal_has_initiator_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgUseItem::has_initiator_steam_id() const {
  return _internal_has_initiator_steam_id();
}
inline void CMsgUseItem::clear_initiator_steam_id() {
  _impl_.initiator_steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgUseItem::_internal_initiator_steam_id() const {
  return _impl_.initiator_steam_id_;
}
inline uint64_t CMsgUseItem::initiator_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.initiator_steam_id)
  return _internal_initiator_steam_id();
}
inline void CMsgUseItem::_internal_set_initiator_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.initiator_steam_id_ = value;
}
inline void CMsgUseItem::set_initiator_steam_id(uint64_t value) {
  _internal_set_initiator_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.initiator_steam_id)
}

// optional bool itempack__ack_immediately = 6;
inline bool CMsgUseItem::_internal_has_itempack__ack_immediately() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgUseItem::has_itempack__ack_immediately() const {
  return _internal_has_itempack__ack_immediately();
}
inline void CMsgUseItem::clear_itempack__ack_immediately() {
  _impl_.itempack__ack_immediately_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgUseItem::_internal_itempack__ack_immediately() const {
  return _impl_.itempack__ack_immediately_;
}
inline bool CMsgUseItem::itempack__ack_immediately() const {
  // @@protoc_insertion_point(field_get:CMsgUseItem.itempack__ack_immediately)
  return _internal_itempack__ack_immediately();
}
inline void CMsgUseItem::_internal_set_itempack__ack_immediately(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.itempack__ack_immediately_ = value;
}
inline void CMsgUseItem::set_itempack__ack_immediately(bool value) {
  _internal_set_itempack__ack_immediately(value);
  // @@protoc_insertion_point(field_set:CMsgUseItem.itempack__ack_immediately)
}

// -------------------------------------------------------------------

// CMsgServerUseItem

// optional uint32 initiator_account_id = 1;
inline bool CMsgServerUseItem::_internal_has_initiator_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgServerUseItem::has_initiator_account_id() const {
  return _internal_has_initiator_account_id();
}
inline void CMsgServerUseItem::clear_initiator_account_id() {
  _impl_.initiator_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgServerUseItem::_internal_initiator_account_id() const {
  return _impl_.initiator_account_id_;
}
inline uint32_t CMsgServerUseItem::initiator_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgServerUseItem.initiator_account_id)
  return _internal_initiator_account_id();
}
inline void CMsgServerUseItem::_internal_set_initiator_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.initiator_account_id_ = value;
}
inline void CMsgServerUseItem::set_initiator_account_id(uint32_t value) {
  _internal_set_initiator_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgServerUseItem.initiator_account_id)
}

// optional .CMsgUseItem use_item_msg = 2;
inline bool CMsgServerUseItem::_internal_has_use_item_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.use_item_msg_ != nullptr);
  return value;
}
inline bool CMsgServerUseItem::has_use_item_msg() const {
  return _internal_has_use_item_msg();
}
inline void CMsgServerUseItem::clear_use_item_msg() {
  if (_impl_.use_item_msg_ != nullptr) _impl_.use_item_msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgUseItem& CMsgServerUseItem::_internal_use_item_msg() const {
  const ::CMsgUseItem* p = _impl_.use_item_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgUseItem&>(
      ::_CMsgUseItem_default_instance_);
}
inline const ::CMsgUseItem& CMsgServerUseItem::use_item_msg() const {
  // @@protoc_insertion_point(field_get:CMsgServerUseItem.use_item_msg)
  return _internal_use_item_msg();
}
inline void CMsgServerUseItem::unsafe_arena_set_allocated_use_item_msg(
    ::CMsgUseItem* use_item_msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.use_item_msg_);
  }
  _impl_.use_item_msg_ = use_item_msg;
  if (use_item_msg) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgServerUseItem.use_item_msg)
}
inline ::CMsgUseItem* CMsgServerUseItem::release_use_item_msg() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgUseItem* temp = _impl_.use_item_msg_;
  _impl_.use_item_msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgUseItem* CMsgServerUseItem::unsafe_arena_release_use_item_msg() {
  // @@protoc_insertion_point(field_release:CMsgServerUseItem.use_item_msg)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgUseItem* temp = _impl_.use_item_msg_;
  _impl_.use_item_msg_ = nullptr;
  return temp;
}
inline ::CMsgUseItem* CMsgServerUseItem::_internal_mutable_use_item_msg() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.use_item_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgUseItem>(GetArenaForAllocation());
    _impl_.use_item_msg_ = p;
  }
  return _impl_.use_item_msg_;
}
inline ::CMsgUseItem* CMsgServerUseItem::mutable_use_item_msg() {
  ::CMsgUseItem* _msg = _internal_mutable_use_item_msg();
  // @@protoc_insertion_point(field_mutable:CMsgServerUseItem.use_item_msg)
  return _msg;
}
inline void CMsgServerUseItem::set_allocated_use_item_msg(::CMsgUseItem* use_item_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.use_item_msg_;
  }
  if (use_item_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(use_item_msg);
    if (message_arena != submessage_arena) {
      use_item_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, use_item_msg, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.use_item_msg_ = use_item_msg;
  // @@protoc_insertion_point(field_set_allocated:CMsgServerUseItem.use_item_msg)
}

// -------------------------------------------------------------------

// CMsgUseMultipleItems

// repeated uint64 item_ids = 1;
inline int CMsgUseMultipleItems::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgUseMultipleItems::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgUseMultipleItems::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgUseMultipleItems::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgUseMultipleItems::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgUseMultipleItems.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgUseMultipleItems::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgUseMultipleItems.item_ids)
}
inline void CMsgUseMultipleItems::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgUseMultipleItems::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgUseMultipleItems.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgUseMultipleItems::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgUseMultipleItems::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgUseMultipleItems.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgUseMultipleItems::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgUseMultipleItems::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgUseMultipleItems.item_ids)
  return _internal_mutable_item_ids();
}

// -------------------------------------------------------------------

// CGCStoreRechargeRedirect_LineItem

// optional uint32 item_def_id = 1;
inline bool CGCStoreRechargeRedirect_LineItem::_internal_has_item_def_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCStoreRechargeRedirect_LineItem::has_item_def_id() const {
  return _internal_has_item_def_id();
}
inline void CGCStoreRechargeRedirect_LineItem::clear_item_def_id() {
  _impl_.item_def_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CGCStoreRechargeRedirect_LineItem::_internal_item_def_id() const {
  return _impl_.item_def_id_;
}
inline uint32_t CGCStoreRechargeRedirect_LineItem::item_def_id() const {
  // @@protoc_insertion_point(field_get:CGCStoreRechargeRedirect_LineItem.item_def_id)
  return _internal_item_def_id();
}
inline void CGCStoreRechargeRedirect_LineItem::_internal_set_item_def_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_id_ = value;
}
inline void CGCStoreRechargeRedirect_LineItem::set_item_def_id(uint32_t value) {
  _internal_set_item_def_id(value);
  // @@protoc_insertion_point(field_set:CGCStoreRechargeRedirect_LineItem.item_def_id)
}

// optional uint32 quantity = 2;
inline bool CGCStoreRechargeRedirect_LineItem::_internal_has_quantity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCStoreRechargeRedirect_LineItem::has_quantity() const {
  return _internal_has_quantity();
}
inline void CGCStoreRechargeRedirect_LineItem::clear_quantity() {
  _impl_.quantity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CGCStoreRechargeRedirect_LineItem::_internal_quantity() const {
  return _impl_.quantity_;
}
inline uint32_t CGCStoreRechargeRedirect_LineItem::quantity() const {
  // @@protoc_insertion_point(field_get:CGCStoreRechargeRedirect_LineItem.quantity)
  return _internal_quantity();
}
inline void CGCStoreRechargeRedirect_LineItem::_internal_set_quantity(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.quantity_ = value;
}
inline void CGCStoreRechargeRedirect_LineItem::set_quantity(uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CGCStoreRechargeRedirect_LineItem.quantity)
}

// -------------------------------------------------------------------

// CMsgGCEconSQLWorkItemEmbeddedRollbackData

// optional uint32 account_id = 1;
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCEconSQLWorkItemEmbeddedRollbackData.account_id)
  return _internal_account_id();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCEconSQLWorkItemEmbeddedRollbackData.account_id)
}

// optional uint64 deleted_item_id = 2;
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_has_deleted_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_deleted_item_id() const {
  return _internal_has_deleted_item_id();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_deleted_item_id() {
  _impl_.deleted_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_deleted_item_id() const {
  return _impl_.deleted_item_id_;
}
inline uint64_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::deleted_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCEconSQLWorkItemEmbeddedRollbackData.deleted_item_id)
  return _internal_deleted_item_id();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_set_deleted_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.deleted_item_id_ = value;
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_deleted_item_id(uint64_t value) {
  _internal_set_deleted_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCEconSQLWorkItemEmbeddedRollbackData.deleted_item_id)
}

// optional uint32 old_audit_action = 3;
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_has_old_audit_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_old_audit_action() const {
  return _internal_has_old_audit_action();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_old_audit_action() {
  _impl_.old_audit_action_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_old_audit_action() const {
  return _impl_.old_audit_action_;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::old_audit_action() const {
  // @@protoc_insertion_point(field_get:CMsgGCEconSQLWorkItemEmbeddedRollbackData.old_audit_action)
  return _internal_old_audit_action();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_set_old_audit_action(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.old_audit_action_ = value;
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_old_audit_action(uint32_t value) {
  _internal_set_old_audit_action(value);
  // @@protoc_insertion_point(field_set:CMsgGCEconSQLWorkItemEmbeddedRollbackData.old_audit_action)
}

// optional uint32 new_audit_action = 4;
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_has_new_audit_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_new_audit_action() const {
  return _internal_has_new_audit_action();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_new_audit_action() {
  _impl_.new_audit_action_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_new_audit_action() const {
  return _impl_.new_audit_action_;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::new_audit_action() const {
  // @@protoc_insertion_point(field_get:CMsgGCEconSQLWorkItemEmbeddedRollbackData.new_audit_action)
  return _internal_new_audit_action();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_set_new_audit_action(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.new_audit_action_ = value;
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_new_audit_action(uint32_t value) {
  _internal_set_new_audit_action(value);
  // @@protoc_insertion_point(field_set:CMsgGCEconSQLWorkItemEmbeddedRollbackData.new_audit_action)
}

// optional uint32 expected_audit_action = 5;
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_has_expected_audit_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_expected_audit_action() const {
  return _internal_has_expected_audit_action();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_expected_audit_action() {
  _impl_.expected_audit_action_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_expected_audit_action() const {
  return _impl_.expected_audit_action_;
}
inline uint32_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::expected_audit_action() const {
  // @@protoc_insertion_point(field_get:CMsgGCEconSQLWorkItemEmbeddedRollbackData.expected_audit_action)
  return _internal_expected_audit_action();
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::_internal_set_expected_audit_action(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.expected_audit_action_ = value;
}
inline void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_expected_audit_action(uint32_t value) {
  _internal_set_expected_audit_action(value);
  // @@protoc_insertion_point(field_set:CMsgGCEconSQLWorkItemEmbeddedRollbackData.expected_audit_action)
}

// -------------------------------------------------------------------

// CMsgCraftStatue

// optional uint32 heroid = 1;
inline bool CMsgCraftStatue::_internal_has_heroid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgCraftStatue::has_heroid() const {
  return _internal_has_heroid();
}
inline void CMsgCraftStatue::clear_heroid() {
  _impl_.heroid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgCraftStatue::_internal_heroid() const {
  return _impl_.heroid_;
}
inline uint32_t CMsgCraftStatue::heroid() const {
  // @@protoc_insertion_point(field_get:CMsgCraftStatue.heroid)
  return _internal_heroid();
}
inline void CMsgCraftStatue::_internal_set_heroid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.heroid_ = value;
}
inline void CMsgCraftStatue::set_heroid(uint32_t value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:CMsgCraftStatue.heroid)
}

// optional string sequencename = 2;
inline bool CMsgCraftStatue::_internal_has_sequencename() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCraftStatue::has_sequencename() const {
  return _internal_has_sequencename();
}
inline void CMsgCraftStatue::clear_sequencename() {
  _impl_.sequencename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgCraftStatue::sequencename() const {
  // @@protoc_insertion_point(field_get:CMsgCraftStatue.sequencename)
  return _internal_sequencename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgCraftStatue::set_sequencename(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.sequencename_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgCraftStatue.sequencename)
}
inline std::string* CMsgCraftStatue::mutable_sequencename() {
  std::string* _s = _internal_mutable_sequencename();
  // @@protoc_insertion_point(field_mutable:CMsgCraftStatue.sequencename)
  return _s;
}
inline const std::string& CMsgCraftStatue::_internal_sequencename() const {
  return _impl_.sequencename_.Get();
}
inline void CMsgCraftStatue::_internal_set_sequencename(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sequencename_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgCraftStatue::_internal_mutable_sequencename() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.sequencename_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgCraftStatue::release_sequencename() {
  // @@protoc_insertion_point(field_release:CMsgCraftStatue.sequencename)
  if (!_internal_has_sequencename()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.sequencename_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sequencename_.IsDefault()) {
    _impl_.sequencename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgCraftStatue::set_allocated_sequencename(std::string* sequencename) {
  if (sequencename != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.sequencename_.SetAllocated(sequencename, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sequencename_.IsDefault()) {
    _impl_.sequencename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgCraftStatue.sequencename)
}

// optional float cycle = 3;
inline bool CMsgCraftStatue::_internal_has_cycle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgCraftStatue::has_cycle() const {
  return _internal_has_cycle();
}
inline void CMsgCraftStatue::clear_cycle() {
  _impl_.cycle_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgCraftStatue::_internal_cycle() const {
  return _impl_.cycle_;
}
inline float CMsgCraftStatue::cycle() const {
  // @@protoc_insertion_point(field_get:CMsgCraftStatue.cycle)
  return _internal_cycle();
}
inline void CMsgCraftStatue::_internal_set_cycle(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.cycle_ = value;
}
inline void CMsgCraftStatue::set_cycle(float value) {
  _internal_set_cycle(value);
  // @@protoc_insertion_point(field_set:CMsgCraftStatue.cycle)
}

// optional string description = 4;
inline bool CMsgCraftStatue::_internal_has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCraftStatue::has_description() const {
  return _internal_has_description();
}
inline void CMsgCraftStatue::clear_description() {
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgCraftStatue::description() const {
  // @@protoc_insertion_point(field_get:CMsgCraftStatue.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgCraftStatue::set_description(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgCraftStatue.description)
}
inline std::string* CMsgCraftStatue::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:CMsgCraftStatue.description)
  return _s;
}
inline const std::string& CMsgCraftStatue::_internal_description() const {
  return _impl_.description_.Get();
}
inline void CMsgCraftStatue::_internal_set_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgCraftStatue::_internal_mutable_description() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgCraftStatue::release_description() {
  // @@protoc_insertion_point(field_release:CMsgCraftStatue.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.description_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgCraftStatue::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgCraftStatue.description)
}

// optional uint32 pedestal_itemdef = 5;
inline bool CMsgCraftStatue::_internal_has_pedestal_itemdef() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgCraftStatue::has_pedestal_itemdef() const {
  return _internal_has_pedestal_itemdef();
}
inline void CMsgCraftStatue::clear_pedestal_itemdef() {
  _impl_.pedestal_itemdef_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgCraftStatue::_internal_pedestal_itemdef() const {
  return _impl_.pedestal_itemdef_;
}
inline uint32_t CMsgCraftStatue::pedestal_itemdef() const {
  // @@protoc_insertion_point(field_get:CMsgCraftStatue.pedestal_itemdef)
  return _internal_pedestal_itemdef();
}
inline void CMsgCraftStatue::_internal_set_pedestal_itemdef(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.pedestal_itemdef_ = value;
}
inline void CMsgCraftStatue::set_pedestal_itemdef(uint32_t value) {
  _internal_set_pedestal_itemdef(value);
  // @@protoc_insertion_point(field_set:CMsgCraftStatue.pedestal_itemdef)
}

// optional uint64 toolid = 6;
inline bool CMsgCraftStatue::_internal_has_toolid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgCraftStatue::has_toolid() const {
  return _internal_has_toolid();
}
inline void CMsgCraftStatue::clear_toolid() {
  _impl_.toolid_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CMsgCraftStatue::_internal_toolid() const {
  return _impl_.toolid_;
}
inline uint64_t CMsgCraftStatue::toolid() const {
  // @@protoc_insertion_point(field_get:CMsgCraftStatue.toolid)
  return _internal_toolid();
}
inline void CMsgCraftStatue::_internal_set_toolid(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.toolid_ = value;
}
inline void CMsgCraftStatue::set_toolid(uint64_t value) {
  _internal_set_toolid(value);
  // @@protoc_insertion_point(field_set:CMsgCraftStatue.toolid)
}

// -------------------------------------------------------------------

// CMsgRedeemCode

// optional string code = 1;
inline bool CMsgRedeemCode::_internal_has_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRedeemCode::has_code() const {
  return _internal_has_code();
}
inline void CMsgRedeemCode::clear_code() {
  _impl_.code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgRedeemCode::code() const {
  // @@protoc_insertion_point(field_get:CMsgRedeemCode.code)
  return _internal_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgRedeemCode::set_code(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.code_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgRedeemCode.code)
}
inline std::string* CMsgRedeemCode::mutable_code() {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:CMsgRedeemCode.code)
  return _s;
}
inline const std::string& CMsgRedeemCode::_internal_code() const {
  return _impl_.code_.Get();
}
inline void CMsgRedeemCode::_internal_set_code(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.code_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgRedeemCode::_internal_mutable_code() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.code_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgRedeemCode::release_code() {
  // @@protoc_insertion_point(field_release:CMsgRedeemCode.code)
  if (!_internal_has_code()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.code_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.code_.IsDefault()) {
    _impl_.code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgRedeemCode::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.code_.SetAllocated(code, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.code_.IsDefault()) {
    _impl_.code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgRedeemCode.code)
}

// -------------------------------------------------------------------

// CMsgRedeemCodeResponse

// optional uint32 response = 1;
inline bool CMsgRedeemCodeResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgRedeemCodeResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgRedeemCodeResponse::clear_response() {
  _impl_.response_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgRedeemCodeResponse::_internal_response() const {
  return _impl_.response_;
}
inline uint32_t CMsgRedeemCodeResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgRedeemCodeResponse.response)
  return _internal_response();
}
inline void CMsgRedeemCodeResponse::_internal_set_response(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgRedeemCodeResponse::set_response(uint32_t value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgRedeemCodeResponse.response)
}

// optional uint64 item_id = 2;
inline bool CMsgRedeemCodeResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgRedeemCodeResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgRedeemCodeResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgRedeemCodeResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgRedeemCodeResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgRedeemCodeResponse.item_id)
  return _internal_item_id();
}
inline void CMsgRedeemCodeResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgRedeemCodeResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgRedeemCodeResponse.item_id)
}

// -------------------------------------------------------------------

// CMsgDevNewItemRequest

// optional string item_def_name = 3;
inline bool CMsgDevNewItemRequest::_internal_has_item_def_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevNewItemRequest::has_item_def_name() const {
  return _internal_has_item_def_name();
}
inline void CMsgDevNewItemRequest::clear_item_def_name() {
  _impl_.item_def_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDevNewItemRequest::item_def_name() const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.item_def_name)
  return _internal_item_def_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgDevNewItemRequest::set_item_def_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.item_def_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.item_def_name)
}
inline std::string* CMsgDevNewItemRequest::mutable_item_def_name() {
  std::string* _s = _internal_mutable_item_def_name();
  // @@protoc_insertion_point(field_mutable:CMsgDevNewItemRequest.item_def_name)
  return _s;
}
inline const std::string& CMsgDevNewItemRequest::_internal_item_def_name() const {
  return _impl_.item_def_name_.Get();
}
inline void CMsgDevNewItemRequest::_internal_set_item_def_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgDevNewItemRequest::_internal_mutable_item_def_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.item_def_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgDevNewItemRequest::release_item_def_name() {
  // @@protoc_insertion_point(field_release:CMsgDevNewItemRequest.item_def_name)
  if (!_internal_has_item_def_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.item_def_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.item_def_name_.IsDefault()) {
    _impl_.item_def_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgDevNewItemRequest::set_allocated_item_def_name(std::string* item_def_name) {
  if (item_def_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.item_def_name_.SetAllocated(item_def_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.item_def_name_.IsDefault()) {
    _impl_.item_def_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgDevNewItemRequest.item_def_name)
}

// optional string loot_list_name = 4;
inline bool CMsgDevNewItemRequest::_internal_has_loot_list_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDevNewItemRequest::has_loot_list_name() const {
  return _internal_has_loot_list_name();
}
inline void CMsgDevNewItemRequest::clear_loot_list_name() {
  _impl_.loot_list_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgDevNewItemRequest::loot_list_name() const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.loot_list_name)
  return _internal_loot_list_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgDevNewItemRequest::set_loot_list_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.loot_list_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.loot_list_name)
}
inline std::string* CMsgDevNewItemRequest::mutable_loot_list_name() {
  std::string* _s = _internal_mutable_loot_list_name();
  // @@protoc_insertion_point(field_mutable:CMsgDevNewItemRequest.loot_list_name)
  return _s;
}
inline const std::string& CMsgDevNewItemRequest::_internal_loot_list_name() const {
  return _impl_.loot_list_name_.Get();
}
inline void CMsgDevNewItemRequest::_internal_set_loot_list_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.loot_list_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgDevNewItemRequest::_internal_mutable_loot_list_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.loot_list_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgDevNewItemRequest::release_loot_list_name() {
  // @@protoc_insertion_point(field_release:CMsgDevNewItemRequest.loot_list_name)
  if (!_internal_has_loot_list_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.loot_list_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.loot_list_name_.IsDefault()) {
    _impl_.loot_list_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgDevNewItemRequest::set_allocated_loot_list_name(std::string* loot_list_name) {
  if (loot_list_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.loot_list_name_.SetAllocated(loot_list_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.loot_list_name_.IsDefault()) {
    _impl_.loot_list_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgDevNewItemRequest.loot_list_name)
}

// repeated string attr_def_name = 5;
inline int CMsgDevNewItemRequest::_internal_attr_def_name_size() const {
  return _impl_.attr_def_name_.size();
}
inline int CMsgDevNewItemRequest::attr_def_name_size() const {
  return _internal_attr_def_name_size();
}
inline void CMsgDevNewItemRequest::clear_attr_def_name() {
  _impl_.attr_def_name_.Clear();
}
inline std::string* CMsgDevNewItemRequest::add_attr_def_name() {
  std::string* _s = _internal_add_attr_def_name();
  // @@protoc_insertion_point(field_add_mutable:CMsgDevNewItemRequest.attr_def_name)
  return _s;
}
inline const std::string& CMsgDevNewItemRequest::_internal_attr_def_name(int index) const {
  return _impl_.attr_def_name_.Get(index);
}
inline const std::string& CMsgDevNewItemRequest::attr_def_name(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.attr_def_name)
  return _internal_attr_def_name(index);
}
inline std::string* CMsgDevNewItemRequest::mutable_attr_def_name(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDevNewItemRequest.attr_def_name)
  return _impl_.attr_def_name_.Mutable(index);
}
inline void CMsgDevNewItemRequest::set_attr_def_name(int index, const std::string& value) {
  _impl_.attr_def_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.attr_def_name)
}
inline void CMsgDevNewItemRequest::set_attr_def_name(int index, std::string&& value) {
  _impl_.attr_def_name_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.attr_def_name)
}
inline void CMsgDevNewItemRequest::set_attr_def_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.attr_def_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDevNewItemRequest.attr_def_name)
}
inline void CMsgDevNewItemRequest::set_attr_def_name(int index, const char* value, size_t size) {
  _impl_.attr_def_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDevNewItemRequest.attr_def_name)
}
inline std::string* CMsgDevNewItemRequest::_internal_add_attr_def_name() {
  return _impl_.attr_def_name_.Add();
}
inline void CMsgDevNewItemRequest::add_attr_def_name(const std::string& value) {
  _impl_.attr_def_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDevNewItemRequest.attr_def_name)
}
inline void CMsgDevNewItemRequest::add_attr_def_name(std::string&& value) {
  _impl_.attr_def_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgDevNewItemRequest.attr_def_name)
}
inline void CMsgDevNewItemRequest::add_attr_def_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.attr_def_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDevNewItemRequest.attr_def_name)
}
inline void CMsgDevNewItemRequest::add_attr_def_name(const char* value, size_t size) {
  _impl_.attr_def_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDevNewItemRequest.attr_def_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgDevNewItemRequest::attr_def_name() const {
  // @@protoc_insertion_point(field_list:CMsgDevNewItemRequest.attr_def_name)
  return _impl_.attr_def_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgDevNewItemRequest::mutable_attr_def_name() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDevNewItemRequest.attr_def_name)
  return &_impl_.attr_def_name_;
}

// repeated string attr_value = 6;
inline int CMsgDevNewItemRequest::_internal_attr_value_size() const {
  return _impl_.attr_value_.size();
}
inline int CMsgDevNewItemRequest::attr_value_size() const {
  return _internal_attr_value_size();
}
inline void CMsgDevNewItemRequest::clear_attr_value() {
  _impl_.attr_value_.Clear();
}
inline std::string* CMsgDevNewItemRequest::add_attr_value() {
  std::string* _s = _internal_add_attr_value();
  // @@protoc_insertion_point(field_add_mutable:CMsgDevNewItemRequest.attr_value)
  return _s;
}
inline const std::string& CMsgDevNewItemRequest::_internal_attr_value(int index) const {
  return _impl_.attr_value_.Get(index);
}
inline const std::string& CMsgDevNewItemRequest::attr_value(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.attr_value)
  return _internal_attr_value(index);
}
inline std::string* CMsgDevNewItemRequest::mutable_attr_value(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDevNewItemRequest.attr_value)
  return _impl_.attr_value_.Mutable(index);
}
inline void CMsgDevNewItemRequest::set_attr_value(int index, const std::string& value) {
  _impl_.attr_value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.attr_value)
}
inline void CMsgDevNewItemRequest::set_attr_value(int index, std::string&& value) {
  _impl_.attr_value_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.attr_value)
}
inline void CMsgDevNewItemRequest::set_attr_value(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.attr_value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgDevNewItemRequest.attr_value)
}
inline void CMsgDevNewItemRequest::set_attr_value(int index, const char* value, size_t size) {
  _impl_.attr_value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgDevNewItemRequest.attr_value)
}
inline std::string* CMsgDevNewItemRequest::_internal_add_attr_value() {
  return _impl_.attr_value_.Add();
}
inline void CMsgDevNewItemRequest::add_attr_value(const std::string& value) {
  _impl_.attr_value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgDevNewItemRequest.attr_value)
}
inline void CMsgDevNewItemRequest::add_attr_value(std::string&& value) {
  _impl_.attr_value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgDevNewItemRequest.attr_value)
}
inline void CMsgDevNewItemRequest::add_attr_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.attr_value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgDevNewItemRequest.attr_value)
}
inline void CMsgDevNewItemRequest::add_attr_value(const char* value, size_t size) {
  _impl_.attr_value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgDevNewItemRequest.attr_value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgDevNewItemRequest::attr_value() const {
  // @@protoc_insertion_point(field_list:CMsgDevNewItemRequest.attr_value)
  return _impl_.attr_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgDevNewItemRequest::mutable_attr_value() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDevNewItemRequest.attr_value)
  return &_impl_.attr_value_;
}

// optional uint32 item_quality = 7;
inline bool CMsgDevNewItemRequest::_internal_has_item_quality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDevNewItemRequest::has_item_quality() const {
  return _internal_has_item_quality();
}
inline void CMsgDevNewItemRequest::clear_item_quality() {
  _impl_.item_quality_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgDevNewItemRequest::_internal_item_quality() const {
  return _impl_.item_quality_;
}
inline uint32_t CMsgDevNewItemRequest::item_quality() const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequest.item_quality)
  return _internal_item_quality();
}
inline void CMsgDevNewItemRequest::_internal_set_item_quality(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.item_quality_ = value;
}
inline void CMsgDevNewItemRequest::set_item_quality(uint32_t value) {
  _internal_set_item_quality(value);
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequest.item_quality)
}

// -------------------------------------------------------------------

// CMsgDevNewItemRequestResponse

// optional bool success = 1;
inline bool CMsgDevNewItemRequestResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevNewItemRequestResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgDevNewItemRequestResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDevNewItemRequestResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgDevNewItemRequestResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgDevNewItemRequestResponse.success)
  return _internal_success();
}
inline void CMsgDevNewItemRequestResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgDevNewItemRequestResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgDevNewItemRequestResponse.success)
}

// -------------------------------------------------------------------

// CMsgDevUnlockAllItemStyles

// optional uint64 item_id = 1;
inline bool CMsgDevUnlockAllItemStyles::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevUnlockAllItemStyles::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgDevUnlockAllItemStyles::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgDevUnlockAllItemStyles::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgDevUnlockAllItemStyles::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgDevUnlockAllItemStyles.item_id)
  return _internal_item_id();
}
inline void CMsgDevUnlockAllItemStyles::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgDevUnlockAllItemStyles::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgDevUnlockAllItemStyles.item_id)
}

// -------------------------------------------------------------------

// CMsgDevUnlockAllItemStylesResponse

// optional bool success = 1;
inline bool CMsgDevUnlockAllItemStylesResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevUnlockAllItemStylesResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgDevUnlockAllItemStylesResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDevUnlockAllItemStylesResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgDevUnlockAllItemStylesResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgDevUnlockAllItemStylesResponse.success)
  return _internal_success();
}
inline void CMsgDevUnlockAllItemStylesResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgDevUnlockAllItemStylesResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgDevUnlockAllItemStylesResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCGetAccountSubscriptionItem

// optional uint32 account_id = 1;
inline bool CMsgGCGetAccountSubscriptionItem::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCGetAccountSubscriptionItem::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCGetAccountSubscriptionItem::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCGetAccountSubscriptionItem::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCGetAccountSubscriptionItem::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetAccountSubscriptionItem.account_id)
  return _internal_account_id();
}
inline void CMsgGCGetAccountSubscriptionItem::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCGetAccountSubscriptionItem::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCGetAccountSubscriptionItem.account_id)
}

// -------------------------------------------------------------------

// CMsgGCGetAccountSubscriptionItemResponse

// optional uint32 def_index = 1;
inline bool CMsgGCGetAccountSubscriptionItemResponse::_internal_has_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCGetAccountSubscriptionItemResponse::has_def_index() const {
  return _internal_has_def_index();
}
inline void CMsgGCGetAccountSubscriptionItemResponse::clear_def_index() {
  _impl_.def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCGetAccountSubscriptionItemResponse::_internal_def_index() const {
  return _impl_.def_index_;
}
inline uint32_t CMsgGCGetAccountSubscriptionItemResponse::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCGetAccountSubscriptionItemResponse.def_index)
  return _internal_def_index();
}
inline void CMsgGCGetAccountSubscriptionItemResponse::_internal_set_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.def_index_ = value;
}
inline void CMsgGCGetAccountSubscriptionItemResponse::set_def_index(uint32_t value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCGetAccountSubscriptionItemResponse.def_index)
}

// -------------------------------------------------------------------

// CMsgGCAddGiftItem

// optional uint32 account_id = 1;
inline bool CMsgGCAddGiftItem::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCAddGiftItem::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCAddGiftItem::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCAddGiftItem::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCAddGiftItem::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCAddGiftItem.account_id)
  return _internal_account_id();
}
inline void CMsgGCAddGiftItem::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgGCAddGiftItem::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCAddGiftItem.account_id)
}

// optional uint64 item_id = 2;
inline bool CMsgGCAddGiftItem::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCAddGiftItem::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgGCAddGiftItem::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCAddGiftItem::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgGCAddGiftItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCAddGiftItem.item_id)
  return _internal_item_id();
}
inline void CMsgGCAddGiftItem::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgGCAddGiftItem::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCAddGiftItem.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCWrapAndDeliverGift

// optional uint64 item_id = 1;
inline bool CMsgClientToGCWrapAndDeliverGift::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGift::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCWrapAndDeliverGift::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCWrapAndDeliverGift::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCWrapAndDeliverGift::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGift.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCWrapAndDeliverGift::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGift::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGift.item_id)
}

// optional uint32 give_to_account_id = 2;
inline bool CMsgClientToGCWrapAndDeliverGift::_internal_has_give_to_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGift::has_give_to_account_id() const {
  return _internal_has_give_to_account_id();
}
inline void CMsgClientToGCWrapAndDeliverGift::clear_give_to_account_id() {
  _impl_.give_to_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGift::_internal_give_to_account_id() const {
  return _impl_.give_to_account_id_;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGift::give_to_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGift.give_to_account_id)
  return _internal_give_to_account_id();
}
inline void CMsgClientToGCWrapAndDeliverGift::_internal_set_give_to_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.give_to_account_id_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGift::set_give_to_account_id(uint32_t value) {
  _internal_set_give_to_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGift.give_to_account_id)
}

// optional string gift_message = 3;
inline bool CMsgClientToGCWrapAndDeliverGift::_internal_has_gift_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGift::has_gift_message() const {
  return _internal_has_gift_message();
}
inline void CMsgClientToGCWrapAndDeliverGift::clear_gift_message() {
  _impl_.gift_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCWrapAndDeliverGift::gift_message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGift.gift_message)
  return _internal_gift_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCWrapAndDeliverGift::set_gift_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.gift_message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGift.gift_message)
}
inline std::string* CMsgClientToGCWrapAndDeliverGift::mutable_gift_message() {
  std::string* _s = _internal_mutable_gift_message();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCWrapAndDeliverGift.gift_message)
  return _s;
}
inline const std::string& CMsgClientToGCWrapAndDeliverGift::_internal_gift_message() const {
  return _impl_.gift_message_.Get();
}
inline void CMsgClientToGCWrapAndDeliverGift::_internal_set_gift_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.gift_message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCWrapAndDeliverGift::_internal_mutable_gift_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.gift_message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCWrapAndDeliverGift::release_gift_message() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCWrapAndDeliverGift.gift_message)
  if (!_internal_has_gift_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.gift_message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.gift_message_.IsDefault()) {
    _impl_.gift_message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCWrapAndDeliverGift::set_allocated_gift_message(std::string* gift_message) {
  if (gift_message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.gift_message_.SetAllocated(gift_message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.gift_message_.IsDefault()) {
    _impl_.gift_message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCWrapAndDeliverGift.gift_message)
}

// -------------------------------------------------------------------

// CMsgClientToGCWrapAndDeliverGiftResponse

// optional .EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::EGCMsgResponse CMsgClientToGCWrapAndDeliverGiftResponse::_internal_response() const {
  return static_cast< ::EGCMsgResponse >(_impl_.response_);
}
inline ::EGCMsgResponse CMsgClientToGCWrapAndDeliverGiftResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_response(::EGCMsgResponse value) {
  assert(::EGCMsgResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_response(::EGCMsgResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.response)
}

// optional uint32 gifting_charge_uses = 2;
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_gifting_charge_uses() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_charge_uses() const {
  return _internal_has_gifting_charge_uses();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_charge_uses() {
  _impl_.gifting_charge_uses_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGiftResponse::_internal_gifting_charge_uses() const {
  return _impl_.gifting_charge_uses_;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGiftResponse::gifting_charge_uses() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_uses)
  return _internal_gifting_charge_uses();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_gifting_charge_uses(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.gifting_charge_uses_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_charge_uses(uint32_t value) {
  _internal_set_gifting_charge_uses(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_uses)
}

// optional int32 gifting_charge_max = 3;
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_gifting_charge_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_charge_max() const {
  return _internal_has_gifting_charge_max();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_charge_max() {
  _impl_.gifting_charge_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CMsgClientToGCWrapAndDeliverGiftResponse::_internal_gifting_charge_max() const {
  return _impl_.gifting_charge_max_;
}
inline int32_t CMsgClientToGCWrapAndDeliverGiftResponse::gifting_charge_max() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_max)
  return _internal_gifting_charge_max();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_gifting_charge_max(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.gifting_charge_max_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_charge_max(int32_t value) {
  _internal_set_gifting_charge_max(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_max)
}

// optional uint32 gifting_uses = 4;
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_gifting_uses() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_uses() const {
  return _internal_has_gifting_uses();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_uses() {
  _impl_.gifting_uses_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGiftResponse::_internal_gifting_uses() const {
  return _impl_.gifting_uses_;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGiftResponse::gifting_uses() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_uses)
  return _internal_gifting_uses();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_gifting_uses(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.gifting_uses_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_uses(uint32_t value) {
  _internal_set_gifting_uses(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_uses)
}

// optional int32 gifting_max = 5;
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_gifting_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_max() const {
  return _internal_has_gifting_max();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_max() {
  _impl_.gifting_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CMsgClientToGCWrapAndDeliverGiftResponse::_internal_gifting_max() const {
  return _impl_.gifting_max_;
}
inline int32_t CMsgClientToGCWrapAndDeliverGiftResponse::gifting_max() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_max)
  return _internal_gifting_max();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_gifting_max(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.gifting_max_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_max(int32_t value) {
  _internal_set_gifting_max(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_max)
}

// optional uint32 gifting_window_hours = 6;
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_gifting_window_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_window_hours() const {
  return _internal_has_gifting_window_hours();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_window_hours() {
  _impl_.gifting_window_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGiftResponse::_internal_gifting_window_hours() const {
  return _impl_.gifting_window_hours_;
}
inline uint32_t CMsgClientToGCWrapAndDeliverGiftResponse::gifting_window_hours() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_window_hours)
  return _internal_gifting_window_hours();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_gifting_window_hours(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.gifting_window_hours_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_window_hours(uint32_t value) {
  _internal_set_gifting_window_hours(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.gifting_window_hours)
}

// optional .EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::_internal_has_trade_restriction() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCWrapAndDeliverGiftResponse::has_trade_restriction() const {
  return _internal_has_trade_restriction();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::clear_trade_restriction() {
  _impl_.trade_restriction_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::EGCMsgInitiateTradeResponse CMsgClientToGCWrapAndDeliverGiftResponse::_internal_trade_restriction() const {
  return static_cast< ::EGCMsgInitiateTradeResponse >(_impl_.trade_restriction_);
}
inline ::EGCMsgInitiateTradeResponse CMsgClientToGCWrapAndDeliverGiftResponse::trade_restriction() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCWrapAndDeliverGiftResponse.trade_restriction)
  return _internal_trade_restriction();
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::_internal_set_trade_restriction(::EGCMsgInitiateTradeResponse value) {
  assert(::EGCMsgInitiateTradeResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.trade_restriction_ = value;
}
inline void CMsgClientToGCWrapAndDeliverGiftResponse::set_trade_restriction(::EGCMsgInitiateTradeResponse value) {
  _internal_set_trade_restriction(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCWrapAndDeliverGiftResponse.trade_restriction)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnwrapGift

// optional uint64 item_id = 1;
inline bool CMsgClientToGCUnwrapGift::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnwrapGift::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCUnwrapGift::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUnwrapGift::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCUnwrapGift::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnwrapGift.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCUnwrapGift::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCUnwrapGift::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnwrapGift.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetGiftPermissions

// -------------------------------------------------------------------

// CMsgClientToGCGetGiftPermissionsResponse_FriendPermission

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.account_id)
}

// optional .EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
inline bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_internal_has_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::has_permission() const {
  return _internal_has_permission();
}
inline void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::clear_permission() {
  _impl_.permission_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::EGCMsgInitiateTradeResponse CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_internal_permission() const {
  return static_cast< ::EGCMsgInitiateTradeResponse >(_impl_.permission_);
}
inline ::EGCMsgInitiateTradeResponse CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::permission() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.permission)
  return _internal_permission();
}
inline void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_internal_set_permission(::EGCMsgInitiateTradeResponse value) {
  assert(::EGCMsgInitiateTradeResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.permission_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::set_permission(::EGCMsgInitiateTradeResponse value) {
  _internal_set_permission(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.permission)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetGiftPermissionsResponse

// optional bool is_unlimited = 1;
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_has_is_unlimited() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::has_is_unlimited() const {
  return _internal_has_is_unlimited();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::clear_is_unlimited() {
  _impl_.is_unlimited_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_is_unlimited() const {
  return _impl_.is_unlimited_;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::is_unlimited() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.is_unlimited)
  return _internal_is_unlimited();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::_internal_set_is_unlimited(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.is_unlimited_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse::set_is_unlimited(bool value) {
  _internal_set_is_unlimited(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.is_unlimited)
}

// optional bool has_two_factor = 3;
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_has_has_two_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::has_has_two_factor() const {
  return _internal_has_has_two_factor();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::clear_has_two_factor() {
  _impl_.has_two_factor_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_has_two_factor() const {
  return _impl_.has_two_factor_;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::has_two_factor() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.has_two_factor)
  return _internal_has_two_factor();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::_internal_set_has_two_factor(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.has_two_factor_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse::set_has_two_factor(bool value) {
  _internal_set_has_two_factor(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.has_two_factor)
}

// optional .EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_has_sender_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::has_sender_permission() const {
  return _internal_has_sender_permission();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::clear_sender_permission() {
  _impl_.sender_permission_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::EGCMsgInitiateTradeResponse CMsgClientToGCGetGiftPermissionsResponse::_internal_sender_permission() const {
  return static_cast< ::EGCMsgInitiateTradeResponse >(_impl_.sender_permission_);
}
inline ::EGCMsgInitiateTradeResponse CMsgClientToGCGetGiftPermissionsResponse::sender_permission() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.sender_permission)
  return _internal_sender_permission();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::_internal_set_sender_permission(::EGCMsgInitiateTradeResponse value) {
  assert(::EGCMsgInitiateTradeResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sender_permission_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse::set_sender_permission(::EGCMsgInitiateTradeResponse value) {
  _internal_set_sender_permission(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.sender_permission)
}

// optional uint32 friendship_age_requirement = 7;
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_has_friendship_age_requirement() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::has_friendship_age_requirement() const {
  return _internal_has_friendship_age_requirement();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::clear_friendship_age_requirement() {
  _impl_.friendship_age_requirement_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCGetGiftPermissionsResponse::_internal_friendship_age_requirement() const {
  return _impl_.friendship_age_requirement_;
}
inline uint32_t CMsgClientToGCGetGiftPermissionsResponse::friendship_age_requirement() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement)
  return _internal_friendship_age_requirement();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::_internal_set_friendship_age_requirement(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.friendship_age_requirement_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse::set_friendship_age_requirement(uint32_t value) {
  _internal_set_friendship_age_requirement(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement)
}

// optional uint32 friendship_age_requirement_two_factor = 8;
inline bool CMsgClientToGCGetGiftPermissionsResponse::_internal_has_friendship_age_requirement_two_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCGetGiftPermissionsResponse::has_friendship_age_requirement_two_factor() const {
  return _internal_has_friendship_age_requirement_two_factor();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::clear_friendship_age_requirement_two_factor() {
  _impl_.friendship_age_requirement_two_factor_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgClientToGCGetGiftPermissionsResponse::_internal_friendship_age_requirement_two_factor() const {
  return _impl_.friendship_age_requirement_two_factor_;
}
inline uint32_t CMsgClientToGCGetGiftPermissionsResponse::friendship_age_requirement_two_factor() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement_two_factor)
  return _internal_friendship_age_requirement_two_factor();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::_internal_set_friendship_age_requirement_two_factor(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.friendship_age_requirement_two_factor_ = value;
}
inline void CMsgClientToGCGetGiftPermissionsResponse::set_friendship_age_requirement_two_factor(uint32_t value) {
  _internal_set_friendship_age_requirement_two_factor(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement_two_factor)
}

// repeated .CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
inline int CMsgClientToGCGetGiftPermissionsResponse::_internal_friend_permissions_size() const {
  return _impl_.friend_permissions_.size();
}
inline int CMsgClientToGCGetGiftPermissionsResponse::friend_permissions_size() const {
  return _internal_friend_permissions_size();
}
inline void CMsgClientToGCGetGiftPermissionsResponse::clear_friend_permissions() {
  _impl_.friend_permissions_.Clear();
}
inline ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse::mutable_friend_permissions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return _impl_.friend_permissions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >*
CMsgClientToGCGetGiftPermissionsResponse::mutable_friend_permissions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return &_impl_.friend_permissions_;
}
inline const ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& CMsgClientToGCGetGiftPermissionsResponse::_internal_friend_permissions(int index) const {
  return _impl_.friend_permissions_.Get(index);
}
inline const ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& CMsgClientToGCGetGiftPermissionsResponse::friend_permissions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return _internal_friend_permissions(index);
}
inline ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse::_internal_add_friend_permissions() {
  return _impl_.friend_permissions_.Add();
}
inline ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse::add_friend_permissions() {
  ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* _add = _internal_add_friend_permissions();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >&
CMsgClientToGCGetGiftPermissionsResponse::friend_permissions() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return _impl_.friend_permissions_;
}

// -------------------------------------------------------------------

// CMsgClientToGCUnpackBundle

// optional uint64 item_id = 1;
inline bool CMsgClientToGCUnpackBundle::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnpackBundle::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCUnpackBundle::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUnpackBundle::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCUnpackBundle::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnpackBundle.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCUnpackBundle::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCUnpackBundle::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnpackBundle.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnpackBundleResponse

// repeated uint64 unpacked_item_ids = 1;
inline int CMsgClientToGCUnpackBundleResponse::_internal_unpacked_item_ids_size() const {
  return _impl_.unpacked_item_ids_.size();
}
inline int CMsgClientToGCUnpackBundleResponse::unpacked_item_ids_size() const {
  return _internal_unpacked_item_ids_size();
}
inline void CMsgClientToGCUnpackBundleResponse::clear_unpacked_item_ids() {
  _impl_.unpacked_item_ids_.Clear();
}
inline uint64_t CMsgClientToGCUnpackBundleResponse::_internal_unpacked_item_ids(int index) const {
  return _impl_.unpacked_item_ids_.Get(index);
}
inline uint64_t CMsgClientToGCUnpackBundleResponse::unpacked_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
  return _internal_unpacked_item_ids(index);
}
inline void CMsgClientToGCUnpackBundleResponse::set_unpacked_item_ids(int index, uint64_t value) {
  _impl_.unpacked_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
}
inline void CMsgClientToGCUnpackBundleResponse::_internal_add_unpacked_item_ids(uint64_t value) {
  _impl_.unpacked_item_ids_.Add(value);
}
inline void CMsgClientToGCUnpackBundleResponse::add_unpacked_item_ids(uint64_t value) {
  _internal_add_unpacked_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCUnpackBundleResponse::_internal_unpacked_item_ids() const {
  return _impl_.unpacked_item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCUnpackBundleResponse::unpacked_item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
  return _internal_unpacked_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCUnpackBundleResponse::_internal_mutable_unpacked_item_ids() {
  return &_impl_.unpacked_item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCUnpackBundleResponse::mutable_unpacked_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
  return _internal_mutable_unpacked_item_ids();
}

// optional .CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
inline bool CMsgClientToGCUnpackBundleResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnpackBundleResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCUnpackBundleResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle >(_impl_.response_);
}
inline ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnpackBundleResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCUnpackBundleResponse::_internal_set_response(::CMsgClientToGCUnpackBundleResponse_EUnpackBundle value) {
  assert(::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCUnpackBundleResponse::set_response(::CMsgClientToGCUnpackBundleResponse_EUnpackBundle value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnpackBundleResponse.response)
}

// repeated uint32 unpacked_item_def_indexes = 3;
inline int CMsgClientToGCUnpackBundleResponse::_internal_unpacked_item_def_indexes_size() const {
  return _impl_.unpacked_item_def_indexes_.size();
}
inline int CMsgClientToGCUnpackBundleResponse::unpacked_item_def_indexes_size() const {
  return _internal_unpacked_item_def_indexes_size();
}
inline void CMsgClientToGCUnpackBundleResponse::clear_unpacked_item_def_indexes() {
  _impl_.unpacked_item_def_indexes_.Clear();
}
inline uint32_t CMsgClientToGCUnpackBundleResponse::_internal_unpacked_item_def_indexes(int index) const {
  return _impl_.unpacked_item_def_indexes_.Get(index);
}
inline uint32_t CMsgClientToGCUnpackBundleResponse::unpacked_item_def_indexes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnpackBundleResponse.unpacked_item_def_indexes)
  return _internal_unpacked_item_def_indexes(index);
}
inline void CMsgClientToGCUnpackBundleResponse::set_unpacked_item_def_indexes(int index, uint32_t value) {
  _impl_.unpacked_item_def_indexes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnpackBundleResponse.unpacked_item_def_indexes)
}
inline void CMsgClientToGCUnpackBundleResponse::_internal_add_unpacked_item_def_indexes(uint32_t value) {
  _impl_.unpacked_item_def_indexes_.Add(value);
}
inline void CMsgClientToGCUnpackBundleResponse::add_unpacked_item_def_indexes(uint32_t value) {
  _internal_add_unpacked_item_def_indexes(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCUnpackBundleResponse.unpacked_item_def_indexes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUnpackBundleResponse::_internal_unpacked_item_def_indexes() const {
  return _impl_.unpacked_item_def_indexes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUnpackBundleResponse::unpacked_item_def_indexes() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUnpackBundleResponse.unpacked_item_def_indexes)
  return _internal_unpacked_item_def_indexes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUnpackBundleResponse::_internal_mutable_unpacked_item_def_indexes() {
  return &_impl_.unpacked_item_def_indexes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUnpackBundleResponse::mutable_unpacked_item_def_indexes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUnpackBundleResponse.unpacked_item_def_indexes)
  return _internal_mutable_unpacked_item_def_indexes();
}

// -------------------------------------------------------------------

// CMsgClientToGCPackBundle

// repeated uint64 item_ids = 1;
inline int CMsgClientToGCPackBundle::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgClientToGCPackBundle::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgClientToGCPackBundle::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgClientToGCPackBundle::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgClientToGCPackBundle::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPackBundle.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgClientToGCPackBundle::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPackBundle.item_ids)
}
inline void CMsgClientToGCPackBundle::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgClientToGCPackBundle::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCPackBundle.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCPackBundle::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCPackBundle::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCPackBundle.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCPackBundle::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCPackBundle::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCPackBundle.item_ids)
  return _internal_mutable_item_ids();
}

// optional uint32 bundle_item_def_index = 2;
inline bool CMsgClientToGCPackBundle::_internal_has_bundle_item_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPackBundle::has_bundle_item_def_index() const {
  return _internal_has_bundle_item_def_index();
}
inline void CMsgClientToGCPackBundle::clear_bundle_item_def_index() {
  _impl_.bundle_item_def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCPackBundle::_internal_bundle_item_def_index() const {
  return _impl_.bundle_item_def_index_;
}
inline uint32_t CMsgClientToGCPackBundle::bundle_item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPackBundle.bundle_item_def_index)
  return _internal_bundle_item_def_index();
}
inline void CMsgClientToGCPackBundle::_internal_set_bundle_item_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bundle_item_def_index_ = value;
}
inline void CMsgClientToGCPackBundle::set_bundle_item_def_index(uint32_t value) {
  _internal_set_bundle_item_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPackBundle.bundle_item_def_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCPackBundleResponse

// optional uint64 item_id = 1;
inline bool CMsgClientToGCPackBundleResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPackBundleResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCPackBundleResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPackBundleResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCPackBundleResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPackBundleResponse.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCPackBundleResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCPackBundleResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPackBundleResponse.item_id)
}

// optional .CMsgClientToGCPackBundleResponse.EPackBundle response = 2 [default = k_PackBundle_Succeeded];
inline bool CMsgClientToGCPackBundleResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPackBundleResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCPackBundleResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCPackBundleResponse_EPackBundle CMsgClientToGCPackBundleResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCPackBundleResponse_EPackBundle >(_impl_.response_);
}
inline ::CMsgClientToGCPackBundleResponse_EPackBundle CMsgClientToGCPackBundleResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPackBundleResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCPackBundleResponse::_internal_set_response(::CMsgClientToGCPackBundleResponse_EPackBundle value) {
  assert(::CMsgClientToGCPackBundleResponse_EPackBundle_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCPackBundleResponse::set_response(::CMsgClientToGCPackBundleResponse_EPackBundle value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPackBundleResponse.response)
}

// -------------------------------------------------------------------

// CMsgGCToClientStoreTransactionCompleted

// optional uint64 txn_id = 1;
inline bool CMsgGCToClientStoreTransactionCompleted::_internal_has_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientStoreTransactionCompleted::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgGCToClientStoreTransactionCompleted::clear_txn_id() {
  _impl_.txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCToClientStoreTransactionCompleted::_internal_txn_id() const {
  return _impl_.txn_id_;
}
inline uint64_t CMsgGCToClientStoreTransactionCompleted::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientStoreTransactionCompleted.txn_id)
  return _internal_txn_id();
}
inline void CMsgGCToClientStoreTransactionCompleted::_internal_set_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txn_id_ = value;
}
inline void CMsgGCToClientStoreTransactionCompleted::set_txn_id(uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientStoreTransactionCompleted.txn_id)
}

// repeated uint64 item_ids = 2;
inline int CMsgGCToClientStoreTransactionCompleted::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgGCToClientStoreTransactionCompleted::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgGCToClientStoreTransactionCompleted::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgGCToClientStoreTransactionCompleted::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgGCToClientStoreTransactionCompleted::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientStoreTransactionCompleted.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgGCToClientStoreTransactionCompleted::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientStoreTransactionCompleted.item_ids)
}
inline void CMsgGCToClientStoreTransactionCompleted::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgGCToClientStoreTransactionCompleted::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientStoreTransactionCompleted.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToClientStoreTransactionCompleted::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToClientStoreTransactionCompleted::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientStoreTransactionCompleted.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToClientStoreTransactionCompleted::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToClientStoreTransactionCompleted::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientStoreTransactionCompleted.item_ids)
  return _internal_mutable_item_ids();
}

// -------------------------------------------------------------------

// CMsgClientToGCEquipItems

// repeated .CMsgAdjustItemEquippedState equips = 1;
inline int CMsgClientToGCEquipItems::_internal_equips_size() const {
  return _impl_.equips_.size();
}
inline int CMsgClientToGCEquipItems::equips_size() const {
  return _internal_equips_size();
}
inline void CMsgClientToGCEquipItems::clear_equips() {
  _impl_.equips_.Clear();
}
inline ::CMsgAdjustItemEquippedState* CMsgClientToGCEquipItems::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCEquipItems.equips)
  return _impl_.equips_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAdjustItemEquippedState >*
CMsgClientToGCEquipItems::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCEquipItems.equips)
  return &_impl_.equips_;
}
inline const ::CMsgAdjustItemEquippedState& CMsgClientToGCEquipItems::_internal_equips(int index) const {
  return _impl_.equips_.Get(index);
}
inline const ::CMsgAdjustItemEquippedState& CMsgClientToGCEquipItems::equips(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCEquipItems.equips)
  return _internal_equips(index);
}
inline ::CMsgAdjustItemEquippedState* CMsgClientToGCEquipItems::_internal_add_equips() {
  return _impl_.equips_.Add();
}
inline ::CMsgAdjustItemEquippedState* CMsgClientToGCEquipItems::add_equips() {
  ::CMsgAdjustItemEquippedState* _add = _internal_add_equips();
  // @@protoc_insertion_point(field_add:CMsgClientToGCEquipItems.equips)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAdjustItemEquippedState >&
CMsgClientToGCEquipItems::equips() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCEquipItems.equips)
  return _impl_.equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCEquipItemsResponse

// optional fixed64 so_cache_version_id = 1;
inline bool CMsgClientToGCEquipItemsResponse::_internal_has_so_cache_version_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCEquipItemsResponse::has_so_cache_version_id() const {
  return _internal_has_so_cache_version_id();
}
inline void CMsgClientToGCEquipItemsResponse::clear_so_cache_version_id() {
  _impl_.so_cache_version_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCEquipItemsResponse::_internal_so_cache_version_id() const {
  return _impl_.so_cache_version_id_;
}
inline uint64_t CMsgClientToGCEquipItemsResponse::so_cache_version_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCEquipItemsResponse.so_cache_version_id)
  return _internal_so_cache_version_id();
}
inline void CMsgClientToGCEquipItemsResponse::_internal_set_so_cache_version_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.so_cache_version_id_ = value;
}
inline void CMsgClientToGCEquipItemsResponse::set_so_cache_version_id(uint64_t value) {
  _internal_set_so_cache_version_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCEquipItemsResponse.so_cache_version_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetItemStyle

// optional uint64 item_id = 1;
inline bool CMsgClientToGCSetItemStyle::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetItemStyle::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCSetItemStyle::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCSetItemStyle::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCSetItemStyle::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemStyle.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCSetItemStyle::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCSetItemStyle::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemStyle.item_id)
}

// optional uint32 style_index = 2 [default = 255];
inline bool CMsgClientToGCSetItemStyle::_internal_has_style_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSetItemStyle::has_style_index() const {
  return _internal_has_style_index();
}
inline void CMsgClientToGCSetItemStyle::clear_style_index() {
  _impl_.style_index_ = 255u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSetItemStyle::_internal_style_index() const {
  return _impl_.style_index_;
}
inline uint32_t CMsgClientToGCSetItemStyle::style_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemStyle.style_index)
  return _internal_style_index();
}
inline void CMsgClientToGCSetItemStyle::_internal_set_style_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.style_index_ = value;
}
inline void CMsgClientToGCSetItemStyle::set_style_index(uint32_t value) {
  _internal_set_style_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemStyle.style_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetItemStyleResponse

// optional .CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
inline bool CMsgClientToGCSetItemStyleResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetItemStyleResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCSetItemStyleResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCSetItemStyleResponse_ESetStyle >(_impl_.response_);
}
inline ::CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemStyleResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCSetItemStyleResponse::_internal_set_response(::CMsgClientToGCSetItemStyleResponse_ESetStyle value) {
  assert(::CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCSetItemStyleResponse::set_response(::CMsgClientToGCSetItemStyleResponse_ESetStyle value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemStyleResponse.response)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockItemStyle

// optional uint64 item_to_unlock = 1;
inline bool CMsgClientToGCUnlockItemStyle::_internal_has_item_to_unlock() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockItemStyle::has_item_to_unlock() const {
  return _internal_has_item_to_unlock();
}
inline void CMsgClientToGCUnlockItemStyle::clear_item_to_unlock() {
  _impl_.item_to_unlock_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUnlockItemStyle::_internal_item_to_unlock() const {
  return _impl_.item_to_unlock_;
}
inline uint64_t CMsgClientToGCUnlockItemStyle::item_to_unlock() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyle.item_to_unlock)
  return _internal_item_to_unlock();
}
inline void CMsgClientToGCUnlockItemStyle::_internal_set_item_to_unlock(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_to_unlock_ = value;
}
inline void CMsgClientToGCUnlockItemStyle::set_item_to_unlock(uint64_t value) {
  _internal_set_item_to_unlock(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyle.item_to_unlock)
}

// optional uint32 style_index = 2 [default = 255];
inline bool CMsgClientToGCUnlockItemStyle::_internal_has_style_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockItemStyle::has_style_index() const {
  return _internal_has_style_index();
}
inline void CMsgClientToGCUnlockItemStyle::clear_style_index() {
  _impl_.style_index_ = 255u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCUnlockItemStyle::_internal_style_index() const {
  return _impl_.style_index_;
}
inline uint32_t CMsgClientToGCUnlockItemStyle::style_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyle.style_index)
  return _internal_style_index();
}
inline void CMsgClientToGCUnlockItemStyle::_internal_set_style_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.style_index_ = value;
}
inline void CMsgClientToGCUnlockItemStyle::set_style_index(uint32_t value) {
  _internal_set_style_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyle.style_index)
}

// repeated uint64 consumable_item_ids = 3;
inline int CMsgClientToGCUnlockItemStyle::_internal_consumable_item_ids_size() const {
  return _impl_.consumable_item_ids_.size();
}
inline int CMsgClientToGCUnlockItemStyle::consumable_item_ids_size() const {
  return _internal_consumable_item_ids_size();
}
inline void CMsgClientToGCUnlockItemStyle::clear_consumable_item_ids() {
  _impl_.consumable_item_ids_.Clear();
}
inline uint64_t CMsgClientToGCUnlockItemStyle::_internal_consumable_item_ids(int index) const {
  return _impl_.consumable_item_ids_.Get(index);
}
inline uint64_t CMsgClientToGCUnlockItemStyle::consumable_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyle.consumable_item_ids)
  return _internal_consumable_item_ids(index);
}
inline void CMsgClientToGCUnlockItemStyle::set_consumable_item_ids(int index, uint64_t value) {
  _impl_.consumable_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyle.consumable_item_ids)
}
inline void CMsgClientToGCUnlockItemStyle::_internal_add_consumable_item_ids(uint64_t value) {
  _impl_.consumable_item_ids_.Add(value);
}
inline void CMsgClientToGCUnlockItemStyle::add_consumable_item_ids(uint64_t value) {
  _internal_add_consumable_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCUnlockItemStyle.consumable_item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCUnlockItemStyle::_internal_consumable_item_ids() const {
  return _impl_.consumable_item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCUnlockItemStyle::consumable_item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUnlockItemStyle.consumable_item_ids)
  return _internal_consumable_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCUnlockItemStyle::_internal_mutable_consumable_item_ids() {
  return &_impl_.consumable_item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCUnlockItemStyle::mutable_consumable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUnlockItemStyle.consumable_item_ids)
  return _internal_mutable_consumable_item_ids();
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockItemStyleResponse

// optional .CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
inline bool CMsgClientToGCUnlockItemStyleResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockItemStyleResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCUnlockItemStyleResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle >(_impl_.response_);
}
inline ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyleResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCUnlockItemStyleResponse::_internal_set_response(::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle value) {
  assert(::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCUnlockItemStyleResponse::set_response(::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyleResponse.response)
}

// optional uint64 item_id = 2;
inline bool CMsgClientToGCUnlockItemStyleResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockItemStyleResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCUnlockItemStyleResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUnlockItemStyleResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCUnlockItemStyleResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyleResponse.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCUnlockItemStyleResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCUnlockItemStyleResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyleResponse.item_id)
}

// optional uint32 style_index = 3 [default = 255];
inline bool CMsgClientToGCUnlockItemStyleResponse::_internal_has_style_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockItemStyleResponse::has_style_index() const {
  return _internal_has_style_index();
}
inline void CMsgClientToGCUnlockItemStyleResponse::clear_style_index() {
  _impl_.style_index_ = 255u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCUnlockItemStyleResponse::_internal_style_index() const {
  return _impl_.style_index_;
}
inline uint32_t CMsgClientToGCUnlockItemStyleResponse::style_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyleResponse.style_index)
  return _internal_style_index();
}
inline void CMsgClientToGCUnlockItemStyleResponse::_internal_set_style_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.style_index_ = value;
}
inline void CMsgClientToGCUnlockItemStyleResponse::set_style_index(uint32_t value) {
  _internal_set_style_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyleResponse.style_index)
}

// optional uint32 style_prereq = 4 [default = 255];
inline bool CMsgClientToGCUnlockItemStyleResponse::_internal_has_style_prereq() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockItemStyleResponse::has_style_prereq() const {
  return _internal_has_style_prereq();
}
inline void CMsgClientToGCUnlockItemStyleResponse::clear_style_prereq() {
  _impl_.style_prereq_ = 255u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCUnlockItemStyleResponse::_internal_style_prereq() const {
  return _impl_.style_prereq_;
}
inline uint32_t CMsgClientToGCUnlockItemStyleResponse::style_prereq() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockItemStyleResponse.style_prereq)
  return _internal_style_prereq();
}
inline void CMsgClientToGCUnlockItemStyleResponse::_internal_set_style_prereq(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.style_prereq_ = value;
}
inline void CMsgClientToGCUnlockItemStyleResponse::set_style_prereq(uint32_t value) {
  _internal_set_style_prereq(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockItemStyleResponse.style_prereq)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetItemInventoryCategory

// repeated uint64 item_ids = 1;
inline int CMsgClientToGCSetItemInventoryCategory::_internal_item_ids_size() const {
  return _impl_.item_ids_.size();
}
inline int CMsgClientToGCSetItemInventoryCategory::item_ids_size() const {
  return _internal_item_ids_size();
}
inline void CMsgClientToGCSetItemInventoryCategory::clear_item_ids() {
  _impl_.item_ids_.Clear();
}
inline uint64_t CMsgClientToGCSetItemInventoryCategory::_internal_item_ids(int index) const {
  return _impl_.item_ids_.Get(index);
}
inline uint64_t CMsgClientToGCSetItemInventoryCategory::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemInventoryCategory.item_ids)
  return _internal_item_ids(index);
}
inline void CMsgClientToGCSetItemInventoryCategory::set_item_ids(int index, uint64_t value) {
  _impl_.item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemInventoryCategory.item_ids)
}
inline void CMsgClientToGCSetItemInventoryCategory::_internal_add_item_ids(uint64_t value) {
  _impl_.item_ids_.Add(value);
}
inline void CMsgClientToGCSetItemInventoryCategory::add_item_ids(uint64_t value) {
  _internal_add_item_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetItemInventoryCategory.item_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCSetItemInventoryCategory::_internal_item_ids() const {
  return _impl_.item_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgClientToGCSetItemInventoryCategory::item_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetItemInventoryCategory.item_ids)
  return _internal_item_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCSetItemInventoryCategory::_internal_mutable_item_ids() {
  return &_impl_.item_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgClientToGCSetItemInventoryCategory::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetItemInventoryCategory.item_ids)
  return _internal_mutable_item_ids();
}

// optional uint32 set_to_value = 2;
inline bool CMsgClientToGCSetItemInventoryCategory::_internal_has_set_to_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetItemInventoryCategory::has_set_to_value() const {
  return _internal_has_set_to_value();
}
inline void CMsgClientToGCSetItemInventoryCategory::clear_set_to_value() {
  _impl_.set_to_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCSetItemInventoryCategory::_internal_set_to_value() const {
  return _impl_.set_to_value_;
}
inline uint32_t CMsgClientToGCSetItemInventoryCategory::set_to_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemInventoryCategory.set_to_value)
  return _internal_set_to_value();
}
inline void CMsgClientToGCSetItemInventoryCategory::_internal_set_set_to_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.set_to_value_ = value;
}
inline void CMsgClientToGCSetItemInventoryCategory::set_set_to_value(uint32_t value) {
  _internal_set_set_to_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemInventoryCategory.set_to_value)
}

// optional uint32 remove_categories = 3;
inline bool CMsgClientToGCSetItemInventoryCategory::_internal_has_remove_categories() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSetItemInventoryCategory::has_remove_categories() const {
  return _internal_has_remove_categories();
}
inline void CMsgClientToGCSetItemInventoryCategory::clear_remove_categories() {
  _impl_.remove_categories_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSetItemInventoryCategory::_internal_remove_categories() const {
  return _impl_.remove_categories_;
}
inline uint32_t CMsgClientToGCSetItemInventoryCategory::remove_categories() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemInventoryCategory.remove_categories)
  return _internal_remove_categories();
}
inline void CMsgClientToGCSetItemInventoryCategory::_internal_set_remove_categories(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.remove_categories_ = value;
}
inline void CMsgClientToGCSetItemInventoryCategory::set_remove_categories(uint32_t value) {
  _internal_set_remove_categories(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemInventoryCategory.remove_categories)
}

// optional uint32 add_categories = 4;
inline bool CMsgClientToGCSetItemInventoryCategory::_internal_has_add_categories() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSetItemInventoryCategory::has_add_categories() const {
  return _internal_has_add_categories();
}
inline void CMsgClientToGCSetItemInventoryCategory::clear_add_categories() {
  _impl_.add_categories_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCSetItemInventoryCategory::_internal_add_categories() const {
  return _impl_.add_categories_;
}
inline uint32_t CMsgClientToGCSetItemInventoryCategory::add_categories() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetItemInventoryCategory.add_categories)
  return _internal_add_categories();
}
inline void CMsgClientToGCSetItemInventoryCategory::_internal_set_add_categories(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.add_categories_ = value;
}
inline void CMsgClientToGCSetItemInventoryCategory::set_add_categories(uint32_t value) {
  _internal_set_add_categories(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetItemInventoryCategory.add_categories)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockCrate

// optional uint64 crate_item_id = 1;
inline bool CMsgClientToGCUnlockCrate::_internal_has_crate_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockCrate::has_crate_item_id() const {
  return _internal_has_crate_item_id();
}
inline void CMsgClientToGCUnlockCrate::clear_crate_item_id() {
  _impl_.crate_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUnlockCrate::_internal_crate_item_id() const {
  return _impl_.crate_item_id_;
}
inline uint64_t CMsgClientToGCUnlockCrate::crate_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockCrate.crate_item_id)
  return _internal_crate_item_id();
}
inline void CMsgClientToGCUnlockCrate::_internal_set_crate_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.crate_item_id_ = value;
}
inline void CMsgClientToGCUnlockCrate::set_crate_item_id(uint64_t value) {
  _internal_set_crate_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockCrate.crate_item_id)
}

// optional uint64 key_item_id = 2;
inline bool CMsgClientToGCUnlockCrate::_internal_has_key_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockCrate::has_key_item_id() const {
  return _internal_has_key_item_id();
}
inline void CMsgClientToGCUnlockCrate::clear_key_item_id() {
  _impl_.key_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCUnlockCrate::_internal_key_item_id() const {
  return _impl_.key_item_id_;
}
inline uint64_t CMsgClientToGCUnlockCrate::key_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockCrate.key_item_id)
  return _internal_key_item_id();
}
inline void CMsgClientToGCUnlockCrate::_internal_set_key_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.key_item_id_ = value;
}
inline void CMsgClientToGCUnlockCrate::set_key_item_id(uint64_t value) {
  _internal_set_key_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockCrate.key_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockCrateResponse_Item

// optional uint64 item_id = 1;
inline bool CMsgClientToGCUnlockCrateResponse_Item::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockCrateResponse_Item::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCUnlockCrateResponse_Item::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUnlockCrateResponse_Item::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCUnlockCrateResponse_Item::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockCrateResponse.Item.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCUnlockCrateResponse_Item::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCUnlockCrateResponse_Item::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockCrateResponse.Item.item_id)
}

// optional uint32 def_index = 2;
inline bool CMsgClientToGCUnlockCrateResponse_Item::_internal_has_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockCrateResponse_Item::has_def_index() const {
  return _internal_has_def_index();
}
inline void CMsgClientToGCUnlockCrateResponse_Item::clear_def_index() {
  _impl_.def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCUnlockCrateResponse_Item::_internal_def_index() const {
  return _impl_.def_index_;
}
inline uint32_t CMsgClientToGCUnlockCrateResponse_Item::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockCrateResponse.Item.def_index)
  return _internal_def_index();
}
inline void CMsgClientToGCUnlockCrateResponse_Item::_internal_set_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.def_index_ = value;
}
inline void CMsgClientToGCUnlockCrateResponse_Item::set_def_index(uint32_t value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockCrateResponse.Item.def_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockCrateResponse

// optional .EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
inline bool CMsgClientToGCUnlockCrateResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockCrateResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCUnlockCrateResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::EGCMsgResponse CMsgClientToGCUnlockCrateResponse::_internal_result() const {
  return static_cast< ::EGCMsgResponse >(_impl_.result_);
}
inline ::EGCMsgResponse CMsgClientToGCUnlockCrateResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockCrateResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCUnlockCrateResponse::_internal_set_result(::EGCMsgResponse value) {
  assert(::EGCMsgResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCUnlockCrateResponse::set_result(::EGCMsgResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockCrateResponse.result)
}

// repeated .CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
inline int CMsgClientToGCUnlockCrateResponse::_internal_granted_items_size() const {
  return _impl_.granted_items_.size();
}
inline int CMsgClientToGCUnlockCrateResponse::granted_items_size() const {
  return _internal_granted_items_size();
}
inline void CMsgClientToGCUnlockCrateResponse::clear_granted_items() {
  _impl_.granted_items_.Clear();
}
inline ::CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse::mutable_granted_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCUnlockCrateResponse.granted_items)
  return _impl_.granted_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCUnlockCrateResponse_Item >*
CMsgClientToGCUnlockCrateResponse::mutable_granted_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUnlockCrateResponse.granted_items)
  return &_impl_.granted_items_;
}
inline const ::CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse::_internal_granted_items(int index) const {
  return _impl_.granted_items_.Get(index);
}
inline const ::CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse::granted_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockCrateResponse.granted_items)
  return _internal_granted_items(index);
}
inline ::CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse::_internal_add_granted_items() {
  return _impl_.granted_items_.Add();
}
inline ::CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse::add_granted_items() {
  ::CMsgClientToGCUnlockCrateResponse_Item* _add = _internal_add_granted_items();
  // @@protoc_insertion_point(field_add:CMsgClientToGCUnlockCrateResponse.granted_items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCUnlockCrateResponse_Item >&
CMsgClientToGCUnlockCrateResponse::granted_items() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUnlockCrateResponse.granted_items)
  return _impl_.granted_items_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRemoveItemAttribute

// optional uint64 item_id = 1;
inline bool CMsgClientToGCRemoveItemAttribute::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRemoveItemAttribute::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCRemoveItemAttribute::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCRemoveItemAttribute::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCRemoveItemAttribute::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRemoveItemAttribute.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCRemoveItemAttribute::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCRemoveItemAttribute::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRemoveItemAttribute.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRemoveItemAttributeResponse

// optional .CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
inline bool CMsgClientToGCRemoveItemAttributeResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRemoveItemAttributeResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCRemoveItemAttributeResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute >(_impl_.response_);
}
inline ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRemoveItemAttributeResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCRemoveItemAttributeResponse::_internal_set_response(::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute value) {
  assert(::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCRemoveItemAttributeResponse::set_response(::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRemoveItemAttributeResponse.response)
}

// optional uint64 item_id = 2;
inline bool CMsgClientToGCRemoveItemAttributeResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRemoveItemAttributeResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCRemoveItemAttributeResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCRemoveItemAttributeResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCRemoveItemAttributeResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRemoveItemAttributeResponse.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCRemoveItemAttributeResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCRemoveItemAttributeResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRemoveItemAttributeResponse.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCNameItem

// optional uint64 subject_item_id = 1;
inline bool CMsgClientToGCNameItem::_internal_has_subject_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCNameItem::has_subject_item_id() const {
  return _internal_has_subject_item_id();
}
inline void CMsgClientToGCNameItem::clear_subject_item_id() {
  _impl_.subject_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCNameItem::_internal_subject_item_id() const {
  return _impl_.subject_item_id_;
}
inline uint64_t CMsgClientToGCNameItem::subject_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCNameItem.subject_item_id)
  return _internal_subject_item_id();
}
inline void CMsgClientToGCNameItem::_internal_set_subject_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.subject_item_id_ = value;
}
inline void CMsgClientToGCNameItem::set_subject_item_id(uint64_t value) {
  _internal_set_subject_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCNameItem.subject_item_id)
}

// optional uint64 tool_item_id = 2;
inline bool CMsgClientToGCNameItem::_internal_has_tool_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCNameItem::has_tool_item_id() const {
  return _internal_has_tool_item_id();
}
inline void CMsgClientToGCNameItem::clear_tool_item_id() {
  _impl_.tool_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgClientToGCNameItem::_internal_tool_item_id() const {
  return _impl_.tool_item_id_;
}
inline uint64_t CMsgClientToGCNameItem::tool_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCNameItem.tool_item_id)
  return _internal_tool_item_id();
}
inline void CMsgClientToGCNameItem::_internal_set_tool_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.tool_item_id_ = value;
}
inline void CMsgClientToGCNameItem::set_tool_item_id(uint64_t value) {
  _internal_set_tool_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCNameItem.tool_item_id)
}

// optional string name = 3;
inline bool CMsgClientToGCNameItem::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCNameItem::has_name() const {
  return _internal_has_name();
}
inline void CMsgClientToGCNameItem::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCNameItem::name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCNameItem.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCNameItem::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCNameItem.name)
}
inline std::string* CMsgClientToGCNameItem::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCNameItem.name)
  return _s;
}
inline const std::string& CMsgClientToGCNameItem::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgClientToGCNameItem::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCNameItem::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCNameItem::release_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCNameItem.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCNameItem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCNameItem.name)
}

// -------------------------------------------------------------------

// CMsgClientToGCNameItemResponse

// optional .CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
inline bool CMsgClientToGCNameItemResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCNameItemResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCNameItemResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCNameItemResponse_ENameItem >(_impl_.response_);
}
inline ::CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCNameItemResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCNameItemResponse::_internal_set_response(::CMsgClientToGCNameItemResponse_ENameItem value) {
  assert(::CMsgClientToGCNameItemResponse_ENameItem_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCNameItemResponse::set_response(::CMsgClientToGCNameItemResponse_ENameItem value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCNameItemResponse.response)
}

// optional uint64 item_id = 2;
inline bool CMsgClientToGCNameItemResponse::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCNameItemResponse::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCNameItemResponse::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCNameItemResponse::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCNameItemResponse::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCNameItemResponse.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCNameItemResponse::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCNameItemResponse::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCNameItemResponse.item_id)
}

// -------------------------------------------------------------------

// CMsgGCSetItemPosition

// optional uint64 item_id = 1;
inline bool CMsgGCSetItemPosition::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCSetItemPosition::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgGCSetItemPosition::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCSetItemPosition::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgGCSetItemPosition::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSetItemPosition.item_id)
  return _internal_item_id();
}
inline void CMsgGCSetItemPosition::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgGCSetItemPosition::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCSetItemPosition.item_id)
}

// optional uint32 new_position = 2;
inline bool CMsgGCSetItemPosition::_internal_has_new_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCSetItemPosition::has_new_position() const {
  return _internal_has_new_position();
}
inline void CMsgGCSetItemPosition::clear_new_position() {
  _impl_.new_position_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCSetItemPosition::_internal_new_position() const {
  return _impl_.new_position_;
}
inline uint32_t CMsgGCSetItemPosition::new_position() const {
  // @@protoc_insertion_point(field_get:CMsgGCSetItemPosition.new_position)
  return _internal_new_position();
}
inline void CMsgGCSetItemPosition::_internal_set_new_position(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.new_position_ = value;
}
inline void CMsgGCSetItemPosition::set_new_position(uint32_t value) {
  _internal_set_new_position(value);
  // @@protoc_insertion_point(field_set:CMsgGCSetItemPosition.new_position)
}

// -------------------------------------------------------------------

// CAttribute_ItemDynamicRecipeComponent

// optional uint32 item_def = 1;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_item_def() const {
  return _internal_has_item_def();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_item_def() {
  _impl_.item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_item_def() const {
  return _impl_.item_def_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::item_def() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.item_def)
  return _internal_item_def();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.item_def_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_item_def(uint32_t value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.item_def)
}

// optional uint32 item_quality = 2;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_item_quality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_item_quality() const {
  return _internal_has_item_quality();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_item_quality() {
  _impl_.item_quality_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_item_quality() const {
  return _impl_.item_quality_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.item_quality)
  return _internal_item_quality();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_item_quality(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.item_quality_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_item_quality(uint32_t value) {
  _internal_set_item_quality(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.item_quality)
}

// optional uint32 item_flags = 3;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_item_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_item_flags() const {
  return _internal_has_item_flags();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_item_flags() {
  _impl_.item_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_item_flags() const {
  return _impl_.item_flags_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::item_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.item_flags)
  return _internal_item_flags();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_item_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.item_flags_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_item_flags(uint32_t value) {
  _internal_set_item_flags(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.item_flags)
}

// optional string attributes_string = 4;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_attributes_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_attributes_string() const {
  return _internal_has_attributes_string();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_attributes_string() {
  _impl_.attributes_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CAttribute_ItemDynamicRecipeComponent::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.attributes_string)
  return _internal_attributes_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CAttribute_ItemDynamicRecipeComponent::set_attributes_string(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.attributes_string_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.attributes_string)
}
inline std::string* CAttribute_ItemDynamicRecipeComponent::mutable_attributes_string() {
  std::string* _s = _internal_mutable_attributes_string();
  // @@protoc_insertion_point(field_mutable:CAttribute_ItemDynamicRecipeComponent.attributes_string)
  return _s;
}
inline const std::string& CAttribute_ItemDynamicRecipeComponent::_internal_attributes_string() const {
  return _impl_.attributes_string_.Get();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_attributes_string(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.attributes_string_.Set(value, GetArenaForAllocation());
}
inline std::string* CAttribute_ItemDynamicRecipeComponent::_internal_mutable_attributes_string() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.attributes_string_.Mutable(GetArenaForAllocation());
}
inline std::string* CAttribute_ItemDynamicRecipeComponent::release_attributes_string() {
  // @@protoc_insertion_point(field_release:CAttribute_ItemDynamicRecipeComponent.attributes_string)
  if (!_internal_has_attributes_string()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.attributes_string_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.attributes_string_.IsDefault()) {
    _impl_.attributes_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_allocated_attributes_string(std::string* attributes_string) {
  if (attributes_string != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.attributes_string_.SetAllocated(attributes_string, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.attributes_string_.IsDefault()) {
    _impl_.attributes_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CAttribute_ItemDynamicRecipeComponent.attributes_string)
}

// optional uint32 item_count = 5;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_item_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_item_count() const {
  return _internal_has_item_count();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_item_count() {
  _impl_.item_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_item_count() const {
  return _impl_.item_count_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::item_count() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.item_count)
  return _internal_item_count();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_item_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.item_count_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_item_count(uint32_t value) {
  _internal_set_item_count(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.item_count)
}

// optional uint32 items_fulfilled = 6;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_items_fulfilled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_items_fulfilled() const {
  return _internal_has_items_fulfilled();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_items_fulfilled() {
  _impl_.items_fulfilled_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_items_fulfilled() const {
  return _impl_.items_fulfilled_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::items_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.items_fulfilled)
  return _internal_items_fulfilled();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_items_fulfilled(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.items_fulfilled_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_items_fulfilled(uint32_t value) {
  _internal_set_items_fulfilled(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.items_fulfilled)
}

// optional uint32 item_rarity = 7;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_item_rarity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_item_rarity() const {
  return _internal_has_item_rarity();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_item_rarity() {
  _impl_.item_rarity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_item_rarity() const {
  return _impl_.item_rarity_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::item_rarity() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.item_rarity)
  return _internal_item_rarity();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_item_rarity(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.item_rarity_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_item_rarity(uint32_t value) {
  _internal_set_item_rarity(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.item_rarity)
}

// optional string lootlist = 8;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_lootlist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_lootlist() const {
  return _internal_has_lootlist();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_lootlist() {
  _impl_.lootlist_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CAttribute_ItemDynamicRecipeComponent::lootlist() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.lootlist)
  return _internal_lootlist();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CAttribute_ItemDynamicRecipeComponent::set_lootlist(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.lootlist_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.lootlist)
}
inline std::string* CAttribute_ItemDynamicRecipeComponent::mutable_lootlist() {
  std::string* _s = _internal_mutable_lootlist();
  // @@protoc_insertion_point(field_mutable:CAttribute_ItemDynamicRecipeComponent.lootlist)
  return _s;
}
inline const std::string& CAttribute_ItemDynamicRecipeComponent::_internal_lootlist() const {
  return _impl_.lootlist_.Get();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_lootlist(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.lootlist_.Set(value, GetArenaForAllocation());
}
inline std::string* CAttribute_ItemDynamicRecipeComponent::_internal_mutable_lootlist() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.lootlist_.Mutable(GetArenaForAllocation());
}
inline std::string* CAttribute_ItemDynamicRecipeComponent::release_lootlist() {
  // @@protoc_insertion_point(field_release:CAttribute_ItemDynamicRecipeComponent.lootlist)
  if (!_internal_has_lootlist()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.lootlist_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.lootlist_.IsDefault()) {
    _impl_.lootlist_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_allocated_lootlist(std::string* lootlist) {
  if (lootlist != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.lootlist_.SetAllocated(lootlist, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.lootlist_.IsDefault()) {
    _impl_.lootlist_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CAttribute_ItemDynamicRecipeComponent.lootlist)
}

// optional uint64 fulfilled_item_id = 9;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_fulfilled_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_fulfilled_item_id() const {
  return _internal_has_fulfilled_item_id();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_fulfilled_item_id() {
  _impl_.fulfilled_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint64_t CAttribute_ItemDynamicRecipeComponent::_internal_fulfilled_item_id() const {
  return _impl_.fulfilled_item_id_;
}
inline uint64_t CAttribute_ItemDynamicRecipeComponent::fulfilled_item_id() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.fulfilled_item_id)
  return _internal_fulfilled_item_id();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_fulfilled_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.fulfilled_item_id_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_fulfilled_item_id(uint64_t value) {
  _internal_set_fulfilled_item_id(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.fulfilled_item_id)
}

// optional uint32 associated_item_def = 10;
inline bool CAttribute_ItemDynamicRecipeComponent::_internal_has_associated_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CAttribute_ItemDynamicRecipeComponent::has_associated_item_def() const {
  return _internal_has_associated_item_def();
}
inline void CAttribute_ItemDynamicRecipeComponent::clear_associated_item_def() {
  _impl_.associated_item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::_internal_associated_item_def() const {
  return _impl_.associated_item_def_;
}
inline uint32_t CAttribute_ItemDynamicRecipeComponent::associated_item_def() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemDynamicRecipeComponent.associated_item_def)
  return _internal_associated_item_def();
}
inline void CAttribute_ItemDynamicRecipeComponent::_internal_set_associated_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.associated_item_def_ = value;
}
inline void CAttribute_ItemDynamicRecipeComponent::set_associated_item_def(uint32_t value) {
  _internal_set_associated_item_def(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemDynamicRecipeComponent.associated_item_def)
}

// -------------------------------------------------------------------

// CProtoItemSocket

// optional uint64 item_id = 1;
inline bool CProtoItemSocket::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_item_id() const {
  return _internal_has_item_id();
}
inline void CProtoItemSocket::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CProtoItemSocket::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CProtoItemSocket::item_id() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.item_id)
  return _internal_item_id();
}
inline void CProtoItemSocket::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.item_id_ = value;
}
inline void CProtoItemSocket::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket.item_id)
}

// optional uint32 attr_def_index = 2;
inline bool CProtoItemSocket::_internal_has_attr_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_attr_def_index() const {
  return _internal_has_attr_def_index();
}
inline void CProtoItemSocket::clear_attr_def_index() {
  _impl_.attr_def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CProtoItemSocket::_internal_attr_def_index() const {
  return _impl_.attr_def_index_;
}
inline uint32_t CProtoItemSocket::attr_def_index() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.attr_def_index)
  return _internal_attr_def_index();
}
inline void CProtoItemSocket::_internal_set_attr_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.attr_def_index_ = value;
}
inline void CProtoItemSocket::set_attr_def_index(uint32_t value) {
  _internal_set_attr_def_index(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket.attr_def_index)
}

// optional uint32 required_type = 3;
inline bool CProtoItemSocket::_internal_has_required_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_required_type() const {
  return _internal_has_required_type();
}
inline void CProtoItemSocket::clear_required_type() {
  _impl_.required_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CProtoItemSocket::_internal_required_type() const {
  return _impl_.required_type_;
}
inline uint32_t CProtoItemSocket::required_type() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.required_type)
  return _internal_required_type();
}
inline void CProtoItemSocket::_internal_set_required_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.required_type_ = value;
}
inline void CProtoItemSocket::set_required_type(uint32_t value) {
  _internal_set_required_type(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket.required_type)
}

// optional string required_hero = 4;
inline bool CProtoItemSocket::_internal_has_required_hero() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_required_hero() const {
  return _internal_has_required_hero();
}
inline void CProtoItemSocket::clear_required_hero() {
  _impl_.required_hero_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CProtoItemSocket::required_hero() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.required_hero)
  return _internal_required_hero();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CProtoItemSocket::set_required_hero(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.required_hero_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CProtoItemSocket.required_hero)
}
inline std::string* CProtoItemSocket::mutable_required_hero() {
  std::string* _s = _internal_mutable_required_hero();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket.required_hero)
  return _s;
}
inline const std::string& CProtoItemSocket::_internal_required_hero() const {
  return _impl_.required_hero_.Get();
}
inline void CProtoItemSocket::_internal_set_required_hero(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.required_hero_.Set(value, GetArenaForAllocation());
}
inline std::string* CProtoItemSocket::_internal_mutable_required_hero() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.required_hero_.Mutable(GetArenaForAllocation());
}
inline std::string* CProtoItemSocket::release_required_hero() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket.required_hero)
  if (!_internal_has_required_hero()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.required_hero_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.required_hero_.IsDefault()) {
    _impl_.required_hero_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CProtoItemSocket::set_allocated_required_hero(std::string* required_hero) {
  if (required_hero != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.required_hero_.SetAllocated(required_hero, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.required_hero_.IsDefault()) {
    _impl_.required_hero_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket.required_hero)
}

// optional uint32 gem_def_index = 5;
inline bool CProtoItemSocket::_internal_has_gem_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_gem_def_index() const {
  return _internal_has_gem_def_index();
}
inline void CProtoItemSocket::clear_gem_def_index() {
  _impl_.gem_def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CProtoItemSocket::_internal_gem_def_index() const {
  return _impl_.gem_def_index_;
}
inline uint32_t CProtoItemSocket::gem_def_index() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.gem_def_index)
  return _internal_gem_def_index();
}
inline void CProtoItemSocket::_internal_set_gem_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.gem_def_index_ = value;
}
inline void CProtoItemSocket::set_gem_def_index(uint32_t value) {
  _internal_set_gem_def_index(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket.gem_def_index)
}

// optional bool not_tradable = 6;
inline bool CProtoItemSocket::_internal_has_not_tradable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_not_tradable() const {
  return _internal_has_not_tradable();
}
inline void CProtoItemSocket::clear_not_tradable() {
  _impl_.not_tradable_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool CProtoItemSocket::_internal_not_tradable() const {
  return _impl_.not_tradable_;
}
inline bool CProtoItemSocket::not_tradable() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.not_tradable)
  return _internal_not_tradable();
}
inline void CProtoItemSocket::_internal_set_not_tradable(bool value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.not_tradable_ = value;
}
inline void CProtoItemSocket::set_not_tradable(bool value) {
  _internal_set_not_tradable(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket.not_tradable)
}

// optional string required_item_slot = 7;
inline bool CProtoItemSocket::_internal_has_required_item_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket::has_required_item_slot() const {
  return _internal_has_required_item_slot();
}
inline void CProtoItemSocket::clear_required_item_slot() {
  _impl_.required_item_slot_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CProtoItemSocket::required_item_slot() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket.required_item_slot)
  return _internal_required_item_slot();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CProtoItemSocket::set_required_item_slot(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.required_item_slot_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CProtoItemSocket.required_item_slot)
}
inline std::string* CProtoItemSocket::mutable_required_item_slot() {
  std::string* _s = _internal_mutable_required_item_slot();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket.required_item_slot)
  return _s;
}
inline const std::string& CProtoItemSocket::_internal_required_item_slot() const {
  return _impl_.required_item_slot_.Get();
}
inline void CProtoItemSocket::_internal_set_required_item_slot(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.required_item_slot_.Set(value, GetArenaForAllocation());
}
inline std::string* CProtoItemSocket::_internal_mutable_required_item_slot() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.required_item_slot_.Mutable(GetArenaForAllocation());
}
inline std::string* CProtoItemSocket::release_required_item_slot() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket.required_item_slot)
  if (!_internal_has_required_item_slot()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.required_item_slot_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.required_item_slot_.IsDefault()) {
    _impl_.required_item_slot_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CProtoItemSocket::set_allocated_required_item_slot(std::string* required_item_slot) {
  if (required_item_slot != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.required_item_slot_.SetAllocated(required_item_slot, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.required_item_slot_.IsDefault()) {
    _impl_.required_item_slot_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket.required_item_slot)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Empty

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Empty::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Empty::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Empty::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Empty::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Empty::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Empty.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Empty::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Empty.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Empty::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Empty::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Empty.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Empty::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Empty::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Empty.socket)
  return _msg;
}
inline void CProtoItemSocket_Empty::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Empty.socket)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Effect

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Effect::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Effect::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Effect::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Effect::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Effect::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Effect.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Effect::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Effect.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Effect::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Effect::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Effect.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Effect::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Effect::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Effect.socket)
  return _msg;
}
inline void CProtoItemSocket_Effect::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Effect.socket)
}

// optional uint32 effect = 2;
inline bool CProtoItemSocket_Effect::_internal_has_effect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_Effect::has_effect() const {
  return _internal_has_effect();
}
inline void CProtoItemSocket_Effect::clear_effect() {
  _impl_.effect_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_Effect::_internal_effect() const {
  return _impl_.effect_;
}
inline uint32_t CProtoItemSocket_Effect::effect() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Effect.effect)
  return _internal_effect();
}
inline void CProtoItemSocket_Effect::_internal_set_effect(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.effect_ = value;
}
inline void CProtoItemSocket_Effect::set_effect(uint32_t value) {
  _internal_set_effect(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Effect.effect)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Color

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Color::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Color::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Color::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Color::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Color::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Color.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Color::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Color.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Color::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Color::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Color.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Color::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Color::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Color.socket)
  return _msg;
}
inline void CProtoItemSocket_Color::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Color.socket)
}

// optional uint32 red = 2;
inline bool CProtoItemSocket_Color::_internal_has_red() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_Color::has_red() const {
  return _internal_has_red();
}
inline void CProtoItemSocket_Color::clear_red() {
  _impl_.red_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_Color::_internal_red() const {
  return _impl_.red_;
}
inline uint32_t CProtoItemSocket_Color::red() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Color.red)
  return _internal_red();
}
inline void CProtoItemSocket_Color::_internal_set_red(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.red_ = value;
}
inline void CProtoItemSocket_Color::set_red(uint32_t value) {
  _internal_set_red(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Color.red)
}

// optional uint32 green = 3;
inline bool CProtoItemSocket_Color::_internal_has_green() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket_Color::has_green() const {
  return _internal_has_green();
}
inline void CProtoItemSocket_Color::clear_green() {
  _impl_.green_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CProtoItemSocket_Color::_internal_green() const {
  return _impl_.green_;
}
inline uint32_t CProtoItemSocket_Color::green() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Color.green)
  return _internal_green();
}
inline void CProtoItemSocket_Color::_internal_set_green(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.green_ = value;
}
inline void CProtoItemSocket_Color::set_green(uint32_t value) {
  _internal_set_green(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Color.green)
}

// optional uint32 blue = 4;
inline bool CProtoItemSocket_Color::_internal_has_blue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CProtoItemSocket_Color::has_blue() const {
  return _internal_has_blue();
}
inline void CProtoItemSocket_Color::clear_blue() {
  _impl_.blue_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CProtoItemSocket_Color::_internal_blue() const {
  return _impl_.blue_;
}
inline uint32_t CProtoItemSocket_Color::blue() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Color.blue)
  return _internal_blue();
}
inline void CProtoItemSocket_Color::_internal_set_blue(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.blue_ = value;
}
inline void CProtoItemSocket_Color::set_blue(uint32_t value) {
  _internal_set_blue(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Color.blue)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Strange

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Strange::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Strange::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Strange::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Strange::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Strange::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Strange::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Strange.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Strange.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Strange.socket)
  return _msg;
}
inline void CProtoItemSocket_Strange::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Strange.socket)
}

// optional uint32 strange_type = 2;
inline bool CProtoItemSocket_Strange::_internal_has_strange_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_Strange::has_strange_type() const {
  return _internal_has_strange_type();
}
inline void CProtoItemSocket_Strange::clear_strange_type() {
  _impl_.strange_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_Strange::_internal_strange_type() const {
  return _impl_.strange_type_;
}
inline uint32_t CProtoItemSocket_Strange::strange_type() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange.strange_type)
  return _internal_strange_type();
}
inline void CProtoItemSocket_Strange::_internal_set_strange_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.strange_type_ = value;
}
inline void CProtoItemSocket_Strange::set_strange_type(uint32_t value) {
  _internal_set_strange_type(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Strange.strange_type)
}

// optional uint32 strange_value = 3;
inline bool CProtoItemSocket_Strange::_internal_has_strange_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket_Strange::has_strange_value() const {
  return _internal_has_strange_value();
}
inline void CProtoItemSocket_Strange::clear_strange_value() {
  _impl_.strange_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CProtoItemSocket_Strange::_internal_strange_value() const {
  return _impl_.strange_value_;
}
inline uint32_t CProtoItemSocket_Strange::strange_value() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange.strange_value)
  return _internal_strange_value();
}
inline void CProtoItemSocket_Strange::_internal_set_strange_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.strange_value_ = value;
}
inline void CProtoItemSocket_Strange::set_strange_value(uint32_t value) {
  _internal_set_strange_value(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Strange.strange_value)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.socket)
  return _msg;
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.socket)
}

// optional uint32 strange_type = 2;
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_has_strange_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::has_strange_type() const {
  return _internal_has_strange_type();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::clear_strange_type() {
  _impl_.strange_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_strange_type() const {
  return _impl_.strange_type_;
}
inline uint32_t CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::strange_type() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.strange_type)
  return _internal_strange_type();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_set_strange_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.strange_type_ = value;
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::set_strange_type(uint32_t value) {
  _internal_set_strange_type(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.strange_type)
}

// optional uint32 strange_value = 3;
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_has_strange_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::has_strange_value() const {
  return _internal_has_strange_value();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::clear_strange_value() {
  _impl_.strange_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_strange_value() const {
  return _impl_.strange_value_;
}
inline uint32_t CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::strange_value() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.strange_value)
  return _internal_strange_value();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_set_strange_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.strange_value_ = value;
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::set_strange_value(uint32_t value) {
  _internal_set_strange_value(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.strange_value)
}

// optional uint32 ability_effect = 4;
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_has_ability_effect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::has_ability_effect() const {
  return _internal_has_ability_effect();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::clear_ability_effect() {
  _impl_.ability_effect_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_ability_effect() const {
  return _impl_.ability_effect_;
}
inline uint32_t CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::ability_effect() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.ability_effect)
  return _internal_ability_effect();
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::_internal_set_ability_effect(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ability_effect_ = value;
}
inline void CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY::set_ability_effect(uint32_t value) {
  _internal_set_ability_effect(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.ability_effect)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Spectator

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Spectator::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Spectator::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Spectator::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Spectator::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Spectator::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Spectator.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Spectator::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Spectator.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Spectator::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Spectator::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Spectator.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Spectator::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Spectator::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Spectator.socket)
  return _msg;
}
inline void CProtoItemSocket_Spectator::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Spectator.socket)
}

// optional uint32 games_viewed = 2;
inline bool CProtoItemSocket_Spectator::_internal_has_games_viewed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_Spectator::has_games_viewed() const {
  return _internal_has_games_viewed();
}
inline void CProtoItemSocket_Spectator::clear_games_viewed() {
  _impl_.games_viewed_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_Spectator::_internal_games_viewed() const {
  return _impl_.games_viewed_;
}
inline uint32_t CProtoItemSocket_Spectator::games_viewed() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Spectator.games_viewed)
  return _internal_games_viewed();
}
inline void CProtoItemSocket_Spectator::_internal_set_games_viewed(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.games_viewed_ = value;
}
inline void CProtoItemSocket_Spectator::set_games_viewed(uint32_t value) {
  _internal_set_games_viewed(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Spectator.games_viewed)
}

// optional uint32 corporation_id = 3;
inline bool CProtoItemSocket_Spectator::_internal_has_corporation_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket_Spectator::has_corporation_id() const {
  return _internal_has_corporation_id();
}
inline void CProtoItemSocket_Spectator::clear_corporation_id() {
  _impl_.corporation_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CProtoItemSocket_Spectator::_internal_corporation_id() const {
  return _impl_.corporation_id_;
}
inline uint32_t CProtoItemSocket_Spectator::corporation_id() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Spectator.corporation_id)
  return _internal_corporation_id();
}
inline void CProtoItemSocket_Spectator::_internal_set_corporation_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.corporation_id_ = value;
}
inline void CProtoItemSocket_Spectator::set_corporation_id(uint32_t value) {
  _internal_set_corporation_id(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Spectator.corporation_id)
}

// optional uint32 league_id = 4;
inline bool CProtoItemSocket_Spectator::_internal_has_league_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CProtoItemSocket_Spectator::has_league_id() const {
  return _internal_has_league_id();
}
inline void CProtoItemSocket_Spectator::clear_league_id() {
  _impl_.league_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CProtoItemSocket_Spectator::_internal_league_id() const {
  return _impl_.league_id_;
}
inline uint32_t CProtoItemSocket_Spectator::league_id() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Spectator.league_id)
  return _internal_league_id();
}
inline void CProtoItemSocket_Spectator::_internal_set_league_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.league_id_ = value;
}
inline void CProtoItemSocket_Spectator::set_league_id(uint32_t value) {
  _internal_set_league_id(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Spectator.league_id)
}

// optional uint32 team_id = 5;
inline bool CProtoItemSocket_Spectator::_internal_has_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CProtoItemSocket_Spectator::has_team_id() const {
  return _internal_has_team_id();
}
inline void CProtoItemSocket_Spectator::clear_team_id() {
  _impl_.team_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CProtoItemSocket_Spectator::_internal_team_id() const {
  return _impl_.team_id_;
}
inline uint32_t CProtoItemSocket_Spectator::team_id() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Spectator.team_id)
  return _internal_team_id();
}
inline void CProtoItemSocket_Spectator::_internal_set_team_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.team_id_ = value;
}
inline void CProtoItemSocket_Spectator::set_team_id(uint32_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Spectator.team_id)
}

// -------------------------------------------------------------------

// CProtoItemSocket_AssetModifier

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_AssetModifier::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_AssetModifier::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_AssetModifier::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_AssetModifier::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_AssetModifier::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_AssetModifier.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_AssetModifier::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_AssetModifier.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_AssetModifier.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_AssetModifier.socket)
  return _msg;
}
inline void CProtoItemSocket_AssetModifier::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_AssetModifier.socket)
}

// optional uint32 asset_modifier = 2;
inline bool CProtoItemSocket_AssetModifier::_internal_has_asset_modifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_AssetModifier::has_asset_modifier() const {
  return _internal_has_asset_modifier();
}
inline void CProtoItemSocket_AssetModifier::clear_asset_modifier() {
  _impl_.asset_modifier_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_AssetModifier::_internal_asset_modifier() const {
  return _impl_.asset_modifier_;
}
inline uint32_t CProtoItemSocket_AssetModifier::asset_modifier() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_AssetModifier.asset_modifier)
  return _internal_asset_modifier();
}
inline void CProtoItemSocket_AssetModifier::_internal_set_asset_modifier(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.asset_modifier_ = value;
}
inline void CProtoItemSocket_AssetModifier::set_asset_modifier(uint32_t value) {
  _internal_set_asset_modifier(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_AssetModifier.asset_modifier)
}

// -------------------------------------------------------------------

// CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
  return _msg;
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
}

// optional uint32 asset_modifier = 2;
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_has_asset_modifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_asset_modifier() const {
  return _internal_has_asset_modifier();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_asset_modifier() {
  _impl_.asset_modifier_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_asset_modifier() const {
  return _impl_.asset_modifier_;
}
inline uint32_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::asset_modifier() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.asset_modifier)
  return _internal_asset_modifier();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_set_asset_modifier(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.asset_modifier_ = value;
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_asset_modifier(uint32_t value) {
  _internal_set_asset_modifier(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.asset_modifier)
}

// optional uint32 anim_modifier = 3;
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_has_anim_modifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_anim_modifier() const {
  return _internal_has_anim_modifier();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_anim_modifier() {
  _impl_.anim_modifier_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_anim_modifier() const {
  return _impl_.anim_modifier_;
}
inline uint32_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::anim_modifier() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.anim_modifier)
  return _internal_anim_modifier();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_set_anim_modifier(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.anim_modifier_ = value;
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_anim_modifier(uint32_t value) {
  _internal_set_anim_modifier(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.anim_modifier)
}

// optional uint32 ability_effect = 4;
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_has_ability_effect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_ability_effect() const {
  return _internal_has_ability_effect();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_ability_effect() {
  _impl_.ability_effect_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_ability_effect() const {
  return _impl_.ability_effect_;
}
inline uint32_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::ability_effect() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.ability_effect)
  return _internal_ability_effect();
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_internal_set_ability_effect(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ability_effect_ = value;
}
inline void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_ability_effect(uint32_t value) {
  _internal_set_ability_effect(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.ability_effect)
}

// -------------------------------------------------------------------

// CProtoItemSocket_Autograph

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_Autograph::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_Autograph::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_Autograph::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_Autograph::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_Autograph::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Autograph.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_Autograph::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_Autograph.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_Autograph::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Autograph::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Autograph.socket)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_Autograph::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_Autograph::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Autograph.socket)
  return _msg;
}
inline void CProtoItemSocket_Autograph::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Autograph.socket)
}

// optional string autograph = 2;
inline bool CProtoItemSocket_Autograph::_internal_has_autograph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CProtoItemSocket_Autograph::has_autograph() const {
  return _internal_has_autograph();
}
inline void CProtoItemSocket_Autograph::clear_autograph() {
  _impl_.autograph_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CProtoItemSocket_Autograph::autograph() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Autograph.autograph)
  return _internal_autograph();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CProtoItemSocket_Autograph::set_autograph(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.autograph_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Autograph.autograph)
}
inline std::string* CProtoItemSocket_Autograph::mutable_autograph() {
  std::string* _s = _internal_mutable_autograph();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_Autograph.autograph)
  return _s;
}
inline const std::string& CProtoItemSocket_Autograph::_internal_autograph() const {
  return _impl_.autograph_.Get();
}
inline void CProtoItemSocket_Autograph::_internal_set_autograph(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.autograph_.Set(value, GetArenaForAllocation());
}
inline std::string* CProtoItemSocket_Autograph::_internal_mutable_autograph() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.autograph_.Mutable(GetArenaForAllocation());
}
inline std::string* CProtoItemSocket_Autograph::release_autograph() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_Autograph.autograph)
  if (!_internal_has_autograph()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.autograph_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.autograph_.IsDefault()) {
    _impl_.autograph_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CProtoItemSocket_Autograph::set_allocated_autograph(std::string* autograph) {
  if (autograph != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.autograph_.SetAllocated(autograph, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.autograph_.IsDefault()) {
    _impl_.autograph_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_Autograph.autograph)
}

// optional uint32 autograph_id = 3;
inline bool CProtoItemSocket_Autograph::_internal_has_autograph_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CProtoItemSocket_Autograph::has_autograph_id() const {
  return _internal_has_autograph_id();
}
inline void CProtoItemSocket_Autograph::clear_autograph_id() {
  _impl_.autograph_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CProtoItemSocket_Autograph::_internal_autograph_id() const {
  return _impl_.autograph_id_;
}
inline uint32_t CProtoItemSocket_Autograph::autograph_id() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Autograph.autograph_id)
  return _internal_autograph_id();
}
inline void CProtoItemSocket_Autograph::_internal_set_autograph_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.autograph_id_ = value;
}
inline void CProtoItemSocket_Autograph::set_autograph_id(uint32_t value) {
  _internal_set_autograph_id(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Autograph.autograph_id)
}

// optional uint32 autograph_score = 4;
inline bool CProtoItemSocket_Autograph::_internal_has_autograph_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CProtoItemSocket_Autograph::has_autograph_score() const {
  return _internal_has_autograph_score();
}
inline void CProtoItemSocket_Autograph::clear_autograph_score() {
  _impl_.autograph_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CProtoItemSocket_Autograph::_internal_autograph_score() const {
  return _impl_.autograph_score_;
}
inline uint32_t CProtoItemSocket_Autograph::autograph_score() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_Autograph.autograph_score)
  return _internal_autograph_score();
}
inline void CProtoItemSocket_Autograph::_internal_set_autograph_score(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.autograph_score_ = value;
}
inline void CProtoItemSocket_Autograph::set_autograph_score(uint32_t value) {
  _internal_set_autograph_score(value);
  // @@protoc_insertion_point(field_set:CProtoItemSocket_Autograph.autograph_score)
}

// -------------------------------------------------------------------

// CProtoItemSocket_StaticVisuals

// optional .CProtoItemSocket socket = 1;
inline bool CProtoItemSocket_StaticVisuals::_internal_has_socket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socket_ != nullptr);
  return value;
}
inline bool CProtoItemSocket_StaticVisuals::has_socket() const {
  return _internal_has_socket();
}
inline void CProtoItemSocket_StaticVisuals::clear_socket() {
  if (_impl_.socket_ != nullptr) _impl_.socket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CProtoItemSocket& CProtoItemSocket_StaticVisuals::_internal_socket() const {
  const ::CProtoItemSocket* p = _impl_.socket_;
  return p != nullptr ? *p : reinterpret_cast<const ::CProtoItemSocket&>(
      ::_CProtoItemSocket_default_instance_);
}
inline const ::CProtoItemSocket& CProtoItemSocket_StaticVisuals::socket() const {
  // @@protoc_insertion_point(field_get:CProtoItemSocket_StaticVisuals.socket)
  return _internal_socket();
}
inline void CProtoItemSocket_StaticVisuals::unsafe_arena_set_allocated_socket(
    ::CProtoItemSocket* socket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.socket_);
  }
  _impl_.socket_ = socket;
  if (socket) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CProtoItemSocket_StaticVisuals.socket)
}
inline ::CProtoItemSocket* CProtoItemSocket_StaticVisuals::release_socket() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_StaticVisuals::unsafe_arena_release_socket() {
  // @@protoc_insertion_point(field_release:CProtoItemSocket_StaticVisuals.socket)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CProtoItemSocket* temp = _impl_.socket_;
  _impl_.socket_ = nullptr;
  return temp;
}
inline ::CProtoItemSocket* CProtoItemSocket_StaticVisuals::_internal_mutable_socket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.socket_ == nullptr) {
    auto* p = CreateMaybeMessage<::CProtoItemSocket>(GetArenaForAllocation());
    _impl_.socket_ = p;
  }
  return _impl_.socket_;
}
inline ::CProtoItemSocket* CProtoItemSocket_StaticVisuals::mutable_socket() {
  ::CProtoItemSocket* _msg = _internal_mutable_socket();
  // @@protoc_insertion_point(field_mutable:CProtoItemSocket_StaticVisuals.socket)
  return _msg;
}
inline void CProtoItemSocket_StaticVisuals::set_allocated_socket(::CProtoItemSocket* socket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.socket_;
  }
  if (socket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(socket);
    if (message_arena != submessage_arena) {
      socket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, socket, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socket_ = socket;
  // @@protoc_insertion_point(field_set_allocated:CProtoItemSocket_StaticVisuals.socket)
}

// -------------------------------------------------------------------

// CAttribute_String

// optional string value = 1;
inline bool CAttribute_String::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CAttribute_String::has_value() const {
  return _internal_has_value();
}
inline void CAttribute_String::clear_value() {
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CAttribute_String::value() const {
  // @@protoc_insertion_point(field_get:CAttribute_String.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CAttribute_String::set_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CAttribute_String.value)
}
inline std::string* CAttribute_String::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:CAttribute_String.value)
  return _s;
}
inline const std::string& CAttribute_String::_internal_value() const {
  return _impl_.value_.Get();
}
inline void CAttribute_String::_internal_set_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* CAttribute_String::_internal_mutable_value() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.value_.Mutable(GetArenaForAllocation());
}
inline std::string* CAttribute_String::release_value() {
  // @@protoc_insertion_point(field_release:CAttribute_String.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CAttribute_String::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CAttribute_String.value)
}

// -------------------------------------------------------------------

// CWorkshop_GetItemDailyRevenue_Request

// optional uint32 appid = 1;
inline bool CWorkshop_GetItemDailyRevenue_Request::_internal_has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_GetItemDailyRevenue_Request::clear_appid() {
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::_internal_appid() const {
  return _impl_.appid_;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_GetItemDailyRevenue_Request::_internal_set_appid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.appid_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Request.appid)
}

// optional uint32 item_id = 2;
inline bool CWorkshop_GetItemDailyRevenue_Request::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Request::has_item_id() const {
  return _internal_has_item_id();
}
inline void CWorkshop_GetItemDailyRevenue_Request::clear_item_id() {
  _impl_.item_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::item_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Request.item_id)
  return _internal_item_id();
}
inline void CWorkshop_GetItemDailyRevenue_Request::_internal_set_item_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_id_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Request::set_item_id(uint32_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Request.item_id)
}

// optional uint32 date_start = 3;
inline bool CWorkshop_GetItemDailyRevenue_Request::_internal_has_date_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Request::has_date_start() const {
  return _internal_has_date_start();
}
inline void CWorkshop_GetItemDailyRevenue_Request::clear_date_start() {
  _impl_.date_start_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::_internal_date_start() const {
  return _impl_.date_start_;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::date_start() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Request.date_start)
  return _internal_date_start();
}
inline void CWorkshop_GetItemDailyRevenue_Request::_internal_set_date_start(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.date_start_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Request::set_date_start(uint32_t value) {
  _internal_set_date_start(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Request.date_start)
}

// optional uint32 date_end = 4;
inline bool CWorkshop_GetItemDailyRevenue_Request::_internal_has_date_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Request::has_date_end() const {
  return _internal_has_date_end();
}
inline void CWorkshop_GetItemDailyRevenue_Request::clear_date_end() {
  _impl_.date_end_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::_internal_date_end() const {
  return _impl_.date_end_;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Request::date_end() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Request.date_end)
  return _internal_date_end();
}
inline void CWorkshop_GetItemDailyRevenue_Request::_internal_set_date_end(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.date_end_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Request::set_date_end(uint32_t value) {
  _internal_set_date_end(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Request.date_end)
}

// -------------------------------------------------------------------

// CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue

// optional string country_code = 1;
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_has_country_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_country_code() const {
  return _internal_has_country_code();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_country_code() {
  _impl_.country_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::country_code() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
  return _internal_country_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_country_code(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.country_code_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}
inline std::string* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::mutable_country_code() {
  std::string* _s = _internal_mutable_country_code();
  // @@protoc_insertion_point(field_mutable:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
  return _s;
}
inline const std::string& CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_country_code() const {
  return _impl_.country_code_.Get();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_set_country_code(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_code_.Set(value, GetArenaForAllocation());
}
inline std::string* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_mutable_country_code() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.country_code_.Mutable(GetArenaForAllocation());
}
inline std::string* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::release_country_code() {
  // @@protoc_insertion_point(field_release:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
  if (!_internal_has_country_code()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.country_code_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_code_.IsDefault()) {
    _impl_.country_code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_allocated_country_code(std::string* country_code) {
  if (country_code != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.country_code_.SetAllocated(country_code, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_code_.IsDefault()) {
    _impl_.country_code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}

// optional uint32 date = 2;
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_has_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_date() const {
  return _internal_has_date();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_date() {
  _impl_.date_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_date() const {
  return _impl_.date_;
}
inline uint32_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::date() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.date)
  return _internal_date();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_set_date(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.date_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_date(uint32_t value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.date)
}

// optional int64 revenue_usd = 3;
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_has_revenue_usd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_revenue_usd() const {
  return _internal_has_revenue_usd();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_revenue_usd() {
  _impl_.revenue_usd_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_revenue_usd() const {
  return _impl_.revenue_usd_;
}
inline int64_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::revenue_usd() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
  return _internal_revenue_usd();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_set_revenue_usd(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.revenue_usd_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_revenue_usd(int64_t value) {
  _internal_set_revenue_usd(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
}

// optional int32 units = 4;
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_has_units() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_units() const {
  return _internal_has_units();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_units() {
  _impl_.units_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_units() const {
  return _impl_.units_;
}
inline int32_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::units() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.units)
  return _internal_units();
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_internal_set_units(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.units_ = value;
}
inline void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_units(int32_t value) {
  _internal_set_units(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.units)
}

// -------------------------------------------------------------------

// CWorkshop_GetItemDailyRevenue_Response

// repeated .CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
inline int CWorkshop_GetItemDailyRevenue_Response::_internal_country_revenue_size() const {
  return _impl_.country_revenue_.size();
}
inline int CWorkshop_GetItemDailyRevenue_Response::country_revenue_size() const {
  return _internal_country_revenue_size();
}
inline void CWorkshop_GetItemDailyRevenue_Response::clear_country_revenue() {
  _impl_.country_revenue_.Clear();
}
inline ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response::mutable_country_revenue(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return _impl_.country_revenue_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >*
CWorkshop_GetItemDailyRevenue_Response::mutable_country_revenue() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return &_impl_.country_revenue_;
}
inline const ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetItemDailyRevenue_Response::_internal_country_revenue(int index) const {
  return _impl_.country_revenue_.Get(index);
}
inline const ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetItemDailyRevenue_Response::country_revenue(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return _internal_country_revenue(index);
}
inline ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response::_internal_add_country_revenue() {
  return _impl_.country_revenue_.Add();
}
inline ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response::add_country_revenue() {
  ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* _add = _internal_add_country_revenue();
  // @@protoc_insertion_point(field_add:CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >&
CWorkshop_GetItemDailyRevenue_Response::country_revenue() const {
  // @@protoc_insertion_point(field_list:CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return _impl_.country_revenue_;
}

// -------------------------------------------------------------------

// CWorkshop_GetPackageDailyRevenue_Request

// optional uint32 packageid = 1;
inline bool CWorkshop_GetPackageDailyRevenue_Request::_internal_has_packageid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Request::has_packageid() const {
  return _internal_has_packageid();
}
inline void CWorkshop_GetPackageDailyRevenue_Request::clear_packageid() {
  _impl_.packageid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Request::_internal_packageid() const {
  return _impl_.packageid_;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Request::packageid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Request.packageid)
  return _internal_packageid();
}
inline void CWorkshop_GetPackageDailyRevenue_Request::_internal_set_packageid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.packageid_ = value;
}
inline void CWorkshop_GetPackageDailyRevenue_Request::set_packageid(uint32_t value) {
  _internal_set_packageid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Request.packageid)
}

// optional uint32 date_start = 2;
inline bool CWorkshop_GetPackageDailyRevenue_Request::_internal_has_date_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Request::has_date_start() const {
  return _internal_has_date_start();
}
inline void CWorkshop_GetPackageDailyRevenue_Request::clear_date_start() {
  _impl_.date_start_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Request::_internal_date_start() const {
  return _impl_.date_start_;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Request::date_start() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Request.date_start)
  return _internal_date_start();
}
inline void CWorkshop_GetPackageDailyRevenue_Request::_internal_set_date_start(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.date_start_ = value;
}
inline void CWorkshop_GetPackageDailyRevenue_Request::set_date_start(uint32_t value) {
  _internal_set_date_start(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Request.date_start)
}

// optional uint32 date_end = 3;
inline bool CWorkshop_GetPackageDailyRevenue_Request::_internal_has_date_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Request::has_date_end() const {
  return _internal_has_date_end();
}
inline void CWorkshop_GetPackageDailyRevenue_Request::clear_date_end() {
  _impl_.date_end_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Request::_internal_date_end() const {
  return _impl_.date_end_;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Request::date_end() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Request.date_end)
  return _internal_date_end();
}
inline void CWorkshop_GetPackageDailyRevenue_Request::_internal_set_date_end(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.date_end_ = value;
}
inline void CWorkshop_GetPackageDailyRevenue_Request::set_date_end(uint32_t value) {
  _internal_set_date_end(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Request.date_end)
}

// -------------------------------------------------------------------

// CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue

// optional string country_code = 1;
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_has_country_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_country_code() const {
  return _internal_has_country_code();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_country_code() {
  _impl_.country_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::country_code() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
  return _internal_country_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_country_code(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.country_code_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}
inline std::string* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::mutable_country_code() {
  std::string* _s = _internal_mutable_country_code();
  // @@protoc_insertion_point(field_mutable:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
  return _s;
}
inline const std::string& CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_country_code() const {
  return _impl_.country_code_.Get();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_set_country_code(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_code_.Set(value, GetArenaForAllocation());
}
inline std::string* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_mutable_country_code() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.country_code_.Mutable(GetArenaForAllocation());
}
inline std::string* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::release_country_code() {
  // @@protoc_insertion_point(field_release:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
  if (!_internal_has_country_code()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.country_code_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_code_.IsDefault()) {
    _impl_.country_code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_allocated_country_code(std::string* country_code) {
  if (country_code != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.country_code_.SetAllocated(country_code, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_code_.IsDefault()) {
    _impl_.country_code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}

// optional uint32 date = 2;
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_has_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_date() const {
  return _internal_has_date();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_date() {
  _impl_.date_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_date() const {
  return _impl_.date_;
}
inline uint32_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::date() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.date)
  return _internal_date();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_set_date(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.date_ = value;
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_date(uint32_t value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.date)
}

// optional int64 revenue_usd = 3;
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_has_revenue_usd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_revenue_usd() const {
  return _internal_has_revenue_usd();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_revenue_usd() {
  _impl_.revenue_usd_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_revenue_usd() const {
  return _impl_.revenue_usd_;
}
inline int64_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::revenue_usd() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
  return _internal_revenue_usd();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_set_revenue_usd(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.revenue_usd_ = value;
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_revenue_usd(int64_t value) {
  _internal_set_revenue_usd(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
}

// optional int32 units = 4;
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_has_units() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_units() const {
  return _internal_has_units();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_units() {
  _impl_.units_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_units() const {
  return _impl_.units_;
}
inline int32_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::units() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.units)
  return _internal_units();
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_internal_set_units(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.units_ = value;
}
inline void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_units(int32_t value) {
  _internal_set_units(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.units)
}

// -------------------------------------------------------------------

// CWorkshop_GetPackageDailyRevenue_Response

// repeated .CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
inline int CWorkshop_GetPackageDailyRevenue_Response::_internal_country_revenue_size() const {
  return _impl_.country_revenue_.size();
}
inline int CWorkshop_GetPackageDailyRevenue_Response::country_revenue_size() const {
  return _internal_country_revenue_size();
}
inline void CWorkshop_GetPackageDailyRevenue_Response::clear_country_revenue() {
  _impl_.country_revenue_.Clear();
}
inline ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetPackageDailyRevenue_Response::mutable_country_revenue(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return _impl_.country_revenue_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >*
CWorkshop_GetPackageDailyRevenue_Response::mutable_country_revenue() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return &_impl_.country_revenue_;
}
inline const ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetPackageDailyRevenue_Response::_internal_country_revenue(int index) const {
  return _impl_.country_revenue_.Get(index);
}
inline const ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetPackageDailyRevenue_Response::country_revenue(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return _internal_country_revenue(index);
}
inline ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetPackageDailyRevenue_Response::_internal_add_country_revenue() {
  return _impl_.country_revenue_.Add();
}
inline ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetPackageDailyRevenue_Response::add_country_revenue() {
  ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* _add = _internal_add_country_revenue();
  // @@protoc_insertion_point(field_add:CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >&
CWorkshop_GetPackageDailyRevenue_Response::country_revenue() const {
  // @@protoc_insertion_point(field_list:CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return _impl_.country_revenue_;
}

// -------------------------------------------------------------------

// CMsgSQLGCToGCGrantBackpackSlots

// optional uint32 account_id = 1;
inline bool CMsgSQLGCToGCGrantBackpackSlots::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSQLGCToGCGrantBackpackSlots::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgSQLGCToGCGrantBackpackSlots::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgSQLGCToGCGrantBackpackSlots::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgSQLGCToGCGrantBackpackSlots::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgSQLGCToGCGrantBackpackSlots.account_id)
  return _internal_account_id();
}
inline void CMsgSQLGCToGCGrantBackpackSlots::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgSQLGCToGCGrantBackpackSlots::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgSQLGCToGCGrantBackpackSlots.account_id)
}

// optional uint32 add_slots = 2;
inline bool CMsgSQLGCToGCGrantBackpackSlots::_internal_has_add_slots() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSQLGCToGCGrantBackpackSlots::has_add_slots() const {
  return _internal_has_add_slots();
}
inline void CMsgSQLGCToGCGrantBackpackSlots::clear_add_slots() {
  _impl_.add_slots_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgSQLGCToGCGrantBackpackSlots::_internal_add_slots() const {
  return _impl_.add_slots_;
}
inline uint32_t CMsgSQLGCToGCGrantBackpackSlots::add_slots() const {
  // @@protoc_insertion_point(field_get:CMsgSQLGCToGCGrantBackpackSlots.add_slots)
  return _internal_add_slots();
}
inline void CMsgSQLGCToGCGrantBackpackSlots::_internal_set_add_slots(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.add_slots_ = value;
}
inline void CMsgSQLGCToGCGrantBackpackSlots::set_add_slots(uint32_t value) {
  _internal_set_add_slots(value);
  // @@protoc_insertion_point(field_set:CMsgSQLGCToGCGrantBackpackSlots.add_slots)
}

// -------------------------------------------------------------------

// CMsgClientToGCLookupAccountName

// optional uint32 account_id = 1;
inline bool CMsgClientToGCLookupAccountName::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCLookupAccountName::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCLookupAccountName::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCLookupAccountName::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCLookupAccountName::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLookupAccountName.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCLookupAccountName::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCLookupAccountName::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCLookupAccountName.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCLookupAccountNameResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCLookupAccountNameResponse::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCLookupAccountNameResponse::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCLookupAccountNameResponse::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCLookupAccountNameResponse::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCLookupAccountNameResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLookupAccountNameResponse.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCLookupAccountNameResponse::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCLookupAccountNameResponse::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCLookupAccountNameResponse.account_id)
}

// optional string account_name = 2;
inline bool CMsgClientToGCLookupAccountNameResponse::_internal_has_account_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCLookupAccountNameResponse::has_account_name() const {
  return _internal_has_account_name();
}
inline void CMsgClientToGCLookupAccountNameResponse::clear_account_name() {
  _impl_.account_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCLookupAccountNameResponse::account_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLookupAccountNameResponse.account_name)
  return _internal_account_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCLookupAccountNameResponse::set_account_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.account_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCLookupAccountNameResponse.account_name)
}
inline std::string* CMsgClientToGCLookupAccountNameResponse::mutable_account_name() {
  std::string* _s = _internal_mutable_account_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCLookupAccountNameResponse.account_name)
  return _s;
}
inline const std::string& CMsgClientToGCLookupAccountNameResponse::_internal_account_name() const {
  return _impl_.account_name_.Get();
}
inline void CMsgClientToGCLookupAccountNameResponse::_internal_set_account_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCLookupAccountNameResponse::_internal_mutable_account_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.account_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCLookupAccountNameResponse::release_account_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCLookupAccountNameResponse.account_name)
  if (!_internal_has_account_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.account_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_name_.IsDefault()) {
    _impl_.account_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCLookupAccountNameResponse::set_allocated_account_name(std::string* account_name) {
  if (account_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.account_name_.SetAllocated(account_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_name_.IsDefault()) {
    _impl_.account_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCLookupAccountNameResponse.account_name)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipe_Item

// optional uint64 item_id = 1;
inline bool CMsgClientToGCCreateStaticRecipe_Item::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipe_Item::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCCreateStaticRecipe_Item::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCCreateStaticRecipe_Item::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCCreateStaticRecipe_Item::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.Item.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCCreateStaticRecipe_Item::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipe.Item.item_id)
}

// optional uint32 slot_id = 2;
inline bool CMsgClientToGCCreateStaticRecipe_Item::_internal_has_slot_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipe_Item::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipe_Item::clear_slot_id() {
  _impl_.slot_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCCreateStaticRecipe_Item::_internal_slot_id() const {
  return _impl_.slot_id_;
}
inline uint32_t CMsgClientToGCCreateStaticRecipe_Item::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.Item.slot_id)
  return _internal_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipe_Item::_internal_set_slot_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.slot_id_ = value;
}
inline void CMsgClientToGCCreateStaticRecipe_Item::set_slot_id(uint32_t value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipe.Item.slot_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipe

// repeated .CMsgClientToGCCreateStaticRecipe.Item items = 1;
inline int CMsgClientToGCCreateStaticRecipe::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int CMsgClientToGCCreateStaticRecipe::items_size() const {
  return _internal_items_size();
}
inline void CMsgClientToGCCreateStaticRecipe::clear_items() {
  _impl_.items_.Clear();
}
inline ::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateStaticRecipe.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >*
CMsgClientToGCCreateStaticRecipe::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateStaticRecipe.items)
  return &_impl_.items_;
}
inline const ::CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.items)
  return _internal_items(index);
}
inline ::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::add_items() {
  ::CMsgClientToGCCreateStaticRecipe_Item* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateStaticRecipe.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipe_Item >&
CMsgClientToGCCreateStaticRecipe::items() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateStaticRecipe.items)
  return _impl_.items_;
}

// optional uint32 recipe_def_index = 2;
inline bool CMsgClientToGCCreateStaticRecipe::_internal_has_recipe_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipe::has_recipe_def_index() const {
  return _internal_has_recipe_def_index();
}
inline void CMsgClientToGCCreateStaticRecipe::clear_recipe_def_index() {
  _impl_.recipe_def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCCreateStaticRecipe::_internal_recipe_def_index() const {
  return _impl_.recipe_def_index_;
}
inline uint32_t CMsgClientToGCCreateStaticRecipe::recipe_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipe.recipe_def_index)
  return _internal_recipe_def_index();
}
inline void CMsgClientToGCCreateStaticRecipe::_internal_set_recipe_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.recipe_def_index_ = value;
}
inline void CMsgClientToGCCreateStaticRecipe::set_recipe_def_index(uint32_t value) {
  _internal_set_recipe_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipe.recipe_def_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipeResponse_OutputItem

// optional uint32 def_index = 1;
inline bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_has_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::has_def_index() const {
  return _internal_has_def_index();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_def_index() {
  _impl_.def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_def_index() const {
  return _impl_.def_index_;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::def_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.OutputItem.def_index)
  return _internal_def_index();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_set_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.def_index_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_def_index(uint32_t value) {
  _internal_set_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.OutputItem.def_index)
}

// optional uint64 item_id = 2;
inline bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_item_id() {
  _impl_.item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint64_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.OutputItem.item_id)
  return _internal_item_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_set_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_id_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_item_id(uint64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.OutputItem.item_id)
}

// optional uint32 slot_id = 3;
inline bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_has_slot_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_slot_id() {
  _impl_.slot_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_slot_id() const {
  return _impl_.slot_id_;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.OutputItem.slot_id)
  return _internal_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_internal_set_slot_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.slot_id_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_slot_id(uint32_t value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.OutputItem.slot_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipeResponse_InputError

// optional uint32 slot_id = 1;
inline bool CMsgClientToGCCreateStaticRecipeResponse_InputError::_internal_has_slot_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_InputError::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_InputError::clear_slot_id() {
  _impl_.slot_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_InputError::_internal_slot_id() const {
  return _impl_.slot_id_;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_InputError::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.InputError.slot_id)
  return _internal_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_InputError::_internal_set_slot_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.slot_id_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_InputError::set_slot_id(uint32_t value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.InputError.slot_id)
}

// optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
inline bool CMsgClientToGCCreateStaticRecipeResponse_InputError::_internal_has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_InputError::has_error() const {
  return _internal_has_error();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_InputError::clear_error() {
  _impl_.error_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_InputError::_internal_error() const {
  return static_cast< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(_impl_.error_);
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_InputError::error() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.InputError.error)
  return _internal_error();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_InputError::_internal_set_error(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  assert(::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_InputError::set_error(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.InputError.error)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput

// optional uint32 slot_id = 1;
inline bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_internal_has_slot_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::clear_slot_id() {
  _impl_.slot_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_internal_slot_id() const {
  return _impl_.slot_id_;
}
inline uint32_t CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.slot_id)
  return _internal_slot_id();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_internal_set_slot_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.slot_id_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::set_slot_id(uint32_t value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.slot_id)
}

// optional uint64 value = 2;
inline bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::has_value() const {
  return _internal_has_value();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::clear_value() {
  _impl_.value_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_internal_value() const {
  return _impl_.value_;
}
inline uint64_t CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.value)
  return _internal_value();
}
inline void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_internal_set_value(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::set_value(uint64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.value)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateStaticRecipeResponse

// optional .CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
inline bool CMsgClientToGCCreateStaticRecipeResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateStaticRecipeResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCCreateStaticRecipeResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCCreateStaticRecipeResponse::_internal_set_response(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  assert(::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCCreateStaticRecipeResponse::set_response(::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateStaticRecipeResponse.response)
}

// repeated .CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
inline int CMsgClientToGCCreateStaticRecipeResponse::_internal_output_items_size() const {
  return _impl_.output_items_.size();
}
inline int CMsgClientToGCCreateStaticRecipeResponse::output_items_size() const {
  return _internal_output_items_size();
}
inline void CMsgClientToGCCreateStaticRecipeResponse::clear_output_items() {
  _impl_.output_items_.Clear();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse::mutable_output_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return _impl_.output_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >*
CMsgClientToGCCreateStaticRecipeResponse::mutable_output_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return &_impl_.output_items_;
}
inline const ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem& CMsgClientToGCCreateStaticRecipeResponse::_internal_output_items(int index) const {
  return _impl_.output_items_.Get(index);
}
inline const ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem& CMsgClientToGCCreateStaticRecipeResponse::output_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return _internal_output_items(index);
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse::_internal_add_output_items() {
  return _impl_.output_items_.Add();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse::add_output_items() {
  ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* _add = _internal_add_output_items();
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >&
CMsgClientToGCCreateStaticRecipeResponse::output_items() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return _impl_.output_items_;
}

// repeated .CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
inline int CMsgClientToGCCreateStaticRecipeResponse::_internal_input_errors_size() const {
  return _impl_.input_errors_.size();
}
inline int CMsgClientToGCCreateStaticRecipeResponse::input_errors_size() const {
  return _internal_input_errors_size();
}
inline void CMsgClientToGCCreateStaticRecipeResponse::clear_input_errors() {
  _impl_.input_errors_.Clear();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse::mutable_input_errors(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return _impl_.input_errors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_InputError >*
CMsgClientToGCCreateStaticRecipeResponse::mutable_input_errors() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return &_impl_.input_errors_;
}
inline const ::CMsgClientToGCCreateStaticRecipeResponse_InputError& CMsgClientToGCCreateStaticRecipeResponse::_internal_input_errors(int index) const {
  return _impl_.input_errors_.Get(index);
}
inline const ::CMsgClientToGCCreateStaticRecipeResponse_InputError& CMsgClientToGCCreateStaticRecipeResponse::input_errors(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return _internal_input_errors(index);
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse::_internal_add_input_errors() {
  return _impl_.input_errors_.Add();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse::add_input_errors() {
  ::CMsgClientToGCCreateStaticRecipeResponse_InputError* _add = _internal_add_input_errors();
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_InputError >&
CMsgClientToGCCreateStaticRecipeResponse::input_errors() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return _impl_.input_errors_;
}

// repeated .CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
inline int CMsgClientToGCCreateStaticRecipeResponse::_internal_additional_outputs_size() const {
  return _impl_.additional_outputs_.size();
}
inline int CMsgClientToGCCreateStaticRecipeResponse::additional_outputs_size() const {
  return _internal_additional_outputs_size();
}
inline void CMsgClientToGCCreateStaticRecipeResponse::clear_additional_outputs() {
  _impl_.additional_outputs_.Clear();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse::mutable_additional_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return _impl_.additional_outputs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >*
CMsgClientToGCCreateStaticRecipeResponse::mutable_additional_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return &_impl_.additional_outputs_;
}
inline const ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& CMsgClientToGCCreateStaticRecipeResponse::_internal_additional_outputs(int index) const {
  return _impl_.additional_outputs_.Get(index);
}
inline const ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& CMsgClientToGCCreateStaticRecipeResponse::additional_outputs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return _internal_additional_outputs(index);
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse::_internal_add_additional_outputs() {
  return _impl_.additional_outputs_.Add();
}
inline ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse::add_additional_outputs() {
  ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* _add = _internal_add_additional_outputs();
  // @@protoc_insertion_point(field_add:CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >&
CMsgClientToGCCreateStaticRecipeResponse::additional_outputs() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return _impl_.additional_outputs_;
}

// -------------------------------------------------------------------

// CMsgProcessTransactionOrder_Item

// optional uint32 item_def_index = 1;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_item_def_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_item_def_index() const {
  return _internal_has_item_def_index();
}
inline void CMsgProcessTransactionOrder_Item::clear_item_def_index() {
  _impl_.item_def_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgProcessTransactionOrder_Item::_internal_item_def_index() const {
  return _impl_.item_def_index_;
}
inline uint32_t CMsgProcessTransactionOrder_Item::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.item_def_index)
  return _internal_item_def_index();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_item_def_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_def_index_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_item_def_index(uint32_t value) {
  _internal_set_item_def_index(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.item_def_index)
}

// optional uint32 item_price = 2;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_item_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_item_price() const {
  return _internal_has_item_price();
}
inline void CMsgProcessTransactionOrder_Item::clear_item_price() {
  _impl_.item_price_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgProcessTransactionOrder_Item::_internal_item_price() const {
  return _impl_.item_price_;
}
inline uint32_t CMsgProcessTransactionOrder_Item::item_price() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.item_price)
  return _internal_item_price();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_item_price(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.item_price_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_item_price(uint32_t value) {
  _internal_set_item_price(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.item_price)
}

// optional uint32 quantity = 3;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_quantity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_quantity() const {
  return _internal_has_quantity();
}
inline void CMsgProcessTransactionOrder_Item::clear_quantity() {
  _impl_.quantity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgProcessTransactionOrder_Item::_internal_quantity() const {
  return _impl_.quantity_;
}
inline uint32_t CMsgProcessTransactionOrder_Item::quantity() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.quantity)
  return _internal_quantity();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_quantity(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.quantity_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_quantity(uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.quantity)
}

// optional string category_desc = 4;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_category_desc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_category_desc() const {
  return _internal_has_category_desc();
}
inline void CMsgProcessTransactionOrder_Item::clear_category_desc() {
  _impl_.category_desc_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgProcessTransactionOrder_Item::category_desc() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.category_desc)
  return _internal_category_desc();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgProcessTransactionOrder_Item::set_category_desc(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.category_desc_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.category_desc)
}
inline std::string* CMsgProcessTransactionOrder_Item::mutable_category_desc() {
  std::string* _s = _internal_mutable_category_desc();
  // @@protoc_insertion_point(field_mutable:CMsgProcessTransactionOrder.Item.category_desc)
  return _s;
}
inline const std::string& CMsgProcessTransactionOrder_Item::_internal_category_desc() const {
  return _impl_.category_desc_.Get();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_category_desc(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.category_desc_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgProcessTransactionOrder_Item::_internal_mutable_category_desc() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.category_desc_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgProcessTransactionOrder_Item::release_category_desc() {
  // @@protoc_insertion_point(field_release:CMsgProcessTransactionOrder.Item.category_desc)
  if (!_internal_has_category_desc()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.category_desc_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.category_desc_.IsDefault()) {
    _impl_.category_desc_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgProcessTransactionOrder_Item::set_allocated_category_desc(std::string* category_desc) {
  if (category_desc != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.category_desc_.SetAllocated(category_desc, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.category_desc_.IsDefault()) {
    _impl_.category_desc_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgProcessTransactionOrder.Item.category_desc)
}

// optional uint32 store_purchase_type = 5;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_store_purchase_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_store_purchase_type() const {
  return _internal_has_store_purchase_type();
}
inline void CMsgProcessTransactionOrder_Item::clear_store_purchase_type() {
  _impl_.store_purchase_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgProcessTransactionOrder_Item::_internal_store_purchase_type() const {
  return _impl_.store_purchase_type_;
}
inline uint32_t CMsgProcessTransactionOrder_Item::store_purchase_type() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.store_purchase_type)
  return _internal_store_purchase_type();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_store_purchase_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.store_purchase_type_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_store_purchase_type(uint32_t value) {
  _internal_set_store_purchase_type(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.store_purchase_type)
}

// optional uint64 source_reference_id = 6;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_source_reference_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_source_reference_id() const {
  return _internal_has_source_reference_id();
}
inline void CMsgProcessTransactionOrder_Item::clear_source_reference_id() {
  _impl_.source_reference_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CMsgProcessTransactionOrder_Item::_internal_source_reference_id() const {
  return _impl_.source_reference_id_;
}
inline uint64_t CMsgProcessTransactionOrder_Item::source_reference_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.source_reference_id)
  return _internal_source_reference_id();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_source_reference_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.source_reference_id_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_source_reference_id(uint64_t value) {
  _internal_set_source_reference_id(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.source_reference_id)
}

// optional int32 parent_stack_index = 7;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_parent_stack_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_parent_stack_index() const {
  return _internal_has_parent_stack_index();
}
inline void CMsgProcessTransactionOrder_Item::clear_parent_stack_index() {
  _impl_.parent_stack_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CMsgProcessTransactionOrder_Item::_internal_parent_stack_index() const {
  return _impl_.parent_stack_index_;
}
inline int32_t CMsgProcessTransactionOrder_Item::parent_stack_index() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.parent_stack_index)
  return _internal_parent_stack_index();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_parent_stack_index(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.parent_stack_index_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_parent_stack_index(int32_t value) {
  _internal_set_parent_stack_index(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.parent_stack_index)
}

// optional bool default_price = 8;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_default_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_default_price() const {
  return _internal_has_default_price();
}
inline void CMsgProcessTransactionOrder_Item::clear_default_price() {
  _impl_.default_price_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgProcessTransactionOrder_Item::_internal_default_price() const {
  return _impl_.default_price_;
}
inline bool CMsgProcessTransactionOrder_Item::default_price() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.default_price)
  return _internal_default_price();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_default_price(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.default_price_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_default_price(bool value) {
  _internal_set_default_price(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.default_price)
}

// optional bool is_user_facing = 9;
inline bool CMsgProcessTransactionOrder_Item::_internal_has_is_user_facing() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder_Item::has_is_user_facing() const {
  return _internal_has_is_user_facing();
}
inline void CMsgProcessTransactionOrder_Item::clear_is_user_facing() {
  _impl_.is_user_facing_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgProcessTransactionOrder_Item::_internal_is_user_facing() const {
  return _impl_.is_user_facing_;
}
inline bool CMsgProcessTransactionOrder_Item::is_user_facing() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.Item.is_user_facing)
  return _internal_is_user_facing();
}
inline void CMsgProcessTransactionOrder_Item::_internal_set_is_user_facing(bool value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.is_user_facing_ = value;
}
inline void CMsgProcessTransactionOrder_Item::set_is_user_facing(bool value) {
  _internal_set_is_user_facing(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.Item.is_user_facing)
}

// -------------------------------------------------------------------

// CMsgProcessTransactionOrder

// optional uint64 txn_id = 1;
inline bool CMsgProcessTransactionOrder::_internal_has_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_txn_id() const {
  return _internal_has_txn_id();
}
inline void CMsgProcessTransactionOrder::clear_txn_id() {
  _impl_.txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgProcessTransactionOrder::_internal_txn_id() const {
  return _impl_.txn_id_;
}
inline uint64_t CMsgProcessTransactionOrder::txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.txn_id)
  return _internal_txn_id();
}
inline void CMsgProcessTransactionOrder::_internal_set_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txn_id_ = value;
}
inline void CMsgProcessTransactionOrder::set_txn_id(uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.txn_id)
}

// optional uint64 steam_txn_id = 2;
inline bool CMsgProcessTransactionOrder::_internal_has_steam_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_steam_txn_id() const {
  return _internal_has_steam_txn_id();
}
inline void CMsgProcessTransactionOrder::clear_steam_txn_id() {
  _impl_.steam_txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgProcessTransactionOrder::_internal_steam_txn_id() const {
  return _impl_.steam_txn_id_;
}
inline uint64_t CMsgProcessTransactionOrder::steam_txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.steam_txn_id)
  return _internal_steam_txn_id();
}
inline void CMsgProcessTransactionOrder::_internal_set_steam_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.steam_txn_id_ = value;
}
inline void CMsgProcessTransactionOrder::set_steam_txn_id(uint64_t value) {
  _internal_set_steam_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.steam_txn_id)
}

// optional uint64 partner_txn_id = 3;
inline bool CMsgProcessTransactionOrder::_internal_has_partner_txn_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_partner_txn_id() const {
  return _internal_has_partner_txn_id();
}
inline void CMsgProcessTransactionOrder::clear_partner_txn_id() {
  _impl_.partner_txn_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgProcessTransactionOrder::_internal_partner_txn_id() const {
  return _impl_.partner_txn_id_;
}
inline uint64_t CMsgProcessTransactionOrder::partner_txn_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.partner_txn_id)
  return _internal_partner_txn_id();
}
inline void CMsgProcessTransactionOrder::_internal_set_partner_txn_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.partner_txn_id_ = value;
}
inline void CMsgProcessTransactionOrder::set_partner_txn_id(uint64_t value) {
  _internal_set_partner_txn_id(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.partner_txn_id)
}

// optional fixed64 steam_id = 4;
inline bool CMsgProcessTransactionOrder::_internal_has_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgProcessTransactionOrder::clear_steam_id() {
  _impl_.steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgProcessTransactionOrder::_internal_steam_id() const {
  return _impl_.steam_id_;
}
inline uint64_t CMsgProcessTransactionOrder::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.steam_id)
  return _internal_steam_id();
}
inline void CMsgProcessTransactionOrder::_internal_set_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.steam_id_ = value;
}
inline void CMsgProcessTransactionOrder::set_steam_id(uint64_t value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.steam_id)
}

// optional uint32 time_stamp = 5;
inline bool CMsgProcessTransactionOrder::_internal_has_time_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_time_stamp() const {
  return _internal_has_time_stamp();
}
inline void CMsgProcessTransactionOrder::clear_time_stamp() {
  _impl_.time_stamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgProcessTransactionOrder::_internal_time_stamp() const {
  return _impl_.time_stamp_;
}
inline uint32_t CMsgProcessTransactionOrder::time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.time_stamp)
  return _internal_time_stamp();
}
inline void CMsgProcessTransactionOrder::_internal_set_time_stamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.time_stamp_ = value;
}
inline void CMsgProcessTransactionOrder::set_time_stamp(uint32_t value) {
  _internal_set_time_stamp(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.time_stamp)
}

// optional uint64 watermark = 6;
inline bool CMsgProcessTransactionOrder::_internal_has_watermark() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_watermark() const {
  return _internal_has_watermark();
}
inline void CMsgProcessTransactionOrder::clear_watermark() {
  _impl_.watermark_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CMsgProcessTransactionOrder::_internal_watermark() const {
  return _impl_.watermark_;
}
inline uint64_t CMsgProcessTransactionOrder::watermark() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.watermark)
  return _internal_watermark();
}
inline void CMsgProcessTransactionOrder::_internal_set_watermark(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.watermark_ = value;
}
inline void CMsgProcessTransactionOrder::set_watermark(uint64_t value) {
  _internal_set_watermark(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.watermark)
}

// optional int32 purchase_report_status = 7;
inline bool CMsgProcessTransactionOrder::_internal_has_purchase_report_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_purchase_report_status() const {
  return _internal_has_purchase_report_status();
}
inline void CMsgProcessTransactionOrder::clear_purchase_report_status() {
  _impl_.purchase_report_status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CMsgProcessTransactionOrder::_internal_purchase_report_status() const {
  return _impl_.purchase_report_status_;
}
inline int32_t CMsgProcessTransactionOrder::purchase_report_status() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.purchase_report_status)
  return _internal_purchase_report_status();
}
inline void CMsgProcessTransactionOrder::_internal_set_purchase_report_status(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.purchase_report_status_ = value;
}
inline void CMsgProcessTransactionOrder::set_purchase_report_status(int32_t value) {
  _internal_set_purchase_report_status(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.purchase_report_status)
}

// optional uint32 currency = 8;
inline bool CMsgProcessTransactionOrder::_internal_has_currency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgProcessTransactionOrder::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgProcessTransactionOrder::clear_currency() {
  _impl_.currency_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgProcessTransactionOrder::_internal_currency() const {
  return _impl_.currency_;
}
inline uint32_t CMsgProcessTransactionOrder::currency() const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.currency)
  return _internal_currency();
}
inline void CMsgProcessTransactionOrder::_internal_set_currency(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.currency_ = value;
}
inline void CMsgProcessTransactionOrder::set_currency(uint32_t value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgProcessTransactionOrder.currency)
}

// repeated .CMsgProcessTransactionOrder.Item items = 9;
inline int CMsgProcessTransactionOrder::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int CMsgProcessTransactionOrder::items_size() const {
  return _internal_items_size();
}
inline void CMsgProcessTransactionOrder::clear_items() {
  _impl_.items_.Clear();
}
inline ::CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgProcessTransactionOrder.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgProcessTransactionOrder_Item >*
CMsgProcessTransactionOrder::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgProcessTransactionOrder.items)
  return &_impl_.items_;
}
inline const ::CMsgProcessTransactionOrder_Item& CMsgProcessTransactionOrder::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::CMsgProcessTransactionOrder_Item& CMsgProcessTransactionOrder::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgProcessTransactionOrder.items)
  return _internal_items(index);
}
inline ::CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder::add_items() {
  ::CMsgProcessTransactionOrder_Item* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:CMsgProcessTransactionOrder.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgProcessTransactionOrder_Item >&
CMsgProcessTransactionOrder::items() const {
  // @@protoc_insertion_point(field_list:CMsgProcessTransactionOrder.items)
  return _impl_.items_;
}

// -------------------------------------------------------------------

// CMsgGCToGCStoreProcessCDKeyTransaction

// optional .CMsgProcessTransactionOrder order = 1;
inline bool CMsgGCToGCStoreProcessCDKeyTransaction::_internal_has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.order_ != nullptr);
  return value;
}
inline bool CMsgGCToGCStoreProcessCDKeyTransaction::has_order() const {
  return _internal_has_order();
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::clear_order() {
  if (_impl_.order_ != nullptr) _impl_.order_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgProcessTransactionOrder& CMsgGCToGCStoreProcessCDKeyTransaction::_internal_order() const {
  const ::CMsgProcessTransactionOrder* p = _impl_.order_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgProcessTransactionOrder&>(
      ::_CMsgProcessTransactionOrder_default_instance_);
}
inline const ::CMsgProcessTransactionOrder& CMsgGCToGCStoreProcessCDKeyTransaction::order() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCStoreProcessCDKeyTransaction.order)
  return _internal_order();
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::unsafe_arena_set_allocated_order(
    ::CMsgProcessTransactionOrder* order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.order_);
  }
  _impl_.order_ = order;
  if (order) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToGCStoreProcessCDKeyTransaction.order)
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessCDKeyTransaction::release_order() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgProcessTransactionOrder* temp = _impl_.order_;
  _impl_.order_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessCDKeyTransaction::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCStoreProcessCDKeyTransaction.order)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgProcessTransactionOrder* temp = _impl_.order_;
  _impl_.order_ = nullptr;
  return temp;
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessCDKeyTransaction::_internal_mutable_order() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.order_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgProcessTransactionOrder>(GetArenaForAllocation());
    _impl_.order_ = p;
  }
  return _impl_.order_;
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessCDKeyTransaction::mutable_order() {
  ::CMsgProcessTransactionOrder* _msg = _internal_mutable_order();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCStoreProcessCDKeyTransaction.order)
  return _msg;
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::set_allocated_order(::CMsgProcessTransactionOrder* order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.order_;
  }
  if (order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(order);
    if (message_arena != submessage_arena) {
      order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.order_ = order;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCStoreProcessCDKeyTransaction.order)
}

// optional uint32 reason_code = 2;
inline bool CMsgGCToGCStoreProcessCDKeyTransaction::_internal_has_reason_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCStoreProcessCDKeyTransaction::has_reason_code() const {
  return _internal_has_reason_code();
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::clear_reason_code() {
  _impl_.reason_code_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCStoreProcessCDKeyTransaction::_internal_reason_code() const {
  return _impl_.reason_code_;
}
inline uint32_t CMsgGCToGCStoreProcessCDKeyTransaction::reason_code() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCStoreProcessCDKeyTransaction.reason_code)
  return _internal_reason_code();
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::_internal_set_reason_code(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_code_ = value;
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::set_reason_code(uint32_t value) {
  _internal_set_reason_code(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCStoreProcessCDKeyTransaction.reason_code)
}

// optional uint32 partner = 3;
inline bool CMsgGCToGCStoreProcessCDKeyTransaction::_internal_has_partner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCStoreProcessCDKeyTransaction::has_partner() const {
  return _internal_has_partner();
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::clear_partner() {
  _impl_.partner_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToGCStoreProcessCDKeyTransaction::_internal_partner() const {
  return _impl_.partner_;
}
inline uint32_t CMsgGCToGCStoreProcessCDKeyTransaction::partner() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCStoreProcessCDKeyTransaction.partner)
  return _internal_partner();
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::_internal_set_partner(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.partner_ = value;
}
inline void CMsgGCToGCStoreProcessCDKeyTransaction::set_partner(uint32_t value) {
  _internal_set_partner(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCStoreProcessCDKeyTransaction.partner)
}

// -------------------------------------------------------------------

// CMsgGCToGCStoreProcessCDKeyTransactionResponse

// optional bool success = 1;
inline bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgGCToGCStoreProcessCDKeyTransactionResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCStoreProcessCDKeyTransactionResponse.success)
  return _internal_success();
}
inline void CMsgGCToGCStoreProcessCDKeyTransactionResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgGCToGCStoreProcessCDKeyTransactionResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCStoreProcessCDKeyTransactionResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCToGCStoreProcessSettlement

// optional .CMsgProcessTransactionOrder order = 1;
inline bool CMsgGCToGCStoreProcessSettlement::_internal_has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.order_ != nullptr);
  return value;
}
inline bool CMsgGCToGCStoreProcessSettlement::has_order() const {
  return _internal_has_order();
}
inline void CMsgGCToGCStoreProcessSettlement::clear_order() {
  if (_impl_.order_ != nullptr) _impl_.order_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgProcessTransactionOrder& CMsgGCToGCStoreProcessSettlement::_internal_order() const {
  const ::CMsgProcessTransactionOrder* p = _impl_.order_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgProcessTransactionOrder&>(
      ::_CMsgProcessTransactionOrder_default_instance_);
}
inline const ::CMsgProcessTransactionOrder& CMsgGCToGCStoreProcessSettlement::order() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCStoreProcessSettlement.order)
  return _internal_order();
}
inline void CMsgGCToGCStoreProcessSettlement::unsafe_arena_set_allocated_order(
    ::CMsgProcessTransactionOrder* order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.order_);
  }
  _impl_.order_ = order;
  if (order) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToGCStoreProcessSettlement.order)
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessSettlement::release_order() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgProcessTransactionOrder* temp = _impl_.order_;
  _impl_.order_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessSettlement::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCStoreProcessSettlement.order)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgProcessTransactionOrder* temp = _impl_.order_;
  _impl_.order_ = nullptr;
  return temp;
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessSettlement::_internal_mutable_order() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.order_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgProcessTransactionOrder>(GetArenaForAllocation());
    _impl_.order_ = p;
  }
  return _impl_.order_;
}
inline ::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessSettlement::mutable_order() {
  ::CMsgProcessTransactionOrder* _msg = _internal_mutable_order();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCStoreProcessSettlement.order)
  return _msg;
}
inline void CMsgGCToGCStoreProcessSettlement::set_allocated_order(::CMsgProcessTransactionOrder* order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.order_;
  }
  if (order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(order);
    if (message_arena != submessage_arena) {
      order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.order_ = order;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCStoreProcessSettlement.order)
}

// -------------------------------------------------------------------

// CMsgGCToGCStoreProcessSettlementResponse

// optional bool success = 1;
inline bool CMsgGCToGCStoreProcessSettlementResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCStoreProcessSettlementResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgGCToGCStoreProcessSettlementResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToGCStoreProcessSettlementResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgGCToGCStoreProcessSettlementResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCStoreProcessSettlementResponse.success)
  return _internal_success();
}
inline void CMsgGCToGCStoreProcessSettlementResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgGCToGCStoreProcessSettlementResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCStoreProcessSettlementResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCToGCBroadcastConsoleCommand

// optional string con_command = 1;
inline bool CMsgGCToGCBroadcastConsoleCommand::_internal_has_con_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCBroadcastConsoleCommand::has_con_command() const {
  return _internal_has_con_command();
}
inline void CMsgGCToGCBroadcastConsoleCommand::clear_con_command() {
  _impl_.con_command_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCBroadcastConsoleCommand::con_command() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastConsoleCommand.con_command)
  return _internal_con_command();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCBroadcastConsoleCommand::set_con_command(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.con_command_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastConsoleCommand.con_command)
}
inline std::string* CMsgGCToGCBroadcastConsoleCommand::mutable_con_command() {
  std::string* _s = _internal_mutable_con_command();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCBroadcastConsoleCommand.con_command)
  return _s;
}
inline const std::string& CMsgGCToGCBroadcastConsoleCommand::_internal_con_command() const {
  return _impl_.con_command_.Get();
}
inline void CMsgGCToGCBroadcastConsoleCommand::_internal_set_con_command(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.con_command_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCBroadcastConsoleCommand::_internal_mutable_con_command() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.con_command_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCBroadcastConsoleCommand::release_con_command() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCBroadcastConsoleCommand.con_command)
  if (!_internal_has_con_command()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.con_command_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.con_command_.IsDefault()) {
    _impl_.con_command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCBroadcastConsoleCommand::set_allocated_con_command(std::string* con_command) {
  if (con_command != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.con_command_.SetAllocated(con_command, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.con_command_.IsDefault()) {
    _impl_.con_command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCBroadcastConsoleCommand.con_command)
}

// optional bool report_output = 2;
inline bool CMsgGCToGCBroadcastConsoleCommand::_internal_has_report_output() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCBroadcastConsoleCommand::has_report_output() const {
  return _internal_has_report_output();
}
inline void CMsgGCToGCBroadcastConsoleCommand::clear_report_output() {
  _impl_.report_output_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToGCBroadcastConsoleCommand::_internal_report_output() const {
  return _impl_.report_output_;
}
inline bool CMsgGCToGCBroadcastConsoleCommand::report_output() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastConsoleCommand.report_output)
  return _internal_report_output();
}
inline void CMsgGCToGCBroadcastConsoleCommand::_internal_set_report_output(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.report_output_ = value;
}
inline void CMsgGCToGCBroadcastConsoleCommand::set_report_output(bool value) {
  _internal_set_report_output(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastConsoleCommand.report_output)
}

// optional int32 sending_gc = 3 [default = -1];
inline bool CMsgGCToGCBroadcastConsoleCommand::_internal_has_sending_gc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCBroadcastConsoleCommand::has_sending_gc() const {
  return _internal_has_sending_gc();
}
inline void CMsgGCToGCBroadcastConsoleCommand::clear_sending_gc() {
  _impl_.sending_gc_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgGCToGCBroadcastConsoleCommand::_internal_sending_gc() const {
  return _impl_.sending_gc_;
}
inline int32_t CMsgGCToGCBroadcastConsoleCommand::sending_gc() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastConsoleCommand.sending_gc)
  return _internal_sending_gc();
}
inline void CMsgGCToGCBroadcastConsoleCommand::_internal_set_sending_gc(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sending_gc_ = value;
}
inline void CMsgGCToGCBroadcastConsoleCommand::set_sending_gc(int32_t value) {
  _internal_set_sending_gc(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastConsoleCommand.sending_gc)
}

// optional string output_initiator = 4;
inline bool CMsgGCToGCBroadcastConsoleCommand::_internal_has_output_initiator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCBroadcastConsoleCommand::has_output_initiator() const {
  return _internal_has_output_initiator();
}
inline void CMsgGCToGCBroadcastConsoleCommand::clear_output_initiator() {
  _impl_.output_initiator_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCToGCBroadcastConsoleCommand::output_initiator() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastConsoleCommand.output_initiator)
  return _internal_output_initiator();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCBroadcastConsoleCommand::set_output_initiator(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.output_initiator_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}
inline std::string* CMsgGCToGCBroadcastConsoleCommand::mutable_output_initiator() {
  std::string* _s = _internal_mutable_output_initiator();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCBroadcastConsoleCommand.output_initiator)
  return _s;
}
inline const std::string& CMsgGCToGCBroadcastConsoleCommand::_internal_output_initiator() const {
  return _impl_.output_initiator_.Get();
}
inline void CMsgGCToGCBroadcastConsoleCommand::_internal_set_output_initiator(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.output_initiator_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCBroadcastConsoleCommand::_internal_mutable_output_initiator() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.output_initiator_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCBroadcastConsoleCommand::release_output_initiator() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCBroadcastConsoleCommand.output_initiator)
  if (!_internal_has_output_initiator()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.output_initiator_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.output_initiator_.IsDefault()) {
    _impl_.output_initiator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCBroadcastConsoleCommand::set_allocated_output_initiator(std::string* output_initiator) {
  if (output_initiator != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.output_initiator_.SetAllocated(output_initiator, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.output_initiator_.IsDefault()) {
    _impl_.output_initiator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}

// -------------------------------------------------------------------

// CMsgGCToGCConsoleOutput_OutputLine

// optional string text = 1;
inline bool CMsgGCToGCConsoleOutput_OutputLine::_internal_has_text() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCConsoleOutput_OutputLine::has_text() const {
  return _internal_has_text();
}
inline void CMsgGCToGCConsoleOutput_OutputLine::clear_text() {
  _impl_.text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCConsoleOutput_OutputLine::text() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCConsoleOutput.OutputLine.text)
  return _internal_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCConsoleOutput_OutputLine::set_text(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.text_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCConsoleOutput.OutputLine.text)
}
inline std::string* CMsgGCToGCConsoleOutput_OutputLine::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCConsoleOutput.OutputLine.text)
  return _s;
}
inline const std::string& CMsgGCToGCConsoleOutput_OutputLine::_internal_text() const {
  return _impl_.text_.Get();
}
inline void CMsgGCToGCConsoleOutput_OutputLine::_internal_set_text(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.text_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCConsoleOutput_OutputLine::_internal_mutable_text() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.text_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCConsoleOutput_OutputLine::release_text() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCConsoleOutput.OutputLine.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.text_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCConsoleOutput_OutputLine::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.text_.SetAllocated(text, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCConsoleOutput.OutputLine.text)
}

// optional uint32 spew_level = 2;
inline bool CMsgGCToGCConsoleOutput_OutputLine::_internal_has_spew_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCConsoleOutput_OutputLine::has_spew_level() const {
  return _internal_has_spew_level();
}
inline void CMsgGCToGCConsoleOutput_OutputLine::clear_spew_level() {
  _impl_.spew_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCConsoleOutput_OutputLine::_internal_spew_level() const {
  return _impl_.spew_level_;
}
inline uint32_t CMsgGCToGCConsoleOutput_OutputLine::spew_level() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCConsoleOutput.OutputLine.spew_level)
  return _internal_spew_level();
}
inline void CMsgGCToGCConsoleOutput_OutputLine::_internal_set_spew_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.spew_level_ = value;
}
inline void CMsgGCToGCConsoleOutput_OutputLine::set_spew_level(uint32_t value) {
  _internal_set_spew_level(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCConsoleOutput.OutputLine.spew_level)
}

// -------------------------------------------------------------------

// CMsgGCToGCConsoleOutput

// optional string initiator = 1;
inline bool CMsgGCToGCConsoleOutput::_internal_has_initiator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCConsoleOutput::has_initiator() const {
  return _internal_has_initiator();
}
inline void CMsgGCToGCConsoleOutput::clear_initiator() {
  _impl_.initiator_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCConsoleOutput::initiator() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCConsoleOutput.initiator)
  return _internal_initiator();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCConsoleOutput::set_initiator(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.initiator_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCConsoleOutput.initiator)
}
inline std::string* CMsgGCToGCConsoleOutput::mutable_initiator() {
  std::string* _s = _internal_mutable_initiator();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCConsoleOutput.initiator)
  return _s;
}
inline const std::string& CMsgGCToGCConsoleOutput::_internal_initiator() const {
  return _impl_.initiator_.Get();
}
inline void CMsgGCToGCConsoleOutput::_internal_set_initiator(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.initiator_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCConsoleOutput::_internal_mutable_initiator() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.initiator_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCConsoleOutput::release_initiator() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCConsoleOutput.initiator)
  if (!_internal_has_initiator()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.initiator_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.initiator_.IsDefault()) {
    _impl_.initiator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCConsoleOutput::set_allocated_initiator(std::string* initiator) {
  if (initiator != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.initiator_.SetAllocated(initiator, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.initiator_.IsDefault()) {
    _impl_.initiator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCConsoleOutput.initiator)
}

// optional int32 sending_gc = 2 [default = -1];
inline bool CMsgGCToGCConsoleOutput::_internal_has_sending_gc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCConsoleOutput::has_sending_gc() const {
  return _internal_has_sending_gc();
}
inline void CMsgGCToGCConsoleOutput::clear_sending_gc() {
  _impl_.sending_gc_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CMsgGCToGCConsoleOutput::_internal_sending_gc() const {
  return _impl_.sending_gc_;
}
inline int32_t CMsgGCToGCConsoleOutput::sending_gc() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCConsoleOutput.sending_gc)
  return _internal_sending_gc();
}
inline void CMsgGCToGCConsoleOutput::_internal_set_sending_gc(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sending_gc_ = value;
}
inline void CMsgGCToGCConsoleOutput::set_sending_gc(int32_t value) {
  _internal_set_sending_gc(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCConsoleOutput.sending_gc)
}

// repeated .CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
inline int CMsgGCToGCConsoleOutput::_internal_msgs_size() const {
  return _impl_.msgs_.size();
}
inline int CMsgGCToGCConsoleOutput::msgs_size() const {
  return _internal_msgs_size();
}
inline void CMsgGCToGCConsoleOutput::clear_msgs() {
  _impl_.msgs_.Clear();
}
inline ::CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCConsoleOutput.msgs)
  return _impl_.msgs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCConsoleOutput_OutputLine >*
CMsgGCToGCConsoleOutput::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCConsoleOutput.msgs)
  return &_impl_.msgs_;
}
inline const ::CMsgGCToGCConsoleOutput_OutputLine& CMsgGCToGCConsoleOutput::_internal_msgs(int index) const {
  return _impl_.msgs_.Get(index);
}
inline const ::CMsgGCToGCConsoleOutput_OutputLine& CMsgGCToGCConsoleOutput::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCConsoleOutput.msgs)
  return _internal_msgs(index);
}
inline ::CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput::_internal_add_msgs() {
  return _impl_.msgs_.Add();
}
inline ::CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput::add_msgs() {
  ::CMsgGCToGCConsoleOutput_OutputLine* _add = _internal_add_msgs();
  // @@protoc_insertion_point(field_add:CMsgGCToGCConsoleOutput.msgs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCConsoleOutput_OutputLine >&
CMsgGCToGCConsoleOutput::msgs() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCConsoleOutput.msgs)
  return _impl_.msgs_;
}

// optional bool is_last_for_source_job = 4;
inline bool CMsgGCToGCConsoleOutput::_internal_has_is_last_for_source_job() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCConsoleOutput::has_is_last_for_source_job() const {
  return _internal_has_is_last_for_source_job();
}
inline void CMsgGCToGCConsoleOutput::clear_is_last_for_source_job() {
  _impl_.is_last_for_source_job_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToGCConsoleOutput::_internal_is_last_for_source_job() const {
  return _impl_.is_last_for_source_job_;
}
inline bool CMsgGCToGCConsoleOutput::is_last_for_source_job() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCConsoleOutput.is_last_for_source_job)
  return _internal_is_last_for_source_job();
}
inline void CMsgGCToGCConsoleOutput::_internal_set_is_last_for_source_job(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.is_last_for_source_job_ = value;
}
inline void CMsgGCToGCConsoleOutput::set_is_last_for_source_job(bool value) {
  _internal_set_is_last_for_source_job(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCConsoleOutput.is_last_for_source_job)
}

// -------------------------------------------------------------------

// CMsgItemAges_MaxItemIDTimestamp

// optional uint32 timestamp = 1;
inline bool CMsgItemAges_MaxItemIDTimestamp::_internal_has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgItemAges_MaxItemIDTimestamp::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CMsgItemAges_MaxItemIDTimestamp::clear_timestamp() {
  _impl_.timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgItemAges_MaxItemIDTimestamp::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline uint32_t CMsgItemAges_MaxItemIDTimestamp::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgItemAges.MaxItemIDTimestamp.timestamp)
  return _internal_timestamp();
}
inline void CMsgItemAges_MaxItemIDTimestamp::_internal_set_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.timestamp_ = value;
}
inline void CMsgItemAges_MaxItemIDTimestamp::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgItemAges.MaxItemIDTimestamp.timestamp)
}

// optional uint64 max_item_id = 2;
inline bool CMsgItemAges_MaxItemIDTimestamp::_internal_has_max_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgItemAges_MaxItemIDTimestamp::has_max_item_id() const {
  return _internal_has_max_item_id();
}
inline void CMsgItemAges_MaxItemIDTimestamp::clear_max_item_id() {
  _impl_.max_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgItemAges_MaxItemIDTimestamp::_internal_max_item_id() const {
  return _impl_.max_item_id_;
}
inline uint64_t CMsgItemAges_MaxItemIDTimestamp::max_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgItemAges.MaxItemIDTimestamp.max_item_id)
  return _internal_max_item_id();
}
inline void CMsgItemAges_MaxItemIDTimestamp::_internal_set_max_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.max_item_id_ = value;
}
inline void CMsgItemAges_MaxItemIDTimestamp::set_max_item_id(uint64_t value) {
  _internal_set_max_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgItemAges.MaxItemIDTimestamp.max_item_id)
}

// -------------------------------------------------------------------

// CMsgItemAges

// repeated .CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
inline int CMsgItemAges::_internal_max_item_id_timestamps_size() const {
  return _impl_.max_item_id_timestamps_.size();
}
inline int CMsgItemAges::max_item_id_timestamps_size() const {
  return _internal_max_item_id_timestamps_size();
}
inline void CMsgItemAges::clear_max_item_id_timestamps() {
  _impl_.max_item_id_timestamps_.Clear();
}
inline ::CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges::mutable_max_item_id_timestamps(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgItemAges.max_item_id_timestamps)
  return _impl_.max_item_id_timestamps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgItemAges_MaxItemIDTimestamp >*
CMsgItemAges::mutable_max_item_id_timestamps() {
  // @@protoc_insertion_point(field_mutable_list:CMsgItemAges.max_item_id_timestamps)
  return &_impl_.max_item_id_timestamps_;
}
inline const ::CMsgItemAges_MaxItemIDTimestamp& CMsgItemAges::_internal_max_item_id_timestamps(int index) const {
  return _impl_.max_item_id_timestamps_.Get(index);
}
inline const ::CMsgItemAges_MaxItemIDTimestamp& CMsgItemAges::max_item_id_timestamps(int index) const {
  // @@protoc_insertion_point(field_get:CMsgItemAges.max_item_id_timestamps)
  return _internal_max_item_id_timestamps(index);
}
inline ::CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges::_internal_add_max_item_id_timestamps() {
  return _impl_.max_item_id_timestamps_.Add();
}
inline ::CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges::add_max_item_id_timestamps() {
  ::CMsgItemAges_MaxItemIDTimestamp* _add = _internal_add_max_item_id_timestamps();
  // @@protoc_insertion_point(field_add:CMsgItemAges.max_item_id_timestamps)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgItemAges_MaxItemIDTimestamp >&
CMsgItemAges::max_item_id_timestamps() const {
  // @@protoc_insertion_point(field_list:CMsgItemAges.max_item_id_timestamps)
  return _impl_.max_item_id_timestamps_;
}

// -------------------------------------------------------------------

// CMsgGCToGCInternalTestMsg

// optional int32 sending_gc = 1 [default = -1];
inline bool CMsgGCToGCInternalTestMsg::_internal_has_sending_gc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_sending_gc() const {
  return _internal_has_sending_gc();
}
inline void CMsgGCToGCInternalTestMsg::clear_sending_gc() {
  _impl_.sending_gc_ = -1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CMsgGCToGCInternalTestMsg::_internal_sending_gc() const {
  return _impl_.sending_gc_;
}
inline int32_t CMsgGCToGCInternalTestMsg::sending_gc() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.sending_gc)
  return _internal_sending_gc();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_sending_gc(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.sending_gc_ = value;
}
inline void CMsgGCToGCInternalTestMsg::set_sending_gc(int32_t value) {
  _internal_set_sending_gc(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.sending_gc)
}

// optional fixed64 sender_id = 2;
inline bool CMsgGCToGCInternalTestMsg::_internal_has_sender_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_sender_id() const {
  return _internal_has_sender_id();
}
inline void CMsgGCToGCInternalTestMsg::clear_sender_id() {
  _impl_.sender_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgGCToGCInternalTestMsg::_internal_sender_id() const {
  return _impl_.sender_id_;
}
inline uint64_t CMsgGCToGCInternalTestMsg::sender_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.sender_id)
  return _internal_sender_id();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_sender_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sender_id_ = value;
}
inline void CMsgGCToGCInternalTestMsg::set_sender_id(uint64_t value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.sender_id)
}

// optional uint32 context = 3;
inline bool CMsgGCToGCInternalTestMsg::_internal_has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_context() const {
  return _internal_has_context();
}
inline void CMsgGCToGCInternalTestMsg::clear_context() {
  _impl_.context_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToGCInternalTestMsg::_internal_context() const {
  return _impl_.context_;
}
inline uint32_t CMsgGCToGCInternalTestMsg::context() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.context)
  return _internal_context();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_context(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.context_ = value;
}
inline void CMsgGCToGCInternalTestMsg::set_context(uint32_t value) {
  _internal_set_context(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.context)
}

// optional uint32 message_id = 4;
inline bool CMsgGCToGCInternalTestMsg::_internal_has_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_message_id() const {
  return _internal_has_message_id();
}
inline void CMsgGCToGCInternalTestMsg::clear_message_id() {
  _impl_.message_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCToGCInternalTestMsg::_internal_message_id() const {
  return _impl_.message_id_;
}
inline uint32_t CMsgGCToGCInternalTestMsg::message_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.message_id)
  return _internal_message_id();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_message_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.message_id_ = value;
}
inline void CMsgGCToGCInternalTestMsg::set_message_id(uint32_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.message_id)
}

// optional bytes message_body = 5;
inline bool CMsgGCToGCInternalTestMsg::_internal_has_message_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_message_body() const {
  return _internal_has_message_body();
}
inline void CMsgGCToGCInternalTestMsg::clear_message_body() {
  _impl_.message_body_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCInternalTestMsg::message_body() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.message_body)
  return _internal_message_body();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCInternalTestMsg::set_message_body(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_body_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.message_body)
}
inline std::string* CMsgGCToGCInternalTestMsg::mutable_message_body() {
  std::string* _s = _internal_mutable_message_body();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCInternalTestMsg.message_body)
  return _s;
}
inline const std::string& CMsgGCToGCInternalTestMsg::_internal_message_body() const {
  return _impl_.message_body_.Get();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_message_body(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_body_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCInternalTestMsg::_internal_mutable_message_body() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_body_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCInternalTestMsg::release_message_body() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCInternalTestMsg.message_body)
  if (!_internal_has_message_body()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_body_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_body_.IsDefault()) {
    _impl_.message_body_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCInternalTestMsg::set_allocated_message_body(std::string* message_body) {
  if (message_body != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_body_.SetAllocated(message_body, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_body_.IsDefault()) {
    _impl_.message_body_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCInternalTestMsg.message_body)
}

// optional fixed64 job_id_source = 6;
inline bool CMsgGCToGCInternalTestMsg::_internal_has_job_id_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_job_id_source() const {
  return _internal_has_job_id_source();
}
inline void CMsgGCToGCInternalTestMsg::clear_job_id_source() {
  _impl_.job_id_source_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CMsgGCToGCInternalTestMsg::_internal_job_id_source() const {
  return _impl_.job_id_source_;
}
inline uint64_t CMsgGCToGCInternalTestMsg::job_id_source() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.job_id_source)
  return _internal_job_id_source();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_job_id_source(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.job_id_source_ = value;
}
inline void CMsgGCToGCInternalTestMsg::set_job_id_source(uint64_t value) {
  _internal_set_job_id_source(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.job_id_source)
}

// optional fixed64 job_id_target = 7;
inline bool CMsgGCToGCInternalTestMsg::_internal_has_job_id_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGCToGCInternalTestMsg::has_job_id_target() const {
  return _internal_has_job_id_target();
}
inline void CMsgGCToGCInternalTestMsg::clear_job_id_target() {
  _impl_.job_id_target_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CMsgGCToGCInternalTestMsg::_internal_job_id_target() const {
  return _impl_.job_id_target_;
}
inline uint64_t CMsgGCToGCInternalTestMsg::job_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCInternalTestMsg.job_id_target)
  return _internal_job_id_target();
}
inline void CMsgGCToGCInternalTestMsg::_internal_set_job_id_target(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.job_id_target_ = value;
}
inline void CMsgGCToGCInternalTestMsg::set_job_id_target(uint64_t value) {
  _internal_set_job_id_target(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCInternalTestMsg.job_id_target)
}

// -------------------------------------------------------------------

// CMsgGCToGCClientServerVersionsUpdated

// optional uint32 client_min_allowed_version = 1;
inline bool CMsgGCToGCClientServerVersionsUpdated::_internal_has_client_min_allowed_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCClientServerVersionsUpdated::has_client_min_allowed_version() const {
  return _internal_has_client_min_allowed_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::clear_client_min_allowed_version() {
  _impl_.client_min_allowed_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::_internal_client_min_allowed_version() const {
  return _impl_.client_min_allowed_version_;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::client_min_allowed_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCClientServerVersionsUpdated.client_min_allowed_version)
  return _internal_client_min_allowed_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::_internal_set_client_min_allowed_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_min_allowed_version_ = value;
}
inline void CMsgGCToGCClientServerVersionsUpdated::set_client_min_allowed_version(uint32_t value) {
  _internal_set_client_min_allowed_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCClientServerVersionsUpdated.client_min_allowed_version)
}

// optional uint32 client_active_version = 2;
inline bool CMsgGCToGCClientServerVersionsUpdated::_internal_has_client_active_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCClientServerVersionsUpdated::has_client_active_version() const {
  return _internal_has_client_active_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::clear_client_active_version() {
  _impl_.client_active_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::_internal_client_active_version() const {
  return _impl_.client_active_version_;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::client_active_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCClientServerVersionsUpdated.client_active_version)
  return _internal_client_active_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::_internal_set_client_active_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_active_version_ = value;
}
inline void CMsgGCToGCClientServerVersionsUpdated::set_client_active_version(uint32_t value) {
  _internal_set_client_active_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCClientServerVersionsUpdated.client_active_version)
}

// optional uint32 server_active_version = 3;
inline bool CMsgGCToGCClientServerVersionsUpdated::_internal_has_server_active_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCClientServerVersionsUpdated::has_server_active_version() const {
  return _internal_has_server_active_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::clear_server_active_version() {
  _impl_.server_active_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::_internal_server_active_version() const {
  return _impl_.server_active_version_;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::server_active_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCClientServerVersionsUpdated.server_active_version)
  return _internal_server_active_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::_internal_set_server_active_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.server_active_version_ = value;
}
inline void CMsgGCToGCClientServerVersionsUpdated::set_server_active_version(uint32_t value) {
  _internal_set_server_active_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCClientServerVersionsUpdated.server_active_version)
}

// optional uint32 server_deployed_version = 4;
inline bool CMsgGCToGCClientServerVersionsUpdated::_internal_has_server_deployed_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCClientServerVersionsUpdated::has_server_deployed_version() const {
  return _internal_has_server_deployed_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::clear_server_deployed_version() {
  _impl_.server_deployed_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::_internal_server_deployed_version() const {
  return _impl_.server_deployed_version_;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::server_deployed_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCClientServerVersionsUpdated.server_deployed_version)
  return _internal_server_deployed_version();
}
inline void CMsgGCToGCClientServerVersionsUpdated::_internal_set_server_deployed_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.server_deployed_version_ = value;
}
inline void CMsgGCToGCClientServerVersionsUpdated::set_server_deployed_version(uint32_t value) {
  _internal_set_server_deployed_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCClientServerVersionsUpdated.server_deployed_version)
}

// optional uint32 what_changed = 5;
inline bool CMsgGCToGCClientServerVersionsUpdated::_internal_has_what_changed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToGCClientServerVersionsUpdated::has_what_changed() const {
  return _internal_has_what_changed();
}
inline void CMsgGCToGCClientServerVersionsUpdated::clear_what_changed() {
  _impl_.what_changed_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::_internal_what_changed() const {
  return _impl_.what_changed_;
}
inline uint32_t CMsgGCToGCClientServerVersionsUpdated::what_changed() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCClientServerVersionsUpdated.what_changed)
  return _internal_what_changed();
}
inline void CMsgGCToGCClientServerVersionsUpdated::_internal_set_what_changed(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.what_changed_ = value;
}
inline void CMsgGCToGCClientServerVersionsUpdated::set_what_changed(uint32_t value) {
  _internal_set_what_changed(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCClientServerVersionsUpdated.what_changed)
}

// -------------------------------------------------------------------

// CMsgGCToGCBroadcastMessageFromSub

// optional uint32 msg_id = 1;
inline bool CMsgGCToGCBroadcastMessageFromSub::_internal_has_msg_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCBroadcastMessageFromSub::has_msg_id() const {
  return _internal_has_msg_id();
}
inline void CMsgGCToGCBroadcastMessageFromSub::clear_msg_id() {
  _impl_.msg_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToGCBroadcastMessageFromSub::_internal_msg_id() const {
  return _impl_.msg_id_;
}
inline uint32_t CMsgGCToGCBroadcastMessageFromSub::msg_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastMessageFromSub.msg_id)
  return _internal_msg_id();
}
inline void CMsgGCToGCBroadcastMessageFromSub::_internal_set_msg_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.msg_id_ = value;
}
inline void CMsgGCToGCBroadcastMessageFromSub::set_msg_id(uint32_t value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastMessageFromSub.msg_id)
}

// optional bytes serialized_msg = 2;
inline bool CMsgGCToGCBroadcastMessageFromSub::_internal_has_serialized_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCBroadcastMessageFromSub::has_serialized_msg() const {
  return _internal_has_serialized_msg();
}
inline void CMsgGCToGCBroadcastMessageFromSub::clear_serialized_msg() {
  _impl_.serialized_msg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCBroadcastMessageFromSub::serialized_msg() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastMessageFromSub.serialized_msg)
  return _internal_serialized_msg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToGCBroadcastMessageFromSub::set_serialized_msg(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.serialized_msg_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastMessageFromSub.serialized_msg)
}
inline std::string* CMsgGCToGCBroadcastMessageFromSub::mutable_serialized_msg() {
  std::string* _s = _internal_mutable_serialized_msg();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCBroadcastMessageFromSub.serialized_msg)
  return _s;
}
inline const std::string& CMsgGCToGCBroadcastMessageFromSub::_internal_serialized_msg() const {
  return _impl_.serialized_msg_.Get();
}
inline void CMsgGCToGCBroadcastMessageFromSub::_internal_set_serialized_msg(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.serialized_msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToGCBroadcastMessageFromSub::_internal_mutable_serialized_msg() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.serialized_msg_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToGCBroadcastMessageFromSub::release_serialized_msg() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCBroadcastMessageFromSub.serialized_msg)
  if (!_internal_has_serialized_msg()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.serialized_msg_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.serialized_msg_.IsDefault()) {
    _impl_.serialized_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToGCBroadcastMessageFromSub::set_allocated_serialized_msg(std::string* serialized_msg) {
  if (serialized_msg != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.serialized_msg_.SetAllocated(serialized_msg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.serialized_msg_.IsDefault()) {
    _impl_.serialized_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCBroadcastMessageFromSub.serialized_msg)
}

// repeated uint32 account_id_list = 3 [packed = true];
inline int CMsgGCToGCBroadcastMessageFromSub::_internal_account_id_list_size() const {
  return _impl_.account_id_list_.size();
}
inline int CMsgGCToGCBroadcastMessageFromSub::account_id_list_size() const {
  return _internal_account_id_list_size();
}
inline void CMsgGCToGCBroadcastMessageFromSub::clear_account_id_list() {
  _impl_.account_id_list_.Clear();
}
inline uint32_t CMsgGCToGCBroadcastMessageFromSub::_internal_account_id_list(int index) const {
  return _impl_.account_id_list_.Get(index);
}
inline uint32_t CMsgGCToGCBroadcastMessageFromSub::account_id_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastMessageFromSub.account_id_list)
  return _internal_account_id_list(index);
}
inline void CMsgGCToGCBroadcastMessageFromSub::set_account_id_list(int index, uint32_t value) {
  _impl_.account_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastMessageFromSub.account_id_list)
}
inline void CMsgGCToGCBroadcastMessageFromSub::_internal_add_account_id_list(uint32_t value) {
  _impl_.account_id_list_.Add(value);
}
inline void CMsgGCToGCBroadcastMessageFromSub::add_account_id_list(uint32_t value) {
  _internal_add_account_id_list(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCBroadcastMessageFromSub.account_id_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCBroadcastMessageFromSub::_internal_account_id_list() const {
  return _impl_.account_id_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCBroadcastMessageFromSub::account_id_list() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCBroadcastMessageFromSub.account_id_list)
  return _internal_account_id_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCBroadcastMessageFromSub::_internal_mutable_account_id_list() {
  return &_impl_.account_id_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCBroadcastMessageFromSub::mutable_account_id_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCBroadcastMessageFromSub.account_id_list)
  return _internal_mutable_account_id_list();
}

// repeated fixed64 steam_id_list = 4 [packed = true];
inline int CMsgGCToGCBroadcastMessageFromSub::_internal_steam_id_list_size() const {
  return _impl_.steam_id_list_.size();
}
inline int CMsgGCToGCBroadcastMessageFromSub::steam_id_list_size() const {
  return _internal_steam_id_list_size();
}
inline void CMsgGCToGCBroadcastMessageFromSub::clear_steam_id_list() {
  _impl_.steam_id_list_.Clear();
}
inline uint64_t CMsgGCToGCBroadcastMessageFromSub::_internal_steam_id_list(int index) const {
  return _impl_.steam_id_list_.Get(index);
}
inline uint64_t CMsgGCToGCBroadcastMessageFromSub::steam_id_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCBroadcastMessageFromSub.steam_id_list)
  return _internal_steam_id_list(index);
}
inline void CMsgGCToGCBroadcastMessageFromSub::set_steam_id_list(int index, uint64_t value) {
  _impl_.steam_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCBroadcastMessageFromSub.steam_id_list)
}
inline void CMsgGCToGCBroadcastMessageFromSub::_internal_add_steam_id_list(uint64_t value) {
  _impl_.steam_id_list_.Add(value);
}
inline void CMsgGCToGCBroadcastMessageFromSub::add_steam_id_list(uint64_t value) {
  _internal_add_steam_id_list(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCBroadcastMessageFromSub.steam_id_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToGCBroadcastMessageFromSub::_internal_steam_id_list() const {
  return _impl_.steam_id_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToGCBroadcastMessageFromSub::steam_id_list() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCBroadcastMessageFromSub.steam_id_list)
  return _internal_steam_id_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToGCBroadcastMessageFromSub::_internal_mutable_steam_id_list() {
  return &_impl_.steam_id_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToGCBroadcastMessageFromSub::mutable_steam_id_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCBroadcastMessageFromSub.steam_id_list)
  return _internal_mutable_steam_id_list();
}

// -------------------------------------------------------------------

// CMsgGCToClientCurrencyPricePoints_Currency

// optional uint32 currency_id = 1;
inline bool CMsgGCToClientCurrencyPricePoints_Currency::_internal_has_currency_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientCurrencyPricePoints_Currency::has_currency_id() const {
  return _internal_has_currency_id();
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::clear_currency_id() {
  _impl_.currency_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientCurrencyPricePoints_Currency::_internal_currency_id() const {
  return _impl_.currency_id_;
}
inline uint32_t CMsgGCToClientCurrencyPricePoints_Currency::currency_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCurrencyPricePoints.Currency.currency_id)
  return _internal_currency_id();
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::_internal_set_currency_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.currency_id_ = value;
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::set_currency_id(uint32_t value) {
  _internal_set_currency_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCurrencyPricePoints.Currency.currency_id)
}

// repeated uint64 currency_price = 2 [packed = true];
inline int CMsgGCToClientCurrencyPricePoints_Currency::_internal_currency_price_size() const {
  return _impl_.currency_price_.size();
}
inline int CMsgGCToClientCurrencyPricePoints_Currency::currency_price_size() const {
  return _internal_currency_price_size();
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::clear_currency_price() {
  _impl_.currency_price_.Clear();
}
inline uint64_t CMsgGCToClientCurrencyPricePoints_Currency::_internal_currency_price(int index) const {
  return _impl_.currency_price_.Get(index);
}
inline uint64_t CMsgGCToClientCurrencyPricePoints_Currency::currency_price(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCurrencyPricePoints.Currency.currency_price)
  return _internal_currency_price(index);
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::set_currency_price(int index, uint64_t value) {
  _impl_.currency_price_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCurrencyPricePoints.Currency.currency_price)
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::_internal_add_currency_price(uint64_t value) {
  _impl_.currency_price_.Add(value);
}
inline void CMsgGCToClientCurrencyPricePoints_Currency::add_currency_price(uint64_t value) {
  _internal_add_currency_price(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientCurrencyPricePoints.Currency.currency_price)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToClientCurrencyPricePoints_Currency::_internal_currency_price() const {
  return _impl_.currency_price_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToClientCurrencyPricePoints_Currency::currency_price() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCurrencyPricePoints.Currency.currency_price)
  return _internal_currency_price();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToClientCurrencyPricePoints_Currency::_internal_mutable_currency_price() {
  return &_impl_.currency_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToClientCurrencyPricePoints_Currency::mutable_currency_price() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCurrencyPricePoints.Currency.currency_price)
  return _internal_mutable_currency_price();
}

// -------------------------------------------------------------------

// CMsgGCToClientCurrencyPricePoints

// repeated uint64 price_key = 1 [packed = true];
inline int CMsgGCToClientCurrencyPricePoints::_internal_price_key_size() const {
  return _impl_.price_key_.size();
}
inline int CMsgGCToClientCurrencyPricePoints::price_key_size() const {
  return _internal_price_key_size();
}
inline void CMsgGCToClientCurrencyPricePoints::clear_price_key() {
  _impl_.price_key_.Clear();
}
inline uint64_t CMsgGCToClientCurrencyPricePoints::_internal_price_key(int index) const {
  return _impl_.price_key_.Get(index);
}
inline uint64_t CMsgGCToClientCurrencyPricePoints::price_key(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCurrencyPricePoints.price_key)
  return _internal_price_key(index);
}
inline void CMsgGCToClientCurrencyPricePoints::set_price_key(int index, uint64_t value) {
  _impl_.price_key_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCurrencyPricePoints.price_key)
}
inline void CMsgGCToClientCurrencyPricePoints::_internal_add_price_key(uint64_t value) {
  _impl_.price_key_.Add(value);
}
inline void CMsgGCToClientCurrencyPricePoints::add_price_key(uint64_t value) {
  _internal_add_price_key(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientCurrencyPricePoints.price_key)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToClientCurrencyPricePoints::_internal_price_key() const {
  return _impl_.price_key_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToClientCurrencyPricePoints::price_key() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCurrencyPricePoints.price_key)
  return _internal_price_key();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToClientCurrencyPricePoints::_internal_mutable_price_key() {
  return &_impl_.price_key_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToClientCurrencyPricePoints::mutable_price_key() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCurrencyPricePoints.price_key)
  return _internal_mutable_price_key();
}

// repeated .CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
inline int CMsgGCToClientCurrencyPricePoints::_internal_currencies_size() const {
  return _impl_.currencies_.size();
}
inline int CMsgGCToClientCurrencyPricePoints::currencies_size() const {
  return _internal_currencies_size();
}
inline void CMsgGCToClientCurrencyPricePoints::clear_currencies() {
  _impl_.currencies_.Clear();
}
inline ::CMsgGCToClientCurrencyPricePoints_Currency* CMsgGCToClientCurrencyPricePoints::mutable_currencies(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientCurrencyPricePoints.currencies)
  return _impl_.currencies_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientCurrencyPricePoints_Currency >*
CMsgGCToClientCurrencyPricePoints::mutable_currencies() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientCurrencyPricePoints.currencies)
  return &_impl_.currencies_;
}
inline const ::CMsgGCToClientCurrencyPricePoints_Currency& CMsgGCToClientCurrencyPricePoints::_internal_currencies(int index) const {
  return _impl_.currencies_.Get(index);
}
inline const ::CMsgGCToClientCurrencyPricePoints_Currency& CMsgGCToClientCurrencyPricePoints::currencies(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCurrencyPricePoints.currencies)
  return _internal_currencies(index);
}
inline ::CMsgGCToClientCurrencyPricePoints_Currency* CMsgGCToClientCurrencyPricePoints::_internal_add_currencies() {
  return _impl_.currencies_.Add();
}
inline ::CMsgGCToClientCurrencyPricePoints_Currency* CMsgGCToClientCurrencyPricePoints::add_currencies() {
  ::CMsgGCToClientCurrencyPricePoints_Currency* _add = _internal_add_currencies();
  // @@protoc_insertion_point(field_add:CMsgGCToClientCurrencyPricePoints.currencies)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientCurrencyPricePoints_Currency >&
CMsgGCToClientCurrencyPricePoints::currencies() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientCurrencyPricePoints.currencies)
  return _impl_.currencies_;
}

// -------------------------------------------------------------------

// CMsgBannedWordList

// optional uint32 version = 1;
inline bool CMsgBannedWordList::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBannedWordList::has_version() const {
  return _internal_has_version();
}
inline void CMsgBannedWordList::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgBannedWordList::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgBannedWordList::version() const {
  // @@protoc_insertion_point(field_get:CMsgBannedWordList.version)
  return _internal_version();
}
inline void CMsgBannedWordList::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.version_ = value;
}
inline void CMsgBannedWordList::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgBannedWordList.version)
}

// repeated string banned_words = 2;
inline int CMsgBannedWordList::_internal_banned_words_size() const {
  return _impl_.banned_words_.size();
}
inline int CMsgBannedWordList::banned_words_size() const {
  return _internal_banned_words_size();
}
inline void CMsgBannedWordList::clear_banned_words() {
  _impl_.banned_words_.Clear();
}
inline std::string* CMsgBannedWordList::add_banned_words() {
  std::string* _s = _internal_add_banned_words();
  // @@protoc_insertion_point(field_add_mutable:CMsgBannedWordList.banned_words)
  return _s;
}
inline const std::string& CMsgBannedWordList::_internal_banned_words(int index) const {
  return _impl_.banned_words_.Get(index);
}
inline const std::string& CMsgBannedWordList::banned_words(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBannedWordList.banned_words)
  return _internal_banned_words(index);
}
inline std::string* CMsgBannedWordList::mutable_banned_words(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBannedWordList.banned_words)
  return _impl_.banned_words_.Mutable(index);
}
inline void CMsgBannedWordList::set_banned_words(int index, const std::string& value) {
  _impl_.banned_words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgBannedWordList.banned_words)
}
inline void CMsgBannedWordList::set_banned_words(int index, std::string&& value) {
  _impl_.banned_words_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgBannedWordList.banned_words)
}
inline void CMsgBannedWordList::set_banned_words(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.banned_words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgBannedWordList.banned_words)
}
inline void CMsgBannedWordList::set_banned_words(int index, const char* value, size_t size) {
  _impl_.banned_words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgBannedWordList.banned_words)
}
inline std::string* CMsgBannedWordList::_internal_add_banned_words() {
  return _impl_.banned_words_.Add();
}
inline void CMsgBannedWordList::add_banned_words(const std::string& value) {
  _impl_.banned_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgBannedWordList.banned_words)
}
inline void CMsgBannedWordList::add_banned_words(std::string&& value) {
  _impl_.banned_words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgBannedWordList.banned_words)
}
inline void CMsgBannedWordList::add_banned_words(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.banned_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgBannedWordList.banned_words)
}
inline void CMsgBannedWordList::add_banned_words(const char* value, size_t size) {
  _impl_.banned_words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgBannedWordList.banned_words)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgBannedWordList::banned_words() const {
  // @@protoc_insertion_point(field_list:CMsgBannedWordList.banned_words)
  return _impl_.banned_words_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgBannedWordList::mutable_banned_words() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBannedWordList.banned_words)
  return &_impl_.banned_words_;
}

// -------------------------------------------------------------------

// CMsgGCToGCFlushSteamInventoryCache_Key

// optional uint64 steamid = 1;
inline bool CMsgGCToGCFlushSteamInventoryCache_Key::_internal_has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCFlushSteamInventoryCache_Key::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgGCToGCFlushSteamInventoryCache_Key::clear_steamid() {
  _impl_.steamid_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCToGCFlushSteamInventoryCache_Key::_internal_steamid() const {
  return _impl_.steamid_;
}
inline uint64_t CMsgGCToGCFlushSteamInventoryCache_Key::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCFlushSteamInventoryCache.Key.steamid)
  return _internal_steamid();
}
inline void CMsgGCToGCFlushSteamInventoryCache_Key::_internal_set_steamid(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.steamid_ = value;
}
inline void CMsgGCToGCFlushSteamInventoryCache_Key::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCFlushSteamInventoryCache.Key.steamid)
}

// optional uint64 contextid = 2;
inline bool CMsgGCToGCFlushSteamInventoryCache_Key::_internal_has_contextid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCFlushSteamInventoryCache_Key::has_contextid() const {
  return _internal_has_contextid();
}
inline void CMsgGCToGCFlushSteamInventoryCache_Key::clear_contextid() {
  _impl_.contextid_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgGCToGCFlushSteamInventoryCache_Key::_internal_contextid() const {
  return _impl_.contextid_;
}
inline uint64_t CMsgGCToGCFlushSteamInventoryCache_Key::contextid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCFlushSteamInventoryCache.Key.contextid)
  return _internal_contextid();
}
inline void CMsgGCToGCFlushSteamInventoryCache_Key::_internal_set_contextid(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contextid_ = value;
}
inline void CMsgGCToGCFlushSteamInventoryCache_Key::set_contextid(uint64_t value) {
  _internal_set_contextid(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCFlushSteamInventoryCache.Key.contextid)
}

// -------------------------------------------------------------------

// CMsgGCToGCFlushSteamInventoryCache

// repeated .CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
inline int CMsgGCToGCFlushSteamInventoryCache::_internal_keys_size() const {
  return _impl_.keys_.size();
}
inline int CMsgGCToGCFlushSteamInventoryCache::keys_size() const {
  return _internal_keys_size();
}
inline void CMsgGCToGCFlushSteamInventoryCache::clear_keys() {
  _impl_.keys_.Clear();
}
inline ::CMsgGCToGCFlushSteamInventoryCache_Key* CMsgGCToGCFlushSteamInventoryCache::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCFlushSteamInventoryCache.keys)
  return _impl_.keys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCFlushSteamInventoryCache_Key >*
CMsgGCToGCFlushSteamInventoryCache::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCFlushSteamInventoryCache.keys)
  return &_impl_.keys_;
}
inline const ::CMsgGCToGCFlushSteamInventoryCache_Key& CMsgGCToGCFlushSteamInventoryCache::_internal_keys(int index) const {
  return _impl_.keys_.Get(index);
}
inline const ::CMsgGCToGCFlushSteamInventoryCache_Key& CMsgGCToGCFlushSteamInventoryCache::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCFlushSteamInventoryCache.keys)
  return _internal_keys(index);
}
inline ::CMsgGCToGCFlushSteamInventoryCache_Key* CMsgGCToGCFlushSteamInventoryCache::_internal_add_keys() {
  return _impl_.keys_.Add();
}
inline ::CMsgGCToGCFlushSteamInventoryCache_Key* CMsgGCToGCFlushSteamInventoryCache::add_keys() {
  ::CMsgGCToGCFlushSteamInventoryCache_Key* _add = _internal_add_keys();
  // @@protoc_insertion_point(field_add:CMsgGCToGCFlushSteamInventoryCache.keys)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCFlushSteamInventoryCache_Key >&
CMsgGCToGCFlushSteamInventoryCache::keys() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCFlushSteamInventoryCache.keys)
  return _impl_.keys_;
}

// -------------------------------------------------------------------

// CMsgGCToGCUpdateSubscriptionItems

// optional uint32 account_id = 1;
inline bool CMsgGCToGCUpdateSubscriptionItems::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateSubscriptionItems::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCUpdateSubscriptionItems::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCUpdateSubscriptionItems::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgGCToGCUpdateSubscriptionItems::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateSubscriptionItems.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCUpdateSubscriptionItems::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgGCToGCUpdateSubscriptionItems::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateSubscriptionItems.account_id)
}

// optional bool always_notify = 2;
inline bool CMsgGCToGCUpdateSubscriptionItems::_internal_has_always_notify() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateSubscriptionItems::has_always_notify() const {
  return _internal_has_always_notify();
}
inline void CMsgGCToGCUpdateSubscriptionItems::clear_always_notify() {
  _impl_.always_notify_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToGCUpdateSubscriptionItems::_internal_always_notify() const {
  return _impl_.always_notify_;
}
inline bool CMsgGCToGCUpdateSubscriptionItems::always_notify() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateSubscriptionItems.always_notify)
  return _internal_always_notify();
}
inline void CMsgGCToGCUpdateSubscriptionItems::_internal_set_always_notify(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.always_notify_ = value;
}
inline void CMsgGCToGCUpdateSubscriptionItems::set_always_notify(bool value) {
  _internal_set_always_notify(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateSubscriptionItems.always_notify)
}

// -------------------------------------------------------------------

// CMsgGCToGCSelfPing

// optional uint32 sample_id = 1;
inline bool CMsgGCToGCSelfPing::_internal_has_sample_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCSelfPing::has_sample_id() const {
  return _internal_has_sample_id();
}
inline void CMsgGCToGCSelfPing::clear_sample_id() {
  _impl_.sample_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCSelfPing::_internal_sample_id() const {
  return _impl_.sample_id_;
}
inline uint32_t CMsgGCToGCSelfPing::sample_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSelfPing.sample_id)
  return _internal_sample_id();
}
inline void CMsgGCToGCSelfPing::_internal_set_sample_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sample_id_ = value;
}
inline void CMsgGCToGCSelfPing::set_sample_id(uint32_t value) {
  _internal_set_sample_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSelfPing.sample_id)
}

// -------------------------------------------------------------------

// CMsgGCToGCGetInfuxIntervalStats

// -------------------------------------------------------------------

// CMsgGCToGCGetInfuxIntervalStatsResponse

// repeated fixed32 stat_ids = 1 [packed = true];
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_ids_size() const {
  return _impl_.stat_ids_.size();
}
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::stat_ids_size() const {
  return _internal_stat_ids_size();
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::clear_stat_ids() {
  _impl_.stat_ids_.Clear();
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_ids(int index) const {
  return _impl_.stat_ids_.Get(index);
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::stat_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_ids)
  return _internal_stat_ids(index);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::set_stat_ids(int index, uint32_t value) {
  _impl_.stat_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_ids)
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_add_stat_ids(uint32_t value) {
  _impl_.stat_ids_.Add(value);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::add_stat_ids(uint32_t value) {
  _internal_add_stat_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_ids() const {
  return _impl_.stat_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::stat_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_ids)
  return _internal_stat_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_mutable_stat_ids() {
  return &_impl_.stat_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::mutable_stat_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_ids)
  return _internal_mutable_stat_ids();
}

// repeated uint64 stat_total = 2 [packed = true];
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_total_size() const {
  return _impl_.stat_total_.size();
}
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::stat_total_size() const {
  return _internal_stat_total_size();
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::clear_stat_total() {
  _impl_.stat_total_.Clear();
}
inline uint64_t CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_total(int index) const {
  return _impl_.stat_total_.Get(index);
}
inline uint64_t CMsgGCToGCGetInfuxIntervalStatsResponse::stat_total(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_total)
  return _internal_stat_total(index);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::set_stat_total(int index, uint64_t value) {
  _impl_.stat_total_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_total)
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_add_stat_total(uint64_t value) {
  _impl_.stat_total_.Add(value);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::add_stat_total(uint64_t value) {
  _internal_add_stat_total(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_total)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_total() const {
  return _impl_.stat_total_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::stat_total() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_total)
  return _internal_stat_total();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_mutable_stat_total() {
  return &_impl_.stat_total_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::mutable_stat_total() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_total)
  return _internal_mutable_stat_total();
}

// repeated uint32 stat_samples = 3 [packed = true];
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_samples_size() const {
  return _impl_.stat_samples_.size();
}
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::stat_samples_size() const {
  return _internal_stat_samples_size();
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::clear_stat_samples() {
  _impl_.stat_samples_.Clear();
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_samples(int index) const {
  return _impl_.stat_samples_.Get(index);
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::stat_samples(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_samples)
  return _internal_stat_samples(index);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::set_stat_samples(int index, uint32_t value) {
  _impl_.stat_samples_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_samples)
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_add_stat_samples(uint32_t value) {
  _impl_.stat_samples_.Add(value);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::add_stat_samples(uint32_t value) {
  _internal_add_stat_samples(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_samples)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_samples() const {
  return _impl_.stat_samples_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::stat_samples() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_samples)
  return _internal_stat_samples();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_mutable_stat_samples() {
  return &_impl_.stat_samples_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::mutable_stat_samples() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_samples)
  return _internal_mutable_stat_samples();
}

// repeated uint32 stat_max = 4 [packed = true];
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_max_size() const {
  return _impl_.stat_max_.size();
}
inline int CMsgGCToGCGetInfuxIntervalStatsResponse::stat_max_size() const {
  return _internal_stat_max_size();
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::clear_stat_max() {
  _impl_.stat_max_.Clear();
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_max(int index) const {
  return _impl_.stat_max_.Get(index);
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::stat_max(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_max)
  return _internal_stat_max(index);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::set_stat_max(int index, uint32_t value) {
  _impl_.stat_max_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_max)
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_add_stat_max(uint32_t value) {
  _impl_.stat_max_.Add(value);
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::add_stat_max(uint32_t value) {
  _internal_add_stat_max(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_max)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_stat_max() const {
  return _impl_.stat_max_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToGCGetInfuxIntervalStatsResponse::stat_max() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_max)
  return _internal_stat_max();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_mutable_stat_max() {
  return &_impl_.stat_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToGCGetInfuxIntervalStatsResponse::mutable_stat_max() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCGetInfuxIntervalStatsResponse.stat_max)
  return _internal_mutable_stat_max();
}

// optional uint32 sample_duration_ms = 5;
inline bool CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_has_sample_duration_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCGetInfuxIntervalStatsResponse::has_sample_duration_ms() const {
  return _internal_has_sample_duration_ms();
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::clear_sample_duration_ms() {
  _impl_.sample_duration_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_sample_duration_ms() const {
  return _impl_.sample_duration_ms_;
}
inline uint32_t CMsgGCToGCGetInfuxIntervalStatsResponse::sample_duration_ms() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCGetInfuxIntervalStatsResponse.sample_duration_ms)
  return _internal_sample_duration_ms();
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::_internal_set_sample_duration_ms(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sample_duration_ms_ = value;
}
inline void CMsgGCToGCGetInfuxIntervalStatsResponse::set_sample_duration_ms(uint32_t value) {
  _internal_set_sample_duration_ms(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCGetInfuxIntervalStatsResponse.sample_duration_ms)
}

// -------------------------------------------------------------------

// CMsgGCToGCPurchaseSucceeded

// -------------------------------------------------------------------

// CMsgClientToGCGetLimitedItemPurchaseQuantity

// optional uint32 item_def = 1;
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantity::_internal_has_item_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantity::has_item_def() const {
  return _internal_has_item_def();
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantity::clear_item_def() {
  _impl_.item_def_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetLimitedItemPurchaseQuantity::_internal_item_def() const {
  return _impl_.item_def_;
}
inline uint32_t CMsgClientToGCGetLimitedItemPurchaseQuantity::item_def() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLimitedItemPurchaseQuantity.item_def)
  return _internal_item_def();
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantity::_internal_set_item_def(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.item_def_ = value;
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantity::set_item_def(uint32_t value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLimitedItemPurchaseQuantity.item_def)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLimitedItemPurchaseQuantityResponse

// optional .CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::_internal_set_result(::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse value) {
  assert(::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::set_result(::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.result)
}

// optional uint32 quantity_purchased = 2;
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::_internal_has_quantity_purchased() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::has_quantity_purchased() const {
  return _internal_has_quantity_purchased();
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::clear_quantity_purchased() {
  _impl_.quantity_purchased_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::_internal_quantity_purchased() const {
  return _impl_.quantity_purchased_;
}
inline uint32_t CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::quantity_purchased() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.quantity_purchased)
  return _internal_quantity_purchased();
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::_internal_set_quantity_purchased(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.quantity_purchased_ = value;
}
inline void CMsgClientToGCGetLimitedItemPurchaseQuantityResponse::set_quantity_purchased(uint32_t value) {
  _internal_set_quantity_purchased(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.quantity_purchased)
}

// -------------------------------------------------------------------

// CMsgGCToGCUpdateWelcomeMsg

// optional bool server = 1;
inline bool CMsgGCToGCUpdateWelcomeMsg::_internal_has_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::has_server() const {
  return _internal_has_server();
}
inline void CMsgGCToGCUpdateWelcomeMsg::clear_server() {
  _impl_.server_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::_internal_server() const {
  return _impl_.server_;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::server() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateWelcomeMsg.server)
  return _internal_server();
}
inline void CMsgGCToGCUpdateWelcomeMsg::_internal_set_server(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.server_ = value;
}
inline void CMsgGCToGCUpdateWelcomeMsg::set_server(bool value) {
  _internal_set_server(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateWelcomeMsg.server)
}

// optional .CExtraMsgBlock new_msg = 2;
inline bool CMsgGCToGCUpdateWelcomeMsg::_internal_has_new_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.new_msg_ != nullptr);
  return value;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::has_new_msg() const {
  return _internal_has_new_msg();
}
inline const ::CExtraMsgBlock& CMsgGCToGCUpdateWelcomeMsg::_internal_new_msg() const {
  const ::CExtraMsgBlock* p = _impl_.new_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CExtraMsgBlock&>(
      ::_CExtraMsgBlock_default_instance_);
}
inline const ::CExtraMsgBlock& CMsgGCToGCUpdateWelcomeMsg::new_msg() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateWelcomeMsg.new_msg)
  return _internal_new_msg();
}
inline void CMsgGCToGCUpdateWelcomeMsg::unsafe_arena_set_allocated_new_msg(
    ::CExtraMsgBlock* new_msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.new_msg_);
  }
  _impl_.new_msg_ = new_msg;
  if (new_msg) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToGCUpdateWelcomeMsg.new_msg)
}
inline ::CExtraMsgBlock* CMsgGCToGCUpdateWelcomeMsg::release_new_msg() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CExtraMsgBlock* temp = _impl_.new_msg_;
  _impl_.new_msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CExtraMsgBlock* CMsgGCToGCUpdateWelcomeMsg::unsafe_arena_release_new_msg() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCUpdateWelcomeMsg.new_msg)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CExtraMsgBlock* temp = _impl_.new_msg_;
  _impl_.new_msg_ = nullptr;
  return temp;
}
inline ::CExtraMsgBlock* CMsgGCToGCUpdateWelcomeMsg::_internal_mutable_new_msg() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.new_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CExtraMsgBlock>(GetArenaForAllocation());
    _impl_.new_msg_ = p;
  }
  return _impl_.new_msg_;
}
inline ::CExtraMsgBlock* CMsgGCToGCUpdateWelcomeMsg::mutable_new_msg() {
  ::CExtraMsgBlock* _msg = _internal_mutable_new_msg();
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCUpdateWelcomeMsg.new_msg)
  return _msg;
}
inline void CMsgGCToGCUpdateWelcomeMsg::set_allocated_new_msg(::CExtraMsgBlock* new_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.new_msg_);
  }
  if (new_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(new_msg));
    if (message_arena != submessage_arena) {
      new_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, new_msg, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.new_msg_ = new_msg;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCUpdateWelcomeMsg.new_msg)
}

// optional bool broadcast = 3;
inline bool CMsgGCToGCUpdateWelcomeMsg::_internal_has_broadcast() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::has_broadcast() const {
  return _internal_has_broadcast();
}
inline void CMsgGCToGCUpdateWelcomeMsg::clear_broadcast() {
  _impl_.broadcast_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::_internal_broadcast() const {
  return _impl_.broadcast_;
}
inline bool CMsgGCToGCUpdateWelcomeMsg::broadcast() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateWelcomeMsg.broadcast)
  return _internal_broadcast();
}
inline void CMsgGCToGCUpdateWelcomeMsg::_internal_set_broadcast(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.broadcast_ = value;
}
inline void CMsgGCToGCUpdateWelcomeMsg::set_broadcast(bool value) {
  _internal_set_broadcast(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateWelcomeMsg.broadcast)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CMsgRequestCrateItemsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgRequestCrateItemsResponse_EResult>() {
  return ::CMsgRequestCrateItemsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgRequestCrateEscalationLevelResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgRequestCrateEscalationLevelResponse_EResult>() {
  return ::CMsgRequestCrateEscalationLevelResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgRedeemCodeResponse_EResultCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgRedeemCodeResponse_EResultCode>() {
  return ::CMsgRedeemCodeResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle>() {
  return ::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPackBundleResponse_EPackBundle> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPackBundleResponse_EPackBundle>() {
  return ::CMsgClientToGCPackBundleResponse_EPackBundle_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSetItemStyleResponse_ESetStyle> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSetItemStyleResponse_ESetStyle>() {
  return ::CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle>() {
  return ::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute>() {
  return ::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCNameItemResponse_ENameItem> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCNameItemResponse_ENameItem>() {
  return ::CMsgClientToGCNameItemResponse_ENameItem_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCreateStaticRecipeResponse_EResponse>() {
  return ::CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse>() {
  return ::CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::EGCItemMsg> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCItemMsg>() {
  return ::EGCItemMsg_descriptor();
}
template <> struct is_proto_enum< ::EGCMsgInitiateTradeResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCMsgInitiateTradeResponse>() {
  return ::EGCMsgInitiateTradeResponse_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_econ_5fgcmessages_2eproto
