// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_guild.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fguild_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fguild_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dota_shared_enums.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto;
class CMsgAccountGuildInvite;
struct CMsgAccountGuildInviteDefaultTypeInternal;
extern CMsgAccountGuildInviteDefaultTypeInternal _CMsgAccountGuildInvite_default_instance_;
class CMsgAccountGuildMemberships;
struct CMsgAccountGuildMembershipsDefaultTypeInternal;
extern CMsgAccountGuildMembershipsDefaultTypeInternal _CMsgAccountGuildMemberships_default_instance_;
class CMsgAccountGuildsPersonaInfo;
struct CMsgAccountGuildsPersonaInfoDefaultTypeInternal;
extern CMsgAccountGuildsPersonaInfoDefaultTypeInternal _CMsgAccountGuildsPersonaInfo_default_instance_;
class CMsgClientToGCAcceptInviteToGuild;
struct CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal;
extern CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal _CMsgClientToGCAcceptInviteToGuild_default_instance_;
class CMsgClientToGCAcceptInviteToGuildResponse;
struct CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal;
extern CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCAcceptInviteToGuildResponse_default_instance_;
class CMsgClientToGCAddGuildRole;
struct CMsgClientToGCAddGuildRoleDefaultTypeInternal;
extern CMsgClientToGCAddGuildRoleDefaultTypeInternal _CMsgClientToGCAddGuildRole_default_instance_;
class CMsgClientToGCAddGuildRoleResponse;
struct CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal;
extern CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal _CMsgClientToGCAddGuildRoleResponse_default_instance_;
class CMsgClientToGCAddPlayerToGuildChat;
struct CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal;
extern CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal _CMsgClientToGCAddPlayerToGuildChat_default_instance_;
class CMsgClientToGCAddPlayerToGuildChatResponse;
struct CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal;
extern CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal _CMsgClientToGCAddPlayerToGuildChatResponse_default_instance_;
class CMsgClientToGCCancelInviteToGuild;
struct CMsgClientToGCCancelInviteToGuildDefaultTypeInternal;
extern CMsgClientToGCCancelInviteToGuildDefaultTypeInternal _CMsgClientToGCCancelInviteToGuild_default_instance_;
class CMsgClientToGCCancelInviteToGuildResponse;
struct CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal;
extern CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCCancelInviteToGuildResponse_default_instance_;
class CMsgClientToGCCreateGuild;
struct CMsgClientToGCCreateGuildDefaultTypeInternal;
extern CMsgClientToGCCreateGuildDefaultTypeInternal _CMsgClientToGCCreateGuild_default_instance_;
class CMsgClientToGCCreateGuildResponse;
struct CMsgClientToGCCreateGuildResponseDefaultTypeInternal;
extern CMsgClientToGCCreateGuildResponseDefaultTypeInternal _CMsgClientToGCCreateGuildResponse_default_instance_;
class CMsgClientToGCDeclineInviteToGuild;
struct CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal;
extern CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal _CMsgClientToGCDeclineInviteToGuild_default_instance_;
class CMsgClientToGCDeclineInviteToGuildResponse;
struct CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal;
extern CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCDeclineInviteToGuildResponse_default_instance_;
class CMsgClientToGCGuildFeedRequest;
struct CMsgClientToGCGuildFeedRequestDefaultTypeInternal;
extern CMsgClientToGCGuildFeedRequestDefaultTypeInternal _CMsgClientToGCGuildFeedRequest_default_instance_;
class CMsgClientToGCInviteToGuild;
struct CMsgClientToGCInviteToGuildDefaultTypeInternal;
extern CMsgClientToGCInviteToGuildDefaultTypeInternal _CMsgClientToGCInviteToGuild_default_instance_;
class CMsgClientToGCInviteToGuildResponse;
struct CMsgClientToGCInviteToGuildResponseDefaultTypeInternal;
extern CMsgClientToGCInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCInviteToGuildResponse_default_instance_;
class CMsgClientToGCJoinGuild;
struct CMsgClientToGCJoinGuildDefaultTypeInternal;
extern CMsgClientToGCJoinGuildDefaultTypeInternal _CMsgClientToGCJoinGuild_default_instance_;
class CMsgClientToGCJoinGuildResponse;
struct CMsgClientToGCJoinGuildResponseDefaultTypeInternal;
extern CMsgClientToGCJoinGuildResponseDefaultTypeInternal _CMsgClientToGCJoinGuildResponse_default_instance_;
class CMsgClientToGCKickGuildMember;
struct CMsgClientToGCKickGuildMemberDefaultTypeInternal;
extern CMsgClientToGCKickGuildMemberDefaultTypeInternal _CMsgClientToGCKickGuildMember_default_instance_;
class CMsgClientToGCKickGuildMemberResponse;
struct CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal;
extern CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal _CMsgClientToGCKickGuildMemberResponse_default_instance_;
class CMsgClientToGCLeaveGuild;
struct CMsgClientToGCLeaveGuildDefaultTypeInternal;
extern CMsgClientToGCLeaveGuildDefaultTypeInternal _CMsgClientToGCLeaveGuild_default_instance_;
class CMsgClientToGCLeaveGuildResponse;
struct CMsgClientToGCLeaveGuildResponseDefaultTypeInternal;
extern CMsgClientToGCLeaveGuildResponseDefaultTypeInternal _CMsgClientToGCLeaveGuildResponse_default_instance_;
class CMsgClientToGCModifyGuildRole;
struct CMsgClientToGCModifyGuildRoleDefaultTypeInternal;
extern CMsgClientToGCModifyGuildRoleDefaultTypeInternal _CMsgClientToGCModifyGuildRole_default_instance_;
class CMsgClientToGCModifyGuildRoleResponse;
struct CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal;
extern CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal _CMsgClientToGCModifyGuildRoleResponse_default_instance_;
class CMsgClientToGCRemoveGuildRole;
struct CMsgClientToGCRemoveGuildRoleDefaultTypeInternal;
extern CMsgClientToGCRemoveGuildRoleDefaultTypeInternal _CMsgClientToGCRemoveGuildRole_default_instance_;
class CMsgClientToGCRemoveGuildRoleResponse;
struct CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal;
extern CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal _CMsgClientToGCRemoveGuildRoleResponse_default_instance_;
class CMsgClientToGCReportGuildContent;
struct CMsgClientToGCReportGuildContentDefaultTypeInternal;
extern CMsgClientToGCReportGuildContentDefaultTypeInternal _CMsgClientToGCReportGuildContent_default_instance_;
class CMsgClientToGCReportGuildContentResponse;
struct CMsgClientToGCReportGuildContentResponseDefaultTypeInternal;
extern CMsgClientToGCReportGuildContentResponseDefaultTypeInternal _CMsgClientToGCReportGuildContentResponse_default_instance_;
class CMsgClientToGCRequestAccountGuildPersonaInfo;
struct CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal;
extern CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfo_default_instance_;
class CMsgClientToGCRequestAccountGuildPersonaInfoBatch;
struct CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal;
extern CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoBatch_default_instance_;
class CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse;
struct CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal;
extern CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_default_instance_;
class CMsgClientToGCRequestAccountGuildPersonaInfoResponse;
struct CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal;
extern CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoResponse_default_instance_;
class CMsgClientToGCRequestGuildData;
struct CMsgClientToGCRequestGuildDataDefaultTypeInternal;
extern CMsgClientToGCRequestGuildDataDefaultTypeInternal _CMsgClientToGCRequestGuildData_default_instance_;
class CMsgClientToGCRequestGuildDataResponse;
struct CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal;
extern CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal _CMsgClientToGCRequestGuildDataResponse_default_instance_;
class CMsgClientToGCRequestGuildFeedResponse;
struct CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal;
extern CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal _CMsgClientToGCRequestGuildFeedResponse_default_instance_;
class CMsgClientToGCRequestGuildMembership;
struct CMsgClientToGCRequestGuildMembershipDefaultTypeInternal;
extern CMsgClientToGCRequestGuildMembershipDefaultTypeInternal _CMsgClientToGCRequestGuildMembership_default_instance_;
class CMsgClientToGCRequestGuildMembershipResponse;
struct CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal;
extern CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal _CMsgClientToGCRequestGuildMembershipResponse_default_instance_;
class CMsgClientToGCSetGuildInfo;
struct CMsgClientToGCSetGuildInfoDefaultTypeInternal;
extern CMsgClientToGCSetGuildInfoDefaultTypeInternal _CMsgClientToGCSetGuildInfo_default_instance_;
class CMsgClientToGCSetGuildInfoResponse;
struct CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal;
extern CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal _CMsgClientToGCSetGuildInfoResponse_default_instance_;
class CMsgClientToGCSetGuildMemberRole;
struct CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal;
extern CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal _CMsgClientToGCSetGuildMemberRole_default_instance_;
class CMsgClientToGCSetGuildMemberRoleResponse;
struct CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal;
extern CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal _CMsgClientToGCSetGuildMemberRoleResponse_default_instance_;
class CMsgClientToGCSetGuildRoleOrder;
struct CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal;
extern CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal _CMsgClientToGCSetGuildRoleOrder_default_instance_;
class CMsgClientToGCSetGuildRoleOrderResponse;
struct CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal;
extern CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal _CMsgClientToGCSetGuildRoleOrderResponse_default_instance_;
class CMsgFindGuildByTagResponse;
struct CMsgFindGuildByTagResponseDefaultTypeInternal;
extern CMsgFindGuildByTagResponseDefaultTypeInternal _CMsgFindGuildByTagResponse_default_instance_;
class CMsgGCToClientGuildDataUpdated;
struct CMsgGCToClientGuildDataUpdatedDefaultTypeInternal;
extern CMsgGCToClientGuildDataUpdatedDefaultTypeInternal _CMsgGCToClientGuildDataUpdated_default_instance_;
class CMsgGCToClientGuildFeedUpdated;
struct CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal;
extern CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal _CMsgGCToClientGuildFeedUpdated_default_instance_;
class CMsgGCToClientGuildMembersDataUpdated;
struct CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal;
extern CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal _CMsgGCToClientGuildMembersDataUpdated_default_instance_;
class CMsgGCToClientGuildMembershipUpdated;
struct CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal;
extern CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal _CMsgGCToClientGuildMembershipUpdated_default_instance_;
class CMsgGuildData;
struct CMsgGuildDataDefaultTypeInternal;
extern CMsgGuildDataDefaultTypeInternal _CMsgGuildData_default_instance_;
class CMsgGuildFeedEvent;
struct CMsgGuildFeedEventDefaultTypeInternal;
extern CMsgGuildFeedEventDefaultTypeInternal _CMsgGuildFeedEvent_default_instance_;
class CMsgGuildInfo;
struct CMsgGuildInfoDefaultTypeInternal;
extern CMsgGuildInfoDefaultTypeInternal _CMsgGuildInfo_default_instance_;
class CMsgGuildInvite;
struct CMsgGuildInviteDefaultTypeInternal;
extern CMsgGuildInviteDefaultTypeInternal _CMsgGuildInvite_default_instance_;
class CMsgGuildMember;
struct CMsgGuildMemberDefaultTypeInternal;
extern CMsgGuildMemberDefaultTypeInternal _CMsgGuildMember_default_instance_;
class CMsgGuildPersonaInfo;
struct CMsgGuildPersonaInfoDefaultTypeInternal;
extern CMsgGuildPersonaInfoDefaultTypeInternal _CMsgGuildPersonaInfo_default_instance_;
class CMsgGuildRole;
struct CMsgGuildRoleDefaultTypeInternal;
extern CMsgGuildRoleDefaultTypeInternal _CMsgGuildRole_default_instance_;
class CMsgGuildSummary;
struct CMsgGuildSummaryDefaultTypeInternal;
extern CMsgGuildSummaryDefaultTypeInternal _CMsgGuildSummary_default_instance_;
class CMsgGuildSummary_EventPoints;
struct CMsgGuildSummary_EventPointsDefaultTypeInternal;
extern CMsgGuildSummary_EventPointsDefaultTypeInternal _CMsgGuildSummary_EventPoints_default_instance_;
class CMsgSearchForOpenGuildsResponse;
struct CMsgSearchForOpenGuildsResponseDefaultTypeInternal;
extern CMsgSearchForOpenGuildsResponseDefaultTypeInternal _CMsgSearchForOpenGuildsResponse_default_instance_;
class CMsgSearchForOpenGuildsResponse_SearchResult;
struct CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal;
extern CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal _CMsgSearchForOpenGuildsResponse_SearchResult_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgAccountGuildInvite* Arena::CreateMaybeMessage<::CMsgAccountGuildInvite>(Arena*);
template<> ::CMsgAccountGuildMemberships* Arena::CreateMaybeMessage<::CMsgAccountGuildMemberships>(Arena*);
template<> ::CMsgAccountGuildsPersonaInfo* Arena::CreateMaybeMessage<::CMsgAccountGuildsPersonaInfo>(Arena*);
template<> ::CMsgClientToGCAcceptInviteToGuild* Arena::CreateMaybeMessage<::CMsgClientToGCAcceptInviteToGuild>(Arena*);
template<> ::CMsgClientToGCAcceptInviteToGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCAcceptInviteToGuildResponse>(Arena*);
template<> ::CMsgClientToGCAddGuildRole* Arena::CreateMaybeMessage<::CMsgClientToGCAddGuildRole>(Arena*);
template<> ::CMsgClientToGCAddGuildRoleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCAddGuildRoleResponse>(Arena*);
template<> ::CMsgClientToGCAddPlayerToGuildChat* Arena::CreateMaybeMessage<::CMsgClientToGCAddPlayerToGuildChat>(Arena*);
template<> ::CMsgClientToGCAddPlayerToGuildChatResponse* Arena::CreateMaybeMessage<::CMsgClientToGCAddPlayerToGuildChatResponse>(Arena*);
template<> ::CMsgClientToGCCancelInviteToGuild* Arena::CreateMaybeMessage<::CMsgClientToGCCancelInviteToGuild>(Arena*);
template<> ::CMsgClientToGCCancelInviteToGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCCancelInviteToGuildResponse>(Arena*);
template<> ::CMsgClientToGCCreateGuild* Arena::CreateMaybeMessage<::CMsgClientToGCCreateGuild>(Arena*);
template<> ::CMsgClientToGCCreateGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCCreateGuildResponse>(Arena*);
template<> ::CMsgClientToGCDeclineInviteToGuild* Arena::CreateMaybeMessage<::CMsgClientToGCDeclineInviteToGuild>(Arena*);
template<> ::CMsgClientToGCDeclineInviteToGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCDeclineInviteToGuildResponse>(Arena*);
template<> ::CMsgClientToGCGuildFeedRequest* Arena::CreateMaybeMessage<::CMsgClientToGCGuildFeedRequest>(Arena*);
template<> ::CMsgClientToGCInviteToGuild* Arena::CreateMaybeMessage<::CMsgClientToGCInviteToGuild>(Arena*);
template<> ::CMsgClientToGCInviteToGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCInviteToGuildResponse>(Arena*);
template<> ::CMsgClientToGCJoinGuild* Arena::CreateMaybeMessage<::CMsgClientToGCJoinGuild>(Arena*);
template<> ::CMsgClientToGCJoinGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCJoinGuildResponse>(Arena*);
template<> ::CMsgClientToGCKickGuildMember* Arena::CreateMaybeMessage<::CMsgClientToGCKickGuildMember>(Arena*);
template<> ::CMsgClientToGCKickGuildMemberResponse* Arena::CreateMaybeMessage<::CMsgClientToGCKickGuildMemberResponse>(Arena*);
template<> ::CMsgClientToGCLeaveGuild* Arena::CreateMaybeMessage<::CMsgClientToGCLeaveGuild>(Arena*);
template<> ::CMsgClientToGCLeaveGuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCLeaveGuildResponse>(Arena*);
template<> ::CMsgClientToGCModifyGuildRole* Arena::CreateMaybeMessage<::CMsgClientToGCModifyGuildRole>(Arena*);
template<> ::CMsgClientToGCModifyGuildRoleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCModifyGuildRoleResponse>(Arena*);
template<> ::CMsgClientToGCRemoveGuildRole* Arena::CreateMaybeMessage<::CMsgClientToGCRemoveGuildRole>(Arena*);
template<> ::CMsgClientToGCRemoveGuildRoleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRemoveGuildRoleResponse>(Arena*);
template<> ::CMsgClientToGCReportGuildContent* Arena::CreateMaybeMessage<::CMsgClientToGCReportGuildContent>(Arena*);
template<> ::CMsgClientToGCReportGuildContentResponse* Arena::CreateMaybeMessage<::CMsgClientToGCReportGuildContentResponse>(Arena*);
template<> ::CMsgClientToGCRequestAccountGuildPersonaInfo* Arena::CreateMaybeMessage<::CMsgClientToGCRequestAccountGuildPersonaInfo>(Arena*);
template<> ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch* Arena::CreateMaybeMessage<::CMsgClientToGCRequestAccountGuildPersonaInfoBatch>(Arena*);
template<> ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse>(Arena*);
template<> ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestAccountGuildPersonaInfoResponse>(Arena*);
template<> ::CMsgClientToGCRequestGuildData* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildData>(Arena*);
template<> ::CMsgClientToGCRequestGuildDataResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildDataResponse>(Arena*);
template<> ::CMsgClientToGCRequestGuildFeedResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildFeedResponse>(Arena*);
template<> ::CMsgClientToGCRequestGuildMembership* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildMembership>(Arena*);
template<> ::CMsgClientToGCRequestGuildMembershipResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildMembershipResponse>(Arena*);
template<> ::CMsgClientToGCSetGuildInfo* Arena::CreateMaybeMessage<::CMsgClientToGCSetGuildInfo>(Arena*);
template<> ::CMsgClientToGCSetGuildInfoResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetGuildInfoResponse>(Arena*);
template<> ::CMsgClientToGCSetGuildMemberRole* Arena::CreateMaybeMessage<::CMsgClientToGCSetGuildMemberRole>(Arena*);
template<> ::CMsgClientToGCSetGuildMemberRoleResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetGuildMemberRoleResponse>(Arena*);
template<> ::CMsgClientToGCSetGuildRoleOrder* Arena::CreateMaybeMessage<::CMsgClientToGCSetGuildRoleOrder>(Arena*);
template<> ::CMsgClientToGCSetGuildRoleOrderResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetGuildRoleOrderResponse>(Arena*);
template<> ::CMsgFindGuildByTagResponse* Arena::CreateMaybeMessage<::CMsgFindGuildByTagResponse>(Arena*);
template<> ::CMsgGCToClientGuildDataUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientGuildDataUpdated>(Arena*);
template<> ::CMsgGCToClientGuildFeedUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientGuildFeedUpdated>(Arena*);
template<> ::CMsgGCToClientGuildMembersDataUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientGuildMembersDataUpdated>(Arena*);
template<> ::CMsgGCToClientGuildMembershipUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientGuildMembershipUpdated>(Arena*);
template<> ::CMsgGuildData* Arena::CreateMaybeMessage<::CMsgGuildData>(Arena*);
template<> ::CMsgGuildFeedEvent* Arena::CreateMaybeMessage<::CMsgGuildFeedEvent>(Arena*);
template<> ::CMsgGuildInfo* Arena::CreateMaybeMessage<::CMsgGuildInfo>(Arena*);
template<> ::CMsgGuildInvite* Arena::CreateMaybeMessage<::CMsgGuildInvite>(Arena*);
template<> ::CMsgGuildMember* Arena::CreateMaybeMessage<::CMsgGuildMember>(Arena*);
template<> ::CMsgGuildPersonaInfo* Arena::CreateMaybeMessage<::CMsgGuildPersonaInfo>(Arena*);
template<> ::CMsgGuildRole* Arena::CreateMaybeMessage<::CMsgGuildRole>(Arena*);
template<> ::CMsgGuildSummary* Arena::CreateMaybeMessage<::CMsgGuildSummary>(Arena*);
template<> ::CMsgGuildSummary_EventPoints* Arena::CreateMaybeMessage<::CMsgGuildSummary_EventPoints>(Arena*);
template<> ::CMsgSearchForOpenGuildsResponse* Arena::CreateMaybeMessage<::CMsgSearchForOpenGuildsResponse>(Arena*);
template<> ::CMsgSearchForOpenGuildsResponse_SearchResult* Arena::CreateMaybeMessage<::CMsgSearchForOpenGuildsResponse_SearchResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CMsgClientToGCCreateGuildResponse_EResponse : int {
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidName = 5,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eNameAlreadyUsed = 6,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidTag = 7,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eTagAlreadyUsed = 8,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidDescription = 9,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidRegion = 10,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidLogo = 11,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eDoesNotOwnEvent = 12,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eGuildLimit = 13,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidMotD = 14,
  CMsgClientToGCCreateGuildResponse_EResponse_k_eBlocked = 15
};
bool CMsgClientToGCCreateGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCCreateGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCCreateGuildResponse_EResponse_k_eBlocked;
constexpr int CMsgClientToGCCreateGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCCreateGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCreateGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCCreateGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCCreateGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCCreateGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCCreateGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCCreateGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCCreateGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCCreateGuildResponse_EResponse>(
    CMsgClientToGCCreateGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCSetGuildInfoResponse_EResponse : int {
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNotMember = 6,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNoPermission = 7,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eMotDTooLong = 8,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNameChangeNoPermissions = 9,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTagChangeNoPermissions = 10,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNameInvalid = 11,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTagInvalid = 12,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eDescriptionInvalid = 13,
  CMsgClientToGCSetGuildInfoResponse_EResponse_k_eBlocked = 14
};
bool CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_MIN = CMsgClientToGCSetGuildInfoResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_MAX = CMsgClientToGCSetGuildInfoResponse_EResponse_k_eBlocked;
constexpr int CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSetGuildInfoResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSetGuildInfoResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSetGuildInfoResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSetGuildInfoResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSetGuildInfoResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSetGuildInfoResponse_EResponse>(
    CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestGuildDataResponse_EResponse : int {
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCRequestGuildDataResponse_EResponse_k_eNotMember = 6
};
bool CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestGuildDataResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestGuildDataResponse_EResponse_k_eNotMember;
constexpr int CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestGuildDataResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestGuildDataResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestGuildDataResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestGuildDataResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestGuildDataResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestGuildDataResponse_EResponse>(
    CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestGuildMembershipResponse_EResponse : int {
  CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eTimeout = 4
};
bool CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eTimeout;
constexpr int CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestGuildMembershipResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestGuildMembershipResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestGuildMembershipResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestGuildMembershipResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestGuildMembershipResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestGuildMembershipResponse_EResponse>(
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCJoinGuildResponse_EResponse : int {
  CMsgClientToGCJoinGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildFull = 6,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eAlreadyMember = 7,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildLimit = 8,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildRequiresInvite = 9,
  CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildRankTooLow = 10
};
bool CMsgClientToGCJoinGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCJoinGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildRankTooLow;
constexpr int CMsgClientToGCJoinGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCJoinGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCJoinGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCJoinGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCJoinGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCJoinGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCJoinGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCJoinGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCJoinGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCJoinGuildResponse_EResponse>(
    CMsgClientToGCJoinGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCLeaveGuildResponse_EResponse : int {
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eNotMember = 6,
  CMsgClientToGCLeaveGuildResponse_EResponse_k_eLastAdmin = 7
};
bool CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCLeaveGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCLeaveGuildResponse_EResponse_k_eLastAdmin;
constexpr int CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCLeaveGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCLeaveGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCLeaveGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCLeaveGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCLeaveGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCLeaveGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCLeaveGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCLeaveGuildResponse_EResponse>(
    CMsgClientToGCLeaveGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCKickGuildMemberResponse_EResponse : int {
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eRequesterNotMember = 6,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eTargetNotMember = 7,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eNoPermission = 8,
  CMsgClientToGCKickGuildMemberResponse_EResponse_k_eCantKickSelf = 9
};
bool CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_MIN = CMsgClientToGCKickGuildMemberResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_MAX = CMsgClientToGCKickGuildMemberResponse_EResponse_k_eCantKickSelf;
constexpr int CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCKickGuildMemberResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCKickGuildMemberResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCKickGuildMemberResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCKickGuildMemberResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCKickGuildMemberResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCKickGuildMemberResponse_EResponse>(
    CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCSetGuildMemberRoleResponse_EResponse : int {
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eRequesterNotMember = 6,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eTargetNotMember = 7,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eNoPermission = 8,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInvalidRole = 9,
  CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eAdminViolation = 10
};
bool CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_MIN = CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_MAX = CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eAdminViolation;
constexpr int CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSetGuildMemberRoleResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSetGuildMemberRoleResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSetGuildMemberRoleResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSetGuildMemberRoleResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSetGuildMemberRoleResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSetGuildMemberRoleResponse_EResponse>(
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCInviteToGuildResponse_EResponse : int {
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eGuildFull = 6,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eRequesterNotMember = 7,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eAlreadyAMember = 8,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eAlreadyInvited = 9,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eNoInvitePermissions = 10,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eTooManyInvites = 11,
  CMsgClientToGCInviteToGuildResponse_EResponse_k_eInvalidUser = 12
};
bool CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCInviteToGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCInviteToGuildResponse_EResponse_k_eInvalidUser;
constexpr int CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCInviteToGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCInviteToGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCInviteToGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCInviteToGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCInviteToGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCInviteToGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCInviteToGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCInviteToGuildResponse_EResponse>(
    CMsgClientToGCInviteToGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCDeclineInviteToGuildResponse_EResponse : int {
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eNoInviteFound = 6
};
bool CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eNoInviteFound;
constexpr int CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCDeclineInviteToGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCDeclineInviteToGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCDeclineInviteToGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCDeclineInviteToGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCDeclineInviteToGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCDeclineInviteToGuildResponse_EResponse>(
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCAcceptInviteToGuildResponse_EResponse : int {
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eNoInviteFound = 6,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eGuildFull = 7,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eGuildLimit = 8,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInvalidInviter = 9,
  CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eAlreadyInGuild = 10
};
bool CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eAlreadyInGuild;
constexpr int CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCAcceptInviteToGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCAcceptInviteToGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCAcceptInviteToGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCAcceptInviteToGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCAcceptInviteToGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCAcceptInviteToGuildResponse_EResponse>(
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCCancelInviteToGuildResponse_EResponse : int {
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eNoInviteFound = 6,
  CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eNoPermissions = 7
};
bool CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_MIN = CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_MAX = CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eNoPermissions;
constexpr int CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCCancelInviteToGuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCCancelInviteToGuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCCancelInviteToGuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCCancelInviteToGuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCCancelInviteToGuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCCancelInviteToGuildResponse_EResponse>(
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCAddGuildRoleResponse_EResponse : int {
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eNameAlreadyUsed = 6,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eNoPermissions = 7,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInvalidFlags = 8,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInvalidName = 9,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eAdminViolation = 10,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eTooManyRoles = 11,
  CMsgClientToGCAddGuildRoleResponse_EResponse_k_eBlocked = 12
};
bool CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_MIN = CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_MAX = CMsgClientToGCAddGuildRoleResponse_EResponse_k_eBlocked;
constexpr int CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCAddGuildRoleResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCAddGuildRoleResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCAddGuildRoleResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCAddGuildRoleResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCAddGuildRoleResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCAddGuildRoleResponse_EResponse>(
    CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCModifyGuildRoleResponse_EResponse : int {
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidRole = 6,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eNameAlreadyUsed = 7,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidFlags = 8,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidName = 9,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eNoPermissions = 10,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eAdminViolation = 11,
  CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eBlocked = 12
};
bool CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_MIN = CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_MAX = CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eBlocked;
constexpr int CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCModifyGuildRoleResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCModifyGuildRoleResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCModifyGuildRoleResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCModifyGuildRoleResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCModifyGuildRoleResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCModifyGuildRoleResponse_EResponse>(
    CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRemoveGuildRoleResponse_EResponse : int {
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInvalidRole = 6,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eRoleNotEmpty = 7,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eNoPermissions = 8,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eAdminViolation = 9,
  CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eCantRemoveDefaultRole = 10
};
bool CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_MIN = CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_MAX = CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eCantRemoveDefaultRole;
constexpr int CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRemoveGuildRoleResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRemoveGuildRoleResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRemoveGuildRoleResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRemoveGuildRoleResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRemoveGuildRoleResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRemoveGuildRoleResponse_EResponse>(
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCSetGuildRoleOrderResponse_EResponse : int {
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInvalidRole = 6,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInvalidOrder = 7,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eNoPermissions = 8,
  CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eAdminViolation = 9
};
bool CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_MIN = CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_MAX = CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eAdminViolation;
constexpr int CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSetGuildRoleOrderResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSetGuildRoleOrderResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSetGuildRoleOrderResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSetGuildRoleOrderResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSetGuildRoleOrderResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSetGuildRoleOrderResponse_EResponse>(
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestGuildFeedResponse_EResponse : int {
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eNoPermissions = 6
};
bool CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eNoPermissions;
constexpr int CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestGuildFeedResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestGuildFeedResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestGuildFeedResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestGuildFeedResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestGuildFeedResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestGuildFeedResponse_EResponse>(
    CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCAddPlayerToGuildChatResponse_EResponse : int {
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eInvalidGuild = 5,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eNotMember = 6,
  CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eSteamChatNotEnabled = 7
};
bool CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_MIN = CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_MAX = CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eSteamChatNotEnabled;
constexpr int CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCAddPlayerToGuildChatResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCAddPlayerToGuildChatResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCAddPlayerToGuildChatResponse_EResponse>(
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor(), name, value);
}
enum CMsgFindGuildByTagResponse_EResponse : int {
  CMsgFindGuildByTagResponse_EResponse_k_eInternalError = 0,
  CMsgFindGuildByTagResponse_EResponse_k_eSuccess = 1,
  CMsgFindGuildByTagResponse_EResponse_k_eTooBusy = 2,
  CMsgFindGuildByTagResponse_EResponse_k_eDisabled = 3,
  CMsgFindGuildByTagResponse_EResponse_k_eTimeout = 4,
  CMsgFindGuildByTagResponse_EResponse_k_eInvalidTag = 5,
  CMsgFindGuildByTagResponse_EResponse_k_eGuildNotFound = 6
};
bool CMsgFindGuildByTagResponse_EResponse_IsValid(int value);
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse_EResponse_EResponse_MIN = CMsgFindGuildByTagResponse_EResponse_k_eInternalError;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse_EResponse_EResponse_MAX = CMsgFindGuildByTagResponse_EResponse_k_eGuildNotFound;
constexpr int CMsgFindGuildByTagResponse_EResponse_EResponse_ARRAYSIZE = CMsgFindGuildByTagResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgFindGuildByTagResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgFindGuildByTagResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgFindGuildByTagResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgFindGuildByTagResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgFindGuildByTagResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgFindGuildByTagResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgFindGuildByTagResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgFindGuildByTagResponse_EResponse>(
    CMsgFindGuildByTagResponse_EResponse_descriptor(), name, value);
}
enum CMsgSearchForOpenGuildsResponse_EResponse : int {
  CMsgSearchForOpenGuildsResponse_EResponse_k_eInternalError = 0,
  CMsgSearchForOpenGuildsResponse_EResponse_k_eSuccess = 1,
  CMsgSearchForOpenGuildsResponse_EResponse_k_eTooBusy = 2,
  CMsgSearchForOpenGuildsResponse_EResponse_k_eDisabled = 3,
  CMsgSearchForOpenGuildsResponse_EResponse_k_eTimeout = 4
};
bool CMsgSearchForOpenGuildsResponse_EResponse_IsValid(int value);
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse_EResponse_EResponse_MIN = CMsgSearchForOpenGuildsResponse_EResponse_k_eInternalError;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse_EResponse_EResponse_MAX = CMsgSearchForOpenGuildsResponse_EResponse_k_eTimeout;
constexpr int CMsgSearchForOpenGuildsResponse_EResponse_EResponse_ARRAYSIZE = CMsgSearchForOpenGuildsResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgSearchForOpenGuildsResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgSearchForOpenGuildsResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgSearchForOpenGuildsResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgSearchForOpenGuildsResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgSearchForOpenGuildsResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgSearchForOpenGuildsResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgSearchForOpenGuildsResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgSearchForOpenGuildsResponse_EResponse>(
    CMsgSearchForOpenGuildsResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCReportGuildContent_EContentFlags : int {
  CMsgClientToGCReportGuildContent_EContentFlags_k_eNone = 0,
  CMsgClientToGCReportGuildContent_EContentFlags_k_eInappropriateName = 1,
  CMsgClientToGCReportGuildContent_EContentFlags_k_eInappropriateTag = 2,
  CMsgClientToGCReportGuildContent_EContentFlags_k_eInappropriateLogo = 4,
  CMsgClientToGCReportGuildContent_EContentFlags_k_eValidFlags = 7
};
bool CMsgClientToGCReportGuildContent_EContentFlags_IsValid(int value);
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_MIN = CMsgClientToGCReportGuildContent_EContentFlags_k_eNone;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_MAX = CMsgClientToGCReportGuildContent_EContentFlags_k_eValidFlags;
constexpr int CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_ARRAYSIZE = CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportGuildContent_EContentFlags_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCReportGuildContent_EContentFlags_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCReportGuildContent_EContentFlags>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCReportGuildContent_EContentFlags_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCReportGuildContent_EContentFlags_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCReportGuildContent_EContentFlags_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCReportGuildContent_EContentFlags* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCReportGuildContent_EContentFlags>(
    CMsgClientToGCReportGuildContent_EContentFlags_descriptor(), name, value);
}
enum CMsgClientToGCReportGuildContentResponse_EResponse : int {
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eGuildNotFound = 5,
  CMsgClientToGCReportGuildContentResponse_EResponse_k_eFlagsInvalid = 6
};
bool CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_MIN = CMsgClientToGCReportGuildContentResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_MAX = CMsgClientToGCReportGuildContentResponse_EResponse_k_eFlagsInvalid;
constexpr int CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportGuildContentResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCReportGuildContentResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCReportGuildContentResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCReportGuildContentResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCReportGuildContentResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCReportGuildContentResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCReportGuildContentResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCReportGuildContentResponse_EResponse>(
    CMsgClientToGCReportGuildContentResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse : int {
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eInvalidAccount = 5
};
bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eInvalidAccount;
constexpr int CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse>(
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse : int {
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eInvalidRequest = 5
};
bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eInvalidRequest;
constexpr int CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse>(
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor(), name, value);
}
enum EGuildAuditAction : int {
  k_EGuildAuditAction_Invalid = 0,
  k_EGuildAuditAction_GuildCreated = 1,
  k_EGuildAuditAction_GuildLanguageChanged = 2,
  k_EGuildAuditAction_GuildFlagsChanged = 3,
  k_EGuildAuditAction_GuildMemberJoined = 5,
  k_EGuildAuditAction_GuildMemberLeft = 6,
  k_EGuildAuditAction_GuildMemberKicked = 7,
  k_EGuildAuditAction_GuildMemberRoleChanged = 8,
  k_EGuildAuditAction_GuildLogoChanged = 9,
  k_EGuildAuditAction_GuildRegionChanged = 10,
  k_EGuildAuditAction_GuildDescriptionChanged = 11,
  k_EGuildAuditAction_GuildPrimaryColorChanged = 12,
  k_EGuildAuditAction_GuildSecondaryColorChanged = 13,
  k_EGuildAuditAction_GuildPatternChanged = 14,
  k_EGuildAuditAction_AdminClearedLogo = 15,
  k_EGuildAuditAction_GuildRequiredRankChanged = 16,
  k_EGuildAuditAction_GuildMotDChanged = 18,
  k_EGuildAuditAction_AdminResetName = 19,
  k_EGuildAuditAction_AdminResetTag = 20,
  k_EGuildAuditAction_AdminLock = 21,
  k_EGuildAuditAction_GuildNameChanged = 22,
  k_EGuildAuditAction_GuildTagChanged = 23,
  k_EGuildAuditAction_AdminPermitted = 24,
  k_EGuildAuditAction_AdminBlocked = 25,
  k_EGuildAuditAction_AdminBannedUser = 26,
  k_EGuildAuditAction_AdminExonerated = 27
};
bool EGuildAuditAction_IsValid(int value);
constexpr EGuildAuditAction EGuildAuditAction_MIN = k_EGuildAuditAction_Invalid;
constexpr EGuildAuditAction EGuildAuditAction_MAX = k_EGuildAuditAction_AdminExonerated;
constexpr int EGuildAuditAction_ARRAYSIZE = EGuildAuditAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildAuditAction_descriptor();
template<typename T>
inline const std::string& EGuildAuditAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGuildAuditAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGuildAuditAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGuildAuditAction_descriptor(), enum_t_value);
}
inline bool EGuildAuditAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGuildAuditAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGuildAuditAction>(
    EGuildAuditAction_descriptor(), name, value);
}
enum EGuildChatType : int {
  k_EGuildChatType_Unspecified = 0,
  k_EGuildChatType_SteamChatGroup = 1,
  k_EGuildChatType_GC = 2
};
bool EGuildChatType_IsValid(int value);
constexpr EGuildChatType EGuildChatType_MIN = k_EGuildChatType_Unspecified;
constexpr EGuildChatType EGuildChatType_MAX = k_EGuildChatType_GC;
constexpr int EGuildChatType_ARRAYSIZE = EGuildChatType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildChatType_descriptor();
template<typename T>
inline const std::string& EGuildChatType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGuildChatType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGuildChatType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGuildChatType_descriptor(), enum_t_value);
}
inline bool EGuildChatType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGuildChatType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGuildChatType>(
    EGuildChatType_descriptor(), name, value);
}
// ===================================================================

class CMsgGuildInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildInfo) */ {
 public:
  inline CMsgGuildInfo() : CMsgGuildInfo(nullptr) {}
  ~CMsgGuildInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildInfo(const CMsgGuildInfo& from);
  CMsgGuildInfo(CMsgGuildInfo&& from) noexcept
    : CMsgGuildInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGuildInfo& operator=(const CMsgGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildInfo& operator=(CMsgGuildInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildInfo*>(
               &_CMsgGuildInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgGuildInfo& a, CMsgGuildInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildInfo& from) {
    CMsgGuildInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildInfo";
  }
  protected:
  explicit CMsgGuildInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildNameFieldNumber = 1,
    kGuildTagFieldNumber = 2,
    kGuildDescriptionFieldNumber = 10,
    kGuildMotdFieldNumber = 18,
    kCreatedTimestampFieldNumber = 3,
    kGuildLanguageFieldNumber = 4,
    kGuildFlagsFieldNumber = 5,
    kGuildRegionFieldNumber = 8,
    kGuildLogoFieldNumber = 7,
    kGuildChatGroupIdFieldNumber = 9,
    kDefaultChatChannelIdFieldNumber = 11,
    kGuildPrimaryColorFieldNumber = 12,
    kGuildSecondaryColorFieldNumber = 13,
    kGuildPatternFieldNumber = 14,
    kGuildRefreshTimeOffsetFieldNumber = 15,
    kGuildRequiredRankTierFieldNumber = 16,
    kGuildMotdTimestampFieldNumber = 17,
  };
  // optional string guild_name = 1;
  bool has_guild_name() const;
  private:
  bool _internal_has_guild_name() const;
  public:
  void clear_guild_name();
  const std::string& guild_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_name();
  PROTOBUF_NODISCARD std::string* release_guild_name();
  void set_allocated_guild_name(std::string* guild_name);
  private:
  const std::string& _internal_guild_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_name(const std::string& value);
  std::string* _internal_mutable_guild_name();
  public:

  // optional string guild_tag = 2;
  bool has_guild_tag() const;
  private:
  bool _internal_has_guild_tag() const;
  public:
  void clear_guild_tag();
  const std::string& guild_tag() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_tag(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_tag();
  PROTOBUF_NODISCARD std::string* release_guild_tag();
  void set_allocated_guild_tag(std::string* guild_tag);
  private:
  const std::string& _internal_guild_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_tag(const std::string& value);
  std::string* _internal_mutable_guild_tag();
  public:

  // optional string guild_description = 10;
  bool has_guild_description() const;
  private:
  bool _internal_has_guild_description() const;
  public:
  void clear_guild_description();
  const std::string& guild_description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_description();
  PROTOBUF_NODISCARD std::string* release_guild_description();
  void set_allocated_guild_description(std::string* guild_description);
  private:
  const std::string& _internal_guild_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_description(const std::string& value);
  std::string* _internal_mutable_guild_description();
  public:

  // optional string guild_motd = 18;
  bool has_guild_motd() const;
  private:
  bool _internal_has_guild_motd() const;
  public:
  void clear_guild_motd();
  const std::string& guild_motd() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_motd(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_motd();
  PROTOBUF_NODISCARD std::string* release_guild_motd();
  void set_allocated_guild_motd(std::string* guild_motd);
  private:
  const std::string& _internal_guild_motd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_motd(const std::string& value);
  std::string* _internal_mutable_guild_motd();
  public:

  // optional uint32 created_timestamp = 3;
  bool has_created_timestamp() const;
  private:
  bool _internal_has_created_timestamp() const;
  public:
  void clear_created_timestamp();
  uint32_t created_timestamp() const;
  void set_created_timestamp(uint32_t value);
  private:
  uint32_t _internal_created_timestamp() const;
  void _internal_set_created_timestamp(uint32_t value);
  public:

  // optional uint32 guild_language = 4;
  bool has_guild_language() const;
  private:
  bool _internal_has_guild_language() const;
  public:
  void clear_guild_language();
  uint32_t guild_language() const;
  void set_guild_language(uint32_t value);
  private:
  uint32_t _internal_guild_language() const;
  void _internal_set_guild_language(uint32_t value);
  public:

  // optional uint32 guild_flags = 5;
  bool has_guild_flags() const;
  private:
  bool _internal_has_guild_flags() const;
  public:
  void clear_guild_flags();
  uint32_t guild_flags() const;
  void set_guild_flags(uint32_t value);
  private:
  uint32_t _internal_guild_flags() const;
  void _internal_set_guild_flags(uint32_t value);
  public:

  // optional uint32 guild_region = 8;
  bool has_guild_region() const;
  private:
  bool _internal_has_guild_region() const;
  public:
  void clear_guild_region();
  uint32_t guild_region() const;
  void set_guild_region(uint32_t value);
  private:
  uint32_t _internal_guild_region() const;
  void _internal_set_guild_region(uint32_t value);
  public:

  // optional uint64 guild_logo = 7;
  bool has_guild_logo() const;
  private:
  bool _internal_has_guild_logo() const;
  public:
  void clear_guild_logo();
  uint64_t guild_logo() const;
  void set_guild_logo(uint64_t value);
  private:
  uint64_t _internal_guild_logo() const;
  void _internal_set_guild_logo(uint64_t value);
  public:

  // optional uint64 guild_chat_group_id = 9;
  bool has_guild_chat_group_id() const;
  private:
  bool _internal_has_guild_chat_group_id() const;
  public:
  void clear_guild_chat_group_id();
  uint64_t guild_chat_group_id() const;
  void set_guild_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_guild_chat_group_id() const;
  void _internal_set_guild_chat_group_id(uint64_t value);
  public:

  // optional uint64 default_chat_channel_id = 11;
  bool has_default_chat_channel_id() const;
  private:
  bool _internal_has_default_chat_channel_id() const;
  public:
  void clear_default_chat_channel_id();
  uint64_t default_chat_channel_id() const;
  void set_default_chat_channel_id(uint64_t value);
  private:
  uint64_t _internal_default_chat_channel_id() const;
  void _internal_set_default_chat_channel_id(uint64_t value);
  public:

  // optional uint32 guild_primary_color = 12;
  bool has_guild_primary_color() const;
  private:
  bool _internal_has_guild_primary_color() const;
  public:
  void clear_guild_primary_color();
  uint32_t guild_primary_color() const;
  void set_guild_primary_color(uint32_t value);
  private:
  uint32_t _internal_guild_primary_color() const;
  void _internal_set_guild_primary_color(uint32_t value);
  public:

  // optional uint32 guild_secondary_color = 13;
  bool has_guild_secondary_color() const;
  private:
  bool _internal_has_guild_secondary_color() const;
  public:
  void clear_guild_secondary_color();
  uint32_t guild_secondary_color() const;
  void set_guild_secondary_color(uint32_t value);
  private:
  uint32_t _internal_guild_secondary_color() const;
  void _internal_set_guild_secondary_color(uint32_t value);
  public:

  // optional uint32 guild_pattern = 14;
  bool has_guild_pattern() const;
  private:
  bool _internal_has_guild_pattern() const;
  public:
  void clear_guild_pattern();
  uint32_t guild_pattern() const;
  void set_guild_pattern(uint32_t value);
  private:
  uint32_t _internal_guild_pattern() const;
  void _internal_set_guild_pattern(uint32_t value);
  public:

  // optional uint32 guild_refresh_time_offset = 15;
  bool has_guild_refresh_time_offset() const;
  private:
  bool _internal_has_guild_refresh_time_offset() const;
  public:
  void clear_guild_refresh_time_offset();
  uint32_t guild_refresh_time_offset() const;
  void set_guild_refresh_time_offset(uint32_t value);
  private:
  uint32_t _internal_guild_refresh_time_offset() const;
  void _internal_set_guild_refresh_time_offset(uint32_t value);
  public:

  // optional uint32 guild_required_rank_tier = 16;
  bool has_guild_required_rank_tier() const;
  private:
  bool _internal_has_guild_required_rank_tier() const;
  public:
  void clear_guild_required_rank_tier();
  uint32_t guild_required_rank_tier() const;
  void set_guild_required_rank_tier(uint32_t value);
  private:
  uint32_t _internal_guild_required_rank_tier() const;
  void _internal_set_guild_required_rank_tier(uint32_t value);
  public:

  // optional uint32 guild_motd_timestamp = 17;
  bool has_guild_motd_timestamp() const;
  private:
  bool _internal_has_guild_motd_timestamp() const;
  public:
  void clear_guild_motd_timestamp();
  uint32_t guild_motd_timestamp() const;
  void set_guild_motd_timestamp(uint32_t value);
  private:
  uint32_t _internal_guild_motd_timestamp() const;
  void _internal_set_guild_motd_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_tag_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_description_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_motd_;
    uint32_t created_timestamp_;
    uint32_t guild_language_;
    uint32_t guild_flags_;
    uint32_t guild_region_;
    uint64_t guild_logo_;
    uint64_t guild_chat_group_id_;
    uint64_t default_chat_channel_id_;
    uint32_t guild_primary_color_;
    uint32_t guild_secondary_color_;
    uint32_t guild_pattern_;
    uint32_t guild_refresh_time_offset_;
    uint32_t guild_required_rank_tier_;
    uint32_t guild_motd_timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildSummary_EventPoints final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildSummary.EventPoints) */ {
 public:
  inline CMsgGuildSummary_EventPoints() : CMsgGuildSummary_EventPoints(nullptr) {}
  ~CMsgGuildSummary_EventPoints() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildSummary_EventPoints(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildSummary_EventPoints(const CMsgGuildSummary_EventPoints& from);
  CMsgGuildSummary_EventPoints(CMsgGuildSummary_EventPoints&& from) noexcept
    : CMsgGuildSummary_EventPoints() {
    *this = ::std::move(from);
  }

  inline CMsgGuildSummary_EventPoints& operator=(const CMsgGuildSummary_EventPoints& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildSummary_EventPoints& operator=(CMsgGuildSummary_EventPoints&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildSummary_EventPoints& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildSummary_EventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildSummary_EventPoints*>(
               &_CMsgGuildSummary_EventPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgGuildSummary_EventPoints& a, CMsgGuildSummary_EventPoints& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildSummary_EventPoints* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildSummary_EventPoints* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildSummary_EventPoints* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildSummary_EventPoints>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildSummary_EventPoints& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildSummary_EventPoints& from) {
    CMsgGuildSummary_EventPoints::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildSummary_EventPoints* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildSummary.EventPoints";
  }
  protected:
  explicit CMsgGuildSummary_EventPoints(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventIdFieldNumber = 1,
    kGuildPointsFieldNumber = 2,
    kGuildRankFieldNumber = 3,
    kGuildWeeklyRankFieldNumber = 4,
    kGuildWeeklyPercentileFieldNumber = 5,
    kGuildCurrentPercentileFieldNumber = 6,
  };
  // optional uint32 event_id = 1;
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  uint32_t event_id() const;
  void set_event_id(uint32_t value);
  private:
  uint32_t _internal_event_id() const;
  void _internal_set_event_id(uint32_t value);
  public:

  // optional uint32 guild_points = 2;
  bool has_guild_points() const;
  private:
  bool _internal_has_guild_points() const;
  public:
  void clear_guild_points();
  uint32_t guild_points() const;
  void set_guild_points(uint32_t value);
  private:
  uint32_t _internal_guild_points() const;
  void _internal_set_guild_points(uint32_t value);
  public:

  // optional uint32 guild_rank = 3;
  bool has_guild_rank() const;
  private:
  bool _internal_has_guild_rank() const;
  public:
  void clear_guild_rank();
  uint32_t guild_rank() const;
  void set_guild_rank(uint32_t value);
  private:
  uint32_t _internal_guild_rank() const;
  void _internal_set_guild_rank(uint32_t value);
  public:

  // optional uint32 guild_weekly_rank = 4;
  bool has_guild_weekly_rank() const;
  private:
  bool _internal_has_guild_weekly_rank() const;
  public:
  void clear_guild_weekly_rank();
  uint32_t guild_weekly_rank() const;
  void set_guild_weekly_rank(uint32_t value);
  private:
  uint32_t _internal_guild_weekly_rank() const;
  void _internal_set_guild_weekly_rank(uint32_t value);
  public:

  // optional uint32 guild_weekly_percentile = 5;
  bool has_guild_weekly_percentile() const;
  private:
  bool _internal_has_guild_weekly_percentile() const;
  public:
  void clear_guild_weekly_percentile();
  uint32_t guild_weekly_percentile() const;
  void set_guild_weekly_percentile(uint32_t value);
  private:
  uint32_t _internal_guild_weekly_percentile() const;
  void _internal_set_guild_weekly_percentile(uint32_t value);
  public:

  // optional uint32 guild_current_percentile = 6;
  bool has_guild_current_percentile() const;
  private:
  bool _internal_has_guild_current_percentile() const;
  public:
  void clear_guild_current_percentile();
  uint32_t guild_current_percentile() const;
  void set_guild_current_percentile(uint32_t value);
  private:
  uint32_t _internal_guild_current_percentile() const;
  void _internal_set_guild_current_percentile(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildSummary.EventPoints)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t event_id_;
    uint32_t guild_points_;
    uint32_t guild_rank_;
    uint32_t guild_weekly_rank_;
    uint32_t guild_weekly_percentile_;
    uint32_t guild_current_percentile_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildSummary final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildSummary) */ {
 public:
  inline CMsgGuildSummary() : CMsgGuildSummary(nullptr) {}
  ~CMsgGuildSummary() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildSummary(const CMsgGuildSummary& from);
  CMsgGuildSummary(CMsgGuildSummary&& from) noexcept
    : CMsgGuildSummary() {
    *this = ::std::move(from);
  }

  inline CMsgGuildSummary& operator=(const CMsgGuildSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildSummary& operator=(CMsgGuildSummary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildSummary*>(
               &_CMsgGuildSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgGuildSummary& a, CMsgGuildSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildSummary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildSummary>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildSummary& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildSummary& from) {
    CMsgGuildSummary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildSummary* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildSummary";
  }
  protected:
  explicit CMsgGuildSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGuildSummary_EventPoints EventPoints;

  // accessors -------------------------------------------------------

  enum : int {
    kEventPointsFieldNumber = 3,
    kGuildInfoFieldNumber = 1,
    kMemberCountFieldNumber = 2,
  };
  // repeated .CMsgGuildSummary.EventPoints event_points = 3;
  int event_points_size() const;
  private:
  int _internal_event_points_size() const;
  public:
  void clear_event_points();
  ::CMsgGuildSummary_EventPoints* mutable_event_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildSummary_EventPoints >*
      mutable_event_points();
  private:
  const ::CMsgGuildSummary_EventPoints& _internal_event_points(int index) const;
  ::CMsgGuildSummary_EventPoints* _internal_add_event_points();
  public:
  const ::CMsgGuildSummary_EventPoints& event_points(int index) const;
  ::CMsgGuildSummary_EventPoints* add_event_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildSummary_EventPoints >&
      event_points() const;

  // optional .CMsgGuildInfo guild_info = 1;
  bool has_guild_info() const;
  private:
  bool _internal_has_guild_info() const;
  public:
  void clear_guild_info();
  const ::CMsgGuildInfo& guild_info() const;
  PROTOBUF_NODISCARD ::CMsgGuildInfo* release_guild_info();
  ::CMsgGuildInfo* mutable_guild_info();
  void set_allocated_guild_info(::CMsgGuildInfo* guild_info);
  private:
  const ::CMsgGuildInfo& _internal_guild_info() const;
  ::CMsgGuildInfo* _internal_mutable_guild_info();
  public:
  void unsafe_arena_set_allocated_guild_info(
      ::CMsgGuildInfo* guild_info);
  ::CMsgGuildInfo* unsafe_arena_release_guild_info();

  // optional uint32 member_count = 2;
  bool has_member_count() const;
  private:
  bool _internal_has_member_count() const;
  public:
  void clear_member_count();
  uint32_t member_count() const;
  void set_member_count(uint32_t value);
  private:
  uint32_t _internal_member_count() const;
  void _internal_set_member_count(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildSummary_EventPoints > event_points_;
    ::CMsgGuildInfo* guild_info_;
    uint32_t member_count_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildRole) */ {
 public:
  inline CMsgGuildRole() : CMsgGuildRole(nullptr) {}
  ~CMsgGuildRole() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildRole(const CMsgGuildRole& from);
  CMsgGuildRole(CMsgGuildRole&& from) noexcept
    : CMsgGuildRole() {
    *this = ::std::move(from);
  }

  inline CMsgGuildRole& operator=(const CMsgGuildRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildRole& operator=(CMsgGuildRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildRole* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildRole*>(
               &_CMsgGuildRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgGuildRole& a, CMsgGuildRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildRole& from) {
    CMsgGuildRole::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildRole";
  }
  protected:
  explicit CMsgGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleNameFieldNumber = 2,
    kRoleIdFieldNumber = 1,
    kRoleFlagsFieldNumber = 3,
    kRoleOrderFieldNumber = 4,
  };
  // optional string role_name = 2;
  bool has_role_name() const;
  private:
  bool _internal_has_role_name() const;
  public:
  void clear_role_name();
  const std::string& role_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_role_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_role_name();
  PROTOBUF_NODISCARD std::string* release_role_name();
  void set_allocated_role_name(std::string* role_name);
  private:
  const std::string& _internal_role_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_role_name(const std::string& value);
  std::string* _internal_mutable_role_name();
  public:

  // optional uint32 role_id = 1;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint32_t role_id() const;
  void set_role_id(uint32_t value);
  private:
  uint32_t _internal_role_id() const;
  void _internal_set_role_id(uint32_t value);
  public:

  // optional uint32 role_flags = 3;
  bool has_role_flags() const;
  private:
  bool _internal_has_role_flags() const;
  public:
  void clear_role_flags();
  uint32_t role_flags() const;
  void set_role_flags(uint32_t value);
  private:
  uint32_t _internal_role_flags() const;
  void _internal_set_role_flags(uint32_t value);
  public:

  // optional uint32 role_order = 4;
  bool has_role_order() const;
  private:
  bool _internal_has_role_order() const;
  public:
  void clear_role_order();
  uint32_t role_order() const;
  void set_role_order(uint32_t value);
  private:
  uint32_t _internal_role_order() const;
  void _internal_set_role_order(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr role_name_;
    uint32_t role_id_;
    uint32_t role_flags_;
    uint32_t role_order_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildMember final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildMember) */ {
 public:
  inline CMsgGuildMember() : CMsgGuildMember(nullptr) {}
  ~CMsgGuildMember() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildMember(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildMember(const CMsgGuildMember& from);
  CMsgGuildMember(CMsgGuildMember&& from) noexcept
    : CMsgGuildMember() {
    *this = ::std::move(from);
  }

  inline CMsgGuildMember& operator=(const CMsgGuildMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildMember& operator=(CMsgGuildMember&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildMember* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildMember*>(
               &_CMsgGuildMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgGuildMember& a, CMsgGuildMember& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildMember* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildMember* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildMember>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildMember& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildMember& from) {
    CMsgGuildMember::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildMember* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildMember";
  }
  protected:
  explicit CMsgGuildMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberAccountIdFieldNumber = 1,
    kMemberRoleIdFieldNumber = 2,
    kMemberJoinedTimestampFieldNumber = 3,
    kMemberLastActiveTimestampFieldNumber = 4,
  };
  // optional uint32 member_account_id = 1;
  bool has_member_account_id() const;
  private:
  bool _internal_has_member_account_id() const;
  public:
  void clear_member_account_id();
  uint32_t member_account_id() const;
  void set_member_account_id(uint32_t value);
  private:
  uint32_t _internal_member_account_id() const;
  void _internal_set_member_account_id(uint32_t value);
  public:

  // optional uint32 member_role_id = 2;
  bool has_member_role_id() const;
  private:
  bool _internal_has_member_role_id() const;
  public:
  void clear_member_role_id();
  uint32_t member_role_id() const;
  void set_member_role_id(uint32_t value);
  private:
  uint32_t _internal_member_role_id() const;
  void _internal_set_member_role_id(uint32_t value);
  public:

  // optional uint32 member_joined_timestamp = 3;
  bool has_member_joined_timestamp() const;
  private:
  bool _internal_has_member_joined_timestamp() const;
  public:
  void clear_member_joined_timestamp();
  uint32_t member_joined_timestamp() const;
  void set_member_joined_timestamp(uint32_t value);
  private:
  uint32_t _internal_member_joined_timestamp() const;
  void _internal_set_member_joined_timestamp(uint32_t value);
  public:

  // optional uint32 member_last_active_timestamp = 4;
  bool has_member_last_active_timestamp() const;
  private:
  bool _internal_has_member_last_active_timestamp() const;
  public:
  void clear_member_last_active_timestamp();
  uint32_t member_last_active_timestamp() const;
  void set_member_last_active_timestamp(uint32_t value);
  private:
  uint32_t _internal_member_last_active_timestamp() const;
  void _internal_set_member_last_active_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildMember)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t member_account_id_;
    uint32_t member_role_id_;
    uint32_t member_joined_timestamp_;
    uint32_t member_last_active_timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildInvite final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildInvite) */ {
 public:
  inline CMsgGuildInvite() : CMsgGuildInvite(nullptr) {}
  ~CMsgGuildInvite() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildInvite(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildInvite(const CMsgGuildInvite& from);
  CMsgGuildInvite(CMsgGuildInvite&& from) noexcept
    : CMsgGuildInvite() {
    *this = ::std::move(from);
  }

  inline CMsgGuildInvite& operator=(const CMsgGuildInvite& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildInvite& operator=(CMsgGuildInvite&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildInvite& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildInvite* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildInvite*>(
               &_CMsgGuildInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgGuildInvite& a, CMsgGuildInvite& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildInvite* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildInvite* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildInvite* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildInvite>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildInvite& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildInvite& from) {
    CMsgGuildInvite::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildInvite* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildInvite";
  }
  protected:
  explicit CMsgGuildInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequesterAccountIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kTimestampSentFieldNumber = 3,
  };
  // optional uint32 requester_account_id = 1;
  bool has_requester_account_id() const;
  private:
  bool _internal_has_requester_account_id() const;
  public:
  void clear_requester_account_id();
  uint32_t requester_account_id() const;
  void set_requester_account_id(uint32_t value);
  private:
  uint32_t _internal_requester_account_id() const;
  void _internal_set_requester_account_id(uint32_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // optional uint32 timestamp_sent = 3;
  bool has_timestamp_sent() const;
  private:
  bool _internal_has_timestamp_sent() const;
  public:
  void clear_timestamp_sent();
  uint32_t timestamp_sent() const;
  void set_timestamp_sent(uint32_t value);
  private:
  uint32_t _internal_timestamp_sent() const;
  void _internal_set_timestamp_sent(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildInvite)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t requester_account_id_;
    uint32_t target_account_id_;
    uint32_t timestamp_sent_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildData) */ {
 public:
  inline CMsgGuildData() : CMsgGuildData(nullptr) {}
  ~CMsgGuildData() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildData(const CMsgGuildData& from);
  CMsgGuildData(CMsgGuildData&& from) noexcept
    : CMsgGuildData() {
    *this = ::std::move(from);
  }

  inline CMsgGuildData& operator=(const CMsgGuildData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildData& operator=(CMsgGuildData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildData* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildData*>(
               &_CMsgGuildData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgGuildData& a, CMsgGuildData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildData& from) {
    CMsgGuildData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildData";
  }
  protected:
  explicit CMsgGuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildRolesFieldNumber = 3,
    kGuildMembersFieldNumber = 4,
    kGuildInvitesFieldNumber = 5,
    kGuildInfoFieldNumber = 2,
    kGuildIdFieldNumber = 1,
  };
  // repeated .CMsgGuildRole guild_roles = 3;
  int guild_roles_size() const;
  private:
  int _internal_guild_roles_size() const;
  public:
  void clear_guild_roles();
  ::CMsgGuildRole* mutable_guild_roles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildRole >*
      mutable_guild_roles();
  private:
  const ::CMsgGuildRole& _internal_guild_roles(int index) const;
  ::CMsgGuildRole* _internal_add_guild_roles();
  public:
  const ::CMsgGuildRole& guild_roles(int index) const;
  ::CMsgGuildRole* add_guild_roles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildRole >&
      guild_roles() const;

  // repeated .CMsgGuildMember guild_members = 4;
  int guild_members_size() const;
  private:
  int _internal_guild_members_size() const;
  public:
  void clear_guild_members();
  ::CMsgGuildMember* mutable_guild_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >*
      mutable_guild_members();
  private:
  const ::CMsgGuildMember& _internal_guild_members(int index) const;
  ::CMsgGuildMember* _internal_add_guild_members();
  public:
  const ::CMsgGuildMember& guild_members(int index) const;
  ::CMsgGuildMember* add_guild_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >&
      guild_members() const;

  // repeated .CMsgGuildInvite guild_invites = 5;
  int guild_invites_size() const;
  private:
  int _internal_guild_invites_size() const;
  public:
  void clear_guild_invites();
  ::CMsgGuildInvite* mutable_guild_invites(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildInvite >*
      mutable_guild_invites();
  private:
  const ::CMsgGuildInvite& _internal_guild_invites(int index) const;
  ::CMsgGuildInvite* _internal_add_guild_invites();
  public:
  const ::CMsgGuildInvite& guild_invites(int index) const;
  ::CMsgGuildInvite* add_guild_invites();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildInvite >&
      guild_invites() const;

  // optional .CMsgGuildInfo guild_info = 2;
  bool has_guild_info() const;
  private:
  bool _internal_has_guild_info() const;
  public:
  void clear_guild_info();
  const ::CMsgGuildInfo& guild_info() const;
  PROTOBUF_NODISCARD ::CMsgGuildInfo* release_guild_info();
  ::CMsgGuildInfo* mutable_guild_info();
  void set_allocated_guild_info(::CMsgGuildInfo* guild_info);
  private:
  const ::CMsgGuildInfo& _internal_guild_info() const;
  ::CMsgGuildInfo* _internal_mutable_guild_info();
  public:
  void unsafe_arena_set_allocated_guild_info(
      ::CMsgGuildInfo* guild_info);
  ::CMsgGuildInfo* unsafe_arena_release_guild_info();

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildRole > guild_roles_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember > guild_members_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildInvite > guild_invites_;
    ::CMsgGuildInfo* guild_info_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountGuildInvite final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountGuildInvite) */ {
 public:
  inline CMsgAccountGuildInvite() : CMsgAccountGuildInvite(nullptr) {}
  ~CMsgAccountGuildInvite() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountGuildInvite(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountGuildInvite(const CMsgAccountGuildInvite& from);
  CMsgAccountGuildInvite(CMsgAccountGuildInvite&& from) noexcept
    : CMsgAccountGuildInvite() {
    *this = ::std::move(from);
  }

  inline CMsgAccountGuildInvite& operator=(const CMsgAccountGuildInvite& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountGuildInvite& operator=(CMsgAccountGuildInvite&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountGuildInvite& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountGuildInvite* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountGuildInvite*>(
               &_CMsgAccountGuildInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgAccountGuildInvite& a, CMsgAccountGuildInvite& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountGuildInvite* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountGuildInvite* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountGuildInvite* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAccountGuildInvite>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountGuildInvite& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountGuildInvite& from) {
    CMsgAccountGuildInvite::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAccountGuildInvite* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountGuildInvite";
  }
  protected:
  explicit CMsgAccountGuildInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kRequesterAccountIdFieldNumber = 2,
    kTimestampSentFieldNumber = 3,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 requester_account_id = 2;
  bool has_requester_account_id() const;
  private:
  bool _internal_has_requester_account_id() const;
  public:
  void clear_requester_account_id();
  uint32_t requester_account_id() const;
  void set_requester_account_id(uint32_t value);
  private:
  uint32_t _internal_requester_account_id() const;
  void _internal_set_requester_account_id(uint32_t value);
  public:

  // optional uint32 timestamp_sent = 3;
  bool has_timestamp_sent() const;
  private:
  bool _internal_has_timestamp_sent() const;
  public:
  void clear_timestamp_sent();
  uint32_t timestamp_sent() const;
  void set_timestamp_sent(uint32_t value);
  private:
  uint32_t _internal_timestamp_sent() const;
  void _internal_set_timestamp_sent(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountGuildInvite)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t requester_account_id_;
    uint32_t timestamp_sent_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountGuildMemberships final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountGuildMemberships) */ {
 public:
  inline CMsgAccountGuildMemberships() : CMsgAccountGuildMemberships(nullptr) {}
  ~CMsgAccountGuildMemberships() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountGuildMemberships(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountGuildMemberships(const CMsgAccountGuildMemberships& from);
  CMsgAccountGuildMemberships(CMsgAccountGuildMemberships&& from) noexcept
    : CMsgAccountGuildMemberships() {
    *this = ::std::move(from);
  }

  inline CMsgAccountGuildMemberships& operator=(const CMsgAccountGuildMemberships& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountGuildMemberships& operator=(CMsgAccountGuildMemberships&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountGuildMemberships& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountGuildMemberships* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountGuildMemberships*>(
               &_CMsgAccountGuildMemberships_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgAccountGuildMemberships& a, CMsgAccountGuildMemberships& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountGuildMemberships* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountGuildMemberships* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountGuildMemberships* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAccountGuildMemberships>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountGuildMemberships& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountGuildMemberships& from) {
    CMsgAccountGuildMemberships::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAccountGuildMemberships* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountGuildMemberships";
  }
  protected:
  explicit CMsgAccountGuildMemberships(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdsFieldNumber = 1,
    kGuildInvitesFieldNumber = 2,
  };
  // repeated uint32 guild_ids = 1;
  int guild_ids_size() const;
  private:
  int _internal_guild_ids_size() const;
  public:
  void clear_guild_ids();
  private:
  uint32_t _internal_guild_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_guild_ids() const;
  void _internal_add_guild_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_guild_ids();
  public:
  uint32_t guild_ids(int index) const;
  void set_guild_ids(int index, uint32_t value);
  void add_guild_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      guild_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_guild_ids();

  // repeated .CMsgAccountGuildInvite guild_invites = 2;
  int guild_invites_size() const;
  private:
  int _internal_guild_invites_size() const;
  public:
  void clear_guild_invites();
  ::CMsgAccountGuildInvite* mutable_guild_invites(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildInvite >*
      mutable_guild_invites();
  private:
  const ::CMsgAccountGuildInvite& _internal_guild_invites(int index) const;
  ::CMsgAccountGuildInvite* _internal_add_guild_invites();
  public:
  const ::CMsgAccountGuildInvite& guild_invites(int index) const;
  ::CMsgAccountGuildInvite* add_guild_invites();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildInvite >&
      guild_invites() const;

  // @@protoc_insertion_point(class_scope:CMsgAccountGuildMemberships)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > guild_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildInvite > guild_invites_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildPersonaInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildPersonaInfo) */ {
 public:
  inline CMsgGuildPersonaInfo() : CMsgGuildPersonaInfo(nullptr) {}
  ~CMsgGuildPersonaInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildPersonaInfo(const CMsgGuildPersonaInfo& from);
  CMsgGuildPersonaInfo(CMsgGuildPersonaInfo&& from) noexcept
    : CMsgGuildPersonaInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGuildPersonaInfo& operator=(const CMsgGuildPersonaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildPersonaInfo& operator=(CMsgGuildPersonaInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildPersonaInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildPersonaInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildPersonaInfo*>(
               &_CMsgGuildPersonaInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgGuildPersonaInfo& a, CMsgGuildPersonaInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildPersonaInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildPersonaInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildPersonaInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildPersonaInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildPersonaInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildPersonaInfo& from) {
    CMsgGuildPersonaInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildPersonaInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildPersonaInfo";
  }
  protected:
  explicit CMsgGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildTagFieldNumber = 2,
    kGuildIdFieldNumber = 1,
    kGuildFlagsFieldNumber = 3,
  };
  // optional string guild_tag = 2;
  bool has_guild_tag() const;
  private:
  bool _internal_has_guild_tag() const;
  public:
  void clear_guild_tag();
  const std::string& guild_tag() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_tag(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_tag();
  PROTOBUF_NODISCARD std::string* release_guild_tag();
  void set_allocated_guild_tag(std::string* guild_tag);
  private:
  const std::string& _internal_guild_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_tag(const std::string& value);
  std::string* _internal_mutable_guild_tag();
  public:

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 guild_flags = 3;
  bool has_guild_flags() const;
  private:
  bool _internal_has_guild_flags() const;
  public:
  void clear_guild_flags();
  uint32_t guild_flags() const;
  void set_guild_flags(uint32_t value);
  private:
  uint32_t _internal_guild_flags() const;
  void _internal_set_guild_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildPersonaInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_tag_;
    uint32_t guild_id_;
    uint32_t guild_flags_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountGuildsPersonaInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountGuildsPersonaInfo) */ {
 public:
  inline CMsgAccountGuildsPersonaInfo() : CMsgAccountGuildsPersonaInfo(nullptr) {}
  ~CMsgAccountGuildsPersonaInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountGuildsPersonaInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountGuildsPersonaInfo(const CMsgAccountGuildsPersonaInfo& from);
  CMsgAccountGuildsPersonaInfo(CMsgAccountGuildsPersonaInfo&& from) noexcept
    : CMsgAccountGuildsPersonaInfo() {
    *this = ::std::move(from);
  }

  inline CMsgAccountGuildsPersonaInfo& operator=(const CMsgAccountGuildsPersonaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountGuildsPersonaInfo& operator=(CMsgAccountGuildsPersonaInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountGuildsPersonaInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountGuildsPersonaInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountGuildsPersonaInfo*>(
               &_CMsgAccountGuildsPersonaInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgAccountGuildsPersonaInfo& a, CMsgAccountGuildsPersonaInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountGuildsPersonaInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountGuildsPersonaInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountGuildsPersonaInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAccountGuildsPersonaInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountGuildsPersonaInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountGuildsPersonaInfo& from) {
    CMsgAccountGuildsPersonaInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAccountGuildsPersonaInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountGuildsPersonaInfo";
  }
  protected:
  explicit CMsgAccountGuildsPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildPersonaInfosFieldNumber = 1,
  };
  // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
  int guild_persona_infos_size() const;
  private:
  int _internal_guild_persona_infos_size() const;
  public:
  void clear_guild_persona_infos();
  ::CMsgGuildPersonaInfo* mutable_guild_persona_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildPersonaInfo >*
      mutable_guild_persona_infos();
  private:
  const ::CMsgGuildPersonaInfo& _internal_guild_persona_infos(int index) const;
  ::CMsgGuildPersonaInfo* _internal_add_guild_persona_infos();
  public:
  const ::CMsgGuildPersonaInfo& guild_persona_infos(int index) const;
  ::CMsgGuildPersonaInfo* add_guild_persona_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildPersonaInfo >&
      guild_persona_infos() const;

  // @@protoc_insertion_point(class_scope:CMsgAccountGuildsPersonaInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildPersonaInfo > guild_persona_infos_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildFeedEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildFeedEvent) */ {
 public:
  inline CMsgGuildFeedEvent() : CMsgGuildFeedEvent(nullptr) {}
  ~CMsgGuildFeedEvent() override;
  explicit PROTOBUF_CONSTEXPR CMsgGuildFeedEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildFeedEvent(const CMsgGuildFeedEvent& from);
  CMsgGuildFeedEvent(CMsgGuildFeedEvent&& from) noexcept
    : CMsgGuildFeedEvent() {
    *this = ::std::move(from);
  }

  inline CMsgGuildFeedEvent& operator=(const CMsgGuildFeedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildFeedEvent& operator=(CMsgGuildFeedEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGuildFeedEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildFeedEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildFeedEvent*>(
               &_CMsgGuildFeedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgGuildFeedEvent& a, CMsgGuildFeedEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildFeedEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildFeedEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGuildFeedEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGuildFeedEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGuildFeedEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGuildFeedEvent& from) {
    CMsgGuildFeedEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildFeedEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildFeedEvent";
  }
  protected:
  explicit CMsgGuildFeedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeedEventIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kEventTypeFieldNumber = 3,
    kParamUint1FieldNumber = 4,
    kParamUint2FieldNumber = 5,
    kParamUint3FieldNumber = 6,
  };
  // optional uint64 feed_event_id = 1;
  bool has_feed_event_id() const;
  private:
  bool _internal_has_feed_event_id() const;
  public:
  void clear_feed_event_id();
  uint64_t feed_event_id() const;
  void set_feed_event_id(uint64_t value);
  private:
  uint64_t _internal_feed_event_id() const;
  void _internal_set_feed_event_id(uint64_t value);
  public:

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // optional uint32 event_type = 3;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  uint32_t event_type() const;
  void set_event_type(uint32_t value);
  private:
  uint32_t _internal_event_type() const;
  void _internal_set_event_type(uint32_t value);
  public:

  // optional uint32 param_uint_1 = 4;
  bool has_param_uint_1() const;
  private:
  bool _internal_has_param_uint_1() const;
  public:
  void clear_param_uint_1();
  uint32_t param_uint_1() const;
  void set_param_uint_1(uint32_t value);
  private:
  uint32_t _internal_param_uint_1() const;
  void _internal_set_param_uint_1(uint32_t value);
  public:

  // optional uint32 param_uint_2 = 5;
  bool has_param_uint_2() const;
  private:
  bool _internal_has_param_uint_2() const;
  public:
  void clear_param_uint_2();
  uint32_t param_uint_2() const;
  void set_param_uint_2(uint32_t value);
  private:
  uint32_t _internal_param_uint_2() const;
  void _internal_set_param_uint_2(uint32_t value);
  public:

  // optional uint32 param_uint_3 = 6;
  bool has_param_uint_3() const;
  private:
  bool _internal_has_param_uint_3() const;
  public:
  void clear_param_uint_3();
  uint32_t param_uint_3() const;
  void set_param_uint_3(uint32_t value);
  private:
  uint32_t _internal_param_uint_3() const;
  void _internal_set_param_uint_3(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildFeedEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t feed_event_id_;
    uint32_t timestamp_;
    uint32_t event_type_;
    uint32_t param_uint_1_;
    uint32_t param_uint_2_;
    uint32_t param_uint_3_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateGuild) */ {
 public:
  inline CMsgClientToGCCreateGuild() : CMsgClientToGCCreateGuild(nullptr) {}
  ~CMsgClientToGCCreateGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateGuild(const CMsgClientToGCCreateGuild& from);
  CMsgClientToGCCreateGuild(CMsgClientToGCCreateGuild&& from) noexcept
    : CMsgClientToGCCreateGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateGuild& operator=(const CMsgClientToGCCreateGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateGuild& operator=(CMsgClientToGCCreateGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateGuild*>(
               &_CMsgClientToGCCreateGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgClientToGCCreateGuild& a, CMsgClientToGCCreateGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateGuild& from) {
    CMsgClientToGCCreateGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateGuild";
  }
  protected:
  explicit CMsgClientToGCCreateGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildInfoFieldNumber = 1,
    kGuildChatTypeFieldNumber = 2,
  };
  // optional .CMsgGuildInfo guild_info = 1;
  bool has_guild_info() const;
  private:
  bool _internal_has_guild_info() const;
  public:
  void clear_guild_info();
  const ::CMsgGuildInfo& guild_info() const;
  PROTOBUF_NODISCARD ::CMsgGuildInfo* release_guild_info();
  ::CMsgGuildInfo* mutable_guild_info();
  void set_allocated_guild_info(::CMsgGuildInfo* guild_info);
  private:
  const ::CMsgGuildInfo& _internal_guild_info() const;
  ::CMsgGuildInfo* _internal_mutable_guild_info();
  public:
  void unsafe_arena_set_allocated_guild_info(
      ::CMsgGuildInfo* guild_info);
  ::CMsgGuildInfo* unsafe_arena_release_guild_info();

  // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
  bool has_guild_chat_type() const;
  private:
  bool _internal_has_guild_chat_type() const;
  public:
  void clear_guild_chat_type();
  ::EGuildChatType guild_chat_type() const;
  void set_guild_chat_type(::EGuildChatType value);
  private:
  ::EGuildChatType _internal_guild_chat_type() const;
  void _internal_set_guild_chat_type(::EGuildChatType value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgGuildInfo* guild_info_;
    int guild_chat_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCreateGuildResponse) */ {
 public:
  inline CMsgClientToGCCreateGuildResponse() : CMsgClientToGCCreateGuildResponse(nullptr) {}
  ~CMsgClientToGCCreateGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCreateGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCreateGuildResponse(const CMsgClientToGCCreateGuildResponse& from);
  CMsgClientToGCCreateGuildResponse(CMsgClientToGCCreateGuildResponse&& from) noexcept
    : CMsgClientToGCCreateGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateGuildResponse& operator=(const CMsgClientToGCCreateGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCreateGuildResponse& operator=(CMsgClientToGCCreateGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCreateGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCreateGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateGuildResponse*>(
               &_CMsgClientToGCCreateGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgClientToGCCreateGuildResponse& a, CMsgClientToGCCreateGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCreateGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCreateGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCreateGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCreateGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCreateGuildResponse& from) {
    CMsgClientToGCCreateGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCreateGuildResponse";
  }
  protected:
  explicit CMsgClientToGCCreateGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreateGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidName =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidName;
  static constexpr EResponse k_eNameAlreadyUsed =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eNameAlreadyUsed;
  static constexpr EResponse k_eInvalidTag =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidTag;
  static constexpr EResponse k_eTagAlreadyUsed =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eTagAlreadyUsed;
  static constexpr EResponse k_eInvalidDescription =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidDescription;
  static constexpr EResponse k_eInvalidRegion =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidRegion;
  static constexpr EResponse k_eInvalidLogo =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidLogo;
  static constexpr EResponse k_eDoesNotOwnEvent =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eDoesNotOwnEvent;
  static constexpr EResponse k_eGuildLimit =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eGuildLimit;
  static constexpr EResponse k_eInvalidMotD =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eInvalidMotD;
  static constexpr EResponse k_eBlocked =
    CMsgClientToGCCreateGuildResponse_EResponse_k_eBlocked;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCCreateGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCCreateGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCCreateGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCCreateGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCCreateGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCCreateGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCCreateGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kGuildIdFieldNumber = 2,
  };
  // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCCreateGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCCreateGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCCreateGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCCreateGuildResponse_EResponse value);
  public:

  // optional uint32 guild_id = 2;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCreateGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetGuildInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetGuildInfo) */ {
 public:
  inline CMsgClientToGCSetGuildInfo() : CMsgClientToGCSetGuildInfo(nullptr) {}
  ~CMsgClientToGCSetGuildInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetGuildInfo(const CMsgClientToGCSetGuildInfo& from);
  CMsgClientToGCSetGuildInfo(CMsgClientToGCSetGuildInfo&& from) noexcept
    : CMsgClientToGCSetGuildInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetGuildInfo& operator=(const CMsgClientToGCSetGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetGuildInfo& operator=(CMsgClientToGCSetGuildInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetGuildInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetGuildInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetGuildInfo*>(
               &_CMsgClientToGCSetGuildInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgClientToGCSetGuildInfo& a, CMsgClientToGCSetGuildInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetGuildInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetGuildInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetGuildInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetGuildInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetGuildInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetGuildInfo& from) {
    CMsgClientToGCSetGuildInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetGuildInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetGuildInfo";
  }
  protected:
  explicit CMsgClientToGCSetGuildInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildInfoFieldNumber = 2,
    kGuildIdFieldNumber = 1,
    kGuildChatTypeFieldNumber = 3,
  };
  // optional .CMsgGuildInfo guild_info = 2;
  bool has_guild_info() const;
  private:
  bool _internal_has_guild_info() const;
  public:
  void clear_guild_info();
  const ::CMsgGuildInfo& guild_info() const;
  PROTOBUF_NODISCARD ::CMsgGuildInfo* release_guild_info();
  ::CMsgGuildInfo* mutable_guild_info();
  void set_allocated_guild_info(::CMsgGuildInfo* guild_info);
  private:
  const ::CMsgGuildInfo& _internal_guild_info() const;
  ::CMsgGuildInfo* _internal_mutable_guild_info();
  public:
  void unsafe_arena_set_allocated_guild_info(
      ::CMsgGuildInfo* guild_info);
  ::CMsgGuildInfo* unsafe_arena_release_guild_info();

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
  bool has_guild_chat_type() const;
  private:
  bool _internal_has_guild_chat_type() const;
  public:
  void clear_guild_chat_type();
  ::EGuildChatType guild_chat_type() const;
  void set_guild_chat_type(::EGuildChatType value);
  private:
  ::EGuildChatType _internal_guild_chat_type() const;
  void _internal_set_guild_chat_type(::EGuildChatType value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetGuildInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgGuildInfo* guild_info_;
    uint32_t guild_id_;
    int guild_chat_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetGuildInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetGuildInfoResponse) */ {
 public:
  inline CMsgClientToGCSetGuildInfoResponse() : CMsgClientToGCSetGuildInfoResponse(nullptr) {}
  ~CMsgClientToGCSetGuildInfoResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetGuildInfoResponse(const CMsgClientToGCSetGuildInfoResponse& from);
  CMsgClientToGCSetGuildInfoResponse(CMsgClientToGCSetGuildInfoResponse&& from) noexcept
    : CMsgClientToGCSetGuildInfoResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetGuildInfoResponse& operator=(const CMsgClientToGCSetGuildInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetGuildInfoResponse& operator=(CMsgClientToGCSetGuildInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetGuildInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetGuildInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetGuildInfoResponse*>(
               &_CMsgClientToGCSetGuildInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgClientToGCSetGuildInfoResponse& a, CMsgClientToGCSetGuildInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetGuildInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetGuildInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetGuildInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetGuildInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetGuildInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetGuildInfoResponse& from) {
    CMsgClientToGCSetGuildInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetGuildInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetGuildInfoResponse";
  }
  protected:
  explicit CMsgClientToGCSetGuildInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetGuildInfoResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eNoPermission =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNoPermission;
  static constexpr EResponse k_eMotDTooLong =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eMotDTooLong;
  static constexpr EResponse k_eNameChangeNoPermissions =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNameChangeNoPermissions;
  static constexpr EResponse k_eTagChangeNoPermissions =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTagChangeNoPermissions;
  static constexpr EResponse k_eNameInvalid =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eNameInvalid;
  static constexpr EResponse k_eTagInvalid =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eTagInvalid;
  static constexpr EResponse k_eDescriptionInvalid =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eDescriptionInvalid;
  static constexpr EResponse k_eBlocked =
    CMsgClientToGCSetGuildInfoResponse_EResponse_k_eBlocked;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSetGuildInfoResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSetGuildInfoResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSetGuildInfoResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSetGuildInfoResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSetGuildInfoResponse_EResponse value);
  private:
  ::CMsgClientToGCSetGuildInfoResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSetGuildInfoResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetGuildInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildData) */ {
 public:
  inline CMsgClientToGCRequestGuildData() : CMsgClientToGCRequestGuildData(nullptr) {}
  ~CMsgClientToGCRequestGuildData() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildData(const CMsgClientToGCRequestGuildData& from);
  CMsgClientToGCRequestGuildData(CMsgClientToGCRequestGuildData&& from) noexcept
    : CMsgClientToGCRequestGuildData() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildData& operator=(const CMsgClientToGCRequestGuildData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildData& operator=(CMsgClientToGCRequestGuildData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestGuildData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildData*>(
               &_CMsgClientToGCRequestGuildData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgClientToGCRequestGuildData& a, CMsgClientToGCRequestGuildData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestGuildData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestGuildData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestGuildData& from) {
    CMsgClientToGCRequestGuildData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestGuildData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildData";
  }
  protected:
  explicit CMsgClientToGCRequestGuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildDataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildDataResponse) */ {
 public:
  inline CMsgClientToGCRequestGuildDataResponse() : CMsgClientToGCRequestGuildDataResponse(nullptr) {}
  ~CMsgClientToGCRequestGuildDataResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildDataResponse(const CMsgClientToGCRequestGuildDataResponse& from);
  CMsgClientToGCRequestGuildDataResponse(CMsgClientToGCRequestGuildDataResponse&& from) noexcept
    : CMsgClientToGCRequestGuildDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildDataResponse& operator=(const CMsgClientToGCRequestGuildDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildDataResponse& operator=(CMsgClientToGCRequestGuildDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestGuildDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildDataResponse*>(
               &_CMsgClientToGCRequestGuildDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgClientToGCRequestGuildDataResponse& a, CMsgClientToGCRequestGuildDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildDataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestGuildDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildDataResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestGuildDataResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestGuildDataResponse& from) {
    CMsgClientToGCRequestGuildDataResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestGuildDataResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildDataResponse";
  }
  protected:
  explicit CMsgClientToGCRequestGuildDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestGuildDataResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCRequestGuildDataResponse_EResponse_k_eNotMember;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestGuildDataResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestGuildDataResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestGuildDataResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGuildDataFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgGuildData guild_data = 2;
  bool has_guild_data() const;
  private:
  bool _internal_has_guild_data() const;
  public:
  void clear_guild_data();
  const ::CMsgGuildData& guild_data() const;
  PROTOBUF_NODISCARD ::CMsgGuildData* release_guild_data();
  ::CMsgGuildData* mutable_guild_data();
  void set_allocated_guild_data(::CMsgGuildData* guild_data);
  private:
  const ::CMsgGuildData& _internal_guild_data() const;
  ::CMsgGuildData* _internal_mutable_guild_data();
  public:
  void unsafe_arena_set_allocated_guild_data(
      ::CMsgGuildData* guild_data);
  ::CMsgGuildData* unsafe_arena_release_guild_data();

  // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestGuildDataResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestGuildDataResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestGuildDataResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestGuildDataResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgGuildData* guild_data_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientGuildDataUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientGuildDataUpdated) */ {
 public:
  inline CMsgGCToClientGuildDataUpdated() : CMsgGCToClientGuildDataUpdated(nullptr) {}
  ~CMsgGCToClientGuildDataUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientGuildDataUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientGuildDataUpdated(const CMsgGCToClientGuildDataUpdated& from);
  CMsgGCToClientGuildDataUpdated(CMsgGCToClientGuildDataUpdated&& from) noexcept
    : CMsgGCToClientGuildDataUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientGuildDataUpdated& operator=(const CMsgGCToClientGuildDataUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientGuildDataUpdated& operator=(CMsgGCToClientGuildDataUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientGuildDataUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientGuildDataUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientGuildDataUpdated*>(
               &_CMsgGCToClientGuildDataUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgGCToClientGuildDataUpdated& a, CMsgGCToClientGuildDataUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientGuildDataUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientGuildDataUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientGuildDataUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientGuildDataUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientGuildDataUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientGuildDataUpdated& from) {
    CMsgGCToClientGuildDataUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientGuildDataUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientGuildDataUpdated";
  }
  protected:
  explicit CMsgGCToClientGuildDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildDataFieldNumber = 1,
    kUpdateFlagsFieldNumber = 2,
  };
  // optional .CMsgGuildData guild_data = 1;
  bool has_guild_data() const;
  private:
  bool _internal_has_guild_data() const;
  public:
  void clear_guild_data();
  const ::CMsgGuildData& guild_data() const;
  PROTOBUF_NODISCARD ::CMsgGuildData* release_guild_data();
  ::CMsgGuildData* mutable_guild_data();
  void set_allocated_guild_data(::CMsgGuildData* guild_data);
  private:
  const ::CMsgGuildData& _internal_guild_data() const;
  ::CMsgGuildData* _internal_mutable_guild_data();
  public:
  void unsafe_arena_set_allocated_guild_data(
      ::CMsgGuildData* guild_data);
  ::CMsgGuildData* unsafe_arena_release_guild_data();

  // optional uint32 update_flags = 2;
  bool has_update_flags() const;
  private:
  bool _internal_has_update_flags() const;
  public:
  void clear_update_flags();
  uint32_t update_flags() const;
  void set_update_flags(uint32_t value);
  private:
  uint32_t _internal_update_flags() const;
  void _internal_set_update_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientGuildDataUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgGuildData* guild_data_;
    uint32_t update_flags_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientGuildMembersDataUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientGuildMembersDataUpdated) */ {
 public:
  inline CMsgGCToClientGuildMembersDataUpdated() : CMsgGCToClientGuildMembersDataUpdated(nullptr) {}
  ~CMsgGCToClientGuildMembersDataUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientGuildMembersDataUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientGuildMembersDataUpdated(const CMsgGCToClientGuildMembersDataUpdated& from);
  CMsgGCToClientGuildMembersDataUpdated(CMsgGCToClientGuildMembersDataUpdated&& from) noexcept
    : CMsgGCToClientGuildMembersDataUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientGuildMembersDataUpdated& operator=(const CMsgGCToClientGuildMembersDataUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientGuildMembersDataUpdated& operator=(CMsgGCToClientGuildMembersDataUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientGuildMembersDataUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientGuildMembersDataUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientGuildMembersDataUpdated*>(
               &_CMsgGCToClientGuildMembersDataUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgGCToClientGuildMembersDataUpdated& a, CMsgGCToClientGuildMembersDataUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientGuildMembersDataUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientGuildMembersDataUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientGuildMembersDataUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientGuildMembersDataUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientGuildMembersDataUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientGuildMembersDataUpdated& from) {
    CMsgGCToClientGuildMembersDataUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientGuildMembersDataUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientGuildMembersDataUpdated";
  }
  protected:
  explicit CMsgGCToClientGuildMembersDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMembersDataFieldNumber = 2,
    kGuildIdFieldNumber = 1,
  };
  // repeated .CMsgGuildMember members_data = 2;
  int members_data_size() const;
  private:
  int _internal_members_data_size() const;
  public:
  void clear_members_data();
  ::CMsgGuildMember* mutable_members_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >*
      mutable_members_data();
  private:
  const ::CMsgGuildMember& _internal_members_data(int index) const;
  ::CMsgGuildMember* _internal_add_members_data();
  public:
  const ::CMsgGuildMember& members_data(int index) const;
  ::CMsgGuildMember* add_members_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >&
      members_data() const;

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientGuildMembersDataUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember > members_data_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildMembership final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildMembership) */ {
 public:
  inline CMsgClientToGCRequestGuildMembership() : CMsgClientToGCRequestGuildMembership(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildMembership(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildMembership(const CMsgClientToGCRequestGuildMembership& from);
  CMsgClientToGCRequestGuildMembership(CMsgClientToGCRequestGuildMembership&& from) noexcept
    : CMsgClientToGCRequestGuildMembership() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildMembership& operator=(const CMsgClientToGCRequestGuildMembership& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildMembership& operator=(CMsgClientToGCRequestGuildMembership&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestGuildMembership& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildMembership* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildMembership*>(
               &_CMsgClientToGCRequestGuildMembership_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgClientToGCRequestGuildMembership& a, CMsgClientToGCRequestGuildMembership& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildMembership* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildMembership* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestGuildMembership* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildMembership>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCRequestGuildMembership& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCRequestGuildMembership& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildMembership";
  }
  protected:
  explicit CMsgClientToGCRequestGuildMembership(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildMembership)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildMembershipResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildMembershipResponse) */ {
 public:
  inline CMsgClientToGCRequestGuildMembershipResponse() : CMsgClientToGCRequestGuildMembershipResponse(nullptr) {}
  ~CMsgClientToGCRequestGuildMembershipResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildMembershipResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildMembershipResponse(const CMsgClientToGCRequestGuildMembershipResponse& from);
  CMsgClientToGCRequestGuildMembershipResponse(CMsgClientToGCRequestGuildMembershipResponse&& from) noexcept
    : CMsgClientToGCRequestGuildMembershipResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildMembershipResponse& operator=(const CMsgClientToGCRequestGuildMembershipResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildMembershipResponse& operator=(CMsgClientToGCRequestGuildMembershipResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestGuildMembershipResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildMembershipResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildMembershipResponse*>(
               &_CMsgClientToGCRequestGuildMembershipResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgClientToGCRequestGuildMembershipResponse& a, CMsgClientToGCRequestGuildMembershipResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildMembershipResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildMembershipResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestGuildMembershipResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildMembershipResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestGuildMembershipResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestGuildMembershipResponse& from) {
    CMsgClientToGCRequestGuildMembershipResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestGuildMembershipResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildMembershipResponse";
  }
  protected:
  explicit CMsgClientToGCRequestGuildMembershipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestGuildMembershipResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_k_eTimeout;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestGuildMembershipResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestGuildMembershipResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestGuildMembershipResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGuildMembershipsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAccountGuildMemberships guild_memberships = 2;
  bool has_guild_memberships() const;
  private:
  bool _internal_has_guild_memberships() const;
  public:
  void clear_guild_memberships();
  const ::CMsgAccountGuildMemberships& guild_memberships() const;
  PROTOBUF_NODISCARD ::CMsgAccountGuildMemberships* release_guild_memberships();
  ::CMsgAccountGuildMemberships* mutable_guild_memberships();
  void set_allocated_guild_memberships(::CMsgAccountGuildMemberships* guild_memberships);
  private:
  const ::CMsgAccountGuildMemberships& _internal_guild_memberships() const;
  ::CMsgAccountGuildMemberships* _internal_mutable_guild_memberships();
  public:
  void unsafe_arena_set_allocated_guild_memberships(
      ::CMsgAccountGuildMemberships* guild_memberships);
  ::CMsgAccountGuildMemberships* unsafe_arena_release_guild_memberships();

  // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestGuildMembershipResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestGuildMembershipResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestGuildMembershipResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestGuildMembershipResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildMembershipResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountGuildMemberships* guild_memberships_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientGuildMembershipUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientGuildMembershipUpdated) */ {
 public:
  inline CMsgGCToClientGuildMembershipUpdated() : CMsgGCToClientGuildMembershipUpdated(nullptr) {}
  ~CMsgGCToClientGuildMembershipUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientGuildMembershipUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientGuildMembershipUpdated(const CMsgGCToClientGuildMembershipUpdated& from);
  CMsgGCToClientGuildMembershipUpdated(CMsgGCToClientGuildMembershipUpdated&& from) noexcept
    : CMsgGCToClientGuildMembershipUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientGuildMembershipUpdated& operator=(const CMsgGCToClientGuildMembershipUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientGuildMembershipUpdated& operator=(CMsgGCToClientGuildMembershipUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientGuildMembershipUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientGuildMembershipUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientGuildMembershipUpdated*>(
               &_CMsgGCToClientGuildMembershipUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgGCToClientGuildMembershipUpdated& a, CMsgGCToClientGuildMembershipUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientGuildMembershipUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientGuildMembershipUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientGuildMembershipUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientGuildMembershipUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientGuildMembershipUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientGuildMembershipUpdated& from) {
    CMsgGCToClientGuildMembershipUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientGuildMembershipUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientGuildMembershipUpdated";
  }
  protected:
  explicit CMsgGCToClientGuildMembershipUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildMembershipsFieldNumber = 1,
  };
  // optional .CMsgAccountGuildMemberships guild_memberships = 1;
  bool has_guild_memberships() const;
  private:
  bool _internal_has_guild_memberships() const;
  public:
  void clear_guild_memberships();
  const ::CMsgAccountGuildMemberships& guild_memberships() const;
  PROTOBUF_NODISCARD ::CMsgAccountGuildMemberships* release_guild_memberships();
  ::CMsgAccountGuildMemberships* mutable_guild_memberships();
  void set_allocated_guild_memberships(::CMsgAccountGuildMemberships* guild_memberships);
  private:
  const ::CMsgAccountGuildMemberships& _internal_guild_memberships() const;
  ::CMsgAccountGuildMemberships* _internal_mutable_guild_memberships();
  public:
  void unsafe_arena_set_allocated_guild_memberships(
      ::CMsgAccountGuildMemberships* guild_memberships);
  ::CMsgAccountGuildMemberships* unsafe_arena_release_guild_memberships();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientGuildMembershipUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountGuildMemberships* guild_memberships_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCJoinGuild) */ {
 public:
  inline CMsgClientToGCJoinGuild() : CMsgClientToGCJoinGuild(nullptr) {}
  ~CMsgClientToGCJoinGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCJoinGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCJoinGuild(const CMsgClientToGCJoinGuild& from);
  CMsgClientToGCJoinGuild(CMsgClientToGCJoinGuild&& from) noexcept
    : CMsgClientToGCJoinGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCJoinGuild& operator=(const CMsgClientToGCJoinGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCJoinGuild& operator=(CMsgClientToGCJoinGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCJoinGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCJoinGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinGuild*>(
               &_CMsgClientToGCJoinGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgClientToGCJoinGuild& a, CMsgClientToGCJoinGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCJoinGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCJoinGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCJoinGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCJoinGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCJoinGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCJoinGuild& from) {
    CMsgClientToGCJoinGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCJoinGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCJoinGuild";
  }
  protected:
  explicit CMsgClientToGCJoinGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCJoinGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCJoinGuildResponse) */ {
 public:
  inline CMsgClientToGCJoinGuildResponse() : CMsgClientToGCJoinGuildResponse(nullptr) {}
  ~CMsgClientToGCJoinGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCJoinGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCJoinGuildResponse(const CMsgClientToGCJoinGuildResponse& from);
  CMsgClientToGCJoinGuildResponse(CMsgClientToGCJoinGuildResponse&& from) noexcept
    : CMsgClientToGCJoinGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCJoinGuildResponse& operator=(const CMsgClientToGCJoinGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCJoinGuildResponse& operator=(CMsgClientToGCJoinGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCJoinGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCJoinGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinGuildResponse*>(
               &_CMsgClientToGCJoinGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgClientToGCJoinGuildResponse& a, CMsgClientToGCJoinGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCJoinGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCJoinGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCJoinGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCJoinGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCJoinGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCJoinGuildResponse& from) {
    CMsgClientToGCJoinGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCJoinGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCJoinGuildResponse";
  }
  protected:
  explicit CMsgClientToGCJoinGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCJoinGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eGuildFull =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildFull;
  static constexpr EResponse k_eAlreadyMember =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eAlreadyMember;
  static constexpr EResponse k_eGuildLimit =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildLimit;
  static constexpr EResponse k_eGuildRequiresInvite =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildRequiresInvite;
  static constexpr EResponse k_eGuildRankTooLow =
    CMsgClientToGCJoinGuildResponse_EResponse_k_eGuildRankTooLow;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCJoinGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCJoinGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCJoinGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCJoinGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCJoinGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCJoinGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCJoinGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCJoinGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCJoinGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCJoinGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCJoinGuildResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCJoinGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLeaveGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLeaveGuild) */ {
 public:
  inline CMsgClientToGCLeaveGuild() : CMsgClientToGCLeaveGuild(nullptr) {}
  ~CMsgClientToGCLeaveGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCLeaveGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLeaveGuild(const CMsgClientToGCLeaveGuild& from);
  CMsgClientToGCLeaveGuild(CMsgClientToGCLeaveGuild&& from) noexcept
    : CMsgClientToGCLeaveGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLeaveGuild& operator=(const CMsgClientToGCLeaveGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLeaveGuild& operator=(CMsgClientToGCLeaveGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCLeaveGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLeaveGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLeaveGuild*>(
               &_CMsgClientToGCLeaveGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgClientToGCLeaveGuild& a, CMsgClientToGCLeaveGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLeaveGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLeaveGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCLeaveGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCLeaveGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCLeaveGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCLeaveGuild& from) {
    CMsgClientToGCLeaveGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLeaveGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLeaveGuild";
  }
  protected:
  explicit CMsgClientToGCLeaveGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLeaveGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLeaveGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLeaveGuildResponse) */ {
 public:
  inline CMsgClientToGCLeaveGuildResponse() : CMsgClientToGCLeaveGuildResponse(nullptr) {}
  ~CMsgClientToGCLeaveGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCLeaveGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLeaveGuildResponse(const CMsgClientToGCLeaveGuildResponse& from);
  CMsgClientToGCLeaveGuildResponse(CMsgClientToGCLeaveGuildResponse&& from) noexcept
    : CMsgClientToGCLeaveGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLeaveGuildResponse& operator=(const CMsgClientToGCLeaveGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLeaveGuildResponse& operator=(CMsgClientToGCLeaveGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCLeaveGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLeaveGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLeaveGuildResponse*>(
               &_CMsgClientToGCLeaveGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgClientToGCLeaveGuildResponse& a, CMsgClientToGCLeaveGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLeaveGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLeaveGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCLeaveGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCLeaveGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCLeaveGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCLeaveGuildResponse& from) {
    CMsgClientToGCLeaveGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLeaveGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLeaveGuildResponse";
  }
  protected:
  explicit CMsgClientToGCLeaveGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCLeaveGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eLastAdmin =
    CMsgClientToGCLeaveGuildResponse_EResponse_k_eLastAdmin;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCLeaveGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCLeaveGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCLeaveGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCLeaveGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCLeaveGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCLeaveGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCLeaveGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCLeaveGuildResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLeaveGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCKickGuildMember final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCKickGuildMember) */ {
 public:
  inline CMsgClientToGCKickGuildMember() : CMsgClientToGCKickGuildMember(nullptr) {}
  ~CMsgClientToGCKickGuildMember() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCKickGuildMember(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCKickGuildMember(const CMsgClientToGCKickGuildMember& from);
  CMsgClientToGCKickGuildMember(CMsgClientToGCKickGuildMember&& from) noexcept
    : CMsgClientToGCKickGuildMember() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCKickGuildMember& operator=(const CMsgClientToGCKickGuildMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCKickGuildMember& operator=(CMsgClientToGCKickGuildMember&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCKickGuildMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCKickGuildMember* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCKickGuildMember*>(
               &_CMsgClientToGCKickGuildMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgClientToGCKickGuildMember& a, CMsgClientToGCKickGuildMember& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCKickGuildMember* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCKickGuildMember* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCKickGuildMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCKickGuildMember>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCKickGuildMember& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCKickGuildMember& from) {
    CMsgClientToGCKickGuildMember::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCKickGuildMember* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCKickGuildMember";
  }
  protected:
  explicit CMsgClientToGCKickGuildMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCKickGuildMember)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t target_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCKickGuildMemberResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCKickGuildMemberResponse) */ {
 public:
  inline CMsgClientToGCKickGuildMemberResponse() : CMsgClientToGCKickGuildMemberResponse(nullptr) {}
  ~CMsgClientToGCKickGuildMemberResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCKickGuildMemberResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCKickGuildMemberResponse(const CMsgClientToGCKickGuildMemberResponse& from);
  CMsgClientToGCKickGuildMemberResponse(CMsgClientToGCKickGuildMemberResponse&& from) noexcept
    : CMsgClientToGCKickGuildMemberResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCKickGuildMemberResponse& operator=(const CMsgClientToGCKickGuildMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCKickGuildMemberResponse& operator=(CMsgClientToGCKickGuildMemberResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCKickGuildMemberResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCKickGuildMemberResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCKickGuildMemberResponse*>(
               &_CMsgClientToGCKickGuildMemberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgClientToGCKickGuildMemberResponse& a, CMsgClientToGCKickGuildMemberResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCKickGuildMemberResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCKickGuildMemberResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCKickGuildMemberResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCKickGuildMemberResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCKickGuildMemberResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCKickGuildMemberResponse& from) {
    CMsgClientToGCKickGuildMemberResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCKickGuildMemberResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCKickGuildMemberResponse";
  }
  protected:
  explicit CMsgClientToGCKickGuildMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCKickGuildMemberResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eRequesterNotMember =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eRequesterNotMember;
  static constexpr EResponse k_eTargetNotMember =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eTargetNotMember;
  static constexpr EResponse k_eNoPermission =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eNoPermission;
  static constexpr EResponse k_eCantKickSelf =
    CMsgClientToGCKickGuildMemberResponse_EResponse_k_eCantKickSelf;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCKickGuildMemberResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCKickGuildMemberResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCKickGuildMemberResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCKickGuildMemberResponse_EResponse result() const;
  void set_result(::CMsgClientToGCKickGuildMemberResponse_EResponse value);
  private:
  ::CMsgClientToGCKickGuildMemberResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCKickGuildMemberResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCKickGuildMemberResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetGuildMemberRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetGuildMemberRole) */ {
 public:
  inline CMsgClientToGCSetGuildMemberRole() : CMsgClientToGCSetGuildMemberRole(nullptr) {}
  ~CMsgClientToGCSetGuildMemberRole() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildMemberRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetGuildMemberRole(const CMsgClientToGCSetGuildMemberRole& from);
  CMsgClientToGCSetGuildMemberRole(CMsgClientToGCSetGuildMemberRole&& from) noexcept
    : CMsgClientToGCSetGuildMemberRole() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetGuildMemberRole& operator=(const CMsgClientToGCSetGuildMemberRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetGuildMemberRole& operator=(CMsgClientToGCSetGuildMemberRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetGuildMemberRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetGuildMemberRole* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetGuildMemberRole*>(
               &_CMsgClientToGCSetGuildMemberRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgClientToGCSetGuildMemberRole& a, CMsgClientToGCSetGuildMemberRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetGuildMemberRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetGuildMemberRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetGuildMemberRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetGuildMemberRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetGuildMemberRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetGuildMemberRole& from) {
    CMsgClientToGCSetGuildMemberRole::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetGuildMemberRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetGuildMemberRole";
  }
  protected:
  explicit CMsgClientToGCSetGuildMemberRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kTargetRoleIdFieldNumber = 3,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // optional uint32 target_role_id = 3;
  bool has_target_role_id() const;
  private:
  bool _internal_has_target_role_id() const;
  public:
  void clear_target_role_id();
  uint32_t target_role_id() const;
  void set_target_role_id(uint32_t value);
  private:
  uint32_t _internal_target_role_id() const;
  void _internal_set_target_role_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetGuildMemberRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t target_account_id_;
    uint32_t target_role_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetGuildMemberRoleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetGuildMemberRoleResponse) */ {
 public:
  inline CMsgClientToGCSetGuildMemberRoleResponse() : CMsgClientToGCSetGuildMemberRoleResponse(nullptr) {}
  ~CMsgClientToGCSetGuildMemberRoleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildMemberRoleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetGuildMemberRoleResponse(const CMsgClientToGCSetGuildMemberRoleResponse& from);
  CMsgClientToGCSetGuildMemberRoleResponse(CMsgClientToGCSetGuildMemberRoleResponse&& from) noexcept
    : CMsgClientToGCSetGuildMemberRoleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetGuildMemberRoleResponse& operator=(const CMsgClientToGCSetGuildMemberRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetGuildMemberRoleResponse& operator=(CMsgClientToGCSetGuildMemberRoleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetGuildMemberRoleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetGuildMemberRoleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetGuildMemberRoleResponse*>(
               &_CMsgClientToGCSetGuildMemberRoleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgClientToGCSetGuildMemberRoleResponse& a, CMsgClientToGCSetGuildMemberRoleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetGuildMemberRoleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetGuildMemberRoleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetGuildMemberRoleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetGuildMemberRoleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetGuildMemberRoleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetGuildMemberRoleResponse& from) {
    CMsgClientToGCSetGuildMemberRoleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetGuildMemberRoleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetGuildMemberRoleResponse";
  }
  protected:
  explicit CMsgClientToGCSetGuildMemberRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetGuildMemberRoleResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eRequesterNotMember =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eRequesterNotMember;
  static constexpr EResponse k_eTargetNotMember =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eTargetNotMember;
  static constexpr EResponse k_eNoPermission =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eNoPermission;
  static constexpr EResponse k_eInvalidRole =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eInvalidRole;
  static constexpr EResponse k_eAdminViolation =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_k_eAdminViolation;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSetGuildMemberRoleResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSetGuildMemberRoleResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSetGuildMemberRoleResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse value);
  private:
  ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetGuildMemberRoleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCInviteToGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCInviteToGuild) */ {
 public:
  inline CMsgClientToGCInviteToGuild() : CMsgClientToGCInviteToGuild(nullptr) {}
  ~CMsgClientToGCInviteToGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCInviteToGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCInviteToGuild(const CMsgClientToGCInviteToGuild& from);
  CMsgClientToGCInviteToGuild(CMsgClientToGCInviteToGuild&& from) noexcept
    : CMsgClientToGCInviteToGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCInviteToGuild& operator=(const CMsgClientToGCInviteToGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCInviteToGuild& operator=(CMsgClientToGCInviteToGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCInviteToGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCInviteToGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCInviteToGuild*>(
               &_CMsgClientToGCInviteToGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgClientToGCInviteToGuild& a, CMsgClientToGCInviteToGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCInviteToGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCInviteToGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCInviteToGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCInviteToGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCInviteToGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCInviteToGuild& from) {
    CMsgClientToGCInviteToGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCInviteToGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCInviteToGuild";
  }
  protected:
  explicit CMsgClientToGCInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCInviteToGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t target_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCInviteToGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCInviteToGuildResponse) */ {
 public:
  inline CMsgClientToGCInviteToGuildResponse() : CMsgClientToGCInviteToGuildResponse(nullptr) {}
  ~CMsgClientToGCInviteToGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCInviteToGuildResponse(const CMsgClientToGCInviteToGuildResponse& from);
  CMsgClientToGCInviteToGuildResponse(CMsgClientToGCInviteToGuildResponse&& from) noexcept
    : CMsgClientToGCInviteToGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCInviteToGuildResponse& operator=(const CMsgClientToGCInviteToGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCInviteToGuildResponse& operator=(CMsgClientToGCInviteToGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCInviteToGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCInviteToGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCInviteToGuildResponse*>(
               &_CMsgClientToGCInviteToGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgClientToGCInviteToGuildResponse& a, CMsgClientToGCInviteToGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCInviteToGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCInviteToGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCInviteToGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCInviteToGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCInviteToGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCInviteToGuildResponse& from) {
    CMsgClientToGCInviteToGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCInviteToGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCInviteToGuildResponse";
  }
  protected:
  explicit CMsgClientToGCInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCInviteToGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eGuildFull =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eGuildFull;
  static constexpr EResponse k_eRequesterNotMember =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eRequesterNotMember;
  static constexpr EResponse k_eAlreadyAMember =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eAlreadyAMember;
  static constexpr EResponse k_eAlreadyInvited =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eAlreadyInvited;
  static constexpr EResponse k_eNoInvitePermissions =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eNoInvitePermissions;
  static constexpr EResponse k_eTooManyInvites =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eTooManyInvites;
  static constexpr EResponse k_eInvalidUser =
    CMsgClientToGCInviteToGuildResponse_EResponse_k_eInvalidUser;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCInviteToGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCInviteToGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCInviteToGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCInviteToGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCInviteToGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCInviteToGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCInviteToGuildResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCInviteToGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDeclineInviteToGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDeclineInviteToGuild) */ {
 public:
  inline CMsgClientToGCDeclineInviteToGuild() : CMsgClientToGCDeclineInviteToGuild(nullptr) {}
  ~CMsgClientToGCDeclineInviteToGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDeclineInviteToGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDeclineInviteToGuild(const CMsgClientToGCDeclineInviteToGuild& from);
  CMsgClientToGCDeclineInviteToGuild(CMsgClientToGCDeclineInviteToGuild&& from) noexcept
    : CMsgClientToGCDeclineInviteToGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDeclineInviteToGuild& operator=(const CMsgClientToGCDeclineInviteToGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDeclineInviteToGuild& operator=(CMsgClientToGCDeclineInviteToGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDeclineInviteToGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDeclineInviteToGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDeclineInviteToGuild*>(
               &_CMsgClientToGCDeclineInviteToGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgClientToGCDeclineInviteToGuild& a, CMsgClientToGCDeclineInviteToGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDeclineInviteToGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDeclineInviteToGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDeclineInviteToGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDeclineInviteToGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDeclineInviteToGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDeclineInviteToGuild& from) {
    CMsgClientToGCDeclineInviteToGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDeclineInviteToGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDeclineInviteToGuild";
  }
  protected:
  explicit CMsgClientToGCDeclineInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDeclineInviteToGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDeclineInviteToGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDeclineInviteToGuildResponse) */ {
 public:
  inline CMsgClientToGCDeclineInviteToGuildResponse() : CMsgClientToGCDeclineInviteToGuildResponse(nullptr) {}
  ~CMsgClientToGCDeclineInviteToGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDeclineInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDeclineInviteToGuildResponse(const CMsgClientToGCDeclineInviteToGuildResponse& from);
  CMsgClientToGCDeclineInviteToGuildResponse(CMsgClientToGCDeclineInviteToGuildResponse&& from) noexcept
    : CMsgClientToGCDeclineInviteToGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDeclineInviteToGuildResponse& operator=(const CMsgClientToGCDeclineInviteToGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDeclineInviteToGuildResponse& operator=(CMsgClientToGCDeclineInviteToGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDeclineInviteToGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDeclineInviteToGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDeclineInviteToGuildResponse*>(
               &_CMsgClientToGCDeclineInviteToGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgClientToGCDeclineInviteToGuildResponse& a, CMsgClientToGCDeclineInviteToGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDeclineInviteToGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDeclineInviteToGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDeclineInviteToGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDeclineInviteToGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDeclineInviteToGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDeclineInviteToGuildResponse& from) {
    CMsgClientToGCDeclineInviteToGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDeclineInviteToGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDeclineInviteToGuildResponse";
  }
  protected:
  explicit CMsgClientToGCDeclineInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCDeclineInviteToGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNoInviteFound =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_k_eNoInviteFound;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCDeclineInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCDeclineInviteToGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCDeclineInviteToGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDeclineInviteToGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAcceptInviteToGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAcceptInviteToGuild) */ {
 public:
  inline CMsgClientToGCAcceptInviteToGuild() : CMsgClientToGCAcceptInviteToGuild(nullptr) {}
  ~CMsgClientToGCAcceptInviteToGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAcceptInviteToGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAcceptInviteToGuild(const CMsgClientToGCAcceptInviteToGuild& from);
  CMsgClientToGCAcceptInviteToGuild(CMsgClientToGCAcceptInviteToGuild&& from) noexcept
    : CMsgClientToGCAcceptInviteToGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAcceptInviteToGuild& operator=(const CMsgClientToGCAcceptInviteToGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAcceptInviteToGuild& operator=(CMsgClientToGCAcceptInviteToGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAcceptInviteToGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAcceptInviteToGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAcceptInviteToGuild*>(
               &_CMsgClientToGCAcceptInviteToGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgClientToGCAcceptInviteToGuild& a, CMsgClientToGCAcceptInviteToGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAcceptInviteToGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAcceptInviteToGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAcceptInviteToGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAcceptInviteToGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAcceptInviteToGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAcceptInviteToGuild& from) {
    CMsgClientToGCAcceptInviteToGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAcceptInviteToGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAcceptInviteToGuild";
  }
  protected:
  explicit CMsgClientToGCAcceptInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAcceptInviteToGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAcceptInviteToGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAcceptInviteToGuildResponse) */ {
 public:
  inline CMsgClientToGCAcceptInviteToGuildResponse() : CMsgClientToGCAcceptInviteToGuildResponse(nullptr) {}
  ~CMsgClientToGCAcceptInviteToGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAcceptInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAcceptInviteToGuildResponse(const CMsgClientToGCAcceptInviteToGuildResponse& from);
  CMsgClientToGCAcceptInviteToGuildResponse(CMsgClientToGCAcceptInviteToGuildResponse&& from) noexcept
    : CMsgClientToGCAcceptInviteToGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAcceptInviteToGuildResponse& operator=(const CMsgClientToGCAcceptInviteToGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAcceptInviteToGuildResponse& operator=(CMsgClientToGCAcceptInviteToGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAcceptInviteToGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAcceptInviteToGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAcceptInviteToGuildResponse*>(
               &_CMsgClientToGCAcceptInviteToGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgClientToGCAcceptInviteToGuildResponse& a, CMsgClientToGCAcceptInviteToGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAcceptInviteToGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAcceptInviteToGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAcceptInviteToGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAcceptInviteToGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAcceptInviteToGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAcceptInviteToGuildResponse& from) {
    CMsgClientToGCAcceptInviteToGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAcceptInviteToGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAcceptInviteToGuildResponse";
  }
  protected:
  explicit CMsgClientToGCAcceptInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCAcceptInviteToGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNoInviteFound =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eNoInviteFound;
  static constexpr EResponse k_eGuildFull =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eGuildFull;
  static constexpr EResponse k_eGuildLimit =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eGuildLimit;
  static constexpr EResponse k_eInvalidInviter =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eInvalidInviter;
  static constexpr EResponse k_eAlreadyInGuild =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_k_eAlreadyInGuild;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCAcceptInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCAcceptInviteToGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCAcceptInviteToGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAcceptInviteToGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCancelInviteToGuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCancelInviteToGuild) */ {
 public:
  inline CMsgClientToGCCancelInviteToGuild() : CMsgClientToGCCancelInviteToGuild(nullptr) {}
  ~CMsgClientToGCCancelInviteToGuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCancelInviteToGuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCancelInviteToGuild(const CMsgClientToGCCancelInviteToGuild& from);
  CMsgClientToGCCancelInviteToGuild(CMsgClientToGCCancelInviteToGuild&& from) noexcept
    : CMsgClientToGCCancelInviteToGuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCancelInviteToGuild& operator=(const CMsgClientToGCCancelInviteToGuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCancelInviteToGuild& operator=(CMsgClientToGCCancelInviteToGuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCancelInviteToGuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCancelInviteToGuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCancelInviteToGuild*>(
               &_CMsgClientToGCCancelInviteToGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgClientToGCCancelInviteToGuild& a, CMsgClientToGCCancelInviteToGuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCancelInviteToGuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCancelInviteToGuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCancelInviteToGuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCancelInviteToGuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCancelInviteToGuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCancelInviteToGuild& from) {
    CMsgClientToGCCancelInviteToGuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCancelInviteToGuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCancelInviteToGuild";
  }
  protected:
  explicit CMsgClientToGCCancelInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCancelInviteToGuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t target_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCancelInviteToGuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCancelInviteToGuildResponse) */ {
 public:
  inline CMsgClientToGCCancelInviteToGuildResponse() : CMsgClientToGCCancelInviteToGuildResponse(nullptr) {}
  ~CMsgClientToGCCancelInviteToGuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCancelInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCancelInviteToGuildResponse(const CMsgClientToGCCancelInviteToGuildResponse& from);
  CMsgClientToGCCancelInviteToGuildResponse(CMsgClientToGCCancelInviteToGuildResponse&& from) noexcept
    : CMsgClientToGCCancelInviteToGuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCancelInviteToGuildResponse& operator=(const CMsgClientToGCCancelInviteToGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCancelInviteToGuildResponse& operator=(CMsgClientToGCCancelInviteToGuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCancelInviteToGuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCancelInviteToGuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCancelInviteToGuildResponse*>(
               &_CMsgClientToGCCancelInviteToGuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgClientToGCCancelInviteToGuildResponse& a, CMsgClientToGCCancelInviteToGuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCancelInviteToGuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCancelInviteToGuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCancelInviteToGuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCancelInviteToGuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCancelInviteToGuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCancelInviteToGuildResponse& from) {
    CMsgClientToGCCancelInviteToGuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCancelInviteToGuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCancelInviteToGuildResponse";
  }
  protected:
  explicit CMsgClientToGCCancelInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCancelInviteToGuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNoInviteFound =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eNoInviteFound;
  static constexpr EResponse k_eNoPermissions =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_k_eNoPermissions;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCCancelInviteToGuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCCancelInviteToGuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCCancelInviteToGuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCCancelInviteToGuildResponse_EResponse result() const;
  void set_result(::CMsgClientToGCCancelInviteToGuildResponse_EResponse value);
  private:
  ::CMsgClientToGCCancelInviteToGuildResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCCancelInviteToGuildResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCancelInviteToGuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddGuildRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAddGuildRole) */ {
 public:
  inline CMsgClientToGCAddGuildRole() : CMsgClientToGCAddGuildRole(nullptr) {}
  ~CMsgClientToGCAddGuildRole() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAddGuildRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAddGuildRole(const CMsgClientToGCAddGuildRole& from);
  CMsgClientToGCAddGuildRole(CMsgClientToGCAddGuildRole&& from) noexcept
    : CMsgClientToGCAddGuildRole() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAddGuildRole& operator=(const CMsgClientToGCAddGuildRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAddGuildRole& operator=(CMsgClientToGCAddGuildRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAddGuildRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAddGuildRole* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAddGuildRole*>(
               &_CMsgClientToGCAddGuildRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgClientToGCAddGuildRole& a, CMsgClientToGCAddGuildRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAddGuildRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAddGuildRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAddGuildRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAddGuildRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAddGuildRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAddGuildRole& from) {
    CMsgClientToGCAddGuildRole::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAddGuildRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAddGuildRole";
  }
  protected:
  explicit CMsgClientToGCAddGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleNameFieldNumber = 2,
    kGuildIdFieldNumber = 1,
    kRoleFlagsFieldNumber = 3,
  };
  // optional string role_name = 2;
  bool has_role_name() const;
  private:
  bool _internal_has_role_name() const;
  public:
  void clear_role_name();
  const std::string& role_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_role_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_role_name();
  PROTOBUF_NODISCARD std::string* release_role_name();
  void set_allocated_role_name(std::string* role_name);
  private:
  const std::string& _internal_role_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_role_name(const std::string& value);
  std::string* _internal_mutable_role_name();
  public:

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 role_flags = 3;
  bool has_role_flags() const;
  private:
  bool _internal_has_role_flags() const;
  public:
  void clear_role_flags();
  uint32_t role_flags() const;
  void set_role_flags(uint32_t value);
  private:
  uint32_t _internal_role_flags() const;
  void _internal_set_role_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAddGuildRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr role_name_;
    uint32_t guild_id_;
    uint32_t role_flags_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddGuildRoleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAddGuildRoleResponse) */ {
 public:
  inline CMsgClientToGCAddGuildRoleResponse() : CMsgClientToGCAddGuildRoleResponse(nullptr) {}
  ~CMsgClientToGCAddGuildRoleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAddGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAddGuildRoleResponse(const CMsgClientToGCAddGuildRoleResponse& from);
  CMsgClientToGCAddGuildRoleResponse(CMsgClientToGCAddGuildRoleResponse&& from) noexcept
    : CMsgClientToGCAddGuildRoleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAddGuildRoleResponse& operator=(const CMsgClientToGCAddGuildRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAddGuildRoleResponse& operator=(CMsgClientToGCAddGuildRoleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAddGuildRoleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAddGuildRoleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAddGuildRoleResponse*>(
               &_CMsgClientToGCAddGuildRoleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgClientToGCAddGuildRoleResponse& a, CMsgClientToGCAddGuildRoleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAddGuildRoleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAddGuildRoleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAddGuildRoleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAddGuildRoleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAddGuildRoleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAddGuildRoleResponse& from) {
    CMsgClientToGCAddGuildRoleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAddGuildRoleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAddGuildRoleResponse";
  }
  protected:
  explicit CMsgClientToGCAddGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCAddGuildRoleResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNameAlreadyUsed =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eNameAlreadyUsed;
  static constexpr EResponse k_eNoPermissions =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eNoPermissions;
  static constexpr EResponse k_eInvalidFlags =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInvalidFlags;
  static constexpr EResponse k_eInvalidName =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eInvalidName;
  static constexpr EResponse k_eAdminViolation =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eAdminViolation;
  static constexpr EResponse k_eTooManyRoles =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eTooManyRoles;
  static constexpr EResponse k_eBlocked =
    CMsgClientToGCAddGuildRoleResponse_EResponse_k_eBlocked;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCAddGuildRoleResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCAddGuildRoleResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCAddGuildRoleResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCAddGuildRoleResponse_EResponse result() const;
  void set_result(::CMsgClientToGCAddGuildRoleResponse_EResponse value);
  private:
  ::CMsgClientToGCAddGuildRoleResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCAddGuildRoleResponse_EResponse value);
  public:

  // optional uint32 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint32_t role_id() const;
  void set_role_id(uint32_t value);
  private:
  uint32_t _internal_role_id() const;
  void _internal_set_role_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAddGuildRoleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    uint32_t role_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCModifyGuildRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCModifyGuildRole) */ {
 public:
  inline CMsgClientToGCModifyGuildRole() : CMsgClientToGCModifyGuildRole(nullptr) {}
  ~CMsgClientToGCModifyGuildRole() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCModifyGuildRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCModifyGuildRole(const CMsgClientToGCModifyGuildRole& from);
  CMsgClientToGCModifyGuildRole(CMsgClientToGCModifyGuildRole&& from) noexcept
    : CMsgClientToGCModifyGuildRole() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCModifyGuildRole& operator=(const CMsgClientToGCModifyGuildRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCModifyGuildRole& operator=(CMsgClientToGCModifyGuildRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCModifyGuildRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCModifyGuildRole* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCModifyGuildRole*>(
               &_CMsgClientToGCModifyGuildRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgClientToGCModifyGuildRole& a, CMsgClientToGCModifyGuildRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCModifyGuildRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCModifyGuildRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCModifyGuildRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCModifyGuildRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCModifyGuildRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCModifyGuildRole& from) {
    CMsgClientToGCModifyGuildRole::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCModifyGuildRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCModifyGuildRole";
  }
  protected:
  explicit CMsgClientToGCModifyGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleNameFieldNumber = 3,
    kGuildIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kRoleFlagsFieldNumber = 4,
  };
  // optional string role_name = 3;
  bool has_role_name() const;
  private:
  bool _internal_has_role_name() const;
  public:
  void clear_role_name();
  const std::string& role_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_role_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_role_name();
  PROTOBUF_NODISCARD std::string* release_role_name();
  void set_allocated_role_name(std::string* role_name);
  private:
  const std::string& _internal_role_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_role_name(const std::string& value);
  std::string* _internal_mutable_role_name();
  public:

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint32_t role_id() const;
  void set_role_id(uint32_t value);
  private:
  uint32_t _internal_role_id() const;
  void _internal_set_role_id(uint32_t value);
  public:

  // optional uint32 role_flags = 4;
  bool has_role_flags() const;
  private:
  bool _internal_has_role_flags() const;
  public:
  void clear_role_flags();
  uint32_t role_flags() const;
  void set_role_flags(uint32_t value);
  private:
  uint32_t _internal_role_flags() const;
  void _internal_set_role_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCModifyGuildRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr role_name_;
    uint32_t guild_id_;
    uint32_t role_id_;
    uint32_t role_flags_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCModifyGuildRoleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCModifyGuildRoleResponse) */ {
 public:
  inline CMsgClientToGCModifyGuildRoleResponse() : CMsgClientToGCModifyGuildRoleResponse(nullptr) {}
  ~CMsgClientToGCModifyGuildRoleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCModifyGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCModifyGuildRoleResponse(const CMsgClientToGCModifyGuildRoleResponse& from);
  CMsgClientToGCModifyGuildRoleResponse(CMsgClientToGCModifyGuildRoleResponse&& from) noexcept
    : CMsgClientToGCModifyGuildRoleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCModifyGuildRoleResponse& operator=(const CMsgClientToGCModifyGuildRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCModifyGuildRoleResponse& operator=(CMsgClientToGCModifyGuildRoleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCModifyGuildRoleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCModifyGuildRoleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCModifyGuildRoleResponse*>(
               &_CMsgClientToGCModifyGuildRoleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgClientToGCModifyGuildRoleResponse& a, CMsgClientToGCModifyGuildRoleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCModifyGuildRoleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCModifyGuildRoleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCModifyGuildRoleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCModifyGuildRoleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCModifyGuildRoleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCModifyGuildRoleResponse& from) {
    CMsgClientToGCModifyGuildRoleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCModifyGuildRoleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCModifyGuildRoleResponse";
  }
  protected:
  explicit CMsgClientToGCModifyGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCModifyGuildRoleResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eInvalidRole =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidRole;
  static constexpr EResponse k_eNameAlreadyUsed =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eNameAlreadyUsed;
  static constexpr EResponse k_eInvalidFlags =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidFlags;
  static constexpr EResponse k_eInvalidName =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eInvalidName;
  static constexpr EResponse k_eNoPermissions =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eNoPermissions;
  static constexpr EResponse k_eAdminViolation =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eAdminViolation;
  static constexpr EResponse k_eBlocked =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_k_eBlocked;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCModifyGuildRoleResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCModifyGuildRoleResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCModifyGuildRoleResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCModifyGuildRoleResponse_EResponse result() const;
  void set_result(::CMsgClientToGCModifyGuildRoleResponse_EResponse value);
  private:
  ::CMsgClientToGCModifyGuildRoleResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCModifyGuildRoleResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCModifyGuildRoleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRemoveGuildRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRemoveGuildRole) */ {
 public:
  inline CMsgClientToGCRemoveGuildRole() : CMsgClientToGCRemoveGuildRole(nullptr) {}
  ~CMsgClientToGCRemoveGuildRole() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRemoveGuildRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRemoveGuildRole(const CMsgClientToGCRemoveGuildRole& from);
  CMsgClientToGCRemoveGuildRole(CMsgClientToGCRemoveGuildRole&& from) noexcept
    : CMsgClientToGCRemoveGuildRole() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRemoveGuildRole& operator=(const CMsgClientToGCRemoveGuildRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRemoveGuildRole& operator=(CMsgClientToGCRemoveGuildRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRemoveGuildRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRemoveGuildRole* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRemoveGuildRole*>(
               &_CMsgClientToGCRemoveGuildRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgClientToGCRemoveGuildRole& a, CMsgClientToGCRemoveGuildRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRemoveGuildRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRemoveGuildRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRemoveGuildRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRemoveGuildRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRemoveGuildRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRemoveGuildRole& from) {
    CMsgClientToGCRemoveGuildRole::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRemoveGuildRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRemoveGuildRole";
  }
  protected:
  explicit CMsgClientToGCRemoveGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint32_t role_id() const;
  void set_role_id(uint32_t value);
  private:
  uint32_t _internal_role_id() const;
  void _internal_set_role_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRemoveGuildRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t role_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRemoveGuildRoleResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRemoveGuildRoleResponse) */ {
 public:
  inline CMsgClientToGCRemoveGuildRoleResponse() : CMsgClientToGCRemoveGuildRoleResponse(nullptr) {}
  ~CMsgClientToGCRemoveGuildRoleResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRemoveGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRemoveGuildRoleResponse(const CMsgClientToGCRemoveGuildRoleResponse& from);
  CMsgClientToGCRemoveGuildRoleResponse(CMsgClientToGCRemoveGuildRoleResponse&& from) noexcept
    : CMsgClientToGCRemoveGuildRoleResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRemoveGuildRoleResponse& operator=(const CMsgClientToGCRemoveGuildRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRemoveGuildRoleResponse& operator=(CMsgClientToGCRemoveGuildRoleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRemoveGuildRoleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRemoveGuildRoleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRemoveGuildRoleResponse*>(
               &_CMsgClientToGCRemoveGuildRoleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgClientToGCRemoveGuildRoleResponse& a, CMsgClientToGCRemoveGuildRoleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRemoveGuildRoleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRemoveGuildRoleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRemoveGuildRoleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRemoveGuildRoleResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRemoveGuildRoleResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRemoveGuildRoleResponse& from) {
    CMsgClientToGCRemoveGuildRoleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRemoveGuildRoleResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRemoveGuildRoleResponse";
  }
  protected:
  explicit CMsgClientToGCRemoveGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRemoveGuildRoleResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eInvalidRole =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eInvalidRole;
  static constexpr EResponse k_eRoleNotEmpty =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eRoleNotEmpty;
  static constexpr EResponse k_eNoPermissions =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eNoPermissions;
  static constexpr EResponse k_eAdminViolation =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eAdminViolation;
  static constexpr EResponse k_eCantRemoveDefaultRole =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_k_eCantRemoveDefaultRole;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRemoveGuildRoleResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRemoveGuildRoleResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRemoveGuildRoleResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRemoveGuildRoleResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRemoveGuildRoleResponse_EResponse value);
  private:
  ::CMsgClientToGCRemoveGuildRoleResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRemoveGuildRoleResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRemoveGuildRoleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetGuildRoleOrder final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetGuildRoleOrder) */ {
 public:
  inline CMsgClientToGCSetGuildRoleOrder() : CMsgClientToGCSetGuildRoleOrder(nullptr) {}
  ~CMsgClientToGCSetGuildRoleOrder() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildRoleOrder(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetGuildRoleOrder(const CMsgClientToGCSetGuildRoleOrder& from);
  CMsgClientToGCSetGuildRoleOrder(CMsgClientToGCSetGuildRoleOrder&& from) noexcept
    : CMsgClientToGCSetGuildRoleOrder() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetGuildRoleOrder& operator=(const CMsgClientToGCSetGuildRoleOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetGuildRoleOrder& operator=(CMsgClientToGCSetGuildRoleOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetGuildRoleOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetGuildRoleOrder* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetGuildRoleOrder*>(
               &_CMsgClientToGCSetGuildRoleOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgClientToGCSetGuildRoleOrder& a, CMsgClientToGCSetGuildRoleOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetGuildRoleOrder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetGuildRoleOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetGuildRoleOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetGuildRoleOrder>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetGuildRoleOrder& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetGuildRoleOrder& from) {
    CMsgClientToGCSetGuildRoleOrder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetGuildRoleOrder* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetGuildRoleOrder";
  }
  protected:
  explicit CMsgClientToGCSetGuildRoleOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestedRoleIdsFieldNumber = 2,
    kPreviousRoleIdsFieldNumber = 3,
    kGuildIdFieldNumber = 1,
  };
  // repeated uint32 requested_role_ids = 2;
  int requested_role_ids_size() const;
  private:
  int _internal_requested_role_ids_size() const;
  public:
  void clear_requested_role_ids();
  private:
  uint32_t _internal_requested_role_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_requested_role_ids() const;
  void _internal_add_requested_role_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_requested_role_ids();
  public:
  uint32_t requested_role_ids(int index) const;
  void set_requested_role_ids(int index, uint32_t value);
  void add_requested_role_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      requested_role_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_requested_role_ids();

  // repeated uint32 previous_role_ids = 3;
  int previous_role_ids_size() const;
  private:
  int _internal_previous_role_ids_size() const;
  public:
  void clear_previous_role_ids();
  private:
  uint32_t _internal_previous_role_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_previous_role_ids() const;
  void _internal_add_previous_role_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_previous_role_ids();
  public:
  uint32_t previous_role_ids(int index) const;
  void set_previous_role_ids(int index, uint32_t value);
  void add_previous_role_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      previous_role_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_previous_role_ids();

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetGuildRoleOrder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > requested_role_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > previous_role_ids_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetGuildRoleOrderResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetGuildRoleOrderResponse) */ {
 public:
  inline CMsgClientToGCSetGuildRoleOrderResponse() : CMsgClientToGCSetGuildRoleOrderResponse(nullptr) {}
  ~CMsgClientToGCSetGuildRoleOrderResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetGuildRoleOrderResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetGuildRoleOrderResponse(const CMsgClientToGCSetGuildRoleOrderResponse& from);
  CMsgClientToGCSetGuildRoleOrderResponse(CMsgClientToGCSetGuildRoleOrderResponse&& from) noexcept
    : CMsgClientToGCSetGuildRoleOrderResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetGuildRoleOrderResponse& operator=(const CMsgClientToGCSetGuildRoleOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetGuildRoleOrderResponse& operator=(CMsgClientToGCSetGuildRoleOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetGuildRoleOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetGuildRoleOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetGuildRoleOrderResponse*>(
               &_CMsgClientToGCSetGuildRoleOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgClientToGCSetGuildRoleOrderResponse& a, CMsgClientToGCSetGuildRoleOrderResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetGuildRoleOrderResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetGuildRoleOrderResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetGuildRoleOrderResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetGuildRoleOrderResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetGuildRoleOrderResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetGuildRoleOrderResponse& from) {
    CMsgClientToGCSetGuildRoleOrderResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetGuildRoleOrderResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetGuildRoleOrderResponse";
  }
  protected:
  explicit CMsgClientToGCSetGuildRoleOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetGuildRoleOrderResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eInvalidRole =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInvalidRole;
  static constexpr EResponse k_eInvalidOrder =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eInvalidOrder;
  static constexpr EResponse k_eNoPermissions =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eNoPermissions;
  static constexpr EResponse k_eAdminViolation =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_k_eAdminViolation;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSetGuildRoleOrderResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSetGuildRoleOrderResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSetGuildRoleOrderResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kConfirmedRoleIdsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated uint32 confirmed_role_ids = 2;
  int confirmed_role_ids_size() const;
  private:
  int _internal_confirmed_role_ids_size() const;
  public:
  void clear_confirmed_role_ids();
  private:
  uint32_t _internal_confirmed_role_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_confirmed_role_ids() const;
  void _internal_add_confirmed_role_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_confirmed_role_ids();
  public:
  uint32_t confirmed_role_ids(int index) const;
  void set_confirmed_role_ids(int index, uint32_t value);
  void add_confirmed_role_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      confirmed_role_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_confirmed_role_ids();

  // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse value);
  private:
  ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetGuildRoleOrderResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > confirmed_role_ids_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGuildFeedRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGuildFeedRequest) */ {
 public:
  inline CMsgClientToGCGuildFeedRequest() : CMsgClientToGCGuildFeedRequest(nullptr) {}
  ~CMsgClientToGCGuildFeedRequest() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGuildFeedRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGuildFeedRequest(const CMsgClientToGCGuildFeedRequest& from);
  CMsgClientToGCGuildFeedRequest(CMsgClientToGCGuildFeedRequest&& from) noexcept
    : CMsgClientToGCGuildFeedRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGuildFeedRequest& operator=(const CMsgClientToGCGuildFeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGuildFeedRequest& operator=(CMsgClientToGCGuildFeedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGuildFeedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGuildFeedRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGuildFeedRequest*>(
               &_CMsgClientToGCGuildFeedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CMsgClientToGCGuildFeedRequest& a, CMsgClientToGCGuildFeedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGuildFeedRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGuildFeedRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGuildFeedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGuildFeedRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGuildFeedRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGuildFeedRequest& from) {
    CMsgClientToGCGuildFeedRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGuildFeedRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGuildFeedRequest";
  }
  protected:
  explicit CMsgClientToGCGuildFeedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLastSeenIdFieldNumber = 2,
    kGuildIdFieldNumber = 1,
  };
  // optional uint64 last_seen_id = 2;
  bool has_last_seen_id() const;
  private:
  bool _internal_has_last_seen_id() const;
  public:
  void clear_last_seen_id();
  uint64_t last_seen_id() const;
  void set_last_seen_id(uint64_t value);
  private:
  uint64_t _internal_last_seen_id() const;
  void _internal_set_last_seen_id(uint64_t value);
  public:

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGuildFeedRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t last_seen_id_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildFeedResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildFeedResponse) */ {
 public:
  inline CMsgClientToGCRequestGuildFeedResponse() : CMsgClientToGCRequestGuildFeedResponse(nullptr) {}
  ~CMsgClientToGCRequestGuildFeedResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestGuildFeedResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildFeedResponse(const CMsgClientToGCRequestGuildFeedResponse& from);
  CMsgClientToGCRequestGuildFeedResponse(CMsgClientToGCRequestGuildFeedResponse&& from) noexcept
    : CMsgClientToGCRequestGuildFeedResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildFeedResponse& operator=(const CMsgClientToGCRequestGuildFeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildFeedResponse& operator=(CMsgClientToGCRequestGuildFeedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestGuildFeedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildFeedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildFeedResponse*>(
               &_CMsgClientToGCRequestGuildFeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgClientToGCRequestGuildFeedResponse& a, CMsgClientToGCRequestGuildFeedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildFeedResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildFeedResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestGuildFeedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildFeedResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestGuildFeedResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestGuildFeedResponse& from) {
    CMsgClientToGCRequestGuildFeedResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestGuildFeedResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildFeedResponse";
  }
  protected:
  explicit CMsgClientToGCRequestGuildFeedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestGuildFeedResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNoPermissions =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_k_eNoPermissions;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestGuildFeedResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestGuildFeedResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestGuildFeedResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kFeedEventsFieldNumber = 3,
    kResultFieldNumber = 1,
    kGuildIdFieldNumber = 2,
  };
  // repeated .CMsgGuildFeedEvent feed_events = 3;
  int feed_events_size() const;
  private:
  int _internal_feed_events_size() const;
  public:
  void clear_feed_events();
  ::CMsgGuildFeedEvent* mutable_feed_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildFeedEvent >*
      mutable_feed_events();
  private:
  const ::CMsgGuildFeedEvent& _internal_feed_events(int index) const;
  ::CMsgGuildFeedEvent* _internal_add_feed_events();
  public:
  const ::CMsgGuildFeedEvent& feed_events(int index) const;
  ::CMsgGuildFeedEvent* add_feed_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildFeedEvent >&
      feed_events() const;

  // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestGuildFeedResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestGuildFeedResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestGuildFeedResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestGuildFeedResponse_EResponse value);
  public:

  // optional uint32 guild_id = 2;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildFeedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildFeedEvent > feed_events_;
    int result_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientGuildFeedUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientGuildFeedUpdated) */ {
 public:
  inline CMsgGCToClientGuildFeedUpdated() : CMsgGCToClientGuildFeedUpdated(nullptr) {}
  ~CMsgGCToClientGuildFeedUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientGuildFeedUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientGuildFeedUpdated(const CMsgGCToClientGuildFeedUpdated& from);
  CMsgGCToClientGuildFeedUpdated(CMsgGCToClientGuildFeedUpdated&& from) noexcept
    : CMsgGCToClientGuildFeedUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientGuildFeedUpdated& operator=(const CMsgGCToClientGuildFeedUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientGuildFeedUpdated& operator=(CMsgGCToClientGuildFeedUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientGuildFeedUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientGuildFeedUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientGuildFeedUpdated*>(
               &_CMsgGCToClientGuildFeedUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgGCToClientGuildFeedUpdated& a, CMsgGCToClientGuildFeedUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientGuildFeedUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientGuildFeedUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientGuildFeedUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientGuildFeedUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientGuildFeedUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientGuildFeedUpdated& from) {
    CMsgGCToClientGuildFeedUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientGuildFeedUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientGuildFeedUpdated";
  }
  protected:
  explicit CMsgGCToClientGuildFeedUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientGuildFeedUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddPlayerToGuildChat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAddPlayerToGuildChat) */ {
 public:
  inline CMsgClientToGCAddPlayerToGuildChat() : CMsgClientToGCAddPlayerToGuildChat(nullptr) {}
  ~CMsgClientToGCAddPlayerToGuildChat() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAddPlayerToGuildChat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAddPlayerToGuildChat(const CMsgClientToGCAddPlayerToGuildChat& from);
  CMsgClientToGCAddPlayerToGuildChat(CMsgClientToGCAddPlayerToGuildChat&& from) noexcept
    : CMsgClientToGCAddPlayerToGuildChat() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAddPlayerToGuildChat& operator=(const CMsgClientToGCAddPlayerToGuildChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAddPlayerToGuildChat& operator=(CMsgClientToGCAddPlayerToGuildChat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAddPlayerToGuildChat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAddPlayerToGuildChat* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAddPlayerToGuildChat*>(
               &_CMsgClientToGCAddPlayerToGuildChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgClientToGCAddPlayerToGuildChat& a, CMsgClientToGCAddPlayerToGuildChat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAddPlayerToGuildChat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAddPlayerToGuildChat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAddPlayerToGuildChat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAddPlayerToGuildChat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAddPlayerToGuildChat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAddPlayerToGuildChat& from) {
    CMsgClientToGCAddPlayerToGuildChat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAddPlayerToGuildChat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAddPlayerToGuildChat";
  }
  protected:
  explicit CMsgClientToGCAddPlayerToGuildChat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAddPlayerToGuildChat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddPlayerToGuildChatResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAddPlayerToGuildChatResponse) */ {
 public:
  inline CMsgClientToGCAddPlayerToGuildChatResponse() : CMsgClientToGCAddPlayerToGuildChatResponse(nullptr) {}
  ~CMsgClientToGCAddPlayerToGuildChatResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCAddPlayerToGuildChatResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAddPlayerToGuildChatResponse(const CMsgClientToGCAddPlayerToGuildChatResponse& from);
  CMsgClientToGCAddPlayerToGuildChatResponse(CMsgClientToGCAddPlayerToGuildChatResponse&& from) noexcept
    : CMsgClientToGCAddPlayerToGuildChatResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAddPlayerToGuildChatResponse& operator=(const CMsgClientToGCAddPlayerToGuildChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAddPlayerToGuildChatResponse& operator=(CMsgClientToGCAddPlayerToGuildChatResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCAddPlayerToGuildChatResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAddPlayerToGuildChatResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAddPlayerToGuildChatResponse*>(
               &_CMsgClientToGCAddPlayerToGuildChatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgClientToGCAddPlayerToGuildChatResponse& a, CMsgClientToGCAddPlayerToGuildChatResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAddPlayerToGuildChatResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAddPlayerToGuildChatResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCAddPlayerToGuildChatResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCAddPlayerToGuildChatResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCAddPlayerToGuildChatResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCAddPlayerToGuildChatResponse& from) {
    CMsgClientToGCAddPlayerToGuildChatResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAddPlayerToGuildChatResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAddPlayerToGuildChatResponse";
  }
  protected:
  explicit CMsgClientToGCAddPlayerToGuildChatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCAddPlayerToGuildChatResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eSteamChatNotEnabled =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_k_eSteamChatNotEnabled;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse result() const;
  void set_result(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse value);
  private:
  ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAddPlayerToGuildChatResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgFindGuildByTagResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFindGuildByTagResponse) */ {
 public:
  inline CMsgFindGuildByTagResponse() : CMsgFindGuildByTagResponse(nullptr) {}
  ~CMsgFindGuildByTagResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgFindGuildByTagResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFindGuildByTagResponse(const CMsgFindGuildByTagResponse& from);
  CMsgFindGuildByTagResponse(CMsgFindGuildByTagResponse&& from) noexcept
    : CMsgFindGuildByTagResponse() {
    *this = ::std::move(from);
  }

  inline CMsgFindGuildByTagResponse& operator=(const CMsgFindGuildByTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFindGuildByTagResponse& operator=(CMsgFindGuildByTagResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgFindGuildByTagResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFindGuildByTagResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgFindGuildByTagResponse*>(
               &_CMsgFindGuildByTagResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgFindGuildByTagResponse& a, CMsgFindGuildByTagResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFindGuildByTagResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFindGuildByTagResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgFindGuildByTagResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgFindGuildByTagResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgFindGuildByTagResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgFindGuildByTagResponse& from) {
    CMsgFindGuildByTagResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFindGuildByTagResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFindGuildByTagResponse";
  }
  protected:
  explicit CMsgFindGuildByTagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgFindGuildByTagResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgFindGuildByTagResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgFindGuildByTagResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgFindGuildByTagResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgFindGuildByTagResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgFindGuildByTagResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidTag =
    CMsgFindGuildByTagResponse_EResponse_k_eInvalidTag;
  static constexpr EResponse k_eGuildNotFound =
    CMsgFindGuildByTagResponse_EResponse_k_eGuildNotFound;
  static inline bool EResponse_IsValid(int value) {
    return CMsgFindGuildByTagResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgFindGuildByTagResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgFindGuildByTagResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgFindGuildByTagResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgFindGuildByTagResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgFindGuildByTagResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgFindGuildByTagResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGuildSummaryFieldNumber = 3,
    kResultFieldNumber = 1,
    kGuildIdFieldNumber = 2,
  };
  // optional .CMsgGuildSummary guild_summary = 3;
  bool has_guild_summary() const;
  private:
  bool _internal_has_guild_summary() const;
  public:
  void clear_guild_summary();
  const ::CMsgGuildSummary& guild_summary() const;
  PROTOBUF_NODISCARD ::CMsgGuildSummary* release_guild_summary();
  ::CMsgGuildSummary* mutable_guild_summary();
  void set_allocated_guild_summary(::CMsgGuildSummary* guild_summary);
  private:
  const ::CMsgGuildSummary& _internal_guild_summary() const;
  ::CMsgGuildSummary* _internal_mutable_guild_summary();
  public:
  void unsafe_arena_set_allocated_guild_summary(
      ::CMsgGuildSummary* guild_summary);
  ::CMsgGuildSummary* unsafe_arena_release_guild_summary();

  // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgFindGuildByTagResponse_EResponse result() const;
  void set_result(::CMsgFindGuildByTagResponse_EResponse value);
  private:
  ::CMsgFindGuildByTagResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgFindGuildByTagResponse_EResponse value);
  public:

  // optional uint32 guild_id = 2;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFindGuildByTagResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgGuildSummary* guild_summary_;
    int result_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgSearchForOpenGuildsResponse_SearchResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSearchForOpenGuildsResponse.SearchResult) */ {
 public:
  inline CMsgSearchForOpenGuildsResponse_SearchResult() : CMsgSearchForOpenGuildsResponse_SearchResult(nullptr) {}
  ~CMsgSearchForOpenGuildsResponse_SearchResult() override;
  explicit PROTOBUF_CONSTEXPR CMsgSearchForOpenGuildsResponse_SearchResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSearchForOpenGuildsResponse_SearchResult(const CMsgSearchForOpenGuildsResponse_SearchResult& from);
  CMsgSearchForOpenGuildsResponse_SearchResult(CMsgSearchForOpenGuildsResponse_SearchResult&& from) noexcept
    : CMsgSearchForOpenGuildsResponse_SearchResult() {
    *this = ::std::move(from);
  }

  inline CMsgSearchForOpenGuildsResponse_SearchResult& operator=(const CMsgSearchForOpenGuildsResponse_SearchResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSearchForOpenGuildsResponse_SearchResult& operator=(CMsgSearchForOpenGuildsResponse_SearchResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSearchForOpenGuildsResponse_SearchResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSearchForOpenGuildsResponse_SearchResult* internal_default_instance() {
    return reinterpret_cast<const CMsgSearchForOpenGuildsResponse_SearchResult*>(
               &_CMsgSearchForOpenGuildsResponse_SearchResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgSearchForOpenGuildsResponse_SearchResult& a, CMsgSearchForOpenGuildsResponse_SearchResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSearchForOpenGuildsResponse_SearchResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSearchForOpenGuildsResponse_SearchResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSearchForOpenGuildsResponse_SearchResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSearchForOpenGuildsResponse_SearchResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSearchForOpenGuildsResponse_SearchResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSearchForOpenGuildsResponse_SearchResult& from) {
    CMsgSearchForOpenGuildsResponse_SearchResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSearchForOpenGuildsResponse_SearchResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSearchForOpenGuildsResponse.SearchResult";
  }
  protected:
  explicit CMsgSearchForOpenGuildsResponse_SearchResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildSummaryFieldNumber = 2,
    kGuildIdFieldNumber = 1,
  };
  // optional .CMsgGuildSummary guild_summary = 2;
  bool has_guild_summary() const;
  private:
  bool _internal_has_guild_summary() const;
  public:
  void clear_guild_summary();
  const ::CMsgGuildSummary& guild_summary() const;
  PROTOBUF_NODISCARD ::CMsgGuildSummary* release_guild_summary();
  ::CMsgGuildSummary* mutable_guild_summary();
  void set_allocated_guild_summary(::CMsgGuildSummary* guild_summary);
  private:
  const ::CMsgGuildSummary& _internal_guild_summary() const;
  ::CMsgGuildSummary* _internal_mutable_guild_summary();
  public:
  void unsafe_arena_set_allocated_guild_summary(
      ::CMsgGuildSummary* guild_summary);
  ::CMsgGuildSummary* unsafe_arena_release_guild_summary();

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSearchForOpenGuildsResponse.SearchResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgGuildSummary* guild_summary_;
    uint32_t guild_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgSearchForOpenGuildsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSearchForOpenGuildsResponse) */ {
 public:
  inline CMsgSearchForOpenGuildsResponse() : CMsgSearchForOpenGuildsResponse(nullptr) {}
  ~CMsgSearchForOpenGuildsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgSearchForOpenGuildsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSearchForOpenGuildsResponse(const CMsgSearchForOpenGuildsResponse& from);
  CMsgSearchForOpenGuildsResponse(CMsgSearchForOpenGuildsResponse&& from) noexcept
    : CMsgSearchForOpenGuildsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgSearchForOpenGuildsResponse& operator=(const CMsgSearchForOpenGuildsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSearchForOpenGuildsResponse& operator=(CMsgSearchForOpenGuildsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSearchForOpenGuildsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSearchForOpenGuildsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgSearchForOpenGuildsResponse*>(
               &_CMsgSearchForOpenGuildsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgSearchForOpenGuildsResponse& a, CMsgSearchForOpenGuildsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSearchForOpenGuildsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSearchForOpenGuildsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSearchForOpenGuildsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSearchForOpenGuildsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgSearchForOpenGuildsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgSearchForOpenGuildsResponse& from) {
    CMsgSearchForOpenGuildsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSearchForOpenGuildsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSearchForOpenGuildsResponse";
  }
  protected:
  explicit CMsgSearchForOpenGuildsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSearchForOpenGuildsResponse_SearchResult SearchResult;

  typedef CMsgSearchForOpenGuildsResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgSearchForOpenGuildsResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgSearchForOpenGuildsResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgSearchForOpenGuildsResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgSearchForOpenGuildsResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgSearchForOpenGuildsResponse_EResponse_k_eTimeout;
  static inline bool EResponse_IsValid(int value) {
    return CMsgSearchForOpenGuildsResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgSearchForOpenGuildsResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgSearchForOpenGuildsResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgSearchForOpenGuildsResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgSearchForOpenGuildsResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgSearchForOpenGuildsResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgSearchForOpenGuildsResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSearchResultsFieldNumber = 2,
    kResultFieldNumber = 1,
    kUseWhitelistFieldNumber = 3,
  };
  // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
  int search_results_size() const;
  private:
  int _internal_search_results_size() const;
  public:
  void clear_search_results();
  ::CMsgSearchForOpenGuildsResponse_SearchResult* mutable_search_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSearchForOpenGuildsResponse_SearchResult >*
      mutable_search_results();
  private:
  const ::CMsgSearchForOpenGuildsResponse_SearchResult& _internal_search_results(int index) const;
  ::CMsgSearchForOpenGuildsResponse_SearchResult* _internal_add_search_results();
  public:
  const ::CMsgSearchForOpenGuildsResponse_SearchResult& search_results(int index) const;
  ::CMsgSearchForOpenGuildsResponse_SearchResult* add_search_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSearchForOpenGuildsResponse_SearchResult >&
      search_results() const;

  // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgSearchForOpenGuildsResponse_EResponse result() const;
  void set_result(::CMsgSearchForOpenGuildsResponse_EResponse value);
  private:
  ::CMsgSearchForOpenGuildsResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgSearchForOpenGuildsResponse_EResponse value);
  public:

  // optional bool use_whitelist = 3;
  bool has_use_whitelist() const;
  private:
  bool _internal_has_use_whitelist() const;
  public:
  void clear_use_whitelist();
  bool use_whitelist() const;
  void set_use_whitelist(bool value);
  private:
  bool _internal_use_whitelist() const;
  void _internal_set_use_whitelist(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSearchForOpenGuildsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSearchForOpenGuildsResponse_SearchResult > search_results_;
    int result_;
    bool use_whitelist_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCReportGuildContent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCReportGuildContent) */ {
 public:
  inline CMsgClientToGCReportGuildContent() : CMsgClientToGCReportGuildContent(nullptr) {}
  ~CMsgClientToGCReportGuildContent() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCReportGuildContent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCReportGuildContent(const CMsgClientToGCReportGuildContent& from);
  CMsgClientToGCReportGuildContent(CMsgClientToGCReportGuildContent&& from) noexcept
    : CMsgClientToGCReportGuildContent() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCReportGuildContent& operator=(const CMsgClientToGCReportGuildContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCReportGuildContent& operator=(CMsgClientToGCReportGuildContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCReportGuildContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCReportGuildContent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCReportGuildContent*>(
               &_CMsgClientToGCReportGuildContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgClientToGCReportGuildContent& a, CMsgClientToGCReportGuildContent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCReportGuildContent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCReportGuildContent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCReportGuildContent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCReportGuildContent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCReportGuildContent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCReportGuildContent& from) {
    CMsgClientToGCReportGuildContent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCReportGuildContent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCReportGuildContent";
  }
  protected:
  explicit CMsgClientToGCReportGuildContent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCReportGuildContent_EContentFlags EContentFlags;
  static constexpr EContentFlags k_eNone =
    CMsgClientToGCReportGuildContent_EContentFlags_k_eNone;
  static constexpr EContentFlags k_eInappropriateName =
    CMsgClientToGCReportGuildContent_EContentFlags_k_eInappropriateName;
  static constexpr EContentFlags k_eInappropriateTag =
    CMsgClientToGCReportGuildContent_EContentFlags_k_eInappropriateTag;
  static constexpr EContentFlags k_eInappropriateLogo =
    CMsgClientToGCReportGuildContent_EContentFlags_k_eInappropriateLogo;
  static constexpr EContentFlags k_eValidFlags =
    CMsgClientToGCReportGuildContent_EContentFlags_k_eValidFlags;
  static inline bool EContentFlags_IsValid(int value) {
    return CMsgClientToGCReportGuildContent_EContentFlags_IsValid(value);
  }
  static constexpr EContentFlags EContentFlags_MIN =
    CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_MIN;
  static constexpr EContentFlags EContentFlags_MAX =
    CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_MAX;
  static constexpr int EContentFlags_ARRAYSIZE =
    CMsgClientToGCReportGuildContent_EContentFlags_EContentFlags_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EContentFlags_descriptor() {
    return CMsgClientToGCReportGuildContent_EContentFlags_descriptor();
  }
  template<typename T>
  static inline const std::string& EContentFlags_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EContentFlags>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EContentFlags_Name.");
    return CMsgClientToGCReportGuildContent_EContentFlags_Name(enum_t_value);
  }
  static inline bool EContentFlags_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EContentFlags* value) {
    return CMsgClientToGCReportGuildContent_EContentFlags_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kGuildContentFlagsFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  uint32_t guild_id() const;
  void set_guild_id(uint32_t value);
  private:
  uint32_t _internal_guild_id() const;
  void _internal_set_guild_id(uint32_t value);
  public:

  // optional uint32 guild_content_flags = 2;
  bool has_guild_content_flags() const;
  private:
  bool _internal_has_guild_content_flags() const;
  public:
  void clear_guild_content_flags();
  uint32_t guild_content_flags() const;
  void set_guild_content_flags(uint32_t value);
  private:
  uint32_t _internal_guild_content_flags() const;
  void _internal_set_guild_content_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCReportGuildContent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t guild_id_;
    uint32_t guild_content_flags_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCReportGuildContentResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCReportGuildContentResponse) */ {
 public:
  inline CMsgClientToGCReportGuildContentResponse() : CMsgClientToGCReportGuildContentResponse(nullptr) {}
  ~CMsgClientToGCReportGuildContentResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCReportGuildContentResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCReportGuildContentResponse(const CMsgClientToGCReportGuildContentResponse& from);
  CMsgClientToGCReportGuildContentResponse(CMsgClientToGCReportGuildContentResponse&& from) noexcept
    : CMsgClientToGCReportGuildContentResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCReportGuildContentResponse& operator=(const CMsgClientToGCReportGuildContentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCReportGuildContentResponse& operator=(CMsgClientToGCReportGuildContentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCReportGuildContentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCReportGuildContentResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCReportGuildContentResponse*>(
               &_CMsgClientToGCReportGuildContentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgClientToGCReportGuildContentResponse& a, CMsgClientToGCReportGuildContentResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCReportGuildContentResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCReportGuildContentResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCReportGuildContentResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCReportGuildContentResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCReportGuildContentResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCReportGuildContentResponse& from) {
    CMsgClientToGCReportGuildContentResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCReportGuildContentResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCReportGuildContentResponse";
  }
  protected:
  explicit CMsgClientToGCReportGuildContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCReportGuildContentResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eGuildNotFound =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eGuildNotFound;
  static constexpr EResponse k_eFlagsInvalid =
    CMsgClientToGCReportGuildContentResponse_EResponse_k_eFlagsInvalid;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCReportGuildContentResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCReportGuildContentResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCReportGuildContentResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCReportGuildContentResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCReportGuildContentResponse_EResponse result() const;
  void set_result(::CMsgClientToGCReportGuildContentResponse_EResponse value);
  private:
  ::CMsgClientToGCReportGuildContentResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCReportGuildContentResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCReportGuildContentResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestAccountGuildPersonaInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestAccountGuildPersonaInfo) */ {
 public:
  inline CMsgClientToGCRequestAccountGuildPersonaInfo() : CMsgClientToGCRequestAccountGuildPersonaInfo(nullptr) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestAccountGuildPersonaInfo(const CMsgClientToGCRequestAccountGuildPersonaInfo& from);
  CMsgClientToGCRequestAccountGuildPersonaInfo(CMsgClientToGCRequestAccountGuildPersonaInfo&& from) noexcept
    : CMsgClientToGCRequestAccountGuildPersonaInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestAccountGuildPersonaInfo& operator=(const CMsgClientToGCRequestAccountGuildPersonaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestAccountGuildPersonaInfo& operator=(CMsgClientToGCRequestAccountGuildPersonaInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestAccountGuildPersonaInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestAccountGuildPersonaInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestAccountGuildPersonaInfo*>(
               &_CMsgClientToGCRequestAccountGuildPersonaInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgClientToGCRequestAccountGuildPersonaInfo& a, CMsgClientToGCRequestAccountGuildPersonaInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestAccountGuildPersonaInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestAccountGuildPersonaInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestAccountGuildPersonaInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildPersonaInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestAccountGuildPersonaInfo& from) {
    CMsgClientToGCRequestAccountGuildPersonaInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestAccountGuildPersonaInfo";
  }
  protected:
  explicit CMsgClientToGCRequestAccountGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestAccountGuildPersonaInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestAccountGuildPersonaInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestAccountGuildPersonaInfoResponse) */ {
 public:
  inline CMsgClientToGCRequestAccountGuildPersonaInfoResponse() : CMsgClientToGCRequestAccountGuildPersonaInfoResponse(nullptr) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestAccountGuildPersonaInfoResponse(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from);
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse(CMsgClientToGCRequestAccountGuildPersonaInfoResponse&& from) noexcept
    : CMsgClientToGCRequestAccountGuildPersonaInfoResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestAccountGuildPersonaInfoResponse& operator=(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestAccountGuildPersonaInfoResponse& operator=(CMsgClientToGCRequestAccountGuildPersonaInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestAccountGuildPersonaInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestAccountGuildPersonaInfoResponse*>(
               &_CMsgClientToGCRequestAccountGuildPersonaInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgClientToGCRequestAccountGuildPersonaInfoResponse& a, CMsgClientToGCRequestAccountGuildPersonaInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestAccountGuildPersonaInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestAccountGuildPersonaInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestAccountGuildPersonaInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildPersonaInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from) {
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestAccountGuildPersonaInfoResponse";
  }
  protected:
  explicit CMsgClientToGCRequestAccountGuildPersonaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidAccount =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_k_eInvalidAccount;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaInfoFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
  bool has_persona_info() const;
  private:
  bool _internal_has_persona_info() const;
  public:
  void clear_persona_info();
  const ::CMsgAccountGuildsPersonaInfo& persona_info() const;
  PROTOBUF_NODISCARD ::CMsgAccountGuildsPersonaInfo* release_persona_info();
  ::CMsgAccountGuildsPersonaInfo* mutable_persona_info();
  void set_allocated_persona_info(::CMsgAccountGuildsPersonaInfo* persona_info);
  private:
  const ::CMsgAccountGuildsPersonaInfo& _internal_persona_info() const;
  ::CMsgAccountGuildsPersonaInfo* _internal_mutable_persona_info();
  public:
  void unsafe_arena_set_allocated_persona_info(
      ::CMsgAccountGuildsPersonaInfo* persona_info);
  ::CMsgAccountGuildsPersonaInfo* unsafe_arena_release_persona_info();

  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountGuildsPersonaInfo* persona_info_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestAccountGuildPersonaInfoBatch final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestAccountGuildPersonaInfoBatch) */ {
 public:
  inline CMsgClientToGCRequestAccountGuildPersonaInfoBatch() : CMsgClientToGCRequestAccountGuildPersonaInfoBatch(nullptr) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoBatch() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoBatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestAccountGuildPersonaInfoBatch(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from);
  CMsgClientToGCRequestAccountGuildPersonaInfoBatch(CMsgClientToGCRequestAccountGuildPersonaInfoBatch&& from) noexcept
    : CMsgClientToGCRequestAccountGuildPersonaInfoBatch() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestAccountGuildPersonaInfoBatch& operator=(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestAccountGuildPersonaInfoBatch& operator=(CMsgClientToGCRequestAccountGuildPersonaInfoBatch&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestAccountGuildPersonaInfoBatch* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestAccountGuildPersonaInfoBatch*>(
               &_CMsgClientToGCRequestAccountGuildPersonaInfoBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgClientToGCRequestAccountGuildPersonaInfoBatch& a, CMsgClientToGCRequestAccountGuildPersonaInfoBatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestAccountGuildPersonaInfoBatch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestAccountGuildPersonaInfoBatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildPersonaInfoBatch>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from) {
    CMsgClientToGCRequestAccountGuildPersonaInfoBatch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatch* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestAccountGuildPersonaInfoBatch";
  }
  protected:
  explicit CMsgClientToGCRequestAccountGuildPersonaInfoBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdsFieldNumber = 1,
  };
  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  private:
  int _internal_account_ids_size() const;
  public:
  void clear_account_ids();
  private:
  uint32_t _internal_account_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_account_ids() const;
  void _internal_add_account_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_account_ids();
  public:
  uint32_t account_ids(int index) const;
  void set_account_ids(int index, uint32_t value);
  void add_account_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      account_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > account_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse) */ {
 public:
  inline CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse() : CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(nullptr) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from);
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse&& from) noexcept
    : CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& operator=(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& operator=(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse*>(
               &_CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& a, CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from) {
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse";
  }
  protected:
  explicit CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidRequest =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_k_eInvalidRequest;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaInfosFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
  int persona_infos_size() const;
  private:
  int _internal_persona_infos_size() const;
  public:
  void clear_persona_infos();
  ::CMsgAccountGuildsPersonaInfo* mutable_persona_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildsPersonaInfo >*
      mutable_persona_infos();
  private:
  const ::CMsgAccountGuildsPersonaInfo& _internal_persona_infos(int index) const;
  ::CMsgAccountGuildsPersonaInfo* _internal_add_persona_infos();
  public:
  const ::CMsgAccountGuildsPersonaInfo& persona_infos(int index) const;
  ::CMsgAccountGuildsPersonaInfo* add_persona_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildsPersonaInfo >&
      persona_infos() const;

  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildsPersonaInfo > persona_infos_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgGuildInfo

// optional string guild_name = 1;
inline bool CMsgGuildInfo::_internal_has_guild_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_name() const {
  return _internal_has_guild_name();
}
inline void CMsgGuildInfo::clear_guild_name() {
  _impl_.guild_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGuildInfo::guild_name() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_name)
  return _internal_guild_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGuildInfo::set_guild_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.guild_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_name)
}
inline std::string* CMsgGuildInfo::mutable_guild_name() {
  std::string* _s = _internal_mutable_guild_name();
  // @@protoc_insertion_point(field_mutable:CMsgGuildInfo.guild_name)
  return _s;
}
inline const std::string& CMsgGuildInfo::_internal_guild_name() const {
  return _impl_.guild_name_.Get();
}
inline void CMsgGuildInfo::_internal_set_guild_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::_internal_mutable_guild_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.guild_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::release_guild_name() {
  // @@protoc_insertion_point(field_release:CMsgGuildInfo.guild_name)
  if (!_internal_has_guild_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.guild_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_name_.IsDefault()) {
    _impl_.guild_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGuildInfo::set_allocated_guild_name(std::string* guild_name) {
  if (guild_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_name_.SetAllocated(guild_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_name_.IsDefault()) {
    _impl_.guild_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildInfo.guild_name)
}

// optional string guild_tag = 2;
inline bool CMsgGuildInfo::_internal_has_guild_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_tag() const {
  return _internal_has_guild_tag();
}
inline void CMsgGuildInfo::clear_guild_tag() {
  _impl_.guild_tag_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGuildInfo::guild_tag() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_tag)
  return _internal_guild_tag();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGuildInfo::set_guild_tag(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.guild_tag_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_tag)
}
inline std::string* CMsgGuildInfo::mutable_guild_tag() {
  std::string* _s = _internal_mutable_guild_tag();
  // @@protoc_insertion_point(field_mutable:CMsgGuildInfo.guild_tag)
  return _s;
}
inline const std::string& CMsgGuildInfo::_internal_guild_tag() const {
  return _impl_.guild_tag_.Get();
}
inline void CMsgGuildInfo::_internal_set_guild_tag(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_tag_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::_internal_mutable_guild_tag() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.guild_tag_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::release_guild_tag() {
  // @@protoc_insertion_point(field_release:CMsgGuildInfo.guild_tag)
  if (!_internal_has_guild_tag()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.guild_tag_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_tag_.IsDefault()) {
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGuildInfo::set_allocated_guild_tag(std::string* guild_tag) {
  if (guild_tag != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.guild_tag_.SetAllocated(guild_tag, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_tag_.IsDefault()) {
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildInfo.guild_tag)
}

// optional uint32 created_timestamp = 3;
inline bool CMsgGuildInfo::_internal_has_created_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_created_timestamp() const {
  return _internal_has_created_timestamp();
}
inline void CMsgGuildInfo::clear_created_timestamp() {
  _impl_.created_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGuildInfo::_internal_created_timestamp() const {
  return _impl_.created_timestamp_;
}
inline uint32_t CMsgGuildInfo::created_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.created_timestamp)
  return _internal_created_timestamp();
}
inline void CMsgGuildInfo::_internal_set_created_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.created_timestamp_ = value;
}
inline void CMsgGuildInfo::set_created_timestamp(uint32_t value) {
  _internal_set_created_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.created_timestamp)
}

// optional uint32 guild_language = 4;
inline bool CMsgGuildInfo::_internal_has_guild_language() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_language() const {
  return _internal_has_guild_language();
}
inline void CMsgGuildInfo::clear_guild_language() {
  _impl_.guild_language_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_language() const {
  return _impl_.guild_language_;
}
inline uint32_t CMsgGuildInfo::guild_language() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_language)
  return _internal_guild_language();
}
inline void CMsgGuildInfo::_internal_set_guild_language(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.guild_language_ = value;
}
inline void CMsgGuildInfo::set_guild_language(uint32_t value) {
  _internal_set_guild_language(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_language)
}

// optional uint32 guild_flags = 5;
inline bool CMsgGuildInfo::_internal_has_guild_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_flags() const {
  return _internal_has_guild_flags();
}
inline void CMsgGuildInfo::clear_guild_flags() {
  _impl_.guild_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_flags() const {
  return _impl_.guild_flags_;
}
inline uint32_t CMsgGuildInfo::guild_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_flags)
  return _internal_guild_flags();
}
inline void CMsgGuildInfo::_internal_set_guild_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.guild_flags_ = value;
}
inline void CMsgGuildInfo::set_guild_flags(uint32_t value) {
  _internal_set_guild_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_flags)
}

// optional uint64 guild_logo = 7;
inline bool CMsgGuildInfo::_internal_has_guild_logo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_logo() const {
  return _internal_has_guild_logo();
}
inline void CMsgGuildInfo::clear_guild_logo() {
  _impl_.guild_logo_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint64_t CMsgGuildInfo::_internal_guild_logo() const {
  return _impl_.guild_logo_;
}
inline uint64_t CMsgGuildInfo::guild_logo() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_logo)
  return _internal_guild_logo();
}
inline void CMsgGuildInfo::_internal_set_guild_logo(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.guild_logo_ = value;
}
inline void CMsgGuildInfo::set_guild_logo(uint64_t value) {
  _internal_set_guild_logo(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_logo)
}

// optional uint32 guild_region = 8;
inline bool CMsgGuildInfo::_internal_has_guild_region() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_region() const {
  return _internal_has_guild_region();
}
inline void CMsgGuildInfo::clear_guild_region() {
  _impl_.guild_region_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_region() const {
  return _impl_.guild_region_;
}
inline uint32_t CMsgGuildInfo::guild_region() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_region)
  return _internal_guild_region();
}
inline void CMsgGuildInfo::_internal_set_guild_region(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.guild_region_ = value;
}
inline void CMsgGuildInfo::set_guild_region(uint32_t value) {
  _internal_set_guild_region(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_region)
}

// optional uint64 guild_chat_group_id = 9;
inline bool CMsgGuildInfo::_internal_has_guild_chat_group_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_chat_group_id() const {
  return _internal_has_guild_chat_group_id();
}
inline void CMsgGuildInfo::clear_guild_chat_group_id() {
  _impl_.guild_chat_group_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint64_t CMsgGuildInfo::_internal_guild_chat_group_id() const {
  return _impl_.guild_chat_group_id_;
}
inline uint64_t CMsgGuildInfo::guild_chat_group_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_chat_group_id)
  return _internal_guild_chat_group_id();
}
inline void CMsgGuildInfo::_internal_set_guild_chat_group_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.guild_chat_group_id_ = value;
}
inline void CMsgGuildInfo::set_guild_chat_group_id(uint64_t value) {
  _internal_set_guild_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_chat_group_id)
}

// optional string guild_description = 10;
inline bool CMsgGuildInfo::_internal_has_guild_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_description() const {
  return _internal_has_guild_description();
}
inline void CMsgGuildInfo::clear_guild_description() {
  _impl_.guild_description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgGuildInfo::guild_description() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_description)
  return _internal_guild_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGuildInfo::set_guild_description(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.guild_description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_description)
}
inline std::string* CMsgGuildInfo::mutable_guild_description() {
  std::string* _s = _internal_mutable_guild_description();
  // @@protoc_insertion_point(field_mutable:CMsgGuildInfo.guild_description)
  return _s;
}
inline const std::string& CMsgGuildInfo::_internal_guild_description() const {
  return _impl_.guild_description_.Get();
}
inline void CMsgGuildInfo::_internal_set_guild_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.guild_description_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::_internal_mutable_guild_description() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.guild_description_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::release_guild_description() {
  // @@protoc_insertion_point(field_release:CMsgGuildInfo.guild_description)
  if (!_internal_has_guild_description()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.guild_description_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_description_.IsDefault()) {
    _impl_.guild_description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGuildInfo::set_allocated_guild_description(std::string* guild_description) {
  if (guild_description != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.guild_description_.SetAllocated(guild_description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_description_.IsDefault()) {
    _impl_.guild_description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildInfo.guild_description)
}

// optional uint64 default_chat_channel_id = 11;
inline bool CMsgGuildInfo::_internal_has_default_chat_channel_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_default_chat_channel_id() const {
  return _internal_has_default_chat_channel_id();
}
inline void CMsgGuildInfo::clear_default_chat_channel_id() {
  _impl_.default_chat_channel_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint64_t CMsgGuildInfo::_internal_default_chat_channel_id() const {
  return _impl_.default_chat_channel_id_;
}
inline uint64_t CMsgGuildInfo::default_chat_channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.default_chat_channel_id)
  return _internal_default_chat_channel_id();
}
inline void CMsgGuildInfo::_internal_set_default_chat_channel_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.default_chat_channel_id_ = value;
}
inline void CMsgGuildInfo::set_default_chat_channel_id(uint64_t value) {
  _internal_set_default_chat_channel_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.default_chat_channel_id)
}

// optional uint32 guild_primary_color = 12;
inline bool CMsgGuildInfo::_internal_has_guild_primary_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_primary_color() const {
  return _internal_has_guild_primary_color();
}
inline void CMsgGuildInfo::clear_guild_primary_color() {
  _impl_.guild_primary_color_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_primary_color() const {
  return _impl_.guild_primary_color_;
}
inline uint32_t CMsgGuildInfo::guild_primary_color() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_primary_color)
  return _internal_guild_primary_color();
}
inline void CMsgGuildInfo::_internal_set_guild_primary_color(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.guild_primary_color_ = value;
}
inline void CMsgGuildInfo::set_guild_primary_color(uint32_t value) {
  _internal_set_guild_primary_color(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_primary_color)
}

// optional uint32 guild_secondary_color = 13;
inline bool CMsgGuildInfo::_internal_has_guild_secondary_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_secondary_color() const {
  return _internal_has_guild_secondary_color();
}
inline void CMsgGuildInfo::clear_guild_secondary_color() {
  _impl_.guild_secondary_color_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_secondary_color() const {
  return _impl_.guild_secondary_color_;
}
inline uint32_t CMsgGuildInfo::guild_secondary_color() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_secondary_color)
  return _internal_guild_secondary_color();
}
inline void CMsgGuildInfo::_internal_set_guild_secondary_color(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.guild_secondary_color_ = value;
}
inline void CMsgGuildInfo::set_guild_secondary_color(uint32_t value) {
  _internal_set_guild_secondary_color(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_secondary_color)
}

// optional uint32 guild_pattern = 14;
inline bool CMsgGuildInfo::_internal_has_guild_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_pattern() const {
  return _internal_has_guild_pattern();
}
inline void CMsgGuildInfo::clear_guild_pattern() {
  _impl_.guild_pattern_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_pattern() const {
  return _impl_.guild_pattern_;
}
inline uint32_t CMsgGuildInfo::guild_pattern() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_pattern)
  return _internal_guild_pattern();
}
inline void CMsgGuildInfo::_internal_set_guild_pattern(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.guild_pattern_ = value;
}
inline void CMsgGuildInfo::set_guild_pattern(uint32_t value) {
  _internal_set_guild_pattern(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_pattern)
}

// optional uint32 guild_refresh_time_offset = 15;
inline bool CMsgGuildInfo::_internal_has_guild_refresh_time_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_refresh_time_offset() const {
  return _internal_has_guild_refresh_time_offset();
}
inline void CMsgGuildInfo::clear_guild_refresh_time_offset() {
  _impl_.guild_refresh_time_offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_refresh_time_offset() const {
  return _impl_.guild_refresh_time_offset_;
}
inline uint32_t CMsgGuildInfo::guild_refresh_time_offset() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_refresh_time_offset)
  return _internal_guild_refresh_time_offset();
}
inline void CMsgGuildInfo::_internal_set_guild_refresh_time_offset(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.guild_refresh_time_offset_ = value;
}
inline void CMsgGuildInfo::set_guild_refresh_time_offset(uint32_t value) {
  _internal_set_guild_refresh_time_offset(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_refresh_time_offset)
}

// optional uint32 guild_required_rank_tier = 16;
inline bool CMsgGuildInfo::_internal_has_guild_required_rank_tier() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_required_rank_tier() const {
  return _internal_has_guild_required_rank_tier();
}
inline void CMsgGuildInfo::clear_guild_required_rank_tier() {
  _impl_.guild_required_rank_tier_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_required_rank_tier() const {
  return _impl_.guild_required_rank_tier_;
}
inline uint32_t CMsgGuildInfo::guild_required_rank_tier() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_required_rank_tier)
  return _internal_guild_required_rank_tier();
}
inline void CMsgGuildInfo::_internal_set_guild_required_rank_tier(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.guild_required_rank_tier_ = value;
}
inline void CMsgGuildInfo::set_guild_required_rank_tier(uint32_t value) {
  _internal_set_guild_required_rank_tier(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_required_rank_tier)
}

// optional uint32 guild_motd_timestamp = 17;
inline bool CMsgGuildInfo::_internal_has_guild_motd_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_motd_timestamp() const {
  return _internal_has_guild_motd_timestamp();
}
inline void CMsgGuildInfo::clear_guild_motd_timestamp() {
  _impl_.guild_motd_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline uint32_t CMsgGuildInfo::_internal_guild_motd_timestamp() const {
  return _impl_.guild_motd_timestamp_;
}
inline uint32_t CMsgGuildInfo::guild_motd_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_motd_timestamp)
  return _internal_guild_motd_timestamp();
}
inline void CMsgGuildInfo::_internal_set_guild_motd_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.guild_motd_timestamp_ = value;
}
inline void CMsgGuildInfo::set_guild_motd_timestamp(uint32_t value) {
  _internal_set_guild_motd_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_motd_timestamp)
}

// optional string guild_motd = 18;
inline bool CMsgGuildInfo::_internal_has_guild_motd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildInfo::has_guild_motd() const {
  return _internal_has_guild_motd();
}
inline void CMsgGuildInfo::clear_guild_motd() {
  _impl_.guild_motd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgGuildInfo::guild_motd() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInfo.guild_motd)
  return _internal_guild_motd();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGuildInfo::set_guild_motd(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000008u;
 _impl_.guild_motd_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGuildInfo.guild_motd)
}
inline std::string* CMsgGuildInfo::mutable_guild_motd() {
  std::string* _s = _internal_mutable_guild_motd();
  // @@protoc_insertion_point(field_mutable:CMsgGuildInfo.guild_motd)
  return _s;
}
inline const std::string& CMsgGuildInfo::_internal_guild_motd() const {
  return _impl_.guild_motd_.Get();
}
inline void CMsgGuildInfo::_internal_set_guild_motd(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.guild_motd_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::_internal_mutable_guild_motd() {
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.guild_motd_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGuildInfo::release_guild_motd() {
  // @@protoc_insertion_point(field_release:CMsgGuildInfo.guild_motd)
  if (!_internal_has_guild_motd()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* p = _impl_.guild_motd_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_motd_.IsDefault()) {
    _impl_.guild_motd_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGuildInfo::set_allocated_guild_motd(std::string* guild_motd) {
  if (guild_motd != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.guild_motd_.SetAllocated(guild_motd, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_motd_.IsDefault()) {
    _impl_.guild_motd_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildInfo.guild_motd)
}

// -------------------------------------------------------------------

// CMsgGuildSummary_EventPoints

// optional uint32 event_id = 1;
inline bool CMsgGuildSummary_EventPoints::_internal_has_event_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildSummary_EventPoints::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgGuildSummary_EventPoints::clear_event_id() {
  _impl_.event_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGuildSummary_EventPoints::_internal_event_id() const {
  return _impl_.event_id_;
}
inline uint32_t CMsgGuildSummary_EventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.EventPoints.event_id)
  return _internal_event_id();
}
inline void CMsgGuildSummary_EventPoints::_internal_set_event_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.event_id_ = value;
}
inline void CMsgGuildSummary_EventPoints::set_event_id(uint32_t value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.EventPoints.event_id)
}

// optional uint32 guild_points = 2;
inline bool CMsgGuildSummary_EventPoints::_internal_has_guild_points() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildSummary_EventPoints::has_guild_points() const {
  return _internal_has_guild_points();
}
inline void CMsgGuildSummary_EventPoints::clear_guild_points() {
  _impl_.guild_points_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildSummary_EventPoints::_internal_guild_points() const {
  return _impl_.guild_points_;
}
inline uint32_t CMsgGuildSummary_EventPoints::guild_points() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.EventPoints.guild_points)
  return _internal_guild_points();
}
inline void CMsgGuildSummary_EventPoints::_internal_set_guild_points(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_points_ = value;
}
inline void CMsgGuildSummary_EventPoints::set_guild_points(uint32_t value) {
  _internal_set_guild_points(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.EventPoints.guild_points)
}

// optional uint32 guild_rank = 3;
inline bool CMsgGuildSummary_EventPoints::_internal_has_guild_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildSummary_EventPoints::has_guild_rank() const {
  return _internal_has_guild_rank();
}
inline void CMsgGuildSummary_EventPoints::clear_guild_rank() {
  _impl_.guild_rank_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGuildSummary_EventPoints::_internal_guild_rank() const {
  return _impl_.guild_rank_;
}
inline uint32_t CMsgGuildSummary_EventPoints::guild_rank() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.EventPoints.guild_rank)
  return _internal_guild_rank();
}
inline void CMsgGuildSummary_EventPoints::_internal_set_guild_rank(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.guild_rank_ = value;
}
inline void CMsgGuildSummary_EventPoints::set_guild_rank(uint32_t value) {
  _internal_set_guild_rank(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.EventPoints.guild_rank)
}

// optional uint32 guild_weekly_rank = 4;
inline bool CMsgGuildSummary_EventPoints::_internal_has_guild_weekly_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildSummary_EventPoints::has_guild_weekly_rank() const {
  return _internal_has_guild_weekly_rank();
}
inline void CMsgGuildSummary_EventPoints::clear_guild_weekly_rank() {
  _impl_.guild_weekly_rank_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGuildSummary_EventPoints::_internal_guild_weekly_rank() const {
  return _impl_.guild_weekly_rank_;
}
inline uint32_t CMsgGuildSummary_EventPoints::guild_weekly_rank() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.EventPoints.guild_weekly_rank)
  return _internal_guild_weekly_rank();
}
inline void CMsgGuildSummary_EventPoints::_internal_set_guild_weekly_rank(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.guild_weekly_rank_ = value;
}
inline void CMsgGuildSummary_EventPoints::set_guild_weekly_rank(uint32_t value) {
  _internal_set_guild_weekly_rank(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.EventPoints.guild_weekly_rank)
}

// optional uint32 guild_weekly_percentile = 5;
inline bool CMsgGuildSummary_EventPoints::_internal_has_guild_weekly_percentile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGuildSummary_EventPoints::has_guild_weekly_percentile() const {
  return _internal_has_guild_weekly_percentile();
}
inline void CMsgGuildSummary_EventPoints::clear_guild_weekly_percentile() {
  _impl_.guild_weekly_percentile_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGuildSummary_EventPoints::_internal_guild_weekly_percentile() const {
  return _impl_.guild_weekly_percentile_;
}
inline uint32_t CMsgGuildSummary_EventPoints::guild_weekly_percentile() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.EventPoints.guild_weekly_percentile)
  return _internal_guild_weekly_percentile();
}
inline void CMsgGuildSummary_EventPoints::_internal_set_guild_weekly_percentile(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.guild_weekly_percentile_ = value;
}
inline void CMsgGuildSummary_EventPoints::set_guild_weekly_percentile(uint32_t value) {
  _internal_set_guild_weekly_percentile(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.EventPoints.guild_weekly_percentile)
}

// optional uint32 guild_current_percentile = 6;
inline bool CMsgGuildSummary_EventPoints::_internal_has_guild_current_percentile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGuildSummary_EventPoints::has_guild_current_percentile() const {
  return _internal_has_guild_current_percentile();
}
inline void CMsgGuildSummary_EventPoints::clear_guild_current_percentile() {
  _impl_.guild_current_percentile_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgGuildSummary_EventPoints::_internal_guild_current_percentile() const {
  return _impl_.guild_current_percentile_;
}
inline uint32_t CMsgGuildSummary_EventPoints::guild_current_percentile() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.EventPoints.guild_current_percentile)
  return _internal_guild_current_percentile();
}
inline void CMsgGuildSummary_EventPoints::_internal_set_guild_current_percentile(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.guild_current_percentile_ = value;
}
inline void CMsgGuildSummary_EventPoints::set_guild_current_percentile(uint32_t value) {
  _internal_set_guild_current_percentile(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.EventPoints.guild_current_percentile)
}

// -------------------------------------------------------------------

// CMsgGuildSummary

// optional .CMsgGuildInfo guild_info = 1;
inline bool CMsgGuildSummary::_internal_has_guild_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_info_ != nullptr);
  return value;
}
inline bool CMsgGuildSummary::has_guild_info() const {
  return _internal_has_guild_info();
}
inline void CMsgGuildSummary::clear_guild_info() {
  if (_impl_.guild_info_ != nullptr) _impl_.guild_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildInfo& CMsgGuildSummary::_internal_guild_info() const {
  const ::CMsgGuildInfo* p = _impl_.guild_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildInfo&>(
      ::_CMsgGuildInfo_default_instance_);
}
inline const ::CMsgGuildInfo& CMsgGuildSummary::guild_info() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.guild_info)
  return _internal_guild_info();
}
inline void CMsgGuildSummary::unsafe_arena_set_allocated_guild_info(
    ::CMsgGuildInfo* guild_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_info_);
  }
  _impl_.guild_info_ = guild_info;
  if (guild_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGuildSummary.guild_info)
}
inline ::CMsgGuildInfo* CMsgGuildSummary::release_guild_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildInfo* CMsgGuildSummary::unsafe_arena_release_guild_info() {
  // @@protoc_insertion_point(field_release:CMsgGuildSummary.guild_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
  return temp;
}
inline ::CMsgGuildInfo* CMsgGuildSummary::_internal_mutable_guild_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildInfo>(GetArenaForAllocation());
    _impl_.guild_info_ = p;
  }
  return _impl_.guild_info_;
}
inline ::CMsgGuildInfo* CMsgGuildSummary::mutable_guild_info() {
  ::CMsgGuildInfo* _msg = _internal_mutable_guild_info();
  // @@protoc_insertion_point(field_mutable:CMsgGuildSummary.guild_info)
  return _msg;
}
inline void CMsgGuildSummary::set_allocated_guild_info(::CMsgGuildInfo* guild_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_info_;
  }
  if (guild_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_info);
    if (message_arena != submessage_arena) {
      guild_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_info_ = guild_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildSummary.guild_info)
}

// optional uint32 member_count = 2;
inline bool CMsgGuildSummary::_internal_has_member_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildSummary::has_member_count() const {
  return _internal_has_member_count();
}
inline void CMsgGuildSummary::clear_member_count() {
  _impl_.member_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildSummary::_internal_member_count() const {
  return _impl_.member_count_;
}
inline uint32_t CMsgGuildSummary::member_count() const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.member_count)
  return _internal_member_count();
}
inline void CMsgGuildSummary::_internal_set_member_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.member_count_ = value;
}
inline void CMsgGuildSummary::set_member_count(uint32_t value) {
  _internal_set_member_count(value);
  // @@protoc_insertion_point(field_set:CMsgGuildSummary.member_count)
}

// repeated .CMsgGuildSummary.EventPoints event_points = 3;
inline int CMsgGuildSummary::_internal_event_points_size() const {
  return _impl_.event_points_.size();
}
inline int CMsgGuildSummary::event_points_size() const {
  return _internal_event_points_size();
}
inline void CMsgGuildSummary::clear_event_points() {
  _impl_.event_points_.Clear();
}
inline ::CMsgGuildSummary_EventPoints* CMsgGuildSummary::mutable_event_points(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildSummary.event_points)
  return _impl_.event_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildSummary_EventPoints >*
CMsgGuildSummary::mutable_event_points() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildSummary.event_points)
  return &_impl_.event_points_;
}
inline const ::CMsgGuildSummary_EventPoints& CMsgGuildSummary::_internal_event_points(int index) const {
  return _impl_.event_points_.Get(index);
}
inline const ::CMsgGuildSummary_EventPoints& CMsgGuildSummary::event_points(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildSummary.event_points)
  return _internal_event_points(index);
}
inline ::CMsgGuildSummary_EventPoints* CMsgGuildSummary::_internal_add_event_points() {
  return _impl_.event_points_.Add();
}
inline ::CMsgGuildSummary_EventPoints* CMsgGuildSummary::add_event_points() {
  ::CMsgGuildSummary_EventPoints* _add = _internal_add_event_points();
  // @@protoc_insertion_point(field_add:CMsgGuildSummary.event_points)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildSummary_EventPoints >&
CMsgGuildSummary::event_points() const {
  // @@protoc_insertion_point(field_list:CMsgGuildSummary.event_points)
  return _impl_.event_points_;
}

// -------------------------------------------------------------------

// CMsgGuildRole

// optional uint32 role_id = 1;
inline bool CMsgGuildRole::_internal_has_role_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildRole::has_role_id() const {
  return _internal_has_role_id();
}
inline void CMsgGuildRole::clear_role_id() {
  _impl_.role_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildRole::_internal_role_id() const {
  return _impl_.role_id_;
}
inline uint32_t CMsgGuildRole::role_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildRole.role_id)
  return _internal_role_id();
}
inline void CMsgGuildRole::_internal_set_role_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.role_id_ = value;
}
inline void CMsgGuildRole::set_role_id(uint32_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildRole.role_id)
}

// optional string role_name = 2;
inline bool CMsgGuildRole::_internal_has_role_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildRole::has_role_name() const {
  return _internal_has_role_name();
}
inline void CMsgGuildRole::clear_role_name() {
  _impl_.role_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGuildRole::role_name() const {
  // @@protoc_insertion_point(field_get:CMsgGuildRole.role_name)
  return _internal_role_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGuildRole::set_role_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.role_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGuildRole.role_name)
}
inline std::string* CMsgGuildRole::mutable_role_name() {
  std::string* _s = _internal_mutable_role_name();
  // @@protoc_insertion_point(field_mutable:CMsgGuildRole.role_name)
  return _s;
}
inline const std::string& CMsgGuildRole::_internal_role_name() const {
  return _impl_.role_name_.Get();
}
inline void CMsgGuildRole::_internal_set_role_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.role_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGuildRole::_internal_mutable_role_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.role_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGuildRole::release_role_name() {
  // @@protoc_insertion_point(field_release:CMsgGuildRole.role_name)
  if (!_internal_has_role_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.role_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.role_name_.IsDefault()) {
    _impl_.role_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGuildRole::set_allocated_role_name(std::string* role_name) {
  if (role_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.role_name_.SetAllocated(role_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.role_name_.IsDefault()) {
    _impl_.role_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildRole.role_name)
}

// optional uint32 role_flags = 3;
inline bool CMsgGuildRole::_internal_has_role_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildRole::has_role_flags() const {
  return _internal_has_role_flags();
}
inline void CMsgGuildRole::clear_role_flags() {
  _impl_.role_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGuildRole::_internal_role_flags() const {
  return _impl_.role_flags_;
}
inline uint32_t CMsgGuildRole::role_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGuildRole.role_flags)
  return _internal_role_flags();
}
inline void CMsgGuildRole::_internal_set_role_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.role_flags_ = value;
}
inline void CMsgGuildRole::set_role_flags(uint32_t value) {
  _internal_set_role_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGuildRole.role_flags)
}

// optional uint32 role_order = 4;
inline bool CMsgGuildRole::_internal_has_role_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildRole::has_role_order() const {
  return _internal_has_role_order();
}
inline void CMsgGuildRole::clear_role_order() {
  _impl_.role_order_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGuildRole::_internal_role_order() const {
  return _impl_.role_order_;
}
inline uint32_t CMsgGuildRole::role_order() const {
  // @@protoc_insertion_point(field_get:CMsgGuildRole.role_order)
  return _internal_role_order();
}
inline void CMsgGuildRole::_internal_set_role_order(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.role_order_ = value;
}
inline void CMsgGuildRole::set_role_order(uint32_t value) {
  _internal_set_role_order(value);
  // @@protoc_insertion_point(field_set:CMsgGuildRole.role_order)
}

// -------------------------------------------------------------------

// CMsgGuildMember

// optional uint32 member_account_id = 1;
inline bool CMsgGuildMember::_internal_has_member_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildMember::has_member_account_id() const {
  return _internal_has_member_account_id();
}
inline void CMsgGuildMember::clear_member_account_id() {
  _impl_.member_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGuildMember::_internal_member_account_id() const {
  return _impl_.member_account_id_;
}
inline uint32_t CMsgGuildMember::member_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildMember.member_account_id)
  return _internal_member_account_id();
}
inline void CMsgGuildMember::_internal_set_member_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.member_account_id_ = value;
}
inline void CMsgGuildMember::set_member_account_id(uint32_t value) {
  _internal_set_member_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildMember.member_account_id)
}

// optional uint32 member_role_id = 2;
inline bool CMsgGuildMember::_internal_has_member_role_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildMember::has_member_role_id() const {
  return _internal_has_member_role_id();
}
inline void CMsgGuildMember::clear_member_role_id() {
  _impl_.member_role_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildMember::_internal_member_role_id() const {
  return _impl_.member_role_id_;
}
inline uint32_t CMsgGuildMember::member_role_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildMember.member_role_id)
  return _internal_member_role_id();
}
inline void CMsgGuildMember::_internal_set_member_role_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.member_role_id_ = value;
}
inline void CMsgGuildMember::set_member_role_id(uint32_t value) {
  _internal_set_member_role_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildMember.member_role_id)
}

// optional uint32 member_joined_timestamp = 3;
inline bool CMsgGuildMember::_internal_has_member_joined_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildMember::has_member_joined_timestamp() const {
  return _internal_has_member_joined_timestamp();
}
inline void CMsgGuildMember::clear_member_joined_timestamp() {
  _impl_.member_joined_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGuildMember::_internal_member_joined_timestamp() const {
  return _impl_.member_joined_timestamp_;
}
inline uint32_t CMsgGuildMember::member_joined_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildMember.member_joined_timestamp)
  return _internal_member_joined_timestamp();
}
inline void CMsgGuildMember::_internal_set_member_joined_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.member_joined_timestamp_ = value;
}
inline void CMsgGuildMember::set_member_joined_timestamp(uint32_t value) {
  _internal_set_member_joined_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildMember.member_joined_timestamp)
}

// optional uint32 member_last_active_timestamp = 4;
inline bool CMsgGuildMember::_internal_has_member_last_active_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildMember::has_member_last_active_timestamp() const {
  return _internal_has_member_last_active_timestamp();
}
inline void CMsgGuildMember::clear_member_last_active_timestamp() {
  _impl_.member_last_active_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGuildMember::_internal_member_last_active_timestamp() const {
  return _impl_.member_last_active_timestamp_;
}
inline uint32_t CMsgGuildMember::member_last_active_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildMember.member_last_active_timestamp)
  return _internal_member_last_active_timestamp();
}
inline void CMsgGuildMember::_internal_set_member_last_active_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.member_last_active_timestamp_ = value;
}
inline void CMsgGuildMember::set_member_last_active_timestamp(uint32_t value) {
  _internal_set_member_last_active_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildMember.member_last_active_timestamp)
}

// -------------------------------------------------------------------

// CMsgGuildInvite

// optional uint32 requester_account_id = 1;
inline bool CMsgGuildInvite::_internal_has_requester_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildInvite::has_requester_account_id() const {
  return _internal_has_requester_account_id();
}
inline void CMsgGuildInvite::clear_requester_account_id() {
  _impl_.requester_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGuildInvite::_internal_requester_account_id() const {
  return _impl_.requester_account_id_;
}
inline uint32_t CMsgGuildInvite::requester_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInvite.requester_account_id)
  return _internal_requester_account_id();
}
inline void CMsgGuildInvite::_internal_set_requester_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requester_account_id_ = value;
}
inline void CMsgGuildInvite::set_requester_account_id(uint32_t value) {
  _internal_set_requester_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInvite.requester_account_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgGuildInvite::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildInvite::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgGuildInvite::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildInvite::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgGuildInvite::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInvite.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgGuildInvite::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgGuildInvite::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInvite.target_account_id)
}

// optional uint32 timestamp_sent = 3;
inline bool CMsgGuildInvite::_internal_has_timestamp_sent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildInvite::has_timestamp_sent() const {
  return _internal_has_timestamp_sent();
}
inline void CMsgGuildInvite::clear_timestamp_sent() {
  _impl_.timestamp_sent_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGuildInvite::_internal_timestamp_sent() const {
  return _impl_.timestamp_sent_;
}
inline uint32_t CMsgGuildInvite::timestamp_sent() const {
  // @@protoc_insertion_point(field_get:CMsgGuildInvite.timestamp_sent)
  return _internal_timestamp_sent();
}
inline void CMsgGuildInvite::_internal_set_timestamp_sent(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.timestamp_sent_ = value;
}
inline void CMsgGuildInvite::set_timestamp_sent(uint32_t value) {
  _internal_set_timestamp_sent(value);
  // @@protoc_insertion_point(field_set:CMsgGuildInvite.timestamp_sent)
}

// -------------------------------------------------------------------

// CMsgGuildData

// optional uint32 guild_id = 1;
inline bool CMsgGuildData::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildData::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGuildData::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildData::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgGuildData::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildData.guild_id)
  return _internal_guild_id();
}
inline void CMsgGuildData::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgGuildData::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildData.guild_id)
}

// optional .CMsgGuildInfo guild_info = 2;
inline bool CMsgGuildData::_internal_has_guild_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_info_ != nullptr);
  return value;
}
inline bool CMsgGuildData::has_guild_info() const {
  return _internal_has_guild_info();
}
inline void CMsgGuildData::clear_guild_info() {
  if (_impl_.guild_info_ != nullptr) _impl_.guild_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildInfo& CMsgGuildData::_internal_guild_info() const {
  const ::CMsgGuildInfo* p = _impl_.guild_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildInfo&>(
      ::_CMsgGuildInfo_default_instance_);
}
inline const ::CMsgGuildInfo& CMsgGuildData::guild_info() const {
  // @@protoc_insertion_point(field_get:CMsgGuildData.guild_info)
  return _internal_guild_info();
}
inline void CMsgGuildData::unsafe_arena_set_allocated_guild_info(
    ::CMsgGuildInfo* guild_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_info_);
  }
  _impl_.guild_info_ = guild_info;
  if (guild_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGuildData.guild_info)
}
inline ::CMsgGuildInfo* CMsgGuildData::release_guild_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildInfo* CMsgGuildData::unsafe_arena_release_guild_info() {
  // @@protoc_insertion_point(field_release:CMsgGuildData.guild_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
  return temp;
}
inline ::CMsgGuildInfo* CMsgGuildData::_internal_mutable_guild_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildInfo>(GetArenaForAllocation());
    _impl_.guild_info_ = p;
  }
  return _impl_.guild_info_;
}
inline ::CMsgGuildInfo* CMsgGuildData::mutable_guild_info() {
  ::CMsgGuildInfo* _msg = _internal_mutable_guild_info();
  // @@protoc_insertion_point(field_mutable:CMsgGuildData.guild_info)
  return _msg;
}
inline void CMsgGuildData::set_allocated_guild_info(::CMsgGuildInfo* guild_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_info_;
  }
  if (guild_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_info);
    if (message_arena != submessage_arena) {
      guild_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_info_ = guild_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildData.guild_info)
}

// repeated .CMsgGuildRole guild_roles = 3;
inline int CMsgGuildData::_internal_guild_roles_size() const {
  return _impl_.guild_roles_.size();
}
inline int CMsgGuildData::guild_roles_size() const {
  return _internal_guild_roles_size();
}
inline void CMsgGuildData::clear_guild_roles() {
  _impl_.guild_roles_.Clear();
}
inline ::CMsgGuildRole* CMsgGuildData::mutable_guild_roles(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildData.guild_roles)
  return _impl_.guild_roles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildRole >*
CMsgGuildData::mutable_guild_roles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildData.guild_roles)
  return &_impl_.guild_roles_;
}
inline const ::CMsgGuildRole& CMsgGuildData::_internal_guild_roles(int index) const {
  return _impl_.guild_roles_.Get(index);
}
inline const ::CMsgGuildRole& CMsgGuildData::guild_roles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildData.guild_roles)
  return _internal_guild_roles(index);
}
inline ::CMsgGuildRole* CMsgGuildData::_internal_add_guild_roles() {
  return _impl_.guild_roles_.Add();
}
inline ::CMsgGuildRole* CMsgGuildData::add_guild_roles() {
  ::CMsgGuildRole* _add = _internal_add_guild_roles();
  // @@protoc_insertion_point(field_add:CMsgGuildData.guild_roles)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildRole >&
CMsgGuildData::guild_roles() const {
  // @@protoc_insertion_point(field_list:CMsgGuildData.guild_roles)
  return _impl_.guild_roles_;
}

// repeated .CMsgGuildMember guild_members = 4;
inline int CMsgGuildData::_internal_guild_members_size() const {
  return _impl_.guild_members_.size();
}
inline int CMsgGuildData::guild_members_size() const {
  return _internal_guild_members_size();
}
inline void CMsgGuildData::clear_guild_members() {
  _impl_.guild_members_.Clear();
}
inline ::CMsgGuildMember* CMsgGuildData::mutable_guild_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildData.guild_members)
  return _impl_.guild_members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >*
CMsgGuildData::mutable_guild_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildData.guild_members)
  return &_impl_.guild_members_;
}
inline const ::CMsgGuildMember& CMsgGuildData::_internal_guild_members(int index) const {
  return _impl_.guild_members_.Get(index);
}
inline const ::CMsgGuildMember& CMsgGuildData::guild_members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildData.guild_members)
  return _internal_guild_members(index);
}
inline ::CMsgGuildMember* CMsgGuildData::_internal_add_guild_members() {
  return _impl_.guild_members_.Add();
}
inline ::CMsgGuildMember* CMsgGuildData::add_guild_members() {
  ::CMsgGuildMember* _add = _internal_add_guild_members();
  // @@protoc_insertion_point(field_add:CMsgGuildData.guild_members)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >&
CMsgGuildData::guild_members() const {
  // @@protoc_insertion_point(field_list:CMsgGuildData.guild_members)
  return _impl_.guild_members_;
}

// repeated .CMsgGuildInvite guild_invites = 5;
inline int CMsgGuildData::_internal_guild_invites_size() const {
  return _impl_.guild_invites_.size();
}
inline int CMsgGuildData::guild_invites_size() const {
  return _internal_guild_invites_size();
}
inline void CMsgGuildData::clear_guild_invites() {
  _impl_.guild_invites_.Clear();
}
inline ::CMsgGuildInvite* CMsgGuildData::mutable_guild_invites(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildData.guild_invites)
  return _impl_.guild_invites_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildInvite >*
CMsgGuildData::mutable_guild_invites() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildData.guild_invites)
  return &_impl_.guild_invites_;
}
inline const ::CMsgGuildInvite& CMsgGuildData::_internal_guild_invites(int index) const {
  return _impl_.guild_invites_.Get(index);
}
inline const ::CMsgGuildInvite& CMsgGuildData::guild_invites(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildData.guild_invites)
  return _internal_guild_invites(index);
}
inline ::CMsgGuildInvite* CMsgGuildData::_internal_add_guild_invites() {
  return _impl_.guild_invites_.Add();
}
inline ::CMsgGuildInvite* CMsgGuildData::add_guild_invites() {
  ::CMsgGuildInvite* _add = _internal_add_guild_invites();
  // @@protoc_insertion_point(field_add:CMsgGuildData.guild_invites)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildInvite >&
CMsgGuildData::guild_invites() const {
  // @@protoc_insertion_point(field_list:CMsgGuildData.guild_invites)
  return _impl_.guild_invites_;
}

// -------------------------------------------------------------------

// CMsgAccountGuildInvite

// optional uint32 guild_id = 1;
inline bool CMsgAccountGuildInvite::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountGuildInvite::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgAccountGuildInvite::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAccountGuildInvite::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgAccountGuildInvite::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildInvite.guild_id)
  return _internal_guild_id();
}
inline void CMsgAccountGuildInvite::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgAccountGuildInvite::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildInvite.guild_id)
}

// optional uint32 requester_account_id = 2;
inline bool CMsgAccountGuildInvite::_internal_has_requester_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAccountGuildInvite::has_requester_account_id() const {
  return _internal_has_requester_account_id();
}
inline void CMsgAccountGuildInvite::clear_requester_account_id() {
  _impl_.requester_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgAccountGuildInvite::_internal_requester_account_id() const {
  return _impl_.requester_account_id_;
}
inline uint32_t CMsgAccountGuildInvite::requester_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildInvite.requester_account_id)
  return _internal_requester_account_id();
}
inline void CMsgAccountGuildInvite::_internal_set_requester_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.requester_account_id_ = value;
}
inline void CMsgAccountGuildInvite::set_requester_account_id(uint32_t value) {
  _internal_set_requester_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildInvite.requester_account_id)
}

// optional uint32 timestamp_sent = 3;
inline bool CMsgAccountGuildInvite::_internal_has_timestamp_sent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAccountGuildInvite::has_timestamp_sent() const {
  return _internal_has_timestamp_sent();
}
inline void CMsgAccountGuildInvite::clear_timestamp_sent() {
  _impl_.timestamp_sent_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgAccountGuildInvite::_internal_timestamp_sent() const {
  return _impl_.timestamp_sent_;
}
inline uint32_t CMsgAccountGuildInvite::timestamp_sent() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildInvite.timestamp_sent)
  return _internal_timestamp_sent();
}
inline void CMsgAccountGuildInvite::_internal_set_timestamp_sent(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.timestamp_sent_ = value;
}
inline void CMsgAccountGuildInvite::set_timestamp_sent(uint32_t value) {
  _internal_set_timestamp_sent(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildInvite.timestamp_sent)
}

// -------------------------------------------------------------------

// CMsgAccountGuildMemberships

// repeated uint32 guild_ids = 1;
inline int CMsgAccountGuildMemberships::_internal_guild_ids_size() const {
  return _impl_.guild_ids_.size();
}
inline int CMsgAccountGuildMemberships::guild_ids_size() const {
  return _internal_guild_ids_size();
}
inline void CMsgAccountGuildMemberships::clear_guild_ids() {
  _impl_.guild_ids_.Clear();
}
inline uint32_t CMsgAccountGuildMemberships::_internal_guild_ids(int index) const {
  return _impl_.guild_ids_.Get(index);
}
inline uint32_t CMsgAccountGuildMemberships::guild_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildMemberships.guild_ids)
  return _internal_guild_ids(index);
}
inline void CMsgAccountGuildMemberships::set_guild_ids(int index, uint32_t value) {
  _impl_.guild_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildMemberships.guild_ids)
}
inline void CMsgAccountGuildMemberships::_internal_add_guild_ids(uint32_t value) {
  _impl_.guild_ids_.Add(value);
}
inline void CMsgAccountGuildMemberships::add_guild_ids(uint32_t value) {
  _internal_add_guild_ids(value);
  // @@protoc_insertion_point(field_add:CMsgAccountGuildMemberships.guild_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountGuildMemberships::_internal_guild_ids() const {
  return _impl_.guild_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountGuildMemberships::guild_ids() const {
  // @@protoc_insertion_point(field_list:CMsgAccountGuildMemberships.guild_ids)
  return _internal_guild_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountGuildMemberships::_internal_mutable_guild_ids() {
  return &_impl_.guild_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountGuildMemberships::mutable_guild_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountGuildMemberships.guild_ids)
  return _internal_mutable_guild_ids();
}

// repeated .CMsgAccountGuildInvite guild_invites = 2;
inline int CMsgAccountGuildMemberships::_internal_guild_invites_size() const {
  return _impl_.guild_invites_.size();
}
inline int CMsgAccountGuildMemberships::guild_invites_size() const {
  return _internal_guild_invites_size();
}
inline void CMsgAccountGuildMemberships::clear_guild_invites() {
  _impl_.guild_invites_.Clear();
}
inline ::CMsgAccountGuildInvite* CMsgAccountGuildMemberships::mutable_guild_invites(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAccountGuildMemberships.guild_invites)
  return _impl_.guild_invites_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildInvite >*
CMsgAccountGuildMemberships::mutable_guild_invites() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountGuildMemberships.guild_invites)
  return &_impl_.guild_invites_;
}
inline const ::CMsgAccountGuildInvite& CMsgAccountGuildMemberships::_internal_guild_invites(int index) const {
  return _impl_.guild_invites_.Get(index);
}
inline const ::CMsgAccountGuildInvite& CMsgAccountGuildMemberships::guild_invites(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildMemberships.guild_invites)
  return _internal_guild_invites(index);
}
inline ::CMsgAccountGuildInvite* CMsgAccountGuildMemberships::_internal_add_guild_invites() {
  return _impl_.guild_invites_.Add();
}
inline ::CMsgAccountGuildInvite* CMsgAccountGuildMemberships::add_guild_invites() {
  ::CMsgAccountGuildInvite* _add = _internal_add_guild_invites();
  // @@protoc_insertion_point(field_add:CMsgAccountGuildMemberships.guild_invites)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildInvite >&
CMsgAccountGuildMemberships::guild_invites() const {
  // @@protoc_insertion_point(field_list:CMsgAccountGuildMemberships.guild_invites)
  return _impl_.guild_invites_;
}

// -------------------------------------------------------------------

// CMsgGuildPersonaInfo

// optional uint32 guild_id = 1;
inline bool CMsgGuildPersonaInfo::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildPersonaInfo::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGuildPersonaInfo::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildPersonaInfo::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgGuildPersonaInfo::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildPersonaInfo.guild_id)
  return _internal_guild_id();
}
inline void CMsgGuildPersonaInfo::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgGuildPersonaInfo::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildPersonaInfo.guild_id)
}

// optional string guild_tag = 2;
inline bool CMsgGuildPersonaInfo::_internal_has_guild_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildPersonaInfo::has_guild_tag() const {
  return _internal_has_guild_tag();
}
inline void CMsgGuildPersonaInfo::clear_guild_tag() {
  _impl_.guild_tag_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGuildPersonaInfo::guild_tag() const {
  // @@protoc_insertion_point(field_get:CMsgGuildPersonaInfo.guild_tag)
  return _internal_guild_tag();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGuildPersonaInfo::set_guild_tag(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.guild_tag_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGuildPersonaInfo.guild_tag)
}
inline std::string* CMsgGuildPersonaInfo::mutable_guild_tag() {
  std::string* _s = _internal_mutable_guild_tag();
  // @@protoc_insertion_point(field_mutable:CMsgGuildPersonaInfo.guild_tag)
  return _s;
}
inline const std::string& CMsgGuildPersonaInfo::_internal_guild_tag() const {
  return _impl_.guild_tag_.Get();
}
inline void CMsgGuildPersonaInfo::_internal_set_guild_tag(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_tag_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGuildPersonaInfo::_internal_mutable_guild_tag() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.guild_tag_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGuildPersonaInfo::release_guild_tag() {
  // @@protoc_insertion_point(field_release:CMsgGuildPersonaInfo.guild_tag)
  if (!_internal_has_guild_tag()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.guild_tag_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_tag_.IsDefault()) {
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGuildPersonaInfo::set_allocated_guild_tag(std::string* guild_tag) {
  if (guild_tag != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_tag_.SetAllocated(guild_tag, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_tag_.IsDefault()) {
    _impl_.guild_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildPersonaInfo.guild_tag)
}

// optional uint32 guild_flags = 3;
inline bool CMsgGuildPersonaInfo::_internal_has_guild_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildPersonaInfo::has_guild_flags() const {
  return _internal_has_guild_flags();
}
inline void CMsgGuildPersonaInfo::clear_guild_flags() {
  _impl_.guild_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGuildPersonaInfo::_internal_guild_flags() const {
  return _impl_.guild_flags_;
}
inline uint32_t CMsgGuildPersonaInfo::guild_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGuildPersonaInfo.guild_flags)
  return _internal_guild_flags();
}
inline void CMsgGuildPersonaInfo::_internal_set_guild_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.guild_flags_ = value;
}
inline void CMsgGuildPersonaInfo::set_guild_flags(uint32_t value) {
  _internal_set_guild_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGuildPersonaInfo.guild_flags)
}

// -------------------------------------------------------------------

// CMsgAccountGuildsPersonaInfo

// repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
inline int CMsgAccountGuildsPersonaInfo::_internal_guild_persona_infos_size() const {
  return _impl_.guild_persona_infos_.size();
}
inline int CMsgAccountGuildsPersonaInfo::guild_persona_infos_size() const {
  return _internal_guild_persona_infos_size();
}
inline void CMsgAccountGuildsPersonaInfo::clear_guild_persona_infos() {
  _impl_.guild_persona_infos_.Clear();
}
inline ::CMsgGuildPersonaInfo* CMsgAccountGuildsPersonaInfo::mutable_guild_persona_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAccountGuildsPersonaInfo.guild_persona_infos)
  return _impl_.guild_persona_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildPersonaInfo >*
CMsgAccountGuildsPersonaInfo::mutable_guild_persona_infos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountGuildsPersonaInfo.guild_persona_infos)
  return &_impl_.guild_persona_infos_;
}
inline const ::CMsgGuildPersonaInfo& CMsgAccountGuildsPersonaInfo::_internal_guild_persona_infos(int index) const {
  return _impl_.guild_persona_infos_.Get(index);
}
inline const ::CMsgGuildPersonaInfo& CMsgAccountGuildsPersonaInfo::guild_persona_infos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildsPersonaInfo.guild_persona_infos)
  return _internal_guild_persona_infos(index);
}
inline ::CMsgGuildPersonaInfo* CMsgAccountGuildsPersonaInfo::_internal_add_guild_persona_infos() {
  return _impl_.guild_persona_infos_.Add();
}
inline ::CMsgGuildPersonaInfo* CMsgAccountGuildsPersonaInfo::add_guild_persona_infos() {
  ::CMsgGuildPersonaInfo* _add = _internal_add_guild_persona_infos();
  // @@protoc_insertion_point(field_add:CMsgAccountGuildsPersonaInfo.guild_persona_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildPersonaInfo >&
CMsgAccountGuildsPersonaInfo::guild_persona_infos() const {
  // @@protoc_insertion_point(field_list:CMsgAccountGuildsPersonaInfo.guild_persona_infos)
  return _impl_.guild_persona_infos_;
}

// -------------------------------------------------------------------

// CMsgGuildFeedEvent

// optional uint64 feed_event_id = 1;
inline bool CMsgGuildFeedEvent::_internal_has_feed_event_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildFeedEvent::has_feed_event_id() const {
  return _internal_has_feed_event_id();
}
inline void CMsgGuildFeedEvent::clear_feed_event_id() {
  _impl_.feed_event_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGuildFeedEvent::_internal_feed_event_id() const {
  return _impl_.feed_event_id_;
}
inline uint64_t CMsgGuildFeedEvent::feed_event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildFeedEvent.feed_event_id)
  return _internal_feed_event_id();
}
inline void CMsgGuildFeedEvent::_internal_set_feed_event_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.feed_event_id_ = value;
}
inline void CMsgGuildFeedEvent::set_feed_event_id(uint64_t value) {
  _internal_set_feed_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildFeedEvent.feed_event_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgGuildFeedEvent::_internal_has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildFeedEvent::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CMsgGuildFeedEvent::clear_timestamp() {
  _impl_.timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGuildFeedEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline uint32_t CMsgGuildFeedEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildFeedEvent.timestamp)
  return _internal_timestamp();
}
inline void CMsgGuildFeedEvent::_internal_set_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.timestamp_ = value;
}
inline void CMsgGuildFeedEvent::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildFeedEvent.timestamp)
}

// optional uint32 event_type = 3;
inline bool CMsgGuildFeedEvent::_internal_has_event_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildFeedEvent::has_event_type() const {
  return _internal_has_event_type();
}
inline void CMsgGuildFeedEvent::clear_event_type() {
  _impl_.event_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGuildFeedEvent::_internal_event_type() const {
  return _impl_.event_type_;
}
inline uint32_t CMsgGuildFeedEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgGuildFeedEvent.event_type)
  return _internal_event_type();
}
inline void CMsgGuildFeedEvent::_internal_set_event_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.event_type_ = value;
}
inline void CMsgGuildFeedEvent::set_event_type(uint32_t value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CMsgGuildFeedEvent.event_type)
}

// optional uint32 param_uint_1 = 4;
inline bool CMsgGuildFeedEvent::_internal_has_param_uint_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildFeedEvent::has_param_uint_1() const {
  return _internal_has_param_uint_1();
}
inline void CMsgGuildFeedEvent::clear_param_uint_1() {
  _impl_.param_uint_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGuildFeedEvent::_internal_param_uint_1() const {
  return _impl_.param_uint_1_;
}
inline uint32_t CMsgGuildFeedEvent::param_uint_1() const {
  // @@protoc_insertion_point(field_get:CMsgGuildFeedEvent.param_uint_1)
  return _internal_param_uint_1();
}
inline void CMsgGuildFeedEvent::_internal_set_param_uint_1(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.param_uint_1_ = value;
}
inline void CMsgGuildFeedEvent::set_param_uint_1(uint32_t value) {
  _internal_set_param_uint_1(value);
  // @@protoc_insertion_point(field_set:CMsgGuildFeedEvent.param_uint_1)
}

// optional uint32 param_uint_2 = 5;
inline bool CMsgGuildFeedEvent::_internal_has_param_uint_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGuildFeedEvent::has_param_uint_2() const {
  return _internal_has_param_uint_2();
}
inline void CMsgGuildFeedEvent::clear_param_uint_2() {
  _impl_.param_uint_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGuildFeedEvent::_internal_param_uint_2() const {
  return _impl_.param_uint_2_;
}
inline uint32_t CMsgGuildFeedEvent::param_uint_2() const {
  // @@protoc_insertion_point(field_get:CMsgGuildFeedEvent.param_uint_2)
  return _internal_param_uint_2();
}
inline void CMsgGuildFeedEvent::_internal_set_param_uint_2(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.param_uint_2_ = value;
}
inline void CMsgGuildFeedEvent::set_param_uint_2(uint32_t value) {
  _internal_set_param_uint_2(value);
  // @@protoc_insertion_point(field_set:CMsgGuildFeedEvent.param_uint_2)
}

// optional uint32 param_uint_3 = 6;
inline bool CMsgGuildFeedEvent::_internal_has_param_uint_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGuildFeedEvent::has_param_uint_3() const {
  return _internal_has_param_uint_3();
}
inline void CMsgGuildFeedEvent::clear_param_uint_3() {
  _impl_.param_uint_3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgGuildFeedEvent::_internal_param_uint_3() const {
  return _impl_.param_uint_3_;
}
inline uint32_t CMsgGuildFeedEvent::param_uint_3() const {
  // @@protoc_insertion_point(field_get:CMsgGuildFeedEvent.param_uint_3)
  return _internal_param_uint_3();
}
inline void CMsgGuildFeedEvent::_internal_set_param_uint_3(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.param_uint_3_ = value;
}
inline void CMsgGuildFeedEvent::set_param_uint_3(uint32_t value) {
  _internal_set_param_uint_3(value);
  // @@protoc_insertion_point(field_set:CMsgGuildFeedEvent.param_uint_3)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateGuild

// optional .CMsgGuildInfo guild_info = 1;
inline bool CMsgClientToGCCreateGuild::_internal_has_guild_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCCreateGuild::has_guild_info() const {
  return _internal_has_guild_info();
}
inline void CMsgClientToGCCreateGuild::clear_guild_info() {
  if (_impl_.guild_info_ != nullptr) _impl_.guild_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildInfo& CMsgClientToGCCreateGuild::_internal_guild_info() const {
  const ::CMsgGuildInfo* p = _impl_.guild_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildInfo&>(
      ::_CMsgGuildInfo_default_instance_);
}
inline const ::CMsgGuildInfo& CMsgClientToGCCreateGuild::guild_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateGuild.guild_info)
  return _internal_guild_info();
}
inline void CMsgClientToGCCreateGuild::unsafe_arena_set_allocated_guild_info(
    ::CMsgGuildInfo* guild_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_info_);
  }
  _impl_.guild_info_ = guild_info;
  if (guild_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCCreateGuild.guild_info)
}
inline ::CMsgGuildInfo* CMsgClientToGCCreateGuild::release_guild_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildInfo* CMsgClientToGCCreateGuild::unsafe_arena_release_guild_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCCreateGuild.guild_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
  return temp;
}
inline ::CMsgGuildInfo* CMsgClientToGCCreateGuild::_internal_mutable_guild_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildInfo>(GetArenaForAllocation());
    _impl_.guild_info_ = p;
  }
  return _impl_.guild_info_;
}
inline ::CMsgGuildInfo* CMsgClientToGCCreateGuild::mutable_guild_info() {
  ::CMsgGuildInfo* _msg = _internal_mutable_guild_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCCreateGuild.guild_info)
  return _msg;
}
inline void CMsgClientToGCCreateGuild::set_allocated_guild_info(::CMsgGuildInfo* guild_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_info_;
  }
  if (guild_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_info);
    if (message_arena != submessage_arena) {
      guild_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_info_ = guild_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCCreateGuild.guild_info)
}

// optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
inline bool CMsgClientToGCCreateGuild::_internal_has_guild_chat_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateGuild::has_guild_chat_type() const {
  return _internal_has_guild_chat_type();
}
inline void CMsgClientToGCCreateGuild::clear_guild_chat_type() {
  _impl_.guild_chat_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::EGuildChatType CMsgClientToGCCreateGuild::_internal_guild_chat_type() const {
  return static_cast< ::EGuildChatType >(_impl_.guild_chat_type_);
}
inline ::EGuildChatType CMsgClientToGCCreateGuild::guild_chat_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateGuild.guild_chat_type)
  return _internal_guild_chat_type();
}
inline void CMsgClientToGCCreateGuild::_internal_set_guild_chat_type(::EGuildChatType value) {
  assert(::EGuildChatType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_chat_type_ = value;
}
inline void CMsgClientToGCCreateGuild::set_guild_chat_type(::EGuildChatType value) {
  _internal_set_guild_chat_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateGuild.guild_chat_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreateGuildResponse

// optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCCreateGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCCreateGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCCreateGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCCreateGuildResponse::_internal_set_result(::CMsgClientToGCCreateGuildResponse_EResponse value) {
  assert(::CMsgClientToGCCreateGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCCreateGuildResponse::set_result(::CMsgClientToGCCreateGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateGuildResponse.result)
}

// optional uint32 guild_id = 2;
inline bool CMsgClientToGCCreateGuildResponse::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCreateGuildResponse::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCCreateGuildResponse::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCCreateGuildResponse::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCCreateGuildResponse::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCreateGuildResponse.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCCreateGuildResponse::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCCreateGuildResponse::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCreateGuildResponse.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetGuildInfo

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCSetGuildInfo::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildInfo::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCSetGuildInfo::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSetGuildInfo::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCSetGuildInfo::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildInfo.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCSetGuildInfo::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCSetGuildInfo::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildInfo.guild_id)
}

// optional .CMsgGuildInfo guild_info = 2;
inline bool CMsgClientToGCSetGuildInfo::_internal_has_guild_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCSetGuildInfo::has_guild_info() const {
  return _internal_has_guild_info();
}
inline void CMsgClientToGCSetGuildInfo::clear_guild_info() {
  if (_impl_.guild_info_ != nullptr) _impl_.guild_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildInfo& CMsgClientToGCSetGuildInfo::_internal_guild_info() const {
  const ::CMsgGuildInfo* p = _impl_.guild_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildInfo&>(
      ::_CMsgGuildInfo_default_instance_);
}
inline const ::CMsgGuildInfo& CMsgClientToGCSetGuildInfo::guild_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildInfo.guild_info)
  return _internal_guild_info();
}
inline void CMsgClientToGCSetGuildInfo::unsafe_arena_set_allocated_guild_info(
    ::CMsgGuildInfo* guild_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_info_);
  }
  _impl_.guild_info_ = guild_info;
  if (guild_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCSetGuildInfo.guild_info)
}
inline ::CMsgGuildInfo* CMsgClientToGCSetGuildInfo::release_guild_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildInfo* CMsgClientToGCSetGuildInfo::unsafe_arena_release_guild_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSetGuildInfo.guild_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildInfo* temp = _impl_.guild_info_;
  _impl_.guild_info_ = nullptr;
  return temp;
}
inline ::CMsgGuildInfo* CMsgClientToGCSetGuildInfo::_internal_mutable_guild_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildInfo>(GetArenaForAllocation());
    _impl_.guild_info_ = p;
  }
  return _impl_.guild_info_;
}
inline ::CMsgGuildInfo* CMsgClientToGCSetGuildInfo::mutable_guild_info() {
  ::CMsgGuildInfo* _msg = _internal_mutable_guild_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetGuildInfo.guild_info)
  return _msg;
}
inline void CMsgClientToGCSetGuildInfo::set_allocated_guild_info(::CMsgGuildInfo* guild_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_info_;
  }
  if (guild_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_info);
    if (message_arena != submessage_arena) {
      guild_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_info_ = guild_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSetGuildInfo.guild_info)
}

// optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
inline bool CMsgClientToGCSetGuildInfo::_internal_has_guild_chat_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildInfo::has_guild_chat_type() const {
  return _internal_has_guild_chat_type();
}
inline void CMsgClientToGCSetGuildInfo::clear_guild_chat_type() {
  _impl_.guild_chat_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::EGuildChatType CMsgClientToGCSetGuildInfo::_internal_guild_chat_type() const {
  return static_cast< ::EGuildChatType >(_impl_.guild_chat_type_);
}
inline ::EGuildChatType CMsgClientToGCSetGuildInfo::guild_chat_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildInfo.guild_chat_type)
  return _internal_guild_chat_type();
}
inline void CMsgClientToGCSetGuildInfo::_internal_set_guild_chat_type(::EGuildChatType value) {
  assert(::EGuildChatType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.guild_chat_type_ = value;
}
inline void CMsgClientToGCSetGuildInfo::set_guild_chat_type(::EGuildChatType value) {
  _internal_set_guild_chat_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildInfo.guild_chat_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetGuildInfoResponse

// optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSetGuildInfoResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildInfoResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSetGuildInfoResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSetGuildInfoResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildInfoResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSetGuildInfoResponse::_internal_set_result(::CMsgClientToGCSetGuildInfoResponse_EResponse value) {
  assert(::CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCSetGuildInfoResponse::set_result(::CMsgClientToGCSetGuildInfoResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildInfoResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildData

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCRequestGuildData::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildData::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRequestGuildData::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCRequestGuildData::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCRequestGuildData::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildData.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRequestGuildData::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCRequestGuildData::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildData.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildDataResponse

// optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestGuildDataResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildDataResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestGuildDataResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestGuildDataResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildDataResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestGuildDataResponse::_internal_set_result(::CMsgClientToGCRequestGuildDataResponse_EResponse value) {
  assert(::CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRequestGuildDataResponse::set_result(::CMsgClientToGCRequestGuildDataResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildDataResponse.result)
}

// optional .CMsgGuildData guild_data = 2;
inline bool CMsgClientToGCRequestGuildDataResponse::_internal_has_guild_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_data_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestGuildDataResponse::has_guild_data() const {
  return _internal_has_guild_data();
}
inline void CMsgClientToGCRequestGuildDataResponse::clear_guild_data() {
  if (_impl_.guild_data_ != nullptr) _impl_.guild_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildData& CMsgClientToGCRequestGuildDataResponse::_internal_guild_data() const {
  const ::CMsgGuildData* p = _impl_.guild_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildData&>(
      ::_CMsgGuildData_default_instance_);
}
inline const ::CMsgGuildData& CMsgClientToGCRequestGuildDataResponse::guild_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildDataResponse.guild_data)
  return _internal_guild_data();
}
inline void CMsgClientToGCRequestGuildDataResponse::unsafe_arena_set_allocated_guild_data(
    ::CMsgGuildData* guild_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_data_);
  }
  _impl_.guild_data_ = guild_data;
  if (guild_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestGuildDataResponse.guild_data)
}
inline ::CMsgGuildData* CMsgClientToGCRequestGuildDataResponse::release_guild_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildData* temp = _impl_.guild_data_;
  _impl_.guild_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildData* CMsgClientToGCRequestGuildDataResponse::unsafe_arena_release_guild_data() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestGuildDataResponse.guild_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildData* temp = _impl_.guild_data_;
  _impl_.guild_data_ = nullptr;
  return temp;
}
inline ::CMsgGuildData* CMsgClientToGCRequestGuildDataResponse::_internal_mutable_guild_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildData>(GetArenaForAllocation());
    _impl_.guild_data_ = p;
  }
  return _impl_.guild_data_;
}
inline ::CMsgGuildData* CMsgClientToGCRequestGuildDataResponse::mutable_guild_data() {
  ::CMsgGuildData* _msg = _internal_mutable_guild_data();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestGuildDataResponse.guild_data)
  return _msg;
}
inline void CMsgClientToGCRequestGuildDataResponse::set_allocated_guild_data(::CMsgGuildData* guild_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_data_;
  }
  if (guild_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_data);
    if (message_arena != submessage_arena) {
      guild_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_data_ = guild_data;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestGuildDataResponse.guild_data)
}

// -------------------------------------------------------------------

// CMsgGCToClientGuildDataUpdated

// optional .CMsgGuildData guild_data = 1;
inline bool CMsgGCToClientGuildDataUpdated::_internal_has_guild_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_data_ != nullptr);
  return value;
}
inline bool CMsgGCToClientGuildDataUpdated::has_guild_data() const {
  return _internal_has_guild_data();
}
inline void CMsgGCToClientGuildDataUpdated::clear_guild_data() {
  if (_impl_.guild_data_ != nullptr) _impl_.guild_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildData& CMsgGCToClientGuildDataUpdated::_internal_guild_data() const {
  const ::CMsgGuildData* p = _impl_.guild_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildData&>(
      ::_CMsgGuildData_default_instance_);
}
inline const ::CMsgGuildData& CMsgGCToClientGuildDataUpdated::guild_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientGuildDataUpdated.guild_data)
  return _internal_guild_data();
}
inline void CMsgGCToClientGuildDataUpdated::unsafe_arena_set_allocated_guild_data(
    ::CMsgGuildData* guild_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_data_);
  }
  _impl_.guild_data_ = guild_data;
  if (guild_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientGuildDataUpdated.guild_data)
}
inline ::CMsgGuildData* CMsgGCToClientGuildDataUpdated::release_guild_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildData* temp = _impl_.guild_data_;
  _impl_.guild_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildData* CMsgGCToClientGuildDataUpdated::unsafe_arena_release_guild_data() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientGuildDataUpdated.guild_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildData* temp = _impl_.guild_data_;
  _impl_.guild_data_ = nullptr;
  return temp;
}
inline ::CMsgGuildData* CMsgGCToClientGuildDataUpdated::_internal_mutable_guild_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildData>(GetArenaForAllocation());
    _impl_.guild_data_ = p;
  }
  return _impl_.guild_data_;
}
inline ::CMsgGuildData* CMsgGCToClientGuildDataUpdated::mutable_guild_data() {
  ::CMsgGuildData* _msg = _internal_mutable_guild_data();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientGuildDataUpdated.guild_data)
  return _msg;
}
inline void CMsgGCToClientGuildDataUpdated::set_allocated_guild_data(::CMsgGuildData* guild_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_data_;
  }
  if (guild_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_data);
    if (message_arena != submessage_arena) {
      guild_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_data_ = guild_data;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientGuildDataUpdated.guild_data)
}

// optional uint32 update_flags = 2;
inline bool CMsgGCToClientGuildDataUpdated::_internal_has_update_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientGuildDataUpdated::has_update_flags() const {
  return _internal_has_update_flags();
}
inline void CMsgGCToClientGuildDataUpdated::clear_update_flags() {
  _impl_.update_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToClientGuildDataUpdated::_internal_update_flags() const {
  return _impl_.update_flags_;
}
inline uint32_t CMsgGCToClientGuildDataUpdated::update_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientGuildDataUpdated.update_flags)
  return _internal_update_flags();
}
inline void CMsgGCToClientGuildDataUpdated::_internal_set_update_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.update_flags_ = value;
}
inline void CMsgGCToClientGuildDataUpdated::set_update_flags(uint32_t value) {
  _internal_set_update_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientGuildDataUpdated.update_flags)
}

// -------------------------------------------------------------------

// CMsgGCToClientGuildMembersDataUpdated

// optional uint32 guild_id = 1;
inline bool CMsgGCToClientGuildMembersDataUpdated::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientGuildMembersDataUpdated::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGCToClientGuildMembersDataUpdated::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientGuildMembersDataUpdated::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgGCToClientGuildMembersDataUpdated::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientGuildMembersDataUpdated.guild_id)
  return _internal_guild_id();
}
inline void CMsgGCToClientGuildMembersDataUpdated::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgGCToClientGuildMembersDataUpdated::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientGuildMembersDataUpdated.guild_id)
}

// repeated .CMsgGuildMember members_data = 2;
inline int CMsgGCToClientGuildMembersDataUpdated::_internal_members_data_size() const {
  return _impl_.members_data_.size();
}
inline int CMsgGCToClientGuildMembersDataUpdated::members_data_size() const {
  return _internal_members_data_size();
}
inline void CMsgGCToClientGuildMembersDataUpdated::clear_members_data() {
  _impl_.members_data_.Clear();
}
inline ::CMsgGuildMember* CMsgGCToClientGuildMembersDataUpdated::mutable_members_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientGuildMembersDataUpdated.members_data)
  return _impl_.members_data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >*
CMsgGCToClientGuildMembersDataUpdated::mutable_members_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientGuildMembersDataUpdated.members_data)
  return &_impl_.members_data_;
}
inline const ::CMsgGuildMember& CMsgGCToClientGuildMembersDataUpdated::_internal_members_data(int index) const {
  return _impl_.members_data_.Get(index);
}
inline const ::CMsgGuildMember& CMsgGCToClientGuildMembersDataUpdated::members_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientGuildMembersDataUpdated.members_data)
  return _internal_members_data(index);
}
inline ::CMsgGuildMember* CMsgGCToClientGuildMembersDataUpdated::_internal_add_members_data() {
  return _impl_.members_data_.Add();
}
inline ::CMsgGuildMember* CMsgGCToClientGuildMembersDataUpdated::add_members_data() {
  ::CMsgGuildMember* _add = _internal_add_members_data();
  // @@protoc_insertion_point(field_add:CMsgGCToClientGuildMembersDataUpdated.members_data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildMember >&
CMsgGCToClientGuildMembersDataUpdated::members_data() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientGuildMembersDataUpdated.members_data)
  return _impl_.members_data_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildMembership

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildMembershipResponse

// optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestGuildMembershipResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildMembershipResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestGuildMembershipResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestGuildMembershipResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildMembershipResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestGuildMembershipResponse::_internal_set_result(::CMsgClientToGCRequestGuildMembershipResponse_EResponse value) {
  assert(::CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRequestGuildMembershipResponse::set_result(::CMsgClientToGCRequestGuildMembershipResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildMembershipResponse.result)
}

// optional .CMsgAccountGuildMemberships guild_memberships = 2;
inline bool CMsgClientToGCRequestGuildMembershipResponse::_internal_has_guild_memberships() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_memberships_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestGuildMembershipResponse::has_guild_memberships() const {
  return _internal_has_guild_memberships();
}
inline void CMsgClientToGCRequestGuildMembershipResponse::clear_guild_memberships() {
  if (_impl_.guild_memberships_ != nullptr) _impl_.guild_memberships_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountGuildMemberships& CMsgClientToGCRequestGuildMembershipResponse::_internal_guild_memberships() const {
  const ::CMsgAccountGuildMemberships* p = _impl_.guild_memberships_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountGuildMemberships&>(
      ::_CMsgAccountGuildMemberships_default_instance_);
}
inline const ::CMsgAccountGuildMemberships& CMsgClientToGCRequestGuildMembershipResponse::guild_memberships() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildMembershipResponse.guild_memberships)
  return _internal_guild_memberships();
}
inline void CMsgClientToGCRequestGuildMembershipResponse::unsafe_arena_set_allocated_guild_memberships(
    ::CMsgAccountGuildMemberships* guild_memberships) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_memberships_);
  }
  _impl_.guild_memberships_ = guild_memberships;
  if (guild_memberships) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestGuildMembershipResponse.guild_memberships)
}
inline ::CMsgAccountGuildMemberships* CMsgClientToGCRequestGuildMembershipResponse::release_guild_memberships() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildMemberships* temp = _impl_.guild_memberships_;
  _impl_.guild_memberships_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountGuildMemberships* CMsgClientToGCRequestGuildMembershipResponse::unsafe_arena_release_guild_memberships() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestGuildMembershipResponse.guild_memberships)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildMemberships* temp = _impl_.guild_memberships_;
  _impl_.guild_memberships_ = nullptr;
  return temp;
}
inline ::CMsgAccountGuildMemberships* CMsgClientToGCRequestGuildMembershipResponse::_internal_mutable_guild_memberships() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_memberships_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountGuildMemberships>(GetArenaForAllocation());
    _impl_.guild_memberships_ = p;
  }
  return _impl_.guild_memberships_;
}
inline ::CMsgAccountGuildMemberships* CMsgClientToGCRequestGuildMembershipResponse::mutable_guild_memberships() {
  ::CMsgAccountGuildMemberships* _msg = _internal_mutable_guild_memberships();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestGuildMembershipResponse.guild_memberships)
  return _msg;
}
inline void CMsgClientToGCRequestGuildMembershipResponse::set_allocated_guild_memberships(::CMsgAccountGuildMemberships* guild_memberships) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_memberships_;
  }
  if (guild_memberships) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_memberships);
    if (message_arena != submessage_arena) {
      guild_memberships = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_memberships, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_memberships_ = guild_memberships;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestGuildMembershipResponse.guild_memberships)
}

// -------------------------------------------------------------------

// CMsgGCToClientGuildMembershipUpdated

// optional .CMsgAccountGuildMemberships guild_memberships = 1;
inline bool CMsgGCToClientGuildMembershipUpdated::_internal_has_guild_memberships() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_memberships_ != nullptr);
  return value;
}
inline bool CMsgGCToClientGuildMembershipUpdated::has_guild_memberships() const {
  return _internal_has_guild_memberships();
}
inline void CMsgGCToClientGuildMembershipUpdated::clear_guild_memberships() {
  if (_impl_.guild_memberships_ != nullptr) _impl_.guild_memberships_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountGuildMemberships& CMsgGCToClientGuildMembershipUpdated::_internal_guild_memberships() const {
  const ::CMsgAccountGuildMemberships* p = _impl_.guild_memberships_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountGuildMemberships&>(
      ::_CMsgAccountGuildMemberships_default_instance_);
}
inline const ::CMsgAccountGuildMemberships& CMsgGCToClientGuildMembershipUpdated::guild_memberships() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientGuildMembershipUpdated.guild_memberships)
  return _internal_guild_memberships();
}
inline void CMsgGCToClientGuildMembershipUpdated::unsafe_arena_set_allocated_guild_memberships(
    ::CMsgAccountGuildMemberships* guild_memberships) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_memberships_);
  }
  _impl_.guild_memberships_ = guild_memberships;
  if (guild_memberships) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientGuildMembershipUpdated.guild_memberships)
}
inline ::CMsgAccountGuildMemberships* CMsgGCToClientGuildMembershipUpdated::release_guild_memberships() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildMemberships* temp = _impl_.guild_memberships_;
  _impl_.guild_memberships_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountGuildMemberships* CMsgGCToClientGuildMembershipUpdated::unsafe_arena_release_guild_memberships() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientGuildMembershipUpdated.guild_memberships)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildMemberships* temp = _impl_.guild_memberships_;
  _impl_.guild_memberships_ = nullptr;
  return temp;
}
inline ::CMsgAccountGuildMemberships* CMsgGCToClientGuildMembershipUpdated::_internal_mutable_guild_memberships() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_memberships_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountGuildMemberships>(GetArenaForAllocation());
    _impl_.guild_memberships_ = p;
  }
  return _impl_.guild_memberships_;
}
inline ::CMsgAccountGuildMemberships* CMsgGCToClientGuildMembershipUpdated::mutable_guild_memberships() {
  ::CMsgAccountGuildMemberships* _msg = _internal_mutable_guild_memberships();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientGuildMembershipUpdated.guild_memberships)
  return _msg;
}
inline void CMsgGCToClientGuildMembershipUpdated::set_allocated_guild_memberships(::CMsgAccountGuildMemberships* guild_memberships) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_memberships_;
  }
  if (guild_memberships) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_memberships);
    if (message_arena != submessage_arena) {
      guild_memberships = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_memberships, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_memberships_ = guild_memberships;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientGuildMembershipUpdated.guild_memberships)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinGuild

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCJoinGuild::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCJoinGuild::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCJoinGuild::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCJoinGuild::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCJoinGuild::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCJoinGuild.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCJoinGuild::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCJoinGuild::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCJoinGuild.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinGuildResponse

// optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCJoinGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCJoinGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCJoinGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCJoinGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCJoinGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCJoinGuildResponse::_internal_set_result(::CMsgClientToGCJoinGuildResponse_EResponse value) {
  assert(::CMsgClientToGCJoinGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCJoinGuildResponse::set_result(::CMsgClientToGCJoinGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCJoinGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCLeaveGuild

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCLeaveGuild::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCLeaveGuild::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCLeaveGuild::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCLeaveGuild::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCLeaveGuild::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLeaveGuild.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCLeaveGuild::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCLeaveGuild::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCLeaveGuild.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCLeaveGuildResponse

// optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCLeaveGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCLeaveGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCLeaveGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCLeaveGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLeaveGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCLeaveGuildResponse::_internal_set_result(::CMsgClientToGCLeaveGuildResponse_EResponse value) {
  assert(::CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCLeaveGuildResponse::set_result(::CMsgClientToGCLeaveGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCLeaveGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCKickGuildMember

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCKickGuildMember::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCKickGuildMember::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCKickGuildMember::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCKickGuildMember::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCKickGuildMember::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCKickGuildMember.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCKickGuildMember::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCKickGuildMember::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCKickGuildMember.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCKickGuildMember::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCKickGuildMember::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCKickGuildMember::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCKickGuildMember::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCKickGuildMember::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCKickGuildMember.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCKickGuildMember::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCKickGuildMember::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCKickGuildMember.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCKickGuildMemberResponse

// optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCKickGuildMemberResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCKickGuildMemberResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCKickGuildMemberResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCKickGuildMemberResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCKickGuildMemberResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCKickGuildMemberResponse::_internal_set_result(::CMsgClientToGCKickGuildMemberResponse_EResponse value) {
  assert(::CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCKickGuildMemberResponse::set_result(::CMsgClientToGCKickGuildMemberResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCKickGuildMemberResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetGuildMemberRole

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCSetGuildMemberRole::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildMemberRole::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCSetGuildMemberRole::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCSetGuildMemberRole::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCSetGuildMemberRole::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildMemberRole.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCSetGuildMemberRole::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCSetGuildMemberRole::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildMemberRole.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCSetGuildMemberRole::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildMemberRole::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCSetGuildMemberRole::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSetGuildMemberRole::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCSetGuildMemberRole::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildMemberRole.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCSetGuildMemberRole::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCSetGuildMemberRole::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildMemberRole.target_account_id)
}

// optional uint32 target_role_id = 3;
inline bool CMsgClientToGCSetGuildMemberRole::_internal_has_target_role_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildMemberRole::has_target_role_id() const {
  return _internal_has_target_role_id();
}
inline void CMsgClientToGCSetGuildMemberRole::clear_target_role_id() {
  _impl_.target_role_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCSetGuildMemberRole::_internal_target_role_id() const {
  return _impl_.target_role_id_;
}
inline uint32_t CMsgClientToGCSetGuildMemberRole::target_role_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildMemberRole.target_role_id)
  return _internal_target_role_id();
}
inline void CMsgClientToGCSetGuildMemberRole::_internal_set_target_role_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.target_role_id_ = value;
}
inline void CMsgClientToGCSetGuildMemberRole::set_target_role_id(uint32_t value) {
  _internal_set_target_role_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildMemberRole.target_role_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetGuildMemberRoleResponse

// optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSetGuildMemberRoleResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildMemberRoleResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSetGuildMemberRoleResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildMemberRoleResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSetGuildMemberRoleResponse::_internal_set_result(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse value) {
  assert(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCSetGuildMemberRoleResponse::set_result(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildMemberRoleResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCInviteToGuild

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCInviteToGuild::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCInviteToGuild::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCInviteToGuild::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCInviteToGuild::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCInviteToGuild::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCInviteToGuild.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCInviteToGuild::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCInviteToGuild::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCInviteToGuild.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCInviteToGuild::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCInviteToGuild::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCInviteToGuild::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCInviteToGuild::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCInviteToGuild::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCInviteToGuild.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCInviteToGuild::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCInviteToGuild::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCInviteToGuild.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCInviteToGuildResponse

// optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCInviteToGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCInviteToGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCInviteToGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCInviteToGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCInviteToGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCInviteToGuildResponse::_internal_set_result(::CMsgClientToGCInviteToGuildResponse_EResponse value) {
  assert(::CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCInviteToGuildResponse::set_result(::CMsgClientToGCInviteToGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCInviteToGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCDeclineInviteToGuild

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCDeclineInviteToGuild::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDeclineInviteToGuild::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCDeclineInviteToGuild::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCDeclineInviteToGuild::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCDeclineInviteToGuild::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDeclineInviteToGuild.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCDeclineInviteToGuild::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCDeclineInviteToGuild::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDeclineInviteToGuild.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCDeclineInviteToGuildResponse

// optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCDeclineInviteToGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDeclineInviteToGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCDeclineInviteToGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDeclineInviteToGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCDeclineInviteToGuildResponse::_internal_set_result(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse value) {
  assert(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCDeclineInviteToGuildResponse::set_result(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDeclineInviteToGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCAcceptInviteToGuild

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCAcceptInviteToGuild::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAcceptInviteToGuild::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCAcceptInviteToGuild::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCAcceptInviteToGuild::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCAcceptInviteToGuild::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAcceptInviteToGuild.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCAcceptInviteToGuild::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCAcceptInviteToGuild::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAcceptInviteToGuild.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCAcceptInviteToGuildResponse

// optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCAcceptInviteToGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAcceptInviteToGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCAcceptInviteToGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAcceptInviteToGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCAcceptInviteToGuildResponse::_internal_set_result(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse value) {
  assert(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCAcceptInviteToGuildResponse::set_result(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAcceptInviteToGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCCancelInviteToGuild

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCCancelInviteToGuild::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCancelInviteToGuild::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCCancelInviteToGuild::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCCancelInviteToGuild::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCCancelInviteToGuild::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCancelInviteToGuild.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCCancelInviteToGuild::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCCancelInviteToGuild::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCancelInviteToGuild.guild_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCCancelInviteToGuild::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCancelInviteToGuild::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCCancelInviteToGuild::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCCancelInviteToGuild::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCCancelInviteToGuild::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCancelInviteToGuild.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCCancelInviteToGuild::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCCancelInviteToGuild::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCancelInviteToGuild.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCancelInviteToGuildResponse

// optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCCancelInviteToGuildResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCancelInviteToGuildResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCCancelInviteToGuildResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCCancelInviteToGuildResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCancelInviteToGuildResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCCancelInviteToGuildResponse::_internal_set_result(::CMsgClientToGCCancelInviteToGuildResponse_EResponse value) {
  assert(::CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCCancelInviteToGuildResponse::set_result(::CMsgClientToGCCancelInviteToGuildResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCancelInviteToGuildResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddGuildRole

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCAddGuildRole::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCAddGuildRole::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCAddGuildRole::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCAddGuildRole::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCAddGuildRole::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddGuildRole.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCAddGuildRole::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCAddGuildRole::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddGuildRole.guild_id)
}

// optional string role_name = 2;
inline bool CMsgClientToGCAddGuildRole::_internal_has_role_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAddGuildRole::has_role_name() const {
  return _internal_has_role_name();
}
inline void CMsgClientToGCAddGuildRole::clear_role_name() {
  _impl_.role_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCAddGuildRole::role_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddGuildRole.role_name)
  return _internal_role_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCAddGuildRole::set_role_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.role_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddGuildRole.role_name)
}
inline std::string* CMsgClientToGCAddGuildRole::mutable_role_name() {
  std::string* _s = _internal_mutable_role_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCAddGuildRole.role_name)
  return _s;
}
inline const std::string& CMsgClientToGCAddGuildRole::_internal_role_name() const {
  return _impl_.role_name_.Get();
}
inline void CMsgClientToGCAddGuildRole::_internal_set_role_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.role_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCAddGuildRole::_internal_mutable_role_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.role_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCAddGuildRole::release_role_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCAddGuildRole.role_name)
  if (!_internal_has_role_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.role_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.role_name_.IsDefault()) {
    _impl_.role_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCAddGuildRole::set_allocated_role_name(std::string* role_name) {
  if (role_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.role_name_.SetAllocated(role_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.role_name_.IsDefault()) {
    _impl_.role_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCAddGuildRole.role_name)
}

// optional uint32 role_flags = 3;
inline bool CMsgClientToGCAddGuildRole::_internal_has_role_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCAddGuildRole::has_role_flags() const {
  return _internal_has_role_flags();
}
inline void CMsgClientToGCAddGuildRole::clear_role_flags() {
  _impl_.role_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCAddGuildRole::_internal_role_flags() const {
  return _impl_.role_flags_;
}
inline uint32_t CMsgClientToGCAddGuildRole::role_flags() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddGuildRole.role_flags)
  return _internal_role_flags();
}
inline void CMsgClientToGCAddGuildRole::_internal_set_role_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.role_flags_ = value;
}
inline void CMsgClientToGCAddGuildRole::set_role_flags(uint32_t value) {
  _internal_set_role_flags(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddGuildRole.role_flags)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddGuildRoleResponse

// optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCAddGuildRoleResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAddGuildRoleResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCAddGuildRoleResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCAddGuildRoleResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddGuildRoleResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCAddGuildRoleResponse::_internal_set_result(::CMsgClientToGCAddGuildRoleResponse_EResponse value) {
  assert(::CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCAddGuildRoleResponse::set_result(::CMsgClientToGCAddGuildRoleResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddGuildRoleResponse.result)
}

// optional uint32 role_id = 2;
inline bool CMsgClientToGCAddGuildRoleResponse::_internal_has_role_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCAddGuildRoleResponse::has_role_id() const {
  return _internal_has_role_id();
}
inline void CMsgClientToGCAddGuildRoleResponse::clear_role_id() {
  _impl_.role_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCAddGuildRoleResponse::_internal_role_id() const {
  return _impl_.role_id_;
}
inline uint32_t CMsgClientToGCAddGuildRoleResponse::role_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddGuildRoleResponse.role_id)
  return _internal_role_id();
}
inline void CMsgClientToGCAddGuildRoleResponse::_internal_set_role_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.role_id_ = value;
}
inline void CMsgClientToGCAddGuildRoleResponse::set_role_id(uint32_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddGuildRoleResponse.role_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCModifyGuildRole

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCModifyGuildRole::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyGuildRole::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCModifyGuildRole::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCModifyGuildRole::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCModifyGuildRole::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyGuildRole.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCModifyGuildRole::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCModifyGuildRole::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyGuildRole.guild_id)
}

// optional uint32 role_id = 2;
inline bool CMsgClientToGCModifyGuildRole::_internal_has_role_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyGuildRole::has_role_id() const {
  return _internal_has_role_id();
}
inline void CMsgClientToGCModifyGuildRole::clear_role_id() {
  _impl_.role_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCModifyGuildRole::_internal_role_id() const {
  return _impl_.role_id_;
}
inline uint32_t CMsgClientToGCModifyGuildRole::role_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyGuildRole.role_id)
  return _internal_role_id();
}
inline void CMsgClientToGCModifyGuildRole::_internal_set_role_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.role_id_ = value;
}
inline void CMsgClientToGCModifyGuildRole::set_role_id(uint32_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyGuildRole.role_id)
}

// optional string role_name = 3;
inline bool CMsgClientToGCModifyGuildRole::_internal_has_role_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyGuildRole::has_role_name() const {
  return _internal_has_role_name();
}
inline void CMsgClientToGCModifyGuildRole::clear_role_name() {
  _impl_.role_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCModifyGuildRole::role_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyGuildRole.role_name)
  return _internal_role_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCModifyGuildRole::set_role_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.role_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyGuildRole.role_name)
}
inline std::string* CMsgClientToGCModifyGuildRole::mutable_role_name() {
  std::string* _s = _internal_mutable_role_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCModifyGuildRole.role_name)
  return _s;
}
inline const std::string& CMsgClientToGCModifyGuildRole::_internal_role_name() const {
  return _impl_.role_name_.Get();
}
inline void CMsgClientToGCModifyGuildRole::_internal_set_role_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.role_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyGuildRole::_internal_mutable_role_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.role_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyGuildRole::release_role_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCModifyGuildRole.role_name)
  if (!_internal_has_role_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.role_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.role_name_.IsDefault()) {
    _impl_.role_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCModifyGuildRole::set_allocated_role_name(std::string* role_name) {
  if (role_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.role_name_.SetAllocated(role_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.role_name_.IsDefault()) {
    _impl_.role_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCModifyGuildRole.role_name)
}

// optional uint32 role_flags = 4;
inline bool CMsgClientToGCModifyGuildRole::_internal_has_role_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyGuildRole::has_role_flags() const {
  return _internal_has_role_flags();
}
inline void CMsgClientToGCModifyGuildRole::clear_role_flags() {
  _impl_.role_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCModifyGuildRole::_internal_role_flags() const {
  return _impl_.role_flags_;
}
inline uint32_t CMsgClientToGCModifyGuildRole::role_flags() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyGuildRole.role_flags)
  return _internal_role_flags();
}
inline void CMsgClientToGCModifyGuildRole::_internal_set_role_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.role_flags_ = value;
}
inline void CMsgClientToGCModifyGuildRole::set_role_flags(uint32_t value) {
  _internal_set_role_flags(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyGuildRole.role_flags)
}

// -------------------------------------------------------------------

// CMsgClientToGCModifyGuildRoleResponse

// optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCModifyGuildRoleResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyGuildRoleResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCModifyGuildRoleResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCModifyGuildRoleResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyGuildRoleResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCModifyGuildRoleResponse::_internal_set_result(::CMsgClientToGCModifyGuildRoleResponse_EResponse value) {
  assert(::CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCModifyGuildRoleResponse::set_result(::CMsgClientToGCModifyGuildRoleResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyGuildRoleResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRemoveGuildRole

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCRemoveGuildRole::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRemoveGuildRole::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRemoveGuildRole::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCRemoveGuildRole::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCRemoveGuildRole::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRemoveGuildRole.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRemoveGuildRole::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCRemoveGuildRole::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRemoveGuildRole.guild_id)
}

// optional uint32 role_id = 2;
inline bool CMsgClientToGCRemoveGuildRole::_internal_has_role_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRemoveGuildRole::has_role_id() const {
  return _internal_has_role_id();
}
inline void CMsgClientToGCRemoveGuildRole::clear_role_id() {
  _impl_.role_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCRemoveGuildRole::_internal_role_id() const {
  return _impl_.role_id_;
}
inline uint32_t CMsgClientToGCRemoveGuildRole::role_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRemoveGuildRole.role_id)
  return _internal_role_id();
}
inline void CMsgClientToGCRemoveGuildRole::_internal_set_role_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.role_id_ = value;
}
inline void CMsgClientToGCRemoveGuildRole::set_role_id(uint32_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRemoveGuildRole.role_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRemoveGuildRoleResponse

// optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRemoveGuildRoleResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRemoveGuildRoleResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRemoveGuildRoleResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRemoveGuildRoleResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRemoveGuildRoleResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRemoveGuildRoleResponse::_internal_set_result(::CMsgClientToGCRemoveGuildRoleResponse_EResponse value) {
  assert(::CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRemoveGuildRoleResponse::set_result(::CMsgClientToGCRemoveGuildRoleResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRemoveGuildRoleResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetGuildRoleOrder

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCSetGuildRoleOrder::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildRoleOrder::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCSetGuildRoleOrder::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCSetGuildRoleOrder::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCSetGuildRoleOrder::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildRoleOrder.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCSetGuildRoleOrder::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCSetGuildRoleOrder::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildRoleOrder.guild_id)
}

// repeated uint32 requested_role_ids = 2;
inline int CMsgClientToGCSetGuildRoleOrder::_internal_requested_role_ids_size() const {
  return _impl_.requested_role_ids_.size();
}
inline int CMsgClientToGCSetGuildRoleOrder::requested_role_ids_size() const {
  return _internal_requested_role_ids_size();
}
inline void CMsgClientToGCSetGuildRoleOrder::clear_requested_role_ids() {
  _impl_.requested_role_ids_.Clear();
}
inline uint32_t CMsgClientToGCSetGuildRoleOrder::_internal_requested_role_ids(int index) const {
  return _impl_.requested_role_ids_.Get(index);
}
inline uint32_t CMsgClientToGCSetGuildRoleOrder::requested_role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildRoleOrder.requested_role_ids)
  return _internal_requested_role_ids(index);
}
inline void CMsgClientToGCSetGuildRoleOrder::set_requested_role_ids(int index, uint32_t value) {
  _impl_.requested_role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildRoleOrder.requested_role_ids)
}
inline void CMsgClientToGCSetGuildRoleOrder::_internal_add_requested_role_ids(uint32_t value) {
  _impl_.requested_role_ids_.Add(value);
}
inline void CMsgClientToGCSetGuildRoleOrder::add_requested_role_ids(uint32_t value) {
  _internal_add_requested_role_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetGuildRoleOrder.requested_role_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCSetGuildRoleOrder::_internal_requested_role_ids() const {
  return _impl_.requested_role_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCSetGuildRoleOrder::requested_role_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetGuildRoleOrder.requested_role_ids)
  return _internal_requested_role_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCSetGuildRoleOrder::_internal_mutable_requested_role_ids() {
  return &_impl_.requested_role_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCSetGuildRoleOrder::mutable_requested_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetGuildRoleOrder.requested_role_ids)
  return _internal_mutable_requested_role_ids();
}

// repeated uint32 previous_role_ids = 3;
inline int CMsgClientToGCSetGuildRoleOrder::_internal_previous_role_ids_size() const {
  return _impl_.previous_role_ids_.size();
}
inline int CMsgClientToGCSetGuildRoleOrder::previous_role_ids_size() const {
  return _internal_previous_role_ids_size();
}
inline void CMsgClientToGCSetGuildRoleOrder::clear_previous_role_ids() {
  _impl_.previous_role_ids_.Clear();
}
inline uint32_t CMsgClientToGCSetGuildRoleOrder::_internal_previous_role_ids(int index) const {
  return _impl_.previous_role_ids_.Get(index);
}
inline uint32_t CMsgClientToGCSetGuildRoleOrder::previous_role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildRoleOrder.previous_role_ids)
  return _internal_previous_role_ids(index);
}
inline void CMsgClientToGCSetGuildRoleOrder::set_previous_role_ids(int index, uint32_t value) {
  _impl_.previous_role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildRoleOrder.previous_role_ids)
}
inline void CMsgClientToGCSetGuildRoleOrder::_internal_add_previous_role_ids(uint32_t value) {
  _impl_.previous_role_ids_.Add(value);
}
inline void CMsgClientToGCSetGuildRoleOrder::add_previous_role_ids(uint32_t value) {
  _internal_add_previous_role_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetGuildRoleOrder.previous_role_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCSetGuildRoleOrder::_internal_previous_role_ids() const {
  return _impl_.previous_role_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCSetGuildRoleOrder::previous_role_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetGuildRoleOrder.previous_role_ids)
  return _internal_previous_role_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCSetGuildRoleOrder::_internal_mutable_previous_role_ids() {
  return &_impl_.previous_role_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCSetGuildRoleOrder::mutable_previous_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetGuildRoleOrder.previous_role_ids)
  return _internal_mutable_previous_role_ids();
}

// -------------------------------------------------------------------

// CMsgClientToGCSetGuildRoleOrderResponse

// optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSetGuildRoleOrderResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetGuildRoleOrderResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildRoleOrderResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::_internal_set_result(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse value) {
  assert(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::set_result(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildRoleOrderResponse.result)
}

// repeated uint32 confirmed_role_ids = 2;
inline int CMsgClientToGCSetGuildRoleOrderResponse::_internal_confirmed_role_ids_size() const {
  return _impl_.confirmed_role_ids_.size();
}
inline int CMsgClientToGCSetGuildRoleOrderResponse::confirmed_role_ids_size() const {
  return _internal_confirmed_role_ids_size();
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::clear_confirmed_role_ids() {
  _impl_.confirmed_role_ids_.Clear();
}
inline uint32_t CMsgClientToGCSetGuildRoleOrderResponse::_internal_confirmed_role_ids(int index) const {
  return _impl_.confirmed_role_ids_.Get(index);
}
inline uint32_t CMsgClientToGCSetGuildRoleOrderResponse::confirmed_role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetGuildRoleOrderResponse.confirmed_role_ids)
  return _internal_confirmed_role_ids(index);
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::set_confirmed_role_ids(int index, uint32_t value) {
  _impl_.confirmed_role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetGuildRoleOrderResponse.confirmed_role_ids)
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::_internal_add_confirmed_role_ids(uint32_t value) {
  _impl_.confirmed_role_ids_.Add(value);
}
inline void CMsgClientToGCSetGuildRoleOrderResponse::add_confirmed_role_ids(uint32_t value) {
  _internal_add_confirmed_role_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCSetGuildRoleOrderResponse.confirmed_role_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCSetGuildRoleOrderResponse::_internal_confirmed_role_ids() const {
  return _impl_.confirmed_role_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCSetGuildRoleOrderResponse::confirmed_role_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCSetGuildRoleOrderResponse.confirmed_role_ids)
  return _internal_confirmed_role_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCSetGuildRoleOrderResponse::_internal_mutable_confirmed_role_ids() {
  return &_impl_.confirmed_role_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCSetGuildRoleOrderResponse::mutable_confirmed_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCSetGuildRoleOrderResponse.confirmed_role_ids)
  return _internal_mutable_confirmed_role_ids();
}

// -------------------------------------------------------------------

// CMsgClientToGCGuildFeedRequest

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCGuildFeedRequest::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGuildFeedRequest::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCGuildFeedRequest::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGuildFeedRequest::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCGuildFeedRequest::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGuildFeedRequest.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCGuildFeedRequest::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCGuildFeedRequest::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGuildFeedRequest.guild_id)
}

// optional uint64 last_seen_id = 2;
inline bool CMsgClientToGCGuildFeedRequest::_internal_has_last_seen_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGuildFeedRequest::has_last_seen_id() const {
  return _internal_has_last_seen_id();
}
inline void CMsgClientToGCGuildFeedRequest::clear_last_seen_id() {
  _impl_.last_seen_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCGuildFeedRequest::_internal_last_seen_id() const {
  return _impl_.last_seen_id_;
}
inline uint64_t CMsgClientToGCGuildFeedRequest::last_seen_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGuildFeedRequest.last_seen_id)
  return _internal_last_seen_id();
}
inline void CMsgClientToGCGuildFeedRequest::_internal_set_last_seen_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.last_seen_id_ = value;
}
inline void CMsgClientToGCGuildFeedRequest::set_last_seen_id(uint64_t value) {
  _internal_set_last_seen_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGuildFeedRequest.last_seen_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildFeedResponse

// optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestGuildFeedResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildFeedResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestGuildFeedResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestGuildFeedResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildFeedResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestGuildFeedResponse::_internal_set_result(::CMsgClientToGCRequestGuildFeedResponse_EResponse value) {
  assert(::CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRequestGuildFeedResponse::set_result(::CMsgClientToGCRequestGuildFeedResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildFeedResponse.result)
}

// optional uint32 guild_id = 2;
inline bool CMsgClientToGCRequestGuildFeedResponse::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildFeedResponse::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRequestGuildFeedResponse::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCRequestGuildFeedResponse::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCRequestGuildFeedResponse::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildFeedResponse.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRequestGuildFeedResponse::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCRequestGuildFeedResponse::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildFeedResponse.guild_id)
}

// repeated .CMsgGuildFeedEvent feed_events = 3;
inline int CMsgClientToGCRequestGuildFeedResponse::_internal_feed_events_size() const {
  return _impl_.feed_events_.size();
}
inline int CMsgClientToGCRequestGuildFeedResponse::feed_events_size() const {
  return _internal_feed_events_size();
}
inline void CMsgClientToGCRequestGuildFeedResponse::clear_feed_events() {
  _impl_.feed_events_.Clear();
}
inline ::CMsgGuildFeedEvent* CMsgClientToGCRequestGuildFeedResponse::mutable_feed_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestGuildFeedResponse.feed_events)
  return _impl_.feed_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildFeedEvent >*
CMsgClientToGCRequestGuildFeedResponse::mutable_feed_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestGuildFeedResponse.feed_events)
  return &_impl_.feed_events_;
}
inline const ::CMsgGuildFeedEvent& CMsgClientToGCRequestGuildFeedResponse::_internal_feed_events(int index) const {
  return _impl_.feed_events_.Get(index);
}
inline const ::CMsgGuildFeedEvent& CMsgClientToGCRequestGuildFeedResponse::feed_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildFeedResponse.feed_events)
  return _internal_feed_events(index);
}
inline ::CMsgGuildFeedEvent* CMsgClientToGCRequestGuildFeedResponse::_internal_add_feed_events() {
  return _impl_.feed_events_.Add();
}
inline ::CMsgGuildFeedEvent* CMsgClientToGCRequestGuildFeedResponse::add_feed_events() {
  ::CMsgGuildFeedEvent* _add = _internal_add_feed_events();
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestGuildFeedResponse.feed_events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildFeedEvent >&
CMsgClientToGCRequestGuildFeedResponse::feed_events() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestGuildFeedResponse.feed_events)
  return _impl_.feed_events_;
}

// -------------------------------------------------------------------

// CMsgGCToClientGuildFeedUpdated

// optional uint32 guild_id = 1;
inline bool CMsgGCToClientGuildFeedUpdated::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientGuildFeedUpdated::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGCToClientGuildFeedUpdated::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientGuildFeedUpdated::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgGCToClientGuildFeedUpdated::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientGuildFeedUpdated.guild_id)
  return _internal_guild_id();
}
inline void CMsgGCToClientGuildFeedUpdated::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgGCToClientGuildFeedUpdated::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientGuildFeedUpdated.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddPlayerToGuildChat

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCAddPlayerToGuildChat::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAddPlayerToGuildChat::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCAddPlayerToGuildChat::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCAddPlayerToGuildChat::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCAddPlayerToGuildChat::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddPlayerToGuildChat.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCAddPlayerToGuildChat::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCAddPlayerToGuildChat::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddPlayerToGuildChat.guild_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddPlayerToGuildChatResponse

// optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCAddPlayerToGuildChatResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAddPlayerToGuildChatResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCAddPlayerToGuildChatResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAddPlayerToGuildChatResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCAddPlayerToGuildChatResponse::_internal_set_result(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse value) {
  assert(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCAddPlayerToGuildChatResponse::set_result(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAddPlayerToGuildChatResponse.result)
}

// -------------------------------------------------------------------

// CMsgFindGuildByTagResponse

// optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgFindGuildByTagResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgFindGuildByTagResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgFindGuildByTagResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::_internal_result() const {
  return static_cast< ::CMsgFindGuildByTagResponse_EResponse >(_impl_.result_);
}
inline ::CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgFindGuildByTagResponse.result)
  return _internal_result();
}
inline void CMsgFindGuildByTagResponse::_internal_set_result(::CMsgFindGuildByTagResponse_EResponse value) {
  assert(::CMsgFindGuildByTagResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgFindGuildByTagResponse::set_result(::CMsgFindGuildByTagResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgFindGuildByTagResponse.result)
}

// optional uint32 guild_id = 2;
inline bool CMsgFindGuildByTagResponse::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgFindGuildByTagResponse::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgFindGuildByTagResponse::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgFindGuildByTagResponse::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgFindGuildByTagResponse::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgFindGuildByTagResponse.guild_id)
  return _internal_guild_id();
}
inline void CMsgFindGuildByTagResponse::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.guild_id_ = value;
}
inline void CMsgFindGuildByTagResponse::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgFindGuildByTagResponse.guild_id)
}

// optional .CMsgGuildSummary guild_summary = 3;
inline bool CMsgFindGuildByTagResponse::_internal_has_guild_summary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_summary_ != nullptr);
  return value;
}
inline bool CMsgFindGuildByTagResponse::has_guild_summary() const {
  return _internal_has_guild_summary();
}
inline void CMsgFindGuildByTagResponse::clear_guild_summary() {
  if (_impl_.guild_summary_ != nullptr) _impl_.guild_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildSummary& CMsgFindGuildByTagResponse::_internal_guild_summary() const {
  const ::CMsgGuildSummary* p = _impl_.guild_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildSummary&>(
      ::_CMsgGuildSummary_default_instance_);
}
inline const ::CMsgGuildSummary& CMsgFindGuildByTagResponse::guild_summary() const {
  // @@protoc_insertion_point(field_get:CMsgFindGuildByTagResponse.guild_summary)
  return _internal_guild_summary();
}
inline void CMsgFindGuildByTagResponse::unsafe_arena_set_allocated_guild_summary(
    ::CMsgGuildSummary* guild_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_summary_);
  }
  _impl_.guild_summary_ = guild_summary;
  if (guild_summary) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgFindGuildByTagResponse.guild_summary)
}
inline ::CMsgGuildSummary* CMsgFindGuildByTagResponse::release_guild_summary() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildSummary* temp = _impl_.guild_summary_;
  _impl_.guild_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildSummary* CMsgFindGuildByTagResponse::unsafe_arena_release_guild_summary() {
  // @@protoc_insertion_point(field_release:CMsgFindGuildByTagResponse.guild_summary)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildSummary* temp = _impl_.guild_summary_;
  _impl_.guild_summary_ = nullptr;
  return temp;
}
inline ::CMsgGuildSummary* CMsgFindGuildByTagResponse::_internal_mutable_guild_summary() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildSummary>(GetArenaForAllocation());
    _impl_.guild_summary_ = p;
  }
  return _impl_.guild_summary_;
}
inline ::CMsgGuildSummary* CMsgFindGuildByTagResponse::mutable_guild_summary() {
  ::CMsgGuildSummary* _msg = _internal_mutable_guild_summary();
  // @@protoc_insertion_point(field_mutable:CMsgFindGuildByTagResponse.guild_summary)
  return _msg;
}
inline void CMsgFindGuildByTagResponse::set_allocated_guild_summary(::CMsgGuildSummary* guild_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_summary_;
  }
  if (guild_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_summary);
    if (message_arena != submessage_arena) {
      guild_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_summary, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_summary_ = guild_summary;
  // @@protoc_insertion_point(field_set_allocated:CMsgFindGuildByTagResponse.guild_summary)
}

// -------------------------------------------------------------------

// CMsgSearchForOpenGuildsResponse_SearchResult

// optional uint32 guild_id = 1;
inline bool CMsgSearchForOpenGuildsResponse_SearchResult::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSearchForOpenGuildsResponse_SearchResult::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgSearchForOpenGuildsResponse_SearchResult::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgSearchForOpenGuildsResponse_SearchResult::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgSearchForOpenGuildsResponse_SearchResult::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgSearchForOpenGuildsResponse.SearchResult.guild_id)
  return _internal_guild_id();
}
inline void CMsgSearchForOpenGuildsResponse_SearchResult::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_id_ = value;
}
inline void CMsgSearchForOpenGuildsResponse_SearchResult::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgSearchForOpenGuildsResponse.SearchResult.guild_id)
}

// optional .CMsgGuildSummary guild_summary = 2;
inline bool CMsgSearchForOpenGuildsResponse_SearchResult::_internal_has_guild_summary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.guild_summary_ != nullptr);
  return value;
}
inline bool CMsgSearchForOpenGuildsResponse_SearchResult::has_guild_summary() const {
  return _internal_has_guild_summary();
}
inline void CMsgSearchForOpenGuildsResponse_SearchResult::clear_guild_summary() {
  if (_impl_.guild_summary_ != nullptr) _impl_.guild_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildSummary& CMsgSearchForOpenGuildsResponse_SearchResult::_internal_guild_summary() const {
  const ::CMsgGuildSummary* p = _impl_.guild_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildSummary&>(
      ::_CMsgGuildSummary_default_instance_);
}
inline const ::CMsgGuildSummary& CMsgSearchForOpenGuildsResponse_SearchResult::guild_summary() const {
  // @@protoc_insertion_point(field_get:CMsgSearchForOpenGuildsResponse.SearchResult.guild_summary)
  return _internal_guild_summary();
}
inline void CMsgSearchForOpenGuildsResponse_SearchResult::unsafe_arena_set_allocated_guild_summary(
    ::CMsgGuildSummary* guild_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.guild_summary_);
  }
  _impl_.guild_summary_ = guild_summary;
  if (guild_summary) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSearchForOpenGuildsResponse.SearchResult.guild_summary)
}
inline ::CMsgGuildSummary* CMsgSearchForOpenGuildsResponse_SearchResult::release_guild_summary() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildSummary* temp = _impl_.guild_summary_;
  _impl_.guild_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGuildSummary* CMsgSearchForOpenGuildsResponse_SearchResult::unsafe_arena_release_guild_summary() {
  // @@protoc_insertion_point(field_release:CMsgSearchForOpenGuildsResponse.SearchResult.guild_summary)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildSummary* temp = _impl_.guild_summary_;
  _impl_.guild_summary_ = nullptr;
  return temp;
}
inline ::CMsgGuildSummary* CMsgSearchForOpenGuildsResponse_SearchResult::_internal_mutable_guild_summary() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.guild_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildSummary>(GetArenaForAllocation());
    _impl_.guild_summary_ = p;
  }
  return _impl_.guild_summary_;
}
inline ::CMsgGuildSummary* CMsgSearchForOpenGuildsResponse_SearchResult::mutable_guild_summary() {
  ::CMsgGuildSummary* _msg = _internal_mutable_guild_summary();
  // @@protoc_insertion_point(field_mutable:CMsgSearchForOpenGuildsResponse.SearchResult.guild_summary)
  return _msg;
}
inline void CMsgSearchForOpenGuildsResponse_SearchResult::set_allocated_guild_summary(::CMsgGuildSummary* guild_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.guild_summary_;
  }
  if (guild_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(guild_summary);
    if (message_arena != submessage_arena) {
      guild_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_summary, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.guild_summary_ = guild_summary;
  // @@protoc_insertion_point(field_set_allocated:CMsgSearchForOpenGuildsResponse.SearchResult.guild_summary)
}

// -------------------------------------------------------------------

// CMsgSearchForOpenGuildsResponse

// optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgSearchForOpenGuildsResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSearchForOpenGuildsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgSearchForOpenGuildsResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::_internal_result() const {
  return static_cast< ::CMsgSearchForOpenGuildsResponse_EResponse >(_impl_.result_);
}
inline ::CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgSearchForOpenGuildsResponse.result)
  return _internal_result();
}
inline void CMsgSearchForOpenGuildsResponse::_internal_set_result(::CMsgSearchForOpenGuildsResponse_EResponse value) {
  assert(::CMsgSearchForOpenGuildsResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgSearchForOpenGuildsResponse::set_result(::CMsgSearchForOpenGuildsResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgSearchForOpenGuildsResponse.result)
}

// repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
inline int CMsgSearchForOpenGuildsResponse::_internal_search_results_size() const {
  return _impl_.search_results_.size();
}
inline int CMsgSearchForOpenGuildsResponse::search_results_size() const {
  return _internal_search_results_size();
}
inline void CMsgSearchForOpenGuildsResponse::clear_search_results() {
  _impl_.search_results_.Clear();
}
inline ::CMsgSearchForOpenGuildsResponse_SearchResult* CMsgSearchForOpenGuildsResponse::mutable_search_results(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSearchForOpenGuildsResponse.search_results)
  return _impl_.search_results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSearchForOpenGuildsResponse_SearchResult >*
CMsgSearchForOpenGuildsResponse::mutable_search_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSearchForOpenGuildsResponse.search_results)
  return &_impl_.search_results_;
}
inline const ::CMsgSearchForOpenGuildsResponse_SearchResult& CMsgSearchForOpenGuildsResponse::_internal_search_results(int index) const {
  return _impl_.search_results_.Get(index);
}
inline const ::CMsgSearchForOpenGuildsResponse_SearchResult& CMsgSearchForOpenGuildsResponse::search_results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSearchForOpenGuildsResponse.search_results)
  return _internal_search_results(index);
}
inline ::CMsgSearchForOpenGuildsResponse_SearchResult* CMsgSearchForOpenGuildsResponse::_internal_add_search_results() {
  return _impl_.search_results_.Add();
}
inline ::CMsgSearchForOpenGuildsResponse_SearchResult* CMsgSearchForOpenGuildsResponse::add_search_results() {
  ::CMsgSearchForOpenGuildsResponse_SearchResult* _add = _internal_add_search_results();
  // @@protoc_insertion_point(field_add:CMsgSearchForOpenGuildsResponse.search_results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSearchForOpenGuildsResponse_SearchResult >&
CMsgSearchForOpenGuildsResponse::search_results() const {
  // @@protoc_insertion_point(field_list:CMsgSearchForOpenGuildsResponse.search_results)
  return _impl_.search_results_;
}

// optional bool use_whitelist = 3;
inline bool CMsgSearchForOpenGuildsResponse::_internal_has_use_whitelist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSearchForOpenGuildsResponse::has_use_whitelist() const {
  return _internal_has_use_whitelist();
}
inline void CMsgSearchForOpenGuildsResponse::clear_use_whitelist() {
  _impl_.use_whitelist_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSearchForOpenGuildsResponse::_internal_use_whitelist() const {
  return _impl_.use_whitelist_;
}
inline bool CMsgSearchForOpenGuildsResponse::use_whitelist() const {
  // @@protoc_insertion_point(field_get:CMsgSearchForOpenGuildsResponse.use_whitelist)
  return _internal_use_whitelist();
}
inline void CMsgSearchForOpenGuildsResponse::_internal_set_use_whitelist(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.use_whitelist_ = value;
}
inline void CMsgSearchForOpenGuildsResponse::set_use_whitelist(bool value) {
  _internal_set_use_whitelist(value);
  // @@protoc_insertion_point(field_set:CMsgSearchForOpenGuildsResponse.use_whitelist)
}

// -------------------------------------------------------------------

// CMsgClientToGCReportGuildContent

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCReportGuildContent::_internal_has_guild_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCReportGuildContent::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCReportGuildContent::clear_guild_id() {
  _impl_.guild_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCReportGuildContent::_internal_guild_id() const {
  return _impl_.guild_id_;
}
inline uint32_t CMsgClientToGCReportGuildContent::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportGuildContent.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCReportGuildContent::_internal_set_guild_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.guild_id_ = value;
}
inline void CMsgClientToGCReportGuildContent::set_guild_id(uint32_t value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportGuildContent.guild_id)
}

// optional uint32 guild_content_flags = 2;
inline bool CMsgClientToGCReportGuildContent::_internal_has_guild_content_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCReportGuildContent::has_guild_content_flags() const {
  return _internal_has_guild_content_flags();
}
inline void CMsgClientToGCReportGuildContent::clear_guild_content_flags() {
  _impl_.guild_content_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCReportGuildContent::_internal_guild_content_flags() const {
  return _impl_.guild_content_flags_;
}
inline uint32_t CMsgClientToGCReportGuildContent::guild_content_flags() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportGuildContent.guild_content_flags)
  return _internal_guild_content_flags();
}
inline void CMsgClientToGCReportGuildContent::_internal_set_guild_content_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.guild_content_flags_ = value;
}
inline void CMsgClientToGCReportGuildContent::set_guild_content_flags(uint32_t value) {
  _internal_set_guild_content_flags(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportGuildContent.guild_content_flags)
}

// -------------------------------------------------------------------

// CMsgClientToGCReportGuildContentResponse

// optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCReportGuildContentResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCReportGuildContentResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCReportGuildContentResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCReportGuildContentResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportGuildContentResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCReportGuildContentResponse::_internal_set_result(::CMsgClientToGCReportGuildContentResponse_EResponse value) {
  assert(::CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCReportGuildContentResponse::set_result(::CMsgClientToGCReportGuildContentResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportGuildContentResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestAccountGuildPersonaInfo

// optional uint32 account_id = 1;
inline bool CMsgClientToGCRequestAccountGuildPersonaInfo::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildPersonaInfo::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfo::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCRequestAccountGuildPersonaInfo::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCRequestAccountGuildPersonaInfo::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildPersonaInfo.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfo::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfo::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildPersonaInfo.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestAccountGuildPersonaInfoResponse

// optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_internal_set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse value) {
  assert(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.result)
}

// optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_internal_has_persona_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.persona_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse::has_persona_info() const {
  return _internal_has_persona_info();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::clear_persona_info() {
  if (_impl_.persona_info_ != nullptr) _impl_.persona_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountGuildsPersonaInfo& CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_internal_persona_info() const {
  const ::CMsgAccountGuildsPersonaInfo* p = _impl_.persona_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountGuildsPersonaInfo&>(
      ::_CMsgAccountGuildsPersonaInfo_default_instance_);
}
inline const ::CMsgAccountGuildsPersonaInfo& CMsgClientToGCRequestAccountGuildPersonaInfoResponse::persona_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.persona_info)
  return _internal_persona_info();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::unsafe_arena_set_allocated_persona_info(
    ::CMsgAccountGuildsPersonaInfo* persona_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.persona_info_);
  }
  _impl_.persona_info_ = persona_info;
  if (persona_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.persona_info)
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::release_persona_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildsPersonaInfo* temp = _impl_.persona_info_;
  _impl_.persona_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::unsafe_arena_release_persona_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.persona_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildsPersonaInfo* temp = _impl_.persona_info_;
  _impl_.persona_info_ = nullptr;
  return temp;
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_internal_mutable_persona_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.persona_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountGuildsPersonaInfo>(GetArenaForAllocation());
    _impl_.persona_info_ = p;
  }
  return _impl_.persona_info_;
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::mutable_persona_info() {
  ::CMsgAccountGuildsPersonaInfo* _msg = _internal_mutable_persona_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.persona_info)
  return _msg;
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::set_allocated_persona_info(::CMsgAccountGuildsPersonaInfo* persona_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.persona_info_;
  }
  if (persona_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(persona_info);
    if (message_arena != submessage_arena) {
      persona_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, persona_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.persona_info_ = persona_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestAccountGuildPersonaInfoResponse.persona_info)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestAccountGuildPersonaInfoBatch

// repeated uint32 account_ids = 1;
inline int CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_internal_account_ids_size() const {
  return _impl_.account_ids_.size();
}
inline int CMsgClientToGCRequestAccountGuildPersonaInfoBatch::account_ids_size() const {
  return _internal_account_ids_size();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::clear_account_ids() {
  _impl_.account_ids_.Clear();
}
inline uint32_t CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_internal_account_ids(int index) const {
  return _impl_.account_ids_.Get(index);
}
inline uint32_t CMsgClientToGCRequestAccountGuildPersonaInfoBatch::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildPersonaInfoBatch.account_ids)
  return _internal_account_ids(index);
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::set_account_ids(int index, uint32_t value) {
  _impl_.account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildPersonaInfoBatch.account_ids)
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_internal_add_account_ids(uint32_t value) {
  _impl_.account_ids_.Add(value);
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::add_account_ids(uint32_t value) {
  _internal_add_account_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestAccountGuildPersonaInfoBatch.account_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_internal_account_ids() const {
  return _impl_.account_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCRequestAccountGuildPersonaInfoBatch::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestAccountGuildPersonaInfoBatch.account_ids)
  return _internal_account_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_internal_mutable_account_ids() {
  return &_impl_.account_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCRequestAccountGuildPersonaInfoBatch::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestAccountGuildPersonaInfoBatch.account_ids)
  return _internal_mutable_account_ids();
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse

// optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_internal_set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse value) {
  assert(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::set_result(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.result)
}

// repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
inline int CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_internal_persona_infos_size() const {
  return _impl_.persona_infos_.size();
}
inline int CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::persona_infos_size() const {
  return _internal_persona_infos_size();
}
inline void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::clear_persona_infos() {
  _impl_.persona_infos_.Clear();
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::mutable_persona_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.persona_infos)
  return _impl_.persona_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildsPersonaInfo >*
CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::mutable_persona_infos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.persona_infos)
  return &_impl_.persona_infos_;
}
inline const ::CMsgAccountGuildsPersonaInfo& CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_internal_persona_infos(int index) const {
  return _impl_.persona_infos_.Get(index);
}
inline const ::CMsgAccountGuildsPersonaInfo& CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::persona_infos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.persona_infos)
  return _internal_persona_infos(index);
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_internal_add_persona_infos() {
  return _impl_.persona_infos_.Add();
}
inline ::CMsgAccountGuildsPersonaInfo* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::add_persona_infos() {
  ::CMsgAccountGuildsPersonaInfo* _add = _internal_add_persona_infos();
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.persona_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountGuildsPersonaInfo >&
CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::persona_infos() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.persona_infos)
  return _impl_.persona_infos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CMsgClientToGCCreateGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCreateGuildResponse_EResponse>() {
  return ::CMsgClientToGCCreateGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSetGuildInfoResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSetGuildInfoResponse_EResponse>() {
  return ::CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestGuildDataResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestGuildDataResponse_EResponse>() {
  return ::CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestGuildMembershipResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestGuildMembershipResponse_EResponse>() {
  return ::CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCJoinGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCJoinGuildResponse_EResponse>() {
  return ::CMsgClientToGCJoinGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCLeaveGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCLeaveGuildResponse_EResponse>() {
  return ::CMsgClientToGCLeaveGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCKickGuildMemberResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCKickGuildMemberResponse_EResponse>() {
  return ::CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse>() {
  return ::CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCInviteToGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCInviteToGuildResponse_EResponse>() {
  return ::CMsgClientToGCInviteToGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse>() {
  return ::CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse>() {
  return ::CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCCancelInviteToGuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCancelInviteToGuildResponse_EResponse>() {
  return ::CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCAddGuildRoleResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCAddGuildRoleResponse_EResponse>() {
  return ::CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCModifyGuildRoleResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCModifyGuildRoleResponse_EResponse>() {
  return ::CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRemoveGuildRoleResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRemoveGuildRoleResponse_EResponse>() {
  return ::CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse>() {
  return ::CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestGuildFeedResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestGuildFeedResponse_EResponse>() {
  return ::CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse>() {
  return ::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgFindGuildByTagResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgFindGuildByTagResponse_EResponse>() {
  return ::CMsgFindGuildByTagResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgSearchForOpenGuildsResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgSearchForOpenGuildsResponse_EResponse>() {
  return ::CMsgSearchForOpenGuildsResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCReportGuildContent_EContentFlags> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCReportGuildContent_EContentFlags>() {
  return ::CMsgClientToGCReportGuildContent_EContentFlags_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCReportGuildContentResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCReportGuildContentResponse_EResponse>() {
  return ::CMsgClientToGCReportGuildContentResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse>() {
  return ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse>() {
  return ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::EGuildAuditAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGuildAuditAction>() {
  return ::EGuildAuditAction_descriptor();
}
template <> struct is_proto_enum< ::EGuildChatType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGuildChatType>() {
  return ::EGuildChatType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fguild_2eproto
