// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_hud_types.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fhud_5ftypes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fhud_5ftypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fhud_5ftypes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fhud_5ftypes_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fhud_5ftypes_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

enum EHeroSelectionText : int {
  k_EHeroSelectionText_Invalid = -1,
  k_EHeroSelectionText_None = 0,
  k_EHeroSelectionText_ChooseHero = 1,
  k_EHeroSelectionText_AllDraft_Planning_YouFirst = 2,
  k_EHeroSelectionText_AllDraft_Planning_TheyFirst = 3,
  k_EHeroSelectionText_AllDraft_Banning = 4,
  k_EHeroSelectionText_AllDraft_Ban_Waiting = 5,
  k_EHeroSelectionText_AllDraft_PickTwo = 6,
  k_EHeroSelectionText_AllDraft_PickOneMore = 7,
  k_EHeroSelectionText_AllDraft_PickOne = 8,
  k_EHeroSelectionText_AllDraft_WaitingRadiant = 9,
  k_EHeroSelectionText_AllDraft_WaitingDire = 10,
  k_EHeroSelectionText_AllDraft_TeammateRandomed = 11,
  k_EHeroSelectionText_AllDraft_YouPicking_LosingGold = 12,
  k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold = 13,
  k_EHeroSelectionText_CaptainsMode_ChooseCaptain = 14,
  k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain = 15,
  k_EHeroSelectionText_CaptainsMode_YouSelect = 16,
  k_EHeroSelectionText_CaptainsMode_TheySelect = 17,
  k_EHeroSelectionText_CaptainsMode_YouBan = 18,
  k_EHeroSelectionText_CaptainsMode_TheyBan = 19,
  k_EHeroSelectionText_RandomDraft_HeroReview = 20,
  k_EHeroSelectionText_RandomDraft_RoundDisplay = 21,
  k_EHeroSelectionText_RandomDraft_Waiting = 22,
  k_EHeroSelectionText_EventGame_BanPhase = 23
};
bool EHeroSelectionText_IsValid(int value);
constexpr EHeroSelectionText EHeroSelectionText_MIN = k_EHeroSelectionText_Invalid;
constexpr EHeroSelectionText EHeroSelectionText_MAX = k_EHeroSelectionText_EventGame_BanPhase;
constexpr int EHeroSelectionText_ARRAYSIZE = EHeroSelectionText_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EHeroSelectionText_descriptor();
template<typename T>
inline const std::string& EHeroSelectionText_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EHeroSelectionText>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EHeroSelectionText_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EHeroSelectionText_descriptor(), enum_t_value);
}
inline bool EHeroSelectionText_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EHeroSelectionText* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EHeroSelectionText>(
    EHeroSelectionText_descriptor(), name, value);
}
// ===================================================================


// ===================================================================

static const int kHudLocalizeTokenFieldNumber = 50501;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::EnumValueOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  hud_localize_token;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EHeroSelectionText> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHeroSelectionText>() {
  return ::EHeroSelectionText_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fhud_5ftypes_2eproto
